/**
 * SPDX-License-Identifier: CC-BY-SA-4.0
 * _addText: '{{Gadget Header|license=CC-BY-SA-4.0}}'
 *
 * @base {@link https://git.qiuwen.net.cn/Mirror/xiplus-twinkle}
 * @source {@link https://git.qiuwen.net.cn/InterfaceAdmin/QiuwenGadgets/src/branch/master/src/Twinkle}
 * @license CC-BY-SA-4.0 {@link https://www.qiuwenbaike.cn/wiki/H:CC-BY-SA-4.0}
 */
/**
 * +------------------------------------------------------------+
 * |            === WARNING: GLOBAL GADGET FILE ===             |
 * +------------------------------------------------------------+
 * |       All changes should be made in the repository,        |
 * |                otherwise they will be lost.                |
 * +------------------------------------------------------------+
 * |        Changes to this page may affect many users.         |
 * | Please discuss changes by opening an issue before editing. |
 * +------------------------------------------------------------+
 */
/* <nowiki> */

(() => {

"use strict";

// dist/Twinkle/Twinkle.js
var _templateObject;
function asyncGeneratorStep(n, t, e, r, o, a, c) {
  try {
    var i = n[a](c), u = i.value;
  } catch (n2) {
    return void e(n2);
  }
  i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator(n) {
  return function() {
    var t = this, e = arguments;
    return new Promise(function(r, o) {
      var a = n.apply(t, e);
      function _next(n2) {
        asyncGeneratorStep(a, r, o, _next, _throw, "next", n2);
      }
      function _throw(n2) {
        asyncGeneratorStep(a, r, o, _next, _throw, "throw", n2);
      }
      _next(void 0);
    });
  };
}
function _taggedTemplateLiteral(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } }));
}
function _createForOfIteratorHelper(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var n = 0, F = function() {
      };
      return { s: F, n: function() {
        return n >= r.length ? { done: true } : { done: false, value: r[n++] };
      }, e: function(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function() {
    t = t.call(r);
  }, n: function() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function(r2) {
    u = true, o = r2;
  }, f: function() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
var __getOwnPropNames = Object.getOwnPropertyNames;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
//! src/Twinkle/modules/api.ts
var import_ext_gadget;
var api;
var init_api = __esm({
  "src/Twinkle/modules/api.ts"() {
    "use strict";
    import_ext_gadget = require("ext.gadget.Util");
    api = (0, import_ext_gadget.initMwApi)("morebits.js; Twinkle/1.1");
  }
});
//! src/Twinkle/modules/twinkle.js
var twinkle_exports = {};
var init_twinkle = __esm({
  "src/Twinkle/modules/twinkle.js"() {
    "use strict";
    init_api();
    /*! Twinkle.js - twinkle.js */
    (function twinkle($, _window) {
      const $body = $("body");
      const Twinkle2 = {};
      (_window = window).Twinkle || (_window.Twinkle = Twinkle2);
      if (!Morebits.userIsInGroup("autoconfirmed") && !Morebits.userIsInGroup("confirmed")) {
        console.warn("[Twinkle] 非确认用户或自动确认用户，Twinkle不会运行。");
        return;
      }
      Twinkle2.changeTags = "Twinkle";
      Twinkle2.summaryAd = "（[[H:TW|Twinkle]]）";
      Twinkle2.hatnoteRegex = "(?:Short[ _]description)|(?:Rellink|Hatnote|HAT)|(?:Main|[细細][节節]|Main[ _]articles|主[条條]目|Hurricane[ _]main|[条條]目|主|[頁页]面|主[頁页]面|主[頁页]|主[題题]目|Main[ _]article|AP)|(?:Wrongtitle|Correct[ _]title)|(?:主条目消歧义|主條目消歧義|消歧义链接|消歧義鏈接|消歧義連結|消连|消連|消歧义连结|DisambLink|Noteref|Dablink)|(?:Distinguish|不是|Not|提示|混淆|分別|分别|區別|区别|本条目的主题不是|本條目的主題不是|本条目主题不是|本條目主題不是|条目主题不是|條目主題不是|主题不是|主題不是|Confused|区分|區分|Confusion|Confuse|RedirectNOT|Misspelling)|(?:Distinguish2|SelfDistinguish|Not2|不是2)|(?:For)|(?:Details|Further|See|另见|另見|More|相關條目|相关条目|Detail|见|見|更多资料|更多資料|Further[ _]information|更多资讯|更多資訊|More[ _]information|更多信息)|(?:Selfref)|(?:About|Otheruses4|关于|關於)|(?:Other[ _]uses|Otheruse|条目消歧义|條目消歧義|他用|Otheruses)|(?:Other[ _]uses list|Otheruselist|主條目消歧義列表|主条目消歧义列表|Otheruseslist|Aboutlist|About[ _]list|Otheruses[ _]list)|(?:Redirect|重定向至此|Redirects[ _]here|Redirect[ _]to)|(?:Redirect2|主條目消歧義2|主条目消歧义2|Redir|重定向至此2)|(?:Redirect3)|(?:Redirect4)|(?:Redirect-distinguish)|(?:Redirect-synonym)|(?:Redirect-multi)|(?:See[ _]Wiktionary|Seewikt)|(?:Seealso|参看|參看|See[ _]also|参见|參見|Also)|(?:See[ _]also2|Seealso2|不轉換參見|不转换参见)|(?:Other[ _]places)|(?:Contrast|對比|对比)";
      Twinkle2.initCallbacks = [];
      Twinkle2.addInitCallback = (func, name) => {
        Twinkle2.initCallbacks[Twinkle2.initCallbacks.length] = {
          func,
          name
        };
      };
      Twinkle2.defaultConfig = {};
      Twinkle2.defaultConfig = {
        // General
        userTalkPageMode: "tab",
        dialogLargeFont: false,
        disabledModules: Morebits.userIsSysop ? [] : ["block"],
        // default to disable block for non-sysop, if enable manually, they can only use it to tag userpage
        disabledSysopModules: [],
        // ARV
        spiWatchReport: "yes",
        // Block
        defaultToBlock64: false,
        defaultToPartialBlocks: false,
        blankTalkpageOnIndefBlock: false,
        watchBlockNotices: "yes",
        customBlockReasonList: [],
        // Fluff (revert and rollback)
        openTalkPage: [],
        openTalkPageOnAutoRevert: false,
        rollbackInPlace: false,
        markRevertedPagesAsMinor: ["vand"],
        watchRevertedPages: ["norm", "vand", "torev"],
        watchRevertedExpiry: "yes",
        offerReasonOnNormalRevert: true,
        confirmOnFluff: false,
        showRollbackLinks: ["diff", "others"],
        customRevertSummary: [],
        // DI (twinkleimage)
        notifyUserOnDeli: true,
        deliWatchPage: "default",
        deliWatchUser: "default",
        // Protect
        watchRequestedPages: "yes",
        watchPPTaggedPages: "default",
        watchProtectedPages: "default",
        // CSD
        speedySelectionStyle: "buttonClick",
        watchSpeedyPages: ["g1", "g3", "g4", "g7", "g8"],
        watchSpeedyExpiry: "yes",
        markSpeedyPagesAsPatrolled: false,
        watchSpeedyUser: "1 month",
        // these next two should probably be identical by default
        notifyUserOnSpeedyDeletionNomination: ["db", "g1", "g2", "g3", "g4", "g5", "g6", "g7", "g8", "g9", "a1", "a2", "a3", "r1", "r2", "f1", "f2", "f3", "f4", "f5", "o1", "o2", "o3"],
        warnUserOnSpeedyDelete: ["db", "g1", "g2", "g3", "g4", "g5", "g6", "g7", "g8", "g9", "a1", "a2", "a3", "r1", "r2", "f1", "f2", "f3", "f4", "f5", "o1", "o2", "o3"],
        promptForSpeedyDeletionSummary: [],
        openUserTalkPageOnSpeedyDelete: [],
        deleteTalkPageOnDelete: true,
        deleteRedirectsOnDelete: true,
        deleteSysopDefaultToDelete: false,
        speedyWindowHeight: 500,
        speedyWindowWidth: 800,
        logSpeedyNominations: true,
        speedyLogPageName: "CSD日志",
        noLogOnSpeedyNomination: ["o1"],
        enlargeG7Input: false,
        // Unlink
        unlinkNamespaces: ["0", "6", "10", "118"],
        // Warn
        defaultWarningGroup: "1",
        combinedSingletMenus: false,
        watchWarnings: "yes",
        oldSelect: false,
        customWarningList: [],
        autoMenuAfterRollback: false,
        // XfD
        logXfdNominations: true,
        xfdLogPageName: "XfD日志",
        noLogOnXfdNomination: [],
        xfdWatchDiscussion: "default",
        xfdWatchPage: "default",
        xfdWatchUser: "default",
        markXfdPagesAsPatrolled: true,
        FwdCsdToXfd: Morebits.userIsSysop,
        afdDefaultCategory: "delete",
        afdFameDefaultReason: "没有足够的可靠来源证明此条目符合[[Qiuwen:收录标准|收录标准]]",
        afdSubstubDefaultReason: "过期小小作品",
        XfdClose: Morebits.userIsSysop ? "all" : "hide",
        // Copyvio
        copyvioWatchPage: "yes",
        copyvioWatchUser: "yes",
        markCopyvioPagesAsPatrolled: true,
        // Hidden preferences
        autolevelStaleDays: 3,
        revertMaxRevisions: 50,
        // intentionally limited
        batchMax: 5e3,
        batchChunks: 50,
        configPage: "Help:Twinkle/参数设置",
        projectNamespaceName: mw.config.get("wgFormattedNamespaces")[4],
        sandboxPage: "Qiuwen:沙盒",
        // Deprecated options, as a fallback for add-on scripts/modules
        summaryAd: "（[[H:TW|Twinkle]]）",
        deletionSummaryAd: "（[[H:TW|Twinkle]]）",
        protectionSummaryAd: "（[[H:TW|Twinkle]]）",
        blockSummaryAd: "（[[H:TW|Twinkle]]）",
        // Tag
        groupByDefault: true,
        watchTaggedPages: "yes",
        watchMergeDiscussions: "yes",
        markTaggedPagesAsMinor: false,
        markTaggedPagesAsPatrolled: true,
        tagArticleSortOrder: "cat",
        customTagList: [],
        customFileTagList: [],
        customRedirectTagList: [],
        // Stub
        watchStubbedPages: false,
        markStubbedPagesAsMinor: false,
        markStubbedPagesAsPatrolled: true,
        stubArticleSortOrder: "cat",
        customStubList: [],
        // Talkback
        markTalkbackAsMinor: true,
        insertTalkbackSignature: true,
        // always sign talkback templates
        talkbackHeading: window.wgULS("回复通告", "回覆通告"),
        mailHeading: window.wgULS("您有新邮件！", "您有新郵件！")
      };
      switch (mw.config.get("skin")) {
        case "vector":
        case "vector-2022":
          Twinkle2.defaultConfig.portletArea = "right-navigation";
          Twinkle2.defaultConfig.portletId = "p-twinkle";
          Twinkle2.defaultConfig.portletName = "TW";
          Twinkle2.defaultConfig.portletType = "menu";
          Twinkle2.defaultConfig.portletNext = "p-search";
          break;
        case "gongbi":
          Twinkle2.defaultConfig.portletArea = $body.find("#page-tools .sidebar-inner").length > 0 ? "#page-tools .sidebar-inner" : "#page-more .sidebar-inner";
          Twinkle2.defaultConfig.portletId = "p-twinkle";
          Twinkle2.defaultConfig.portletName = "Twinkle";
          Twinkle2.defaultConfig.portletType = null;
          Twinkle2.defaultConfig.portletNext = $body.find("#page-tools .sidebar-inner").length > 0 ? "page-more" : null;
          break;
        case "citizen":
          Twinkle2.defaultConfig.portletArea = "#page-actions-more__card";
          Twinkle2.defaultConfig.portletId = "p-twinkle";
          Twinkle2.defaultConfig.portletName = "Twinkle";
          Twinkle2.defaultConfig.portletType = "nav";
          Twinkle2.defaultConfig.portletNext = "p-tb";
          break;
        default:
          Twinkle2.defaultConfig.portletArea = null;
          Twinkle2.defaultConfig.portletId = "p-cactions";
          Twinkle2.defaultConfig.portletName = null;
          Twinkle2.defaultConfig.portletType = null;
          Twinkle2.defaultConfig.portletNext = null;
      }
      Twinkle2.getPref = (name) => {
        if (typeof Twinkle2.prefs === "object" && Twinkle2.prefs[name] !== void 0) {
          return Twinkle2.prefs[name];
        }
        if (typeof window.TwinkleConfig === "object" && window.TwinkleConfig[name] !== void 0) {
          return window.TwinkleConfig[name];
        }
        return Twinkle2.defaultConfig[name];
      };
      Twinkle2.addPortlet = (navigation, id, text, type, nextnodeid) => {
        const root = document.querySelector(/^(?:#|\.)/.test(navigation) ? navigation : "#".concat(navigation));
        if (!root) {
          return null;
        }
        const item = document.querySelector("#".concat(id));
        if (item) {
          if (item.parentNode && item.parentNode === root) {
            return item;
          }
          return null;
        }
        let nextnode;
        if (nextnodeid) {
          nextnode = document.querySelector("#".concat(nextnodeid));
        }
        const skin = mw.config.get("skin");
        if (skin !== "vector" && skin !== "vector-2022" || navigation !== "left-navigation" && navigation !== "right-navigation") {
          type = null;
        }
        let outerNavClass;
        let innerDivClass;
        let ulClassName;
        switch (skin) {
          case "vector":
          case "vector-2022":
            if (navigation !== "portal" && navigation !== "left-navigation" && navigation !== "right-navigation") {
              navigation = "mw-panel";
            }
            outerNavClass = "mw-portlet vector-menu";
            if (navigation === "mw-panel") {
              outerNavClass += " vector-menu-portal";
            } else if (type === "menu") {
              outerNavClass += " vector-menu-dropdown vector-dropdown vector-menu-dropdown-noicon";
            } else {
              outerNavClass += " vector-menu-tabs";
            }
            innerDivClass = "vector-menu-content vector-dropdown-content";
            ulClassName = "vector-menu-content-list";
            break;
          case "gongbi":
            outerNavClass = "mw-portlet";
            innerDivClass = "mw-portlet-body";
            break;
          case "citizen":
            outerNavClass = "citizen-menu mw-portlet";
            innerDivClass = "citizen-menu__content mw-portlet-twinkle";
            ulClassName = "citizen-menu__content-list";
            break;
          default:
            navigation = "column-one";
            outerNavClass = "portlet";
            break;
        }
        let outerNav;
        let heading;
        if (skin === "vector-2022") {
          outerNav = document.createElement("div");
          heading = document.createElement("label");
        } else {
          outerNav = document.createElement("nav");
          heading = document.createElement("h3");
        }
        outerNav.setAttribute("aria-labelledby", "".concat(id, "-label"));
        outerNav.className = "".concat(outerNavClass, " emptyPortlet");
        outerNav.id = id;
        if (nextnode && nextnode.parentNode === root) {
          root.insertBefore(outerNav, nextnode);
        } else {
          root.appendChild(outerNav);
        }
        heading.id = "".concat(id, "-label");
        const ul = document.createElement("ul");
        if (skin === "vector" || skin === "vector-2022") {
          heading.setAttribute("for", "".concat(id, "-dropdown-checkbox"));
          ul.className = "vector-menu-content-list";
          heading.className = "vector-menu-heading vector-dropdown-label";
          if (outerNavClass.includes("vector-menu-dropdown")) {
            const chkbox = document.createElement("input");
            chkbox.id = "".concat(id, "-dropdown-checkbox");
            chkbox.className = "vector-menu-checkbox vector-dropdown-checkbox";
            chkbox.setAttribute("type", "checkbox");
            chkbox.setAttribute("aria-labelledby", "".concat(id, "-label"));
            outerNav.appendChild(chkbox);
            const span = document.createElement("span");
            span.appendChild(document.createTextNode(text));
            heading.appendChild(span);
            const a = document.createElement("a");
            a.href = "#";
            $(a).on("click", (e) => {
              e.preventDefault();
            });
            heading.appendChild(a);
          }
        } else {
          if (ulClassName) {
            ul.className = ulClassName;
          }
          heading.appendChild(document.createTextNode(text));
        }
        outerNav.appendChild(heading);
        if (innerDivClass) {
          const innerDiv = document.createElement("div");
          innerDiv.className = innerDivClass;
          innerDiv.appendChild(ul);
          outerNav.appendChild(innerDiv);
        } else {
          outerNav.appendChild(ul);
        }
        return outerNav;
      };
      Twinkle2.addPortletLink = (task, text, id, tooltip) => {
        if (Twinkle2.getPref("portletArea") !== null) {
          Twinkle2.addPortlet(Twinkle2.getPref("portletArea"), Twinkle2.getPref("portletId"), Twinkle2.getPref("portletName"), Twinkle2.getPref("portletType"), Twinkle2.getPref("portletNext"));
        }
        const link = mw.util.addPortletLink(Twinkle2.getPref("portletId"), typeof task === "string" ? task : "#", text, id, tooltip);
        $body.find(".client-js .skin-vector #p-cactions").css("margin-right", "initial");
        if (typeof task === "function") {
          $(link).find("a").on("click", (ev) => {
            task();
            ev.preventDefault();
          });
        }
        if ($.collapsibleTabs) {
          $.collapsibleTabs.handleResize();
        }
        return link;
      };
      Twinkle2.prefs || (Twinkle2.prefs = {});
      void api.get({
        action: "query",
        prop: ["revisions"],
        rvprop: "content",
        format: "json",
        formatversion: "2",
        titles: "User:".concat(mw.config.get("wgUserName"), "/twinkleoptions.js"),
        rvlimit: "1",
        rvslots: "main"
      }).then((response) => {
        if (!response["query"].pages[0].missing) {
          var _response$query$pages;
          const content = (_response$query$pages = response["query"].pages[0].revisions[0].slots.main.content) !== null && _response$query$pages !== void 0 ? _response$query$pages : "";
          if (content !== "") {
            try {
              window.eval(content);
            } catch {
              void mw.notify(window.wgULS("未能加载您的Twinkle参数设置", "未能載入您的Twinkle偏好設定"), {
                type: "error",
                tag: "twinkle"
              });
            }
          }
        }
      }).fail(() => {
        void mw.notify(window.wgULS("未能加载您的Twinkle参数设置", "未能載入您的Twinkle偏好設定"), {
          type: "error",
          tag: "twinkle"
        });
      }).always(() => {
        $(Twinkle2.load);
      });
      Twinkle2.load = () => {
        let activeSpecialPageList = ["Block", "Contributions", "AbuseLog", "Recentchanges", "Recentchangeslinked"];
        if (Morebits.userIsSysop) {
          activeSpecialPageList = [...activeSpecialPageList, "DeletedContributions", "Prefixindex", "BrokenRedirects"];
        }
        if (mw.config.get("wgNamespaceNumber") === -1 && !activeSpecialPageList.includes(mw.config.get("wgCanonicalSpecialPageName"))) {
          return;
        }
        if (window.top !== window.self) {
          return;
        }
        Twinkle2.userAgent = "Twinkle/1.1";
        Morebits.wiki.api.setApiUserAgent(Twinkle2.userAgent);
        Twinkle2.disabledModules = [...Twinkle2.getPref("disabledModules"), ...Twinkle2.getPref("disabledSysopModules")];
        Twinkle2.addInitCallback = (func, name) => {
          if (!name || !Twinkle2.disabledModules.includes(name)) {
            func();
          }
        };
        var _iterator = _createForOfIteratorHelper(Twinkle2.initCallbacks), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            const module2 = _step.value;
            Twinkle2.addInitCallback(module2.func, module2.name);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
        if (Twinkle2.getPref("dialogLargeFont")) {
          mw.util.addCSS(".morebits-dialog-content,.morebits-dialog-footerlinks{font-size:100%!important}.morebits-dialog input,.morebits-dialog select,.morebits-dialog-content button{font-size:inherit !important}");
        }
        const isVector = ["vector", "vector-2022"].includes(mw.config.get("skin"));
        if (isVector && Twinkle2.getPref("portletType") === "menu" && $body.find("#p-twinkle").length === 0) {
          $body.find("#p-cactions").css("margin-right", "initial");
        }
      };
      Twinkle2.sortByNamespace = (first, second) => {
        return first.ns - second.ns || (first.title > second.title ? 1 : -1);
      };
      Twinkle2.generateBatchPageLinks = (checkbox) => {
        const $checkbox = $(checkbox);
        const link = Morebits.htmlNode("a", $checkbox.val());
        link.setAttribute("class", "tw-batchpage-link");
        link.setAttribute("href", mw.util.getUrl($checkbox.val()));
        link.setAttribute("target", "_blank");
        link.setAttribute("rel", "noopener noreferrer");
        $checkbox.next().prepend([link, " "]);
      };
    })(jQuery);
  }
});
//! src/Twinkle/modules/twinklearv.js
var twinklearv_exports = {};
var init_twinklearv = __esm({
  "src/Twinkle/modules/twinklearv.js"() {
    "use strict";
    /*! Twinkle.js - twinklearv.js */
    (function twinklearv($) {
      const $body = $("body");
      Twinkle.arv = () => {
        const username = mw.config.get("wgRelevantUserName");
        if (!username) {
          return;
        }
        const isIP = mw.util.isIPAddress(username);
        const title = isIP ? window.wgULS("报告IP给管理员", "報告IP給管理員") : window.wgULS("报告用户给管理人员", "報告使用者給管理人員");
        Twinkle.addPortletLink(() => {
          Twinkle.arv.callback(username, isIP);
        }, window.wgULS("告状", "告狀"), "tw-arv", title);
      };
      Twinkle.arv.callback = (uid, isIP) => {
        if (uid === mw.config.get("wgUserName")) {
          void mw.notify(window.wgULS("你不想报告你自己，对吧？", "你不想報告你自己，對吧？"), {
            type: "warn",
            tag: "twinklearv"
          });
          return;
        }
        const Window = new Morebits.simpleWindow(600, 500);
        Window.setTitle(window.wgULS("报告用户给管理人员", "報告使用者給管理人員"));
        Window.setScriptName("Twinkle");
        Window.addFooterLink(window.wgULS("告状设置", "告狀設定"), "H:TW/PREF#arv");
        Window.addFooterLink(window.wgULS("Twinkle帮助", "Twinkle說明"), "H:TW#告狀");
        const form = new Morebits.quickForm(Twinkle.arv.callback.evaluate);
        const categories = form.append({
          type: "select",
          name: "category",
          label: window.wgULS("选择报告类型：", "選擇報告類別："),
          event: Twinkle.arv.callback.changeCategory
        });
        categories.append({
          type: "option",
          label: window.wgULS("破坏（QW:VIP）", "破壞（QW:VIP）"),
          value: "aiv"
        });
        categories.append({
          type: "option",
          label: window.wgULS("编辑争议（QW:EWIP）", "編輯爭議（QW:EWIP）"),
          value: "ewip"
        });
        categories.append({
          type: "option",
          label: window.wgULS("用户名（QW:UAA）", "使用者名稱（QW:UAA）"),
          value: "username",
          disabled: mw.util.isIPAddress(uid)
        });
        categories.append({
          type: "option",
          label: window.wgULS("傀儡调查（QW:SPI）", "傀儡調查（QW:SPI）"),
          value: "spi",
          disabled: mw.util.isIPAddress(uid)
        });
        form.append({
          type: "div",
          label: "",
          style: "color: #f00",
          id: "twinkle-arv-blockwarning"
        });
        form.append({
          type: "field",
          label: "Work area",
          name: "work_area"
        });
        form.append({
          type: "submit",
          label: "提交"
        });
        form.append({
          type: "hidden",
          name: "uid",
          value: uid
        });
        const result = form.render();
        Window.setContent(result);
        Window.display();
        const query = {
          action: "query",
          list: "blocks",
          bkprop: "range|flags",
          format: "json"
        };
        if (isIP) {
          query.bkip = uid;
        } else {
          query.bkusers = uid;
        }
        new Morebits.wiki.api(window.wgULS("检查用户的封禁状态", "檢查使用者的封鎖狀態"), query, (apiobj) => {
          const blocklist = apiobj.getResponse().query.blocks;
          if (blocklist.length) {
            const [block] = blocklist;
            let message = (isIP ? window.wgULS("此IP地址", "此IP位址") : window.wgULS("此账号", "此賬號")) + window.wgULS("已经被", "已經被") + (block.partial ? "部分" : "");
            message += block.rangestart === (block.rangeend ? "段" : "") + window.wgULS("封禁。", "封鎖。");
            if (block.partial) {
              $body.find("#twinkle-arv-blockwarning").css("color", "black");
            }
            $body.find("#twinkle-arv-blockwarning").text(message);
          }
        }).post();
        const evt = document.createEvent("Event");
        evt.initEvent("change", true, true);
        result.category.dispatchEvent(evt);
      };
      Twinkle.arv.lta_list = [{
        value: "",
        label: window.wgULS("请选择", "請選擇")
      }];
      Twinkle.arv.callback.sockmaster_changed = (e) => {
        Twinkle.arv.callback.set_sockmaster(e.target.value);
      };
      Twinkle.arv.callback.set_sockmaster = (sockmaster) => {
        $body.find("code.tw-arv-sockmaster").text("{{".concat("subst:", "Socksuspectnotice|1=".concat(sockmaster, "}}")));
      };
      Twinkle.arv.callback.changeCategory = (e) => {
        const value_ = e.target.value;
        const root_ = e.target.form;
        const [old_area] = Morebits.quickForm.getElements(root_, "work_area");
        let work_area = null;
        const previewlink = document.createElement("a");
        previewlink.style.cursor = "pointer";
        previewlink.textContent = window.wgULS("预览", "預覽");
        $(previewlink).on("click", () => {
          Twinkle.arv.callback.preview(root_);
        });
        switch (value_) {
          case "ewip":
            work_area = new Morebits.quickForm.element({
              type: "field",
              label: window.wgULS("报告编辑争议", "報告編輯爭議"),
              name: "work_area"
            });
            work_area.append({
              type: "dyninput",
              name: "page",
              label: window.wgULS("相关页面：", "相關頁面："),
              sublabel: window.wgULS("页面：", "頁面："),
              tooltip: window.wgULS("如不希望让报告链接到页面，请留空", "如不希望讓報告連結到頁面，請留空"),
              min: 1,
              max: 10
            });
            work_area.append({
              type: "textarea",
              name: "reason",
              label: window.wgULS("评论：", "評論：")
            });
            work_area.append({
              type: "div",
              id: "arvpreview",
              label: [previewlink]
            });
            work_area.append({
              type: "div",
              id: "twinklearv-previewbox",
              style: "display: none"
            });
            work_area = work_area.render();
            old_area.parentNode.replaceChild(work_area, old_area);
            break;
          case "username":
            work_area = new Morebits.quickForm.element({
              type: "field",
              label: window.wgULS("报告不当用户名", "報告不當使用者名稱"),
              name: "work_area"
            });
            work_area.append({
              type: "header",
              label: window.wgULS("不当用户名类型", "不當使用者名稱類別"),
              tooltip: window.wgULS("求闻百科不允许使用带有误导性、宣传性、侮辱性或破坏性的用户名。此外，使用域名及邮箱地址的用户名亦被禁止。这些准则俱应应用至用户名及签名。在其他语言中不当的用户名或通过错拼、替代、暗示、拆字或任何间接方法达成的非妥当用户名同样视为违规。", "求聞百科不允許使用帶有誤導性、宣傳性、侮辱性或破壞性的使用者名稱。此外，使用域名及電子信箱位址的使用者名稱亦被禁止。這些準則俱應應用至使用者名稱及簽名。在其他語言中不當的使用者名稱或通過錯拼、替代、暗示、拆字或任何間接方法達成的非妥當使用者名稱同樣視為違規。")
            });
            work_area.append({
              type: "checkbox",
              name: "arvtype",
              list: [{
                label: window.wgULS("误导性用户名", "誤導性使用者名稱"),
                value: window.wgULS("误导性", "誤導性"),
                tooltip: window.wgULS("误导性用户名隐含着与贡献者相关或误导他人的事情。例如︰不实观点、暗示账号拥有特定权限或暗示该账号并非由一人拥有而是由一个组群、一个项目或一个集体运作。", "誤導性使用者名稱隱含著與貢獻者相關或誤導他人的事情。例如︰不實觀點、暗示賬號擁有特定權限或暗示該賬號並非由一人擁有而是由一個群組、一個計畫或一個集體運作。")
              }, {
                label: window.wgULS("宣传性用户名", "宣傳性使用者名稱"),
                value: window.wgULS("宣传性", "宣傳性"),
                tooltip: window.wgULS("宣传性用户名会于求闻百科上起推销一个组群或一间公司的作用。", "宣傳性使用者名稱會於求聞百科上起推銷一個群組或一間公司的作用。")
              }, {
                label: window.wgULS("暗示并非由一人拥有", "暗示並非由一人擁有"),
                value: "shared",
                tooltip: window.wgULS("每个账号只可以代表个人（容许一些例外情况），所有与他人分享账号的行为（包括分享账号密码）均被禁止。", "每個賬號只可以代表個人（容許一些例外情況），所有與他人分享賬號的行為（包括分享賬號密碼）均被禁止。")
              }, {
                label: window.wgULS("侮辱性用户名", "侮辱性使用者名稱"),
                value: "侮辱性",
                tooltip: window.wgULS("侮辱性用户名令协调编辑变得困难，甚至无可能。", "侮辱性使用者名稱令協調編輯變得困難，甚至無可能。")
              }, {
                label: window.wgULS("破坏性用户名", "破壞性使用者名稱"),
                value: window.wgULS("破坏性", "破壞性"),
                tooltip: window.wgULS("破坏性用户名包括人身攻击、伪冒他人或其他一切有着清晰可见的破坏求闻百科意图的用户名。", "破壞性使用者名稱包括人身攻擊、偽冒他人或其他一切有著清晰可見的破壞求聞百科意圖的使用者名稱。")
              }]
            });
            work_area.append({
              type: "checkbox",
              list: [{
                label: window.wgULS("在页面上隐藏用户名（需监督的用户名请勿于站内报告，勾选此项并不构成能在站内报告的理由）", "在頁面上隱藏使用者名稱（需監督的使用者名稱請勿於站內報告，勾選此項並不構成能在站內報告的理由）"),
                tooltip: window.wgULS("若用户名不当请勾选此项，注意：请考虑私下联系管理员处理。", "若使用者名稱不當請勾選此項，注意：請考慮私下聯絡管理員處理。"),
                name: "hidename",
                value: "hidename"
              }],
              style: "font-weight: bold;"
            });
            work_area.append({
              type: "textarea",
              name: "reason",
              label: window.wgULS("评论：", "評論：")
            });
            work_area.append({
              type: "div",
              id: "arvpreview",
              label: [previewlink]
            });
            work_area.append({
              type: "div",
              id: "twinklearv-previewbox",
              style: "display: none"
            });
            work_area = work_area.render();
            old_area.parentNode.replaceChild(work_area, old_area);
            break;
          case "spi":
            work_area = new Morebits.quickForm.element({
              type: "field",
              label: window.wgULS("发起傀儡调查", "發起傀儡調查"),
              name: "work_area"
            });
            work_area.append({
              type: "input",
              name: "sockmaster",
              tooltip: window.wgULS("主账号的用户名（不含User:前缀）", "主賬號的使用者名稱（不含User:字首）"),
              value: root_.uid.value,
              event: Twinkle.arv.callback.sockmaster_changed
            });
            work_area.append({
              type: "div",
              id: "twinklearv-spinoticebox",
              style: "display: none"
            });
            work_area.append({
              type: "dyninput",
              name: "sockpuppet",
              label: "傀儡",
              sublabel: "傀儡：",
              tooltip: window.wgULS("傀儡的用户名（不含User:前缀）", "傀儡的使用者名稱（不含User:字首）"),
              min: 2,
              max: 9
            });
            work_area.append({
              type: "textarea",
              label: window.wgULS("证据：", "證據："),
              name: "reason",
              tooltip: window.wgULS("输入能够用来体现这些用户可能滥用多重账号的证据，这通常包括茶馆发言、页面历史或其他有关的信息。请避免在此处提供非与傀儡或滥用多重账号相关的其他讨论。", "輸入能夠用來體現這些使用者可能濫用多重賬號的證據，這通常包括茶館發言、頁面歷史或其他有關的資訊。請避免在此處提供非與傀儡或濫用多重賬號相關的其他討論。")
            });
            work_area.append({
              type: "checkbox",
              list: [{
                label: window.wgULS("请求用户查核", "請求使用者查核"),
                name: "checkuser",
                tooltip: window.wgULS("用户查核是一种用于获取傀儡指控相关技术证据的工具，若没有正当理由则不会使用，您必须在证据字段充分解释为什么需要使用该工具。用户查核不会用于公开连接用户账号使用的IP地址。", "使用者查核是一種用於獲取傀儡指控相關技術證據的工具，若沒有正當理由則不會使用，您必須在證據欄位充分解釋為什麼需要使用該工具。使用者查核不會用於公開連接使用者賬號使用的IP位址。")
              }]
            });
            work_area.append({
              type: "div",
              id: "arvpreview",
              label: [previewlink]
            });
            work_area.append({
              type: "div",
              id: "twinklearv-previewbox",
              style: "display: none"
            });
            work_area.append({
              type: "div",
              label: [window.wgULS("请使用常识决定是否以", "請使用常識決定是否以"), $("<code>").addClass("tw-arv-sockmaster").css("margin", "2px;")[0], window.wgULS("通知用户。这不是必须的，对于涉及新用户的报告而言，通知他们能让报告显得更公平，但是许多情况下（如长期破坏者）通知更可能适得其反。", "通知使用者。這不是必須的，對於涉及新使用者的報告而言，通知他們能讓報告顯得更公平，但是許多情況下（如長期破壞者）通知更可能適得其反。")]
            });
            work_area = work_area.render();
            $("input:text[name=sockpuppet]", work_area).first().val(root_.uid.value);
            old_area.parentNode.replaceChild(work_area, old_area);
            root_.spinoticepreviewer = new Morebits.wiki.preview($(work_area).find("#twinklearv-spinoticebox").last()[0]);
            Twinkle.arv.callback.set_sockmaster(root_.uid.value);
            break;
          /* case 'aiv': */
          /* falls through */
          default:
            work_area = new Morebits.quickForm.element({
              type: "field",
              label: window.wgULS("报告用户破坏", "報告使用者破壞"),
              name: "work_area"
            });
            work_area.append({
              type: "div",
              label: window.wgULS("提报傀儡应优先发送至傀儡调查，除非相关的账号有高频率、涉及多个页面等紧急严重的破坏行为。", "提報傀儡應優先發送至傀儡調查，除非相關的賬號有高頻率、涉及多個頁面等緊急嚴重的破壞行為。")
            });
            work_area.append({
              type: "input",
              name: "page",
              label: window.wgULS("相关页面：", "相關頁面："),
              tooltip: window.wgULS("如不希望让报告链接到页面，请留空", "如不希望讓報告連結到頁面，請留空"),
              value: mw.util.getParamValue("vanarticle") || "",
              event: (event) => {
                const {
                  value
                } = event.target;
                const root = event.target.form;
                if (value === "") {
                  root.badid.disabled = true;
                  root.goodid.disabled = true;
                } else {
                  root.badid.disabled = false;
                  root.goodid.disabled = root.badid.value === "";
                }
              }
            });
            work_area.append({
              type: "input",
              name: "badid",
              label: window.wgULS("受到破坏的修订版本：", "受到破壞的修訂版本："),
              tooltip: window.wgULS("留空以略过差异", "留空以略過差異"),
              value: mw.util.getParamValue("vanarticlerevid") || "",
              disabled: !mw.util.getParamValue("vanarticle"),
              event: (event) => {
                const {
                  value
                } = event.target;
                const root = event.target.form;
                root.goodid.disabled = value === "";
              }
            });
            work_area.append({
              type: "input",
              name: "goodid",
              label: window.wgULS("破坏前的修订版本：", "破壞前的修訂版本："),
              tooltip: window.wgULS("留空以略过差异的较早版本", "留空以略過差異的較早版本"),
              value: mw.util.getParamValue("vanarticlegoodrevid") || "",
              disabled: !mw.util.getParamValue("vanarticle") || mw.util.getParamValue("vanarticlerevid")
            });
            work_area.append({
              type: "checkbox",
              name: "arvtype",
              list: [{
                label: window.wgULS("已发出最后警告", "已發出最後警告"),
                value: "final"
              }, {
                label: window.wgULS("封禁过期后随即破坏", "封鎖過期後隨即破壞"),
                value: "postblock"
              }, {
                label: window.wgULS("显而易见的纯破坏用户", "顯而易見的純破壞使用者"),
                value: "vandalonly",
                disabled: mw.util.isIPAddress(root_.uid.value)
              }, {
                label: window.wgULS("显而易见的spambot或失窃账号", "顯而易見的spambot或失竊賬號"),
                value: "spambot"
              }, {
                label: window.wgULS("仅用来散发广告宣传的用户", "僅用來散發廣告宣傳的使用者"),
                value: "promoonly",
                disabled: mw.util.isIPAddress(root_.uid.value)
              }]
            });
            if (!mw.util.isIPAddress(mw.config.get("wgRelevantUserName"))) {
              work_area.append({
                type: "checkbox",
                list: [{
                  label: window.wgULS("在页面上及编辑摘要隐藏用户名", "在頁面上及編輯摘要隱藏使用者名稱"),
                  tooltip: window.wgULS("若用户名不当请勾选此项，注意：请考虑私下联系管理员处理。", "若使用者名稱不當請勾選此項，注意：請考慮私下聯絡管理員處理。"),
                  name: "hidename",
                  value: "hidename"
                }]
              });
            }
            work_area.append({
              type: "textarea",
              name: "reason",
              label: window.wgULS("评论：", "評論：")
            });
            work_area.append({
              type: "div",
              id: "arvpreview",
              label: [previewlink]
            });
            work_area.append({
              type: "div",
              id: "twinklearv-previewbox",
              style: "display: none"
            });
            work_area = work_area.render();
            old_area.parentNode.replaceChild(work_area, old_area);
            break;
        }
        root_.previewer = new Morebits.wiki.preview($(work_area).find("#twinklearv-previewbox").last()[0]);
      };
      Twinkle.arv.callback.preview = (form) => {
        const reason = Twinkle.arv.callback.getReportWikitext(form);
        if (reason === void 0) {
          return;
        }
        const input = Morebits.quickForm.getInputData(form);
        let title;
        switch (input.category) {
          case "vip":
            title = "Qiuwen_talk:报告当前破坏";
            break;
          case "ewip":
            title = "Qiuwen_talk:管理员告示板";
            break;
          case "username":
            title = "Qiuwen_talk:管理员告示板";
            break;
          case "spi":
            title = "Qiuwen_talk:管理员告示板";
            break;
          default:
            title = mw.config.get("wgPageName");
            break;
        }
        form.previewer.beginRender("__NOTOC__".concat(reason[0]), title);
      };
      Twinkle.arv.callback.getReportWikitext = (form) => {
        const input = Morebits.quickForm.getInputData(form);
        let reason = "";
        let comment = "";
        const {
          uid
        } = input;
        const checkTitle = (title, revid) => {
          if (/https?:\/\//.test(title)) {
            void mw.notify(window.wgULS("页面名称不能使用网址。", "頁面名稱不能使用網址。"), {
              type: "warn",
              tag: "twinklearv"
            });
            return false;
          }
          let page_;
          try {
            page_ = new mw.Title(title);
          } catch {
            void mw.notify("".concat(window.wgULS("“", "「") + title + window.wgULS("”不是一个有效的页面名称，如要使用差异链接请放在“评论”", "」不是一個有效的頁面名稱，如要使用差異連結請放在「評論」") + (revid ? window.wgULS("，或正确输入“修订版本”", "，或正確輸入「修訂版本」") : ""), "。"), {
              type: "warn",
              tag: "twinklearv"
            });
            return false;
          }
          if (page_.namespace === -1) {
            void mw.notify("".concat(window.wgULS("“", "「") + title + window.wgULS("”属于特殊页面，如要使用差异链接请放在“评论”", "」屬於特殊頁面，如要使用差異連結請放在「評論」") + (revid ? window.wgULS("，或正确输入“修订版本”", "，或正確輸入「修訂版本」") : ""), "。"), {
              type: "warn",
              tag: "twinklearv"
            });
            return false;
          }
          return page_;
        };
        let page;
        switch (input.category) {
          // Report 3RR
          case "ewip": {
            if (input.reason === "") {
              void mw.notify(window.wgULS("您必须指定理由", "您必須指定理由"), {
                type: "warn",
                tag: "twinklearv"
              });
              return;
            }
            reason += "== 编辑战举报（".concat(uid, "） ==\n");
            reason += "* '''{{vandal|".concat(/[=]/.test(uid) ? "1=" : "").concat(uid, "}}'''\n");
            const pages = $("input:text[name=page]", form).map((o, e) => {
              return $(e).val() || null;
            });
            var _iterator2 = _createForOfIteratorHelper(pages), _step2;
            try {
              for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                const page_ = _step2.value;
                page = checkTitle(page_, false);
                if (!page) {
                  return;
                }
                comment += "* {{pagelinks|".concat(page.getPrefixedText().includes("=") ? "1=" : "").concat(page.getPrefixedText(), "}}\n");
              }
            } catch (err) {
              _iterator2.e(err);
            } finally {
              _iterator2.f();
            }
            input.reason = input.reason.replace(/\n\n+/g, "\n");
            input.reason = input.reason.replace(/\r?\n/g, "\n*:");
            comment += "* ".concat(input.reason, "\n");
            comment = comment.trim();
            comment = Morebits.string.appendPunctuation(comment);
            reason += "".concat(comment, "\n* 提报人：~~").concat("~~\n* 处理：");
            break;
          }
          // Report inappropriate username
          case "username": {
            let types = input.arvtype.map(Morebits.string.toLowerCaseFirstChar);
            const hasShared = types.includes("shared");
            if (hasShared) {
              types.splice(types.indexOf("shared"), 1);
            }
            if (types.includes("侮辱性") && !confirm(window.wgULS("警告：严重的侮辱性用户名和针对特定个人的侮辱性用户名不应在公开页面报告，而是应当私下联系监督员处理。是否继续？", "警告：嚴重的侮辱性使用者名稱和針對特定個人的侮辱性使用者名稱不應在公開頁面報告，而是應當私下聯絡監督員處理。是否繼續？"))) {
              return;
            }
            if (types.length <= 2) {
              types = types.join("和");
            } else {
              types = [types.slice(0, -1).join("、"), types.slice(-1)].join("和");
            }
            comment += "*{{user-uaa|1=".concat(uid);
            if (input.hidename) {
              comment += "|hidename=1";
            }
            comment += "}} &ndash; ";
            if (types.length) {
              comment += types + window.wgULS("用户名", "使用者名稱");
            }
            if (types.length && hasShared) {
              comment += "，";
            }
            if (hasShared) {
              comment += window.wgULS("暗示该账号并非由一人拥有", "暗示該賬號並非由一人擁有");
            }
            if (types.length || hasShared) {
              comment += "。";
            }
            if (input.reason) {
              comment += Morebits.string.toUpperCaseFirstChar(input.reason);
            }
            comment = Morebits.string.appendPunctuation(comment);
            comment += "--~~".concat("~~");
            comment = comment.replace(/\r?\n/g, "\n*:");
            reason = "== 不当用户名报告（".concat(input.hidename ? window.wgULS("已隐藏用户名", "已隱藏使用者名稱") : uid, "） ==\n");
            reason += comment;
            break;
          }
          // QW:SPI
          case "spi": {
            if (!input.reason) {
              void mw.notify(window.wgULS("请输入证据。", "請輸入證據。"), {
                type: "warn",
                tag: "twinklearv"
              });
              return;
            }
            const sockpuppets = Morebits.array.uniq([...$("input:text[name=sockpuppet]", form)].map((o) => {
              return $(o).val().trim() || null;
            }));
            if (!sockpuppets[0]) {
              void mw.notify(window.wgULS("您没有指定任何傀儡。", "您沒有指定任何傀儡。"), {
                type: "warn",
                tag: "twinklearv"
              });
              return;
            }
            comment += "{{".concat("subst:", "SPI report|");
            if (!sockpuppets.includes(input.sockmaster)) {
              comment += "1={{".concat("subst:", "#ifexist:{{", "subst:", "FULLPAGENAME}}||".concat(input.sockmaster, "}}|"));
            }
            comment += "".concat(sockpuppets.map((sock, index) => {
              return "".concat(index + 2, "=").concat(sock);
            }).join("|"), "\n|evidence=").concat(Morebits.string.appendPunctuation(input.reason), "\n");
            if (input.checkuser) {
              comment += "|checkuser=yes";
            }
            comment += "}}";
            reason = comment;
            break;
          }
          // Report user for vandalism
          /* case 'aiv': */
          /* falls through */
          default: {
            if (!input.arvtype.length && input.reason === "") {
              void mw.notify(window.wgULS("您必须指定理由", "您必須指定理由"), {
                type: "warn",
                tag: "twinklearv"
              });
              return;
            }
            reason += "== ".concat(input.hidename ? window.wgULS("已隐藏用户名", "已隱藏使用者名稱") : uid, " ==\n");
            reason += "* '''{{vandal|".concat(/[=]/.test(uid) ? "1=" : "").concat(uid);
            if (input.hidename) {
              reason += "|hidename=1";
            }
            reason += "}}'''\n";
            const types = input.arvtype.map((v) => {
              switch (v) {
                case "final":
                  return "已发出最后警告";
                case "postblock":
                  return "封禁过期后随即破坏";
                case "spambot":
                  return "显而易见的spambot或失窃账号";
                case "vandalonly":
                  return "显而易见的纯破坏用户";
                case "promoonly":
                  return "仅用来散发广告宣传的用户";
                default:
                  return "未知理由";
              }
            }).join("，");
            if (input.page !== "") {
              page = checkTitle(input.page, true);
              if (!page) {
                return;
              }
              comment += "* {{pagelinks|".concat(page.getPrefixedText().includes("=") ? "1=" : "").concat(page.getPrefixedText(), "}}");
              if (input.badid) {
                var _input$goodid;
                comment += "（{{diff|".concat(page.getPrefixedText(), "|").concat(input.badid, "|").concat((_input$goodid = input.goodid) !== null && _input$goodid !== void 0 ? _input$goodid : "", "|diff}}）");
              }
              comment += "\n";
            }
            if (types) {
              comment += "* ".concat(types);
            }
            if (input.reason !== "") {
              input.reason = input.reason.replace(/\n\n+/g, "\n");
              input.reason = input.reason.replace(/\r?\n/g, "\n*:");
              comment += (types ? "。" : "* ") + input.reason;
            }
            comment = comment.trim();
            comment = Morebits.string.appendPunctuation(comment);
            reason += "".concat(comment, "\n* 发现人：~~").concat("~~\n* 处理：");
            break;
          }
        }
        return [reason, comment];
      };
      Twinkle.arv.callback.evaluate = (e) => {
        const form = e.target;
        const input = Morebits.quickForm.getInputData(form);
        const {
          uid
        } = input;
        let reason;
        let summary;
        switch (input.category) {
          // Report 3RR
          case "ewip": {
            reason = Twinkle.arv.callback.getReportWikitext(form);
            if (reason === void 0) {
              return;
            }
            summary = "".concat(window.wgULS("报告", "報告"), "[[Special:Contribs/").concat(uid, "|").concat(uid, "]]");
            Morebits.simpleWindow.setButtonsEnabled(false);
            Morebits.status.init(form);
            Morebits.wiki.actionCompleted.redirect = "Qiuwen_talk:管理员告示板";
            Morebits.wiki.actionCompleted.notice = window.wgULS("报告完成", "報告完成");
            const ewipPage = new Morebits.wiki.page("Qiuwen_talk:管理员告示板", window.wgULS("处理EWIP请求", "處理EWIP請求"));
            ewipPage.setFollowRedirect(true);
            ewipPage.load(() => {
              const text = ewipPage.getPageText();
              const $ewipLink = '<a rel="noopener" target="_blank" href="/wiki/QW:EWIP">QW:EWIP</a>';
              if (new RegExp("===\\s*\\{\\{\\s*(?:[Vv]andal)\\s*\\|\\s*(?:1=)?\\s*".concat(Morebits.string.escapeRegExp(uid), "\\s*\\}\\}\\s*===")).test(text)) {
                ewipPage.getStatusElement().error(window.wgULS("报告已存在，将不会加入新的", "報告已存在，將不會加入新的"));
                Morebits.status.printUserText(reason[1], window.wgULS("您输入的评论已在下方提供，您可以将其加入到", "您輸入的評論已在下方提供，您可以將其加入到") + $ewipLink + window.wgULS("已存在的小节中：", "已存在的小節中："));
                return;
              }
              ewipPage.setPageSection(0);
              ewipPage.getStatusElement().status(window.wgULS("加入新报告…", "加入新報告…"));
              ewipPage.setEditSummary(summary);
              ewipPage.setChangeTags(Twinkle.changeTags);
              ewipPage.setAppendText("\n".concat(reason[0]));
              ewipPage.append();
            });
            break;
          }
          // Report inappropriate username
          case "username": {
            reason = Twinkle.arv.callback.getReportWikitext(form);
            Morebits.simpleWindow.setButtonsEnabled(false);
            Morebits.status.init(form);
            Morebits.wiki.actionCompleted.redirect = "Qiuwen_talk:管理员告示板";
            Morebits.wiki.actionCompleted.notice = window.wgULS("报告完成", "報告完成");
            const uaaPage = new Morebits.wiki.page("Qiuwen_talk:管理员告示板", window.wgULS("处理UAA请求", "處理UAA請求"));
            uaaPage.setFollowRedirect(true);
            uaaPage.load(() => {
              const text = uaaPage.getPageText();
              if (new RegExp("\\{\\{\\s*user-uaa\\s*\\|\\s*(1\\s*=\\s*)?".concat(Morebits.string.escapeRegExp(uid), "\\s*(\\||\\})")).test(text)) {
                uaaPage.getStatusElement().error(window.wgULS("用户已被列入。", "使用者已被列入。"));
                const $uaaLink = '<a rel="noopener" target="_blank" href="/wiki/QW:UAA">QW:UAA</a>';
                Morebits.status.printUserText(reason[1], window.wgULS("您输入的评论已在下方提供，您可以将其手工加入", "您輸入的評論已在下方提供，您可以將其手工加入") + $uaaLink + window.wgULS("上该用户的报告中：", "上該使用者的報告中："));
                return;
              }
              uaaPage.getStatusElement().status(window.wgULS("加入新报告…", "加入新報告…"));
              uaaPage.setEditSummary(window.wgULS("新提报", "新提報"));
              uaaPage.setChangeTags(Twinkle.changeTags);
              uaaPage.setAppendText("\n\n".concat(reason[0]));
              uaaPage.append();
            });
            break;
          }
          // QW:SPI
          case "spi": {
            reason = Twinkle.arv.callback.getReportWikitext(form);
            Morebits.simpleWindow.setButtonsEnabled(false);
            Morebits.status.init(form);
            const reportpage = "Qiuwen_talk:管理员告示板";
            Morebits.wiki.actionCompleted.redirect = reportpage;
            Morebits.wiki.actionCompleted.notice = window.wgULS("报告完成", "報告完成");
            const spiPage = new Morebits.wiki.page(reportpage, window.wgULS("抓取讨论页面", "抓取討論頁面"));
            spiPage.setFollowRedirect(true);
            spiPage.setEditSummary(window.wgULS("加入新提报", "加入新提報"));
            spiPage.setChangeTags(Twinkle.changeTags);
            spiPage.setAppendText(reason[0]);
            spiPage.setWatchlist(Twinkle.getPref("spiWatchReport"));
            spiPage.append();
            break;
          }
          // Report user for vandalism
          /* case 'aiv': */
          /* falls through */
          default: {
            reason = Twinkle.arv.callback.getReportWikitext(form);
            if (reason === void 0) {
              return;
            }
            summary = "".concat(window.wgULS("报告", "報告"), "[[Special:Contribs/").concat(uid, "|").concat(uid, "]]");
            if (input.hidename) {
              summary = window.wgULS("报告一名用户", "報告一名使用者");
            }
            Morebits.simpleWindow.setButtonsEnabled(false);
            Morebits.status.init(form);
            Morebits.wiki.actionCompleted.redirect = "Qiuwen_talk:报告当前破坏";
            Morebits.wiki.actionCompleted.notice = window.wgULS("报告完成", "報告完成");
            const aivPage = new Morebits.wiki.page("Qiuwen_talk:报告当前破坏", window.wgULS("处理VIP请求", "處理VIP請求"));
            aivPage.setFollowRedirect(true);
            aivPage.load(() => {
              const text = aivPage.getPageText();
              const $aivLink = '<a rel="noopener" target="_blank" href="/wiki/QW:VIP">QW:VIP</a>';
              if (new RegExp("===\\s*\\{\\{\\s*(?:[Vv]andal)\\s*\\|\\s*(?:1=)?\\s*".concat(Morebits.string.escapeRegExp(uid), "\\s*\\}\\}\\s*===")).test(text)) {
                aivPage.getStatusElement().error(window.wgULS("报告已存在，将不会加入新的", "報告已存在，將不會加入新的"));
                Morebits.status.printUserText(reason[1], window.wgULS("您输入的评论已在下方提供，您可以将其加入到", "您輸入的評論已在下方提供，您可以將其加入到") + $aivLink + window.wgULS("已存在的小节中：", "已存在的小節中："));
                return;
              }
              aivPage.setPageSection(0);
              aivPage.getStatusElement().status(window.wgULS("加入新报告…", "加入新報告…"));
              aivPage.setEditSummary(summary);
              aivPage.setChangeTags(Twinkle.changeTags);
              aivPage.setAppendText("\n".concat(reason[0]));
              aivPage.append();
            });
            break;
          }
        }
      };
      Twinkle.addInitCallback(Twinkle.arv, "arv");
    })(jQuery);
  }
});
//! src/Twinkle/modules/twinklewarn.js
var twinklewarn_exports = {};
var init_twinklewarn = __esm({
  "src/Twinkle/modules/twinklewarn.js"() {
    "use strict";
    /*! Twinkle.js - twinklewarn.js */
    (function twinklewarn($) {
      const $body = $("body");
      const relevantUserName = mw.config.get("wgRelevantUserName");
      Twinkle.warn = () => {
        if (relevantUserName) {
          Twinkle.addPortletLink(Twinkle.warn.callback, "警告", "tw-warn", window.wgULS("警告或提醒用户", "警告或提醒使用者"));
          if (Twinkle.getPref("autoMenuAfterRollback") && mw.config.get("wgNamespaceNumber") === 3 && mw.util.getParamValue("vanarticle") && !mw.util.getParamValue("noautowarn")) {
            Twinkle.warn.callback();
          }
        }
        if (mw.config.get("wgAction") === "rollback") {
          const $vandalTalkLink = $body.find("#mw-rollback-success").find(".mw-usertoollinks a").first();
          if ($vandalTalkLink.length) {
            Twinkle.warn.makeVandalTalkLink($vandalTalkLink, Morebits.pageNameNorm);
            $vandalTalkLink.css("font-weight", "bold");
          }
        }
        if (mw.config.get("wgCanonicalSpecialPageName") === "AbuseLog" && mw.config.get("wgAbuseFilterVariables") !== null) {
          const afTalkLink = $body.find(".mw-usertoollinks-talk").first();
          if (afTalkLink.length) {
            Twinkle.warn.makeVandalTalkLink(afTalkLink, mw.config.get("wgAbuseFilterVariables").page_prefixedtitle);
            afTalkLink.css("font-weight", "bold");
          }
        }
      };
      Twinkle.warn.makeVandalTalkLink = ($vandalTalkLink, pagename) => {
        $vandalTalkLink.wrapInner($("<span>").attr("title", window.wgULS("如果合适，您可以用Twinkle在该用户讨论页上做出警告。", "如果合適，您可以用Twinkle在該使用者討論頁上做出警告。")));
        const extraParam = "vanarticle=".concat(mw.util.rawurlencode(pagename));
        const href = $vandalTalkLink.attr("href");
        if (href.includes("?")) {
          $vandalTalkLink.attr("href", "".concat(href, "&").concat(extraParam));
        } else {
          $vandalTalkLink.attr("href", "".concat(href, "?").concat(extraParam));
        }
      };
      Twinkle.warn.dialog = null;
      Twinkle.warn.callback = () => {
        if (relevantUserName === mw.config.get("wgUserName") && !confirm(window.wgULS("您将要警告自己！您确定要继续吗？", "您將要警告自己！您確定要繼續嗎？"))) {
          return;
        }
        Twinkle.warn.dialog = new Morebits.simpleWindow(600, 440);
        const {
          dialog
        } = Twinkle.warn;
        dialog.setTitle(window.wgULS("警告、提醒用户", "警告、提醒使用者"));
        dialog.setScriptName("Twinkle");
        dialog.addFooterLink(window.wgULS("警告设置", "警告設定"), "H:TW/PREF#warn");
        dialog.addFooterLink(window.wgULS("Twinkle帮助", "Twinkle說明"), "H:TW/DOC#warn");
        const form = new Morebits.quickForm(Twinkle.warn.callback.evaluate);
        const main_select = form.append({
          type: "field",
          label: window.wgULS("选择要发送的警告或提醒类型", "選擇要傳送的警告或提醒類別"),
          tooltip: window.wgULS("首先选择一组，再选择具体的警告模板。", "首先選擇一組，再選擇具體的警告模板。")
        });
        const main_group = main_select.append({
          type: "select",
          name: "main_group",
          tooltip: window.wgULS("您可在Twinkle参数设置中设置默认选择的选项", "您可在Twinkle偏好設定中設定預設選擇的選項"),
          event: Twinkle.warn.callback.change_category
        });
        const defaultGroup = Number.parseInt(Twinkle.getPref("defaultWarningGroup"), 6);
        main_group.append({
          type: "option",
          label: window.wgULS("自动选择层级", "自動選擇層級"),
          value: "autolevel",
          selected: defaultGroup === 7
        });
        main_group.append({
          type: "option",
          label: "1：提醒",
          value: "level1",
          selected: defaultGroup === 1
        });
        main_group.append({
          type: "option",
          label: "2：警告",
          value: "level2",
          selected: defaultGroup === 2
        });
        if (Twinkle.getPref("combinedSingletMenus")) {
          main_group.append({
            type: "option",
            label: window.wgULS("单层级消息", "單層級訊息"),
            value: "singlecombined",
            selected: defaultGroup === 3 || defaultGroup === 4
          });
        } else {
          main_group.append({
            type: "option",
            label: window.wgULS("单层级提醒", "單層級提醒"),
            value: "singlenotice",
            selected: defaultGroup === 3
          });
          main_group.append({
            type: "option",
            label: window.wgULS("单层级警告", "單層級警告"),
            value: "singlewarn",
            selected: defaultGroup === 4
          });
        }
        if (Twinkle.getPref("customWarningList").length) {
          main_group.append({
            type: "option",
            label: window.wgULS("自定义警告", "自訂警告"),
            value: "custom",
            selected: defaultGroup === 5
          });
        }
        main_group.append({
          type: "option",
          label: "所有警告模板",
          value: "kitchensink",
          selected: defaultGroup === 6
        });
        main_select.append({
          type: "select",
          name: "sub_group",
          event: Twinkle.warn.callback.change_subcategory
        });
        form.append({
          type: "input",
          name: "article",
          label: window.wgULS("页面链接", "頁面連結"),
          value: mw.util.getParamValue("vanarticle") || "",
          size: 50,
          tooltip: window.wgULS("给模板中加入一页面链接，可留空。", "給模板中加入一頁面連結，可留空。"),
          placeholder: window.wgULS("仅限一个，勿使用网址、[[ ]]，可使用Special:Diff", "僅限一個，勿使用網址、[[ ]]，可使用Special:Diff")
        });
        form.append({
          type: "div",
          label: "",
          style: "color: #f00",
          id: "twinkle-warn-warning-messages"
        });
        const more = form.append({
          type: "field",
          name: "reasonGroup",
          label: window.wgULS("警告信息", "警告資訊")
        });
        more.append({
          type: "textarea",
          label: window.wgULS("可选信息：", "可選資訊："),
          name: "reason",
          tooltip: window.wgULS("理由或是附加信息", "理由或是附加資訊")
        });
        const previewlink = document.createElement("a");
        $(previewlink).on("click", () => {
          Twinkle.warn.callbacks.preview(result);
        });
        previewlink.style.cursor = "pointer";
        previewlink.textContent = window.wgULS("预览", "預覽");
        more.append({
          type: "div",
          id: "warningpreview",
          label: [previewlink]
        });
        more.append({
          type: "div",
          id: "twinklewarn-previewbox",
          style: "display: none"
        });
        more.append({
          type: "submit",
          label: "提交"
        });
        const result = form.render();
        dialog.setContent(result);
        dialog.display();
        result.main_group.root = result;
        result.previewer = new Morebits.wiki.preview($(result).find("div#twinklewarn-previewbox").last()[0]);
        let message = "";
        let query = {};
        const vanrevid = mw.util.getParamValue("vanarticlerevid");
        if (vanrevid) {
          if (!mw.util.getParamValue("noautowarn") && mw.util.getParamValue("vanarticle")) {
            query = {
              action: "query",
              titles: mw.util.getParamValue("vanarticle"),
              prop: "revisions",
              rvstartid: vanrevid,
              rvlimit: 2,
              rvdir: "newer",
              rvprop: "user"
            };
            new Morebits.wiki.api(window.wgULS("检查您是否成功回退该页面", "檢查您是否成功回退該頁面"), query, (apiobj) => {
              const revertUser = $(apiobj.getResponse()).find("revisions rev")[1].getAttribute("user");
              if (revertUser && revertUser !== mw.config.get("wgUserName")) {
                message += window.wgULS("其他人回退了该页面，并可能已经警告该用户。", "其他人回退了該頁面，並可能已經警告該使用者。");
                $body.find("#twinkle-warn-warning-messages").text("警告：".concat(message));
              }
            }).post();
          }
          const checkStale = (vantimestamp_) => {
            const revDate = new Morebits.date(vantimestamp_);
            if (vantimestamp_ && revDate.isValid() && revDate.add(24, "hours").isBefore(/* @__PURE__ */ new Date())) {
              message += window.wgULS("这笔编辑是在24小时前做出的，现在警告可能已过时。", "這筆編輯是在24小時前做出的，現在警告可能已過時。");
              $body.find("#twinkle-warn-warning-messages").text("警告：".concat(message));
            }
          };
          let vantimestamp = mw.util.getParamValue("vantimestamp");
          if (vantimestamp) {
            checkStale(vantimestamp);
          } else {
            query = {
              action: "query",
              prop: "revisions",
              rvprop: "timestamp",
              revids: vanrevid
            };
            new Morebits.wiki.api(window.wgULS("获取版本时间戳", "取得版本時間戳"), query, (apiobj) => {
              vantimestamp = $(apiobj.getResponse()).find("revisions rev").attr("timestamp");
              checkStale(vantimestamp);
            }).post();
          }
        }
        const init = () => {
          const evt = document.createEvent("Event");
          evt.initEvent("change", true, true);
          result.main_group.dispatchEvent(evt);
        };
        init();
      };
      Twinkle.warn.messages = {
        levels: [{
          category: window.wgULS("不同类型的非建设编辑", "不同類別的非建設編輯"),
          list: {
            "uw-copyright": {
              level1: {
                label: window.wgULS("侵犯著作权", "侵犯版權"),
                summary: window.wgULS("注意：侵犯著作权", "注意：侵犯版權")
              },
              level2: {
                label: window.wgULS("多次侵犯著作权", "多次侵犯版權"),
                summary: window.wgULS("警告：多次侵犯著作权", "警告：多次侵犯版權")
              }
            },
            "uw-crystal": {
              level1: {
                label: window.wgULS("加入臆测或未确认的消息", "加入臆測或未確認的訊息"),
                summary: window.wgULS("注意：加入臆测或未确认的消息", "注意：加入臆測或未確認的訊息")
              },
              level2: {
                label: window.wgULS("多次加入臆测或未确认的消息", "多次加入臆測或未確認的訊息"),
                summary: window.wgULS("警告：多次加入臆测或未确认的消息", "警告：多次加入臆測或未確認的訊息")
              }
            },
            "uw-delete": {
              level1: {
                label: window.wgULS("不恰当地移除页面内容、模板或资料", "不恰當地移除頁面內容、模板或資料"),
                summary: window.wgULS("注意：不恰当地移除页面内容、模板或资料", "注意：不恰當地移除頁面內容、模板或資料")
              },
              level2: {
                label: window.wgULS("不恰当地移除页面内容、模板或资料", "不恰當地移除頁面內容、模板或資料"),
                summary: window.wgULS("警告：不恰当地移除页面内容、模板或资料", "警告：不恰當地移除頁面內容、模板或資料")
              }
            },
            "uw-image": {
              level1: {
                label: window.wgULS("在页面中加入不当图片", "在頁面中加入不當圖片"),
                summary: window.wgULS("注意：在页面中加入不当图片", "注意：在頁面中加入不當圖片")
              },
              level2: {
                label: window.wgULS("在页面中加入不当图片", "在頁面中加入不當圖片"),
                summary: window.wgULS("警告：在页面中加入不当图片", "警告：在頁面中加入不當圖片")
              }
            },
            "uw-newpage": {
              level1: {
                label: window.wgULS("创建不当页面", "建立不當頁面"),
                summary: window.wgULS("注意：创建不当页面", "注意：建立不當頁面")
              },
              level2: {
                label: window.wgULS("创建不当页面", "建立不當頁面"),
                summary: window.wgULS("警告：创建不当页面", "警告：建立不當頁面")
              }
            },
            "uw-nor": {
              level1: {
                label: window.wgULS("在条目中加入原创研究", "在條目中加入原創研究"),
                summary: window.wgULS("注意：在条目中加入原创研究", "注意：在條目中加入原創研究")
              },
              level2: {
                label: window.wgULS("在条目中加入原创研究", "在條目中加入原創研究"),
                summary: window.wgULS("警告：在条目中加入原创研究", "警告：在條目中加入原創研究")
              }
            },
            "uw-opov": {
              level1: {
                label: window.wgULS("违反客观原则", "違反客觀原則"),
                summary: window.wgULS("注意：违反客观原则", "注意：違反客觀原則")
              },
              level2: {
                label: window.wgULS("违反客观原则", "違反客觀原則"),
                summary: window.wgULS("警告：违反客观原则", "警告：違反客觀原則")
              }
            },
            "uw-redirect": {
              level1: {
                label: window.wgULS("创建破坏性的重定向", "建立破壞性的重定向"),
                summary: window.wgULS("注意：创建破坏性的重定向", "注意：建立破壞性的重定向")
              },
              level2: {
                label: window.wgULS("创建恶意重定向", "建立惡意重定向"),
                summary: window.wgULS("警告：创建恶意重定向", "警告：建立惡意重定向")
              }
            },
            "uw-upload": {
              level1: {
                label: window.wgULS("上传不当图像", "上傳不當圖像"),
                summary: window.wgULS("注意：上传不当图像", "注意：上傳不當圖像")
              },
              level2: {
                label: window.wgULS("上传不当图像", "上傳不當圖像"),
                summary: window.wgULS("警告：上传不当图像", "警告：上傳不當圖像")
              }
            },
            "uw-vandalism": {
              level1: {
                label: window.wgULS("明显的破坏", "明顯的破壞"),
                summary: window.wgULS("注意：明显破坏", "注意：明顯破壞")
              },
              level2: {
                label: window.wgULS("明显的破坏", "明顯的破壞"),
                summary: window.wgULS("警告：明显破坏", "警告：明顯破壞")
              }
            },
            "uw-tdel": {
              level1: {
                label: window.wgULS("在问题仍未解决的情况下移除维护性模板", "在問題仍未解決的情況下移除維護性模板"),
                summary: window.wgULS("注意：移除维护性模板", "注意：移除維護性模板")
              },
              level2: {
                label: window.wgULS("在问题仍未解决的情况下移除维护性模板", "在問題仍未解決的情況下移除維護性模板"),
                summary: window.wgULS("警告：移除维护性模板", "警告：移除維護性模板")
              }
            }
          }
        }, {
          category: window.wgULS("增加广告", "增加廣告"),
          list: {
            "uw-spam": {
              level1: {
                label: window.wgULS("增加不合适的外部链接", "增加不合適的外部連結"),
                summary: window.wgULS("注意：增加不合适的外部链接", "注意：增加不合適的外部連結")
              },
              level2: {
                label: window.wgULS("增加垃圾链接", "增加垃圾連結"),
                summary: window.wgULS("警告：增加垃圾链接", "警告：增加垃圾連結")
              }
            },
            "uw-advert": {
              level1: {
                label: window.wgULS("利用求闻百科来发布广告或推广", "利用求聞百科來發布廣告或推廣"),
                summary: window.wgULS("注意：利用求闻百科来发布广告或推广", "注意：利用求聞百科來發布廣告或推廣")
              },
              level2: {
                label: window.wgULS("利用求闻百科来发布广告或推广", "利用求聞百科來發布廣告或推廣"),
                summary: window.wgULS("警告：利用求闻百科来发布广告或推广", "警告：利用求聞百科來發布廣告或推廣")
              }
            }
          }
        }, {
          category: window.wgULS("加插不实、诽谤文字", "加插不實、誹謗文字"),
          list: {
            "uw-biog": {
              level1: {
                label: window.wgULS("在人物传记中加入没有可靠来源佐证而且可能引发争议的内容", "在人物傳記中加入沒有可靠來源佐證而且可能引發爭議的內容"),
                summary: window.wgULS("注意：在人物传记中加入没有可靠来源佐证而且可能引发争议的内容", "注意：在人物傳記中加入沒有可靠來源佐證而且可能引發爭議的內容")
              },
              level2: {
                label: window.wgULS("在人物传记中加入没有可靠来源佐证而且可能引发争议的内容", "在人物傳記中加入沒有可靠來源佐證而且可能引發爭議的內容"),
                summary: window.wgULS("警告：在人物传记中加入没有可靠来源佐证而且可能引发争议的内容", "警告：在人物傳記中加入沒有可靠來源佐證而且可能引發爭議的內容")
              }
            },
            "uw-error": {
              level1: {
                label: window.wgULS("故意加入不实内容", "故意加入不實內容"),
                summary: window.wgULS("注意：故意加入不实内容", "注意：故意加入不實內容")
              },
              level2: {
                label: window.wgULS("故意加入不实内容", "故意加入不實內容"),
                summary: window.wgULS("警告：故意加入不实内容", "警告：故意加入不實內容")
              }
            },
            "uw-unsourced": {
              level1: {
                label: window.wgULS("加入没有可靠来源佐证的内容", "加入沒有可靠來源佐證的內容"),
                summary: window.wgULS("注意：加入没有可靠来源佐证的内容", "注意：加入沒有可靠來源佐證的內容")
              },
              level2: {
                label: window.wgULS("加入没有可靠来源佐证的内容", "加入沒有可靠來源佐證的內容"),
                summary: window.wgULS("警告：加入没有可靠来源佐证的内容", "警告：加入沒有可靠來源佐證的內容")
              }
            }
          }
        }, {
          category: window.wgULS("翻译品质", "翻譯品質"),
          list: {
            "uw-roughtranslation": {
              level1: {
                label: window.wgULS("您翻译的质量有待改善", "您翻譯的質量有待改善"),
                summary: window.wgULS("注意：您翻译的质量有待改善", "注意：您翻譯的質量有待改善")
              },
              level2: {
                label: window.wgULS("粗劣翻译", "粗劣翻譯"),
                summary: window.wgULS("警告：粗劣翻译", "警告：粗劣翻譯")
              }
            }
          }
        }, {
          category: window.wgULS("非能接受且违反方针的单方面行为或操作", "非能接受且違反方針的單方面行為或操作"),
          list: {
            "uw-afd": {
              level1: {
                label: window.wgULS("移除{{afd}}（页面存废讨论）模板", "移除{{afd}}（頁面存廢討論）模板"),
                summary: window.wgULS("注意：移除{{afd}}（页面存废讨论）模板", "注意：移除{{afd}}（頁面存廢討論）模板")
              },
              level2: {
                label: window.wgULS("移除{{afd}}（页面存废讨论）模板", "移除{{afd}}（頁面存廢討論）模板"),
                summary: window.wgULS("警告：移除{{afd}}（页面存废讨论）模板", "警告：移除{{afd}}（頁面存廢討論）模板")
              }
            },
            "uw-mos": {
              level1: {
                label: window.wgULS("不恰当的条目格式、日期、语言等", "不恰當的條目格式、日期、語言等"),
                summary: window.wgULS("注意：不恰当的条目格式、日期、语言等", "注意：不恰當的條目格式、日期、語言等")
              },
              level2: {
                label: window.wgULS("不恰当的条目格式、日期、语言等", "不恰當的條目格式、日期、語言等"),
                summary: window.wgULS("警告：不恰当的条目格式、日期、语言等", "警告：不恰當的條目格式、日期、語言等")
              }
            },
            "uw-move": {
              level1: {
                label: window.wgULS("无故移动条目/新名称不符合命名规范", "無故移動條目/新名稱不符合命名規範"),
                summary: window.wgULS("注意：不恰当地移动页面", "注意：不恰當地移動頁面")
              },
              level2: {
                label: window.wgULS("把页面移动到不恰当、违反命名常规或违反共识的标题", "把頁面移動到不恰當、違反命名常規或違反共識的標題"),
                summary: window.wgULS("警告：不恰当地移动页面", "警告：不恰當地移動頁面")
              }
            },
            "uw-speedy": {
              level1: {
                label: window.wgULS("移除{{delete}}（快速删除）模板", "移除{{delete}}（快速刪除）模板"),
                summary: window.wgULS("注意：移除{{delete}}（快速删除）模板", "注意：移除{{delete}}（快速刪除）模板")
              },
              level2: {
                label: window.wgULS("移除{{delete}}（快速删除）模板", "移除{{delete}}（快速刪除）模板"),
                summary: window.wgULS("警告：移除{{delete}}（快速删除）模板", "警告：移除{{delete}}（快速刪除）模板")
              }
            },
            "uw-talkpage": {
              level1: {
                label: window.wgULS("违反讨论页规范", "違反討論頁規範"),
                summary: window.wgULS("注意：违反讨论页规范", "注意：違反討論頁規範")
              },
              level2: {
                label: window.wgULS("违反讨论页规范", "違反討論頁規範"),
                summary: window.wgULS("警告：违反讨论页规范", "警告：違反討論頁規範")
              }
            },
            "uw-tpv": {
              level1: {
                label: "修改他人留言",
                summary: "注意：修改他人留言"
              },
              level2: {
                label: "修改他人留言",
                summary: "警告：修改他人留言"
              }
            }
          }
        }, {
          category: window.wgULS("对其他用户和条目的态度", "對其他用戶和條目的態度"),
          list: {
            "uw-illegal": {
              level1: {
                label: window.wgULS("加入不符合中国价值观的内容", "加入不符合中國價值觀的內容"),
                summary: window.wgULS("注意：加入不符合中国价值观的内容", "注意：加入不符合中國價值觀的內容")
              },
              level2: {
                label: window.wgULS("加入不符合中国价值观的内容", "加入不符合中國價值觀的內容"),
                summary: window.wgULS("警告：加入不符合中国价值观的内容", "警告：加入不符合中國價值觀的內容")
              }
            },
            "uw-own": {
              level1: {
                label: window.wgULS("主张条目所有权", "主張條目所有權"),
                summary: window.wgULS("注意：主张条目所有权", "注意：主張條目所有權")
              },
              level2: {
                label: window.wgULS("主张条目的所有权", "主張條目的所有權"),
                summary: window.wgULS("警告：主张条目的所有权", "警告：主張條目的所有權")
              }
            },
            "uw-socialmedia": {
              level1: {
                label: window.wgULS("将求闻百科当作社交媒体使用", "將求聞百科當作社交媒體使用"),
                summary: window.wgULS("注意：将求闻百科当作社交媒体使用", "注意：將求聞百科當作社交媒體使用")
              },
              level2: {
                label: window.wgULS("将求闻百科当作社交媒体使用", "將求聞百科當作社交媒體使用"),
                summary: window.wgULS("警告：将求闻百科当作社交媒体使用", "警告：將求聞百科當作社交媒體使用")
              }
            }
          }
        }],
        singlenotice: {
          "uw-2redirect": {
            label: window.wgULS("在移动页面后应该修复双重重定向", "在移動頁面後應該修復雙重重定向"),
            summary: window.wgULS("注意：在移动页面后应该修复双重重定向", "注意：在移動頁面後應該修復雙重重定向")
          },
          "uw-aiv": {
            label: window.wgULS("举报事项并不是破坏行为", "舉報事項並不是破壞行为"),
            summary: window.wgULS("注意：不恰当地举报破坏", "注意：不恰當地舉報破壞")
          },
          "uw-articlesig": {
            label: window.wgULS("在条目中签名", "在條目中簽名"),
            summary: window.wgULS("注意：在条目中签名", "注意：在條目中簽名")
          },
          "uw-autobiography": {
            label: window.wgULS("创建自传", "建立自傳"),
            summary: window.wgULS("注意：创建自传", "注意：建立自傳")
          },
          "uw-badcat": {
            label: window.wgULS("加入错误的页面分类", "加入錯誤的頁面分類"),
            summary: window.wgULS("注意：加入错误的页面分类", "注意：加入錯誤的頁面分類")
          },
          "uw-bite": {
            label: window.wgULS("伤害新手", "傷害新手"),
            summary: window.wgULS("注意：伤害新手", "注意：傷害新手")
          },
          "uw-chinese": {
            label: window.wgULS("请使用标准汉语沟通", "請使用標準漢語溝通"),
            summary: window.wgULS("注意：请使用标准汉语沟通", "注意：請使用標準漢語溝通")
          },
          "uw-cpmove": {
            label: window.wgULS("剪贴移动", "剪貼移動"),
            summary: window.wgULS("注意：剪贴移动", "注意：剪貼移動")
          },
          "uw-dab": {
            label: window.wgULS("消歧义页格式错误", "消歧義頁格式錯誤"),
            summary: window.wgULS("注意：消歧义页格式错误", "注意：消歧義頁格式錯誤")
          },
          "uw-newpage-draft": {
            label: window.wgULS("最近创建的页面被移动到草稿", "最近建立的頁面被移動到草稿"),
            summary: window.wgULS("注意：最近创建的页面被移动到草稿", "注意：最近建立的頁面被移動到草稿")
          },
          "uw-selfrevert": {
            label: window.wgULS("感谢您自行回退自己的测试，以后不要再这样做了", "感謝您自行回退自己的測試，以後不要再這樣做了"),
            summary: window.wgULS("注意：回退个人的测试", "注意：回退個人的測試")
          },
          "uw-substub": {
            label: window.wgULS("创建小小作品", "建立小小作品"),
            summary: window.wgULS("警告：创建小小作品", "警告：建立小小作品")
          },
          "uw-talkinarticle": {
            label: window.wgULS("在条目页中留下意见", "在條目頁中留下意見"),
            summary: window.wgULS("注意：在条目页中留下意见", "注意：在條目頁中留下意見")
          },
          "uw-unsigned": {
            label: window.wgULS("没有在讨论页上签名", "沒有在討論頁上簽名"),
            summary: window.wgULS("注意：没有在讨论页上签名", "注意：沒有在討論頁上簽名")
          },
          "uw-wrongcsd": {
            label: window.wgULS("快速删除理由不当", "快速刪除理由不當"),
            summary: window.wgULS("注意：快速删除理由不当", "注意：快速刪除理由不當")
          },
          "uw-wrongsummary": {
            label: window.wgULS("在编辑摘要制造不适当的内容", "在編輯摘要製造不適當的內容"),
            summary: window.wgULS("警告：在编辑摘要制造不适当的内容", "警告：在編輯摘要製造不適當的內容")
          }
        },
        singlewarn: {
          "uw-3rr": {
            label: window.wgULS("用户潜在违反回退不过三原则的可能性", "用戶潛在違反回退不過三原則的可能性"),
            summary: window.wgULS("警告：用户潜在违反回退不过三原则的可能性", "警告：用戶潛在違反回退不過三原則的可能性")
          },
          "uw-attack": {
            label: window.wgULS("人身攻击", "人身攻擊"),
            summary: window.wgULS("警告：人身攻击", "警告：人身攻擊"),
            suppressArticleInSummary: true
          },
          "uw-coi": {
            label: window.wgULS("利益冲突", "利益衝突"),
            summary: window.wgULS("注意：利益冲突", "注意：利益衝突")
          },
          "uw-fakesource": {
            label: window.wgULS("虚构数据源或引文", "虛構資料來源或引文"),
            summary: window.wgULS("警告：虚构数据源或引文", "警告：虛構資料來源或引文")
          },
          "uw-pinfo": {
            label: window.wgULS("张贴他人隐私", "張貼他人隱私"),
            summary: window.wgULS("警告：张贴他人隐私", "警告：張貼他人隱私")
          }
        }
      };
      Twinkle.warn.prev_article = null;
      Twinkle.warn.prev_reason = null;
      Twinkle.warn.talkpageObj = null;
      Twinkle.warn.callback.change_category = function change_category(e) {
        const {
          value
        } = e.target;
        const {
          sub_group
        } = e.target.root;
        sub_group.main_group = value;
        let old_subvalue = sub_group.value;
        let old_subvalue_re;
        if (old_subvalue) {
          if (value === "kitchensink") {
            old_subvalue_re = new RegExp(mw.util.escapeRegExp(old_subvalue));
          } else {
            old_subvalue = old_subvalue.replace(/\d*(im)?$/, "");
            old_subvalue_re = new RegExp("".concat(mw.util.escapeRegExp(old_subvalue), "(\\d*?)$"));
          }
        }
        while (sub_group.hasChildNodes()) {
          sub_group.removeChild(sub_group.firstChild);
        }
        let selected = false;
        const createEntries = (contents, container, wrapInOptgroup, val = value) => {
          const level = val.replace(/^\D+/g, "");
          if (wrapInOptgroup && $.client.profile().platform === "iphone") {
            let wrapperOptgroup = new Morebits.quickForm.element({
              type: "optgroup",
              label: "可用模板"
            });
            wrapperOptgroup = wrapperOptgroup.render();
            container.appendChild(wrapperOptgroup);
            container = wrapperOptgroup;
          }
          for (var _i2 = 0, _Object$entries = Object.entries(contents); _i2 < _Object$entries.length; _i2++) {
            const [itemKey, itemProperties] = _Object$entries[_i2];
            if (!!level && !itemProperties[val]) {
              return;
            }
            const key = typeof itemKey === "string" ? itemKey : itemProperties.value;
            const template = key + level;
            const elem = new Morebits.quickForm.element({
              type: "option",
              label: "{{".concat(template, "}}: ").concat(level ? itemProperties[val].label : itemProperties.label),
              value: template
            });
            if (!selected && old_subvalue && old_subvalue_re.test(template)) {
              elem.data.selected = true;
              selected = true;
            }
            const elemRendered = container.appendChild(elem.render());
            $(elemRendered).data("messageData", itemProperties);
          }
        };
        switch (value) {
          case "singlenotice":
          case "singlewarn":
            createEntries(Twinkle.warn.messages[value], sub_group, true);
            break;
          case "singlecombined": {
            const unSortedSinglets = {
              ...Twinkle.warn.messages.singlenotice,
              ...Twinkle.warn.messages.singlewarn
            };
            const sortedSingletMessages = {};
            var _iterator3 = _createForOfIteratorHelper(Object.keys(unSortedSinglets).sort()), _step3;
            try {
              for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
                const key = _step3.value;
                sortedSingletMessages[key] = unSortedSinglets[key];
              }
            } catch (err) {
              _iterator3.e(err);
            } finally {
              _iterator3.f();
            }
            createEntries(sortedSingletMessages, sub_group, true);
            break;
          }
          case "custom":
            createEntries(Twinkle.getPref("customWarningList"), sub_group, true);
            break;
          case "kitchensink":
            for (var _i3 = 0, _arr = ["level1", "level2"]; _i3 < _arr.length; _i3++) {
              const lvl = _arr[_i3];
              var _iterator4 = _createForOfIteratorHelper(Twinkle.warn.messages.levels), _step4;
              try {
                for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
                  const levelGroup = _step4.value;
                  createEntries(levelGroup.list, sub_group, true, lvl);
                }
              } catch (err) {
                _iterator4.e(err);
              } finally {
                _iterator4.f();
              }
            }
            createEntries(Twinkle.warn.messages.singlenotice, sub_group, true);
            createEntries(Twinkle.warn.messages.singlewarn, sub_group, true);
            createEntries(Twinkle.getPref("customWarningList"), sub_group, true);
            break;
          case "level1":
          case "level2":
            var _iterator5 = _createForOfIteratorHelper(Twinkle.warn.messages.levels), _step5;
            try {
              for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
                const levelGroup = _step5.value;
                let optgroup = new Morebits.quickForm.element({
                  type: "optgroup",
                  label: levelGroup.category
                });
                optgroup = optgroup.render();
                sub_group.appendChild(optgroup);
                createEntries(levelGroup.list, optgroup, false);
              }
            } catch (err) {
              _iterator5.e(err);
            } finally {
              _iterator5.f();
            }
            break;
          case "autolevel": {
            const autolevelProc = () => {
              const wikitext = Twinkle.warn.talkpageObj.getPageText();
              const [latest] = Twinkle.warn.callbacks.dateProcessing(wikitext);
              const params = {
                sub_group: old_subvalue,
                article: e.target.root.article.value
              };
              const lvl = "level".concat(Twinkle.warn.callbacks.autolevelParseWikitext(wikitext, params, latest)[1]);
              var _iterator6 = _createForOfIteratorHelper(Twinkle.warn.messages.levels), _step6;
              try {
                for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
                  const levelGroup = _step6.value;
                  let optgroup = new Morebits.quickForm.element({
                    type: "optgroup",
                    label: levelGroup.category
                  });
                  optgroup = optgroup.render();
                  sub_group.appendChild(optgroup);
                  createEntries(levelGroup.list, optgroup, false, lvl);
                }
              } catch (err) {
                _iterator6.e(err);
              } finally {
                _iterator6.f();
              }
              Twinkle.warn.callback.postCategoryCleanup(e);
            };
            if (Twinkle.warn.talkpageObj) {
              autolevelProc();
            } else {
              const usertalk_page = new Morebits.wiki.page("User_talk:".concat(relevantUserName), window.wgULS("加载上次警告", "載入上次警告"));
              usertalk_page.setFollowRedirect(true, false);
              usertalk_page.load((pageobj) => {
                Twinkle.warn.talkpageObj = pageobj;
                autolevelProc();
              }, () => {
                const $noTalkPageNode = $("<strong>").attr("id", "twinkle-warn-autolevel-message").css("color", "#f00").text(window.wgULS("无法加载用户讨论页，这可能是因为它是跨命名空间重定向，自动选择警告级别将不会运作。", "無法載入使用者討論頁，這可能是因為它是跨命名空間重新導向，自動選擇警告級別將不會運作。"));
                $noTalkPageNode.insertBefore($body.find("#twinkle-warn-warning-messages"));
                e.target.root.previewer.closePreview();
              });
            }
            break;
          }
          default:
            void mw.notify(window.wgULS("twinklewarn：未知的警告组", "twinklewarn：未知的警告組"), {
              type: "warn",
              tag: "twinklewarn"
            });
            break;
        }
        if (value !== "autolevel") {
          $body.find("#twinkle-warn-autolevel-message").remove();
          Twinkle.warn.callback.postCategoryCleanup(e);
        }
      };
      Twinkle.warn.callback.postCategoryCleanup = (e) => {
        Morebits.quickForm.setElementTooltipVisibility(e.target.root.article, true);
        Morebits.quickForm.resetElementLabel(e.target.root.article);
        Twinkle.warn.callback.change_subcategory(e);
        if (!Twinkle.getPref("oldSelect")) {
          $body.find("select[name=sub_group]").select2({
            width: "100%",
            matcher: Morebits.select2.matchers.optgroupFull,
            templateResult: Morebits.select2.highlightSearchMatches,
            language: {
              searching: Morebits.select2.queryInterceptor
            }
          }).change(Twinkle.warn.callback.change_subcategory);
          $body.find(".select2-selection").on("keydown", Morebits.select2.autoStart).trigger("focus");
          mw.util.addCSS(
            /* Increase height;
             * Reduce padding;
             * Adjust font size.
             * */
            ".select2-container .select2-dropdown .select2-results>.select2-results__options{max-height:350px}.select2-results .select2-results__group,.select2-results .select2-results__option{padding-top:1px;padding-bottom:1px}.select2-container .select2-dropdown .select2-results,.select2-container .selection .select2-selection__rendered{font-size:13px}"
          );
        }
      };
      Twinkle.warn.callback.change_subcategory = (e) => {
        const main_group = e.target.form.main_group.value;
        const {
          value
        } = e.target.form.sub_group;
        const notLinkedArticle = {
          "uw-bite": window.wgULS("被“咬到”的用户（不含User:） ", "被「咬到」的使用者（不含User:） "),
          "uw-aiv": window.wgULS("可选输入被警告的用户名（不含User:） ", "可選輸入被警告的使用者名稱（不含User:） ")
        };
        if (["singlenotice", "singlewarn", "singlecombined", "kitchensink"].includes(main_group)) {
          if (notLinkedArticle[value]) {
            if (Twinkle.warn.prev_article === null) {
              Twinkle.warn.prev_article = e.target.form.article.value;
            }
            e.target.form.article.notArticle = true;
            e.target.form.article.value = "";
            Morebits.quickForm.setElementTooltipVisibility(e.target.form.article, false);
            Morebits.quickForm.overrideElementLabel(e.target.form.article, notLinkedArticle[value]);
          } else if (e.target.form.article.notArticle) {
            if (Twinkle.warn.prev_article !== null) {
              e.target.form.article.value = Twinkle.warn.prev_article;
              Twinkle.warn.prev_article = null;
            }
            e.target.form.article.notArticle = false;
            Morebits.quickForm.setElementTooltipVisibility(e.target.form.article, true);
            Morebits.quickForm.resetElementLabel(e.target.form.article);
          }
        }
        $body.find("#tw-warn-red-notice").remove();
      };
      Twinkle.warn.callbacks = {
        getWarningWikitext: (templateName, article, reason, isCustom, noSign) => {
          let text = "{{".concat("subst:", templateName);
          if (article) {
            text += "|1=".concat(article);
          }
          if (reason) {
            text += "|2=".concat(reason);
          }
          text += "|subst=".concat("subst:");
          if (!noSign) {
            text += "|sig=~~".concat("~~");
          }
          text += "}}";
          return text;
        },
        showPreview: (form, templatename) => {
          const input = Morebits.quickForm.getInputData(form);
          templatename || (templatename = input.sub_group);
          const linkedarticle = input.article;
          const templatetext = Twinkle.warn.callbacks.getWarningWikitext(templatename, linkedarticle, input.reason, input.main_group === "custom");
          form.previewer.beginRender(templatetext, "User_talk:".concat(relevantUserName));
        },
        // Just a pass-through unless the autolevel option was selected
        preview: (form) => {
          if (form.main_group.value === "autolevel") {
            const usertalk_page = new Morebits.wiki.page("User_talk:".concat(relevantUserName), window.wgULS("加载上次警告", "載入上次警告"));
            usertalk_page.setFollowRedirect(true, false);
            usertalk_page.load((pageobj) => {
              Twinkle.warn.talkpageObj = pageobj;
              const wikitext = pageobj.getPageText();
              const [latest] = Twinkle.warn.callbacks.dateProcessing(wikitext);
              const params = {
                sub_group: form.sub_group.value,
                article: form.article.value,
                messageData: $(form.sub_group).find('option[value="'.concat($(form.sub_group).val(), '"]')).data("messageData")
              };
              const [template] = Twinkle.warn.callbacks.autolevelParseWikitext(wikitext, params, latest);
              Twinkle.warn.callbacks.showPreview(form, template);
              if (form.sub_group.value !== template) {
                const evt = document.createEvent("Event");
                evt.initEvent("change", true, true);
                form.main_group.dispatchEvent(evt);
              }
            });
          } else {
            Twinkle.warn.callbacks.showPreview(form);
          }
        },
        /**
         * Used in the main and autolevel loops to determine when to warn
         * about excessively recent, stale, or identical warnings.
         *
         * @param {string} wikitext  The text of a user's talk page, from getPageText()
         * @returns {Object[]} - Array of objects: latest contains most recent
         * warning and date; history lists all prior warnings
         */
        dateProcessing: (wikitext) => {
          const history_re = /<!--\s?Template:([uU]w-.*?)\s?-->.*?(\d{4})年(\d{1,2})月(\d{1,2})日 \([日一二三四五六]\) (\d{1,2}):(\d{1,2}) \(CST\)/g;
          const history = {};
          const latest = {
            date: new Morebits.date(0),
            type: ""
          };
          let current;
          while ((current = history_re.exec(wikitext)) !== null) {
            const [, template] = current;
            const current_date = new Morebits.date("".concat(current[2], "-").concat(current[3], "-").concat(current[4], " ").concat(current[5], ":").concat(current[6], " (CST)"));
            if (!(template in history) || history[template].isBefore(current_date)) {
              history[template] = current_date;
            }
            if (!latest.date.isAfter(current_date)) {
              latest.date = current_date;
              latest.type = template;
            }
          }
          return [latest, history];
        },
        /**
         * Main loop for deciding what the level should increment to. Most of
         * this is really just error catching and updating the subsequent data.
         * May produce up to two notices in a twinkle-warn-autolevel-messages div
         *
         * @param {string} wikitext  The text of a user's talk page, from getPageText() (required)
         * @param {Object} params  Params object: sub_group is the template (required);
         * article is the user-provided article (form.article) used to link ARV on recent level2 warnings;
         * messageData is only necessary if getting the full template, as it's
         * used to ensure a valid template of that level exists
         * @param {Object} latest  First element of the array returned from
         * dateProcessing. Provided here rather than processed within to avoid
         * repeated call to dateProcessing
         * @param {(Date|Morebits.date)} date  Date from which staleness is determined
         * @param {Morebits.status} statelem  Status element, only used for handling error in final execution
         *
         * @returns {Array} - Array that contains the full template and just the warning level
         */
        autolevelParseWikitext: (wikitext, params, latest, date, statelem) => {
          let level;
          if (/\d?$/.test(latest.type)) {
            level = Number.parseInt(latest.type.replace(/.*(\d)?$/, "$1"), 10);
          } else if (latest.type) {
            level = 1;
          }
          const $autolevelMessage = $("<div>").attr("id", "twinkle-warn-autolevel-message");
          if (Number.isNaN(level)) {
            level = 1;
          } else if (level > 2 || level < 1) {
            const message = window.wgULS("无法解析上次的警告层级，请手动选择一个警告层级。", "無法解析上次的警告層級，請手動選擇一個警告層級。");
            if (statelem) {
              statelem.error(message);
            } else {
              void mw.notify(message, {
                type: "warn",
                tag: "twinklewarn"
              });
            }
            return;
          } else {
            date || (date = /* @__PURE__ */ new Date());
            const autoTimeout = new Morebits.date(latest.date.getTime()).add(Number.parseInt(Twinkle.getPref("autolevelStaleDays"), 10), "day");
            if (autoTimeout.isAfter(date)) {
              if (level === 2) {
                level = 2;
                if (!statelem) {
                  const $link = $("<a>").attr("href", "#").text(window.wgULS("单击此处打开告状工具", "點擊此處打開告狀工具")).css("font-weight", "bold").on("click", () => {
                    Morebits.wiki.actionCompleted.redirect = null;
                    Twinkle.warn.dialog.close();
                    Twinkle.arv.callback(relevantUserName);
                    $body.find("input[name=page]").val(params.article);
                    $body.find("input[value=final]").prop("checked", true);
                  });
                  const statusNode = $("<div>").css("color", "#f00").text(relevantUserName + window.wgULS("最后收到了一个层级2警告（", "最後收到了一個層級2警告（") + latest.type + window.wgULS("），所以将其报告给管理人员会比较好；", "），所以將其報告給管理人員會比較好；"));
                  statusNode.append($link[0]);
                  $autolevelMessage.append(statusNode);
                }
              } else {
                level += 1;
              }
            } else {
              level = 1;
            }
          }
          $autolevelMessage.prepend($("<div>".concat(window.wgULS("将发送", "將發送"), '<span style="font-weight: bold;">').concat(window.wgULS("层级", "層級")).concat(level, "</span>警告模板。</div>")));
          $body.find("#twinkle-warn-autolevel-message").remove();
          $autolevelMessage.insertAfter($body.find("#twinkle-warn-warning-messages"));
          let template = params.sub_group.replace(/(.*)\d$/, "$1");
          if (params.messageData && !params.messageData["level".concat(level)]) {
            template = "uw-generic";
          }
          template += level;
          return [template, level];
        },
        main: (pageobj) => {
          const text = pageobj.getPageText();
          const statelem = pageobj.getStatusElement();
          const params = pageobj.getCallbackParameters();
          let {
            messageData
          } = params;
          const warningHistory = Twinkle.warn.callbacks.dateProcessing(text);
          const [latest, history] = warningHistory;
          const now = new Morebits.date(pageobj.getLoadTime());
          Twinkle.warn.talkpageObj = pageobj;
          if (params.main_group === "autolevel") {
            const templateAndLevel = Twinkle.warn.callbacks.autolevelParseWikitext(text, params, latest, now, statelem);
            if (params.sub_group !== templateAndLevel[0] && !confirm(window.wgULS("将发送给用户{{", "將發送給使用者{{") + templateAndLevel[0] + window.wgULS("}}模板，好吗？", "}}模板，好嗎？"))) {
              statelem.error(window.wgULS("用户取消", "使用者取消"));
              return;
            }
            [params.sub_group] = templateAndLevel;
            messageData = params.messageData["level".concat(templateAndLevel[1])];
          } else if (params.sub_group in history && new Morebits.date(history[params.sub_group]).add(1, "day").isAfter(now) && !confirm(window.wgULS("近24小时内一个同样的 ", "近24小時內一個同樣的 ") + params.sub_group + window.wgULS(" 模板已被发出。\n是否继续？", " 模板已被發出。\n是否繼續？"))) {
            statelem.error(window.wgULS("用户取消", "使用者取消"));
            return;
          }
          latest.date.add(1, "minute");
          if (latest.date.isAfter(now) && !confirm(window.wgULS("近1分钟内 ", "近1分鐘內 ") + latest.type + window.wgULS(" 模板已被发出。\n是否继续？", " 模板已被發出。\n是否繼續？"))) {
            statelem.error(window.wgULS("用户取消", "使用者取消"));
            return;
          }
          const customProcess = (template) => {
            [template] = template.split("|");
            let prefix;
            switch (template.slice(-1)) {
              case "1":
                prefix = "注意";
                break;
              case "2":
                prefix = "警告";
                break;
              // falls through
              default:
                prefix = "提醒";
                break;
            }
            return "".concat(prefix, "：").concat(Morebits.string.toUpperCaseFirstChar(messageData.label));
          };
          let summary;
          if (params.main_group === "custom") {
            summary = customProcess(params.sub_group);
          } else {
            if (params.main_group === "kitchensink" && !/^D+$/.test(params.sub_group)) {
              let sub = params.sub_group.slice(-1);
              if (sub === "m") {
                sub = params.sub_group.slice(-3);
              }
              if (/\d/.test(sub)) {
                params.main_group = "level".concat(sub);
              }
            }
            summary = messageData.summary || messageData[params.main_group] && messageData[params.main_group].summary;
            summary || (summary = customProcess(params.sub_group));
            if (messageData.suppressArticleInSummary !== true && params.article) {
              if (params.sub_group === "uw-aiv") {
                summary += "（".concat(window.wgULS("对于", "對於"), "[[User:").concat(params.article, "]]）");
              } else if (params.sub_group === "uw-bite") {
                summary += "，".concat(window.wgULS("于", "於"), "[[User talk:").concat(params.article, "]]");
              } else {
                summary += "".concat(window.wgULS("，于[[", "，於[[") + params.article, "]]");
              }
            }
          }
          pageobj.setEditSummary(summary);
          pageobj.setChangeTags(Twinkle.changeTags);
          pageobj.setWatchlist(Twinkle.getPref("watchWarnings"));
          const warningText = Twinkle.warn.callbacks.getWarningWikitext(params.sub_group, params.article, params.reason, params.main_group === "custom");
          let sectionExists = false;
          let sectionNumber = 0;
          if (!messageData.heading && text.length) {
            const sections = text.match(/^(==*).+\1/gm);
            if (sections && sections.length !== 0) {
              const dateHeaderRegex = now.monthHeaderRegex();
              sectionNumber = 0;
              sectionExists = sections.reverse().some((sec, idx) => {
                return /^(==)[^=].+\1/m.test(sec) && dateHeaderRegex.test(sec) && typeof (sectionNumber = sections.length - 1 - idx) === "number";
              });
            }
          }
          if (sectionExists) {
            pageobj.setPageSection(sectionNumber + 1);
            pageobj.setAppendText("\n\n".concat(warningText));
            pageobj.append();
          } else {
            if (messageData.heading) {
              pageobj.setNewSectionTitle(messageData.heading);
            } else {
              Morebits.status.info(window.wgULS("信息", "資訊"), window.wgULS("未找到当月的二级标题，将创建新的", "未找到當月的二級標題，將建立新的"));
              pageobj.setNewSectionTitle(now.monthHeader(0));
            }
            pageobj.setNewSectionText(warningText);
            pageobj.newSection();
          }
        }
      };
      Twinkle.warn.callback.evaluate = (e) => {
        const userTalkPage = "User_talk:".concat(relevantUserName);
        const params = Morebits.quickForm.getInputData(e.target);
        if (params.article) {
          if (/https?:\/\//.test(params.article)) {
            void mw.notify(window.wgULS("“页面链接”不能使用网址。", "「頁面連結」不能使用網址。"), {
              type: "warn",
              tag: "warn"
            });
            return;
          }
          try {
            const article = new mw.Title(params.article);
            params.article = article.getPrefixedText();
            if (article.getFragment()) {
              params.article += "#".concat(article.getFragment());
            }
          } catch {
            alert(window.wgULS("“页面链接”不合法，仅能输入一个页面名称，勿使用网址、[[ ]]，可使用Special:Diff。", "「頁面連結」不合法，僅能輸入一個頁面名稱，勿使用網址、[[ ]]，可使用Special:Diff。"));
            return;
          }
        }
        const $selectedEl = $(e.target.sub_group).find('option[value="'.concat($(e.target.sub_group).val(), '"]'));
        params.messageData = $selectedEl.data("messageData");
        if (params.messageData === void 0) {
          void mw.notify(window.wgULS("请选择警告模板。", "請選擇警告模板。"), {
            type: "warn",
            tag: "warn"
          });
          return;
        }
        Morebits.simpleWindow.setButtonsEnabled(false);
        Morebits.status.init(e.target);
        Morebits.wiki.actionCompleted.redirect = userTalkPage;
        Morebits.wiki.actionCompleted.notice = window.wgULS("警告完成，将在几秒后刷新", "警告完成，將在幾秒後重新整理");
        const qiuwen_page = new Morebits.wiki.page(userTalkPage, window.wgULS("用户讨论页修改", "使用者討論頁修改"));
        qiuwen_page.setCallbackParameters(params);
        qiuwen_page.setFollowRedirect(true, false);
        qiuwen_page.load(Twinkle.warn.callbacks.main);
      };
      Twinkle.addInitCallback(Twinkle.warn, "warn");
    })(jQuery);
  }
});
//! src/Twinkle/modules/twinkleblock.js
var twinkleblock_exports = {};
var import_ext_gadget2;
var init_twinkleblock = __esm({
  "src/Twinkle/modules/twinkleblock.js"() {
    "use strict";
    init_api();
    import_ext_gadget2 = require("ext.gadget.Util");
    /*! Twinkle.js - twinkleblock.js */
    (function twinkleblock($) {
      const $body = $("body");
      let relevantUserName;
      let blockedUserName;
      const menuFormattedNamespaces = {
        ...mw.config.get("wgFormattedNamespaces")
      };
      menuFormattedNamespaces[0] = window.wgULS("（条目）", "（條目）");
      const blockActionText = {
        block: window.wgULS("封禁", "封鎖"),
        reblock: window.wgULS("重新封禁", "重新封鎖"),
        unblock: window.wgULS("解除封禁", "解除封鎖")
      };
      Twinkle.block = () => {
        relevantUserName = mw.config.get("wgRelevantUserName");
        if ((Morebits.userIsSysop || !mw.util.isIPAddress(relevantUserName, true)) && relevantUserName && (!Morebits.ip.isRange(relevantUserName) || Morebits.ip.validCIDR(relevantUserName))) {
          Twinkle.addPortletLink(Twinkle.block.callback, window.wgULS("封禁", "封鎖"), "tw-block", window.wgULS("封禁相关用户", "封鎖相關使用者"));
        }
      };
      Twinkle.block.callback = () => {
        if (relevantUserName === mw.config.get("wgUserName") && !confirm(window.wgULS("您即将对自己执行封禁相关操作！确认要继续吗？", "您即將對自己執行封鎖相關操作！確認要繼續嗎？"))) {
          return;
        }
        Twinkle.block.currentBlockInfo = void 0;
        Twinkle.block.field_block_options = {};
        Twinkle.block.field_template_options = {};
        const Window = new Morebits.simpleWindow(650, 530);
        Window.setTitle(window.wgULS("封禁或向", "封鎖或向") + relevantUserName + window.wgULS("发出封禁模板", "發出封鎖模板"));
        Window.setScriptName("Twinkle");
        Window.addFooterLink(window.wgULS("封禁方针", "封鎖方針"), "QW:BLOCK");
        Window.addFooterLink(window.wgULS("封禁设置", "封鎖設定"), "H:TW/PREF#block");
        Window.addFooterLink(window.wgULS("Twinkle帮助", "Twinkle說明"), "H:TW/DOC#block");
        const form = new Morebits.quickForm(Twinkle.block.callback.evaluate);
        const actionfield = form.append({
          type: "field",
          label: window.wgULS("操作类型", "操作類別")
        });
        actionfield.append({
          type: "checkbox",
          name: "actiontype",
          event: Twinkle.block.callback.change_action,
          list: [{
            label: window.wgULS("封禁用户", "封鎖使用者"),
            value: "block",
            tooltip: window.wgULS("用选择的选项全站封禁相关用户，若未勾选部分封禁则为全站封禁。", "用選擇的選項全站封鎖相關使用者，若未勾選部分封鎖則為全站封鎖。"),
            hidden: !Morebits.userIsSysop,
            checked: Morebits.userIsSysop
          }, {
            label: window.wgULS("部分封禁", "部分封鎖"),
            value: "partial",
            tooltip: window.wgULS("启用部分封禁及部分封禁模板。", "啟用部分封鎖及部分封鎖模板。"),
            hidden: !Morebits.userIsSysop,
            checked: Twinkle.getPref("defaultToPartialBlocks")
            // Overridden if already blocked
          }, {
            label: window.wgULS("加入封禁模板到用户讨论页", "加入封鎖模板到使用者討論頁"),
            value: "template",
            tooltip: window.wgULS("若执行封禁的管理员忘记发出封禁模板，或你封禁了用户而没有给其发出模板，则你可以用此来发出合适的模板。勾选部分封禁以使用部分封禁模板。", "若執行封鎖的管理員忘記發出封鎖模板，或你封鎖了使用者而沒有給其發出模板，則你可以用此來發出合適的模板。勾選部分封鎖以使用部分封鎖模板。"),
            // Disallow when viewing the block dialog on an IP range
            hidden: !Morebits.userIsSysop,
            checked: Morebits.userIsSysop && !Morebits.ip.isRange(relevantUserName),
            disabled: Morebits.ip.isRange(relevantUserName)
          }, {
            label: window.wgULS("标记用户页", "標記使用者頁面"),
            value: "tag",
            tooltip: window.wgULS("将用户页替换成相关的标记模板，仅限永久封禁使用。", "將使用者頁面替換成相關的標記模板，僅限永久封鎖使用。"),
            hidden: true,
            checked: !Morebits.userIsSysop
          }, {
            label: window.wgULS("保护用户页", "保護使用者頁面"),
            value: "protect",
            tooltip: window.wgULS("全保护用户页，仅限永久封禁使用。", "全保護使用者頁面，僅限永久封鎖使用。"),
            hidden: true
          }, {
            label: window.wgULS("解除封禁用户", "解除封鎖使用者"),
            value: "unblock",
            tooltip: window.wgULS("解除封禁相关用户。", "解除封鎖相關使用者。"),
            hidden: !Morebits.userIsSysop
          }]
        });
        const sixtyFour = Morebits.ip.get64(mw.config.get("wgRelevantUserName"));
        if (sixtyFour && sixtyFour !== mw.config.get("wgRelevantUserName")) {
          const block64field = form.append({
            type: "field",
            label: window.wgULS("转换为/64段封禁", "轉換為/64段封鎖"),
            name: "field_64"
          });
          block64field.append({
            type: "div",
            style: "margin-bottom: 0.5em",
            label: [wgULS("直接封禁/64段有益无害。", "直接封鎖/64段有益無害。")]
          });
          block64field.append({
            type: "checkbox",
            name: "block64",
            event: Twinkle.block.callback.change_block64,
            list: [{
              checked: Twinkle.getPref("defaultToBlock64"),
              label: window.wgULS("改成封禁/64", "改成封鎖/64"),
              value: "block64",
              tooltip: Morebits.ip.isRange(mw.config.get("wgRelevantUserName")) ? window.wgULS("将不会发送模板通知。", "將不會發送模板通知。") : window.wgULS("任何模板将会发送给原始IP：", "任何模板將會發送給原始IP：") + mw.config.get("wgRelevantUserName")
            }]
          });
        }
        form.append({
          type: "field",
          label: window.wgULS("默认", "預設"),
          name: "field_preset"
        });
        form.append({
          type: "field",
          label: window.wgULS("模板选项", "模板選項"),
          name: "field_template_options"
        });
        form.append({
          type: "field",
          label: window.wgULS("封禁选项", "封鎖選項"),
          name: "field_block_options"
        });
        form.append({
          type: "field",
          label: window.wgULS("标记用户页", "標記使用者頁面"),
          name: "field_tag_options"
        });
        form.append({
          type: "field",
          label: window.wgULS("解除封禁选项", "解除封鎖選項"),
          name: "field_unblock_options"
        });
        form.append({
          type: "submit",
          label: "提交"
        });
        const result = form.render();
        Window.setContent(result);
        Window.display();
        result.root = result;
        Twinkle.block.fetchUserInfo(() => {
          if (Twinkle.block.isRegistered) {
            const $form = $(result);
            Morebits.quickForm.setElementVisibility($form.find("[name=actiontype][value=tag]").parent(), true);
            if (Morebits.userIsSysop) {
              Morebits.quickForm.setElementVisibility($form.find("[name=actiontype][value=protect]").parent(), true);
            }
          }
          if (blockedUserName === relevantUserName) {
            $(result).find("[name=actiontype][value=partial]").prop("checked", Twinkle.block.currentBlockInfo.partial === "");
          }
          Twinkle.block.transformBlockPresets();
          const evt = document.createEvent("Event");
          evt.initEvent("change", true, true);
          if (result.block64 && result.block64.checked) {
            result.block64.dispatchEvent(evt);
          } else {
            result.actiontype[0].dispatchEvent(evt);
          }
        });
      };
      Twinkle.block.fetchedData = {};
      Twinkle.block.processUserInfo = (data, fn) => {
        let [blockinfo] = data.query.blocks;
        const [userinfo] = data.query.users;
        if (data.query.blocks.length > 1 && blockinfo.user !== relevantUserName) {
          [, blockinfo] = data.query.blocks;
        }
        Twinkle.block.fetchedData[userinfo.name] = data;
        Twinkle.block.isRegistered = !!userinfo.userid;
        if (Twinkle.block.isRegistered) {
          Twinkle.block.userIsBot = !!userinfo.groupmemberships && userinfo.groupmemberships.map((e) => {
            return e.group;
          }).includes("bot");
        } else {
          Twinkle.block.userIsBot = false;
        }
        if (blockinfo) {
          blockinfo.disabletalk = blockinfo.allowusertalk === void 0;
          blockinfo.hardblock = blockinfo.anononly === void 0;
        }
        Twinkle.block.currentBlockInfo = blockinfo;
        blockedUserName = Twinkle.block.currentBlockInfo && Twinkle.block.currentBlockInfo.user;
        Twinkle.block.hasBlockLog = !!data.query.logevents.length;
        Twinkle.block.blockLog = Twinkle.block.hasBlockLog && data.query.logevents;
        Twinkle.block.blockLogId = Twinkle.block.hasBlockLog ? data.query.logevents[0].logid : false;
        if (typeof fn === "function") {
          return fn();
        }
      };
      Twinkle.block.fetchUserInfo = (fn) => {
        const query = {
          format: "json",
          action: "query",
          list: "blocks|users|logevents",
          letype: "block",
          lelimit: 2,
          letitle: "User:".concat(relevantUserName),
          bkprop: "expiry|reason|flags|restrictions|range|user",
          ususers: relevantUserName
        };
        if (mw.util.isIPAddress(relevantUserName, true)) {
          query.bkip = relevantUserName;
        } else {
          query.bkusers = relevantUserName;
          query.usprop = "groupmemberships";
        }
        void api.get(query).then((data) => {
          Twinkle.block.processUserInfo(data, fn);
        }, (error) => {
          Morebits.status.init($body.find('div[name="currentblock"] span').last()[0]);
          Morebits.status.warn(window.wgULS("抓取用户信息出错", "抓取使用者資訊出錯"), error);
        });
      };
      Twinkle.block.callback.saveFieldset = (fieldset) => {
        Twinkle.block[$(fieldset).prop("name")] = {};
        var _iterator7 = _createForOfIteratorHelper($(fieldset).serializeArray()), _step7;
        try {
          for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
            const el = _step7.value;
            Twinkle.block[$(fieldset).prop("name")][el.name] = el.value;
          }
        } catch (err) {
          _iterator7.e(err);
        } finally {
          _iterator7.f();
        }
      };
      Twinkle.block.callback.change_block64 = (e) => {
        const $form = $(e.target.form);
        const $block64 = $form.find("[name=block64]");
        const priorName = relevantUserName;
        if ($block64.is(":checked")) {
          relevantUserName = Morebits.ip.get64(mw.config.get("wgRelevantUserName"));
        } else {
          relevantUserName = mw.config.get("wgRelevantUserName");
        }
        const originalIsRange = Morebits.ip.isRange(mw.config.get("wgRelevantUserName"));
        $form.find("[name=actiontype][value=template]").prop("disabled", originalIsRange).prop("checked", !originalIsRange);
        const regenerateForm = () => {
          const titleBar = document.querySelector(".ui-dialog-title").firstChild.nextSibling;
          titleBar.nodeValue = titleBar.nodeValue.replace(priorName, relevantUserName);
          $form.find("[name=actiontype][value=partial]").prop("checked", Twinkle.getPref("defaultToPartialBlocks"));
          if (blockedUserName === relevantUserName) {
            $form.find("[name=actiontype][value=partial]").prop("checked", Twinkle.block.currentBlockInfo.partial === "");
          }
          Twinkle.block.callback.change_action(e);
        };
        if (Twinkle.block.fetchedData[relevantUserName]) {
          Twinkle.block.processUserInfo(Twinkle.block.fetchedData[relevantUserName], regenerateForm);
        } else {
          Twinkle.block.fetchUserInfo(regenerateForm);
        }
      };
      Twinkle.block.callback.change_action = (e) => {
        let field_preset;
        let field_template_options;
        let field_block_options;
        let field_tag_options;
        let field_unblock_options;
        const $form = $(e.target.form);
        const $block = $form.find("[name=actiontype][value=block]");
        let blockBox = $block.is(":checked");
        const $template = $form.find("[name=actiontype][value=template]");
        let templateBox = $template.is(":checked");
        const $tag = $form.find("[name=actiontype][value=tag]");
        const tagBox = $tag.is(":checked");
        const $protect = $form.find("[name=actiontype][value=protect]");
        const $partial = $form.find("[name=actiontype][value=partial]");
        const partialBox = $partial.is(":checked");
        const $unblock = $form.find("[name=actiontype][value=unblock]");
        const unblockBox = $unblock.is(":checked");
        let blockGroup = partialBox ? Twinkle.block.blockGroupsPartial : Twinkle.block.blockGroups;
        if (e.target.value === "unblock") {
          if (!Twinkle.block.currentBlockInfo) {
            $unblock.prop("checked", false);
            void mw.notify(window.wgULS("用户没有被封禁", "使用者沒有被封鎖"), {
              type: "warn",
              tag: "twinkleblock"
            });
            return;
          }
          $block.prop("checked", false);
          blockBox = false;
          $template.prop("checked", false);
          templateBox = false;
          $tag.prop("checked", false);
          $protect.prop("checked", false);
          $partial.prop("checked", false);
        } else {
          $unblock.prop("checked", false);
        }
        $partial.prop("disabled", !blockBox && !templateBox);
        const prior = {
          label: window.wgULS("当前封禁", "目前封鎖")
        };
        if (blockedUserName === relevantUserName) {
          Twinkle.block.blockPresetsInfo.prior = Twinkle.block.currentBlockInfo;
          prior.list = [{
            label: window.wgULS("当前封禁设置", "目前封鎖設定"),
            value: "prior",
            selected: true
          }];
          if (!blockGroup.some((bg) => {
            return bg.label === prior.label;
          })) {
            blockGroup[blockGroup.length] = prior;
          }
          if (partialBox) {
            Twinkle.block.blockPresetsInfo.prior.templateName = Morebits.string.isInfinity(Twinkle.block.currentBlockInfo.expiry) ? "uw-pblockindef" : "uw-pblock";
          } else if (Twinkle.block.isRegistered) {
            Twinkle.block.blockPresetsInfo.prior.templateName = Morebits.string.isInfinity(Twinkle.block.currentBlockInfo.expiry) ? "uw-blockindef" : "uw-block";
          } else {
            Twinkle.block.blockPresetsInfo.prior.templateName = "uw-ablock";
          }
        } else {
          blockGroup = blockGroup.filter((bg) => {
            return bg.label !== prior.label;
          });
        }
        Twinkle.block.callback.saveFieldset($body.find("[name=field_block_options]"));
        Twinkle.block.callback.saveFieldset($body.find("[name=field_template_options]"));
        Twinkle.block.callback.saveFieldset($body.find("[name=field_tag_options]"));
        Twinkle.block.callback.saveFieldset($body.find("[name=field_unblock_options]"));
        if (blockBox) {
          field_preset = new Morebits.quickForm.element({
            type: "field",
            label: window.wgULS("默认", "預設"),
            name: "field_preset"
          });
          field_preset.append({
            type: "select",
            name: "preset",
            label: window.wgULS("选择默认：", "選擇預設："),
            event: Twinkle.block.callback.change_preset,
            list: Twinkle.block.callback.filtered_block_groups(blockGroup)
          });
          field_block_options = new Morebits.quickForm.element({
            type: "field",
            label: window.wgULS("封禁选项", "封鎖選項"),
            name: "field_block_options"
          });
          field_block_options.append({
            type: "div",
            name: "currentblock",
            label: " "
          });
          field_block_options.append({
            type: "div",
            name: "hasblocklog",
            label: " "
          });
          field_block_options.append({
            type: "select",
            name: "expiry_preset",
            label: window.wgULS("过期时间：", "過期時間："),
            event: Twinkle.block.callback.change_expiry,
            list: [{
              label: window.wgULS("自定义", "自訂"),
              value: "custom",
              selected: true
            }, {
              label: window.wgULS("无限期", "無限期"),
              value: "infinity"
            }, {
              label: window.wgULS("3小时", "3小時"),
              value: "3 hours"
            }, {
              label: window.wgULS("12小时", "12小時"),
              value: "12 hours"
            }, {
              label: "1天",
              value: "1 day"
            }, {
              label: window.wgULS("31小时", "31小時"),
              value: "31 hours"
            }, {
              label: "2天",
              value: "2 days"
            }, {
              label: "3天",
              value: "3 days"
            }, {
              label: window.wgULS("1周", "1週"),
              value: "1 week"
            }, {
              label: window.wgULS("2周", "2週"),
              value: "2 weeks"
            }, {
              label: window.wgULS("1个月", "1個月"),
              value: "1 month"
            }, {
              label: window.wgULS("3个月", "3個月"),
              value: "3 months"
            }, {
              label: window.wgULS("6个月", "6個月"),
              value: "6 months"
            }, {
              label: "1年",
              value: "1 year"
            }, {
              label: "2年",
              value: "2 years"
            }, {
              label: "3年",
              value: "3 years"
            }]
          });
          field_block_options.append({
            type: "input",
            name: "expiry",
            label: window.wgULS("自定义过期时间", "自訂過期時間"),
            tooltip: window.wgULS("您可以使用相对时间，如“1 minute”或“19 days”；或绝对时间，“yyyymmddhhmm”（如“200602011405”是2006年2月1日14:05 UTC。）", "您可以使用相對時間，如「1 minute」或「19 days」；或絕對時間，「yyyymmddhhmm」（如「200602011405」是2006年2月1日14:05 UTC。）"),
            value: Twinkle.block.field_block_options.expiry || Twinkle.block.field_template_options.template_expiry
          });
          if (partialBox) {
            field_block_options.append({
              type: "select",
              multiple: true,
              name: "pagerestrictions",
              label: window.wgULS("页面封禁", "頁面封鎖"),
              value: "",
              tooltip: window.wgULS("最多10个页面。", "最多10個頁面。")
            });
            const ns = field_block_options.append({
              type: "select",
              multiple: true,
              name: "namespacerestrictions",
              label: window.wgULS("命名空间封禁", "命名空間封鎖"),
              value: "",
              tooltip: window.wgULS("指定封禁的命名空间。", "指定封鎖的命名空間。")
            });
            for (var _i4 = 0, _Object$entries2 = Object.entries(menuFormattedNamespaces); _i4 < _Object$entries2.length; _i4++) {
              const [number, name] = _Object$entries2[_i4];
              if (number >= 0 && number < 830) {
                ns.append({
                  type: "option",
                  label: name,
                  value: number
                });
              }
            }
          }
          const blockoptions = [{
            checked: Twinkle.block.field_block_options.nocreate,
            label: window.wgULS("禁止创建账号", "禁止建立賬號"),
            name: "nocreate",
            value: "1"
          }, {
            checked: Twinkle.block.field_block_options.noemail,
            label: window.wgULS("电子邮件停用", "電子郵件停用"),
            name: "noemail",
            value: "1"
          }, {
            checked: Twinkle.block.field_block_options.disabletalk,
            label: window.wgULS("不能编辑自己的讨论页", "不能編輯自己的討論頁"),
            name: "disabletalk",
            value: "1",
            tooltip: partialBox ? window.wgULS("若使用部分封禁，不应选择此项，除非您也想要禁止编辑用户讨论页。", "若使用部分封鎖，不應選擇此項，除非您也想要禁止編輯使用者討論頁。") : ""
          }];
          if (Twinkle.block.isRegistered) {
            blockoptions[blockoptions.length] = {
              checked: Twinkle.block.field_block_options.autoblock,
              label: window.wgULS("自动封禁", "自動封鎖"),
              name: "autoblock",
              value: "1"
            };
          } else {
            blockoptions[blockoptions.length] = {
              checked: Twinkle.block.field_block_options.hardblock,
              label: window.wgULS("阻止登录用户使用该IP地址编辑", "阻止登入使用者使用該IP位址編輯"),
              name: "hardblock",
              value: "1"
            };
          }
          blockoptions[blockoptions.length] = ({
            checked: Twinkle.block.field_block_options.watchuser,
            label: window.wgULS("监视该用户的用户页和讨论页", "監視該使用者的使用者頁面和討論頁"),
            name: "watchuser",
            value: "1"
          }, {
            checked: true,
            label: window.wgULS("标记当前的破坏中的请求", "標記當前的破壞中的請求"),
            name: "closevip",
            value: "1"
          });
          field_block_options.append({
            type: "checkbox",
            name: "blockoptions",
            list: blockoptions
          });
          field_block_options.append({
            type: "textarea",
            label: window.wgULS("理由（用于封禁日志）：", "理由（用於封鎖日誌）："),
            name: "reason",
            tooltip: window.wgULS("请考虑在默认的消息中加入有用的详细信息。", "請考慮在預設的訊息中加入有用的詳細資訊。"),
            value: Twinkle.block.field_block_options.reason
          });
          field_block_options.append({
            type: "div",
            name: "filerlog_label",
            label: window.wgULS("参见：", "參見："),
            style: "display:inline-block;font-style:normal !important",
            tooltip: window.wgULS("在封禁理由中标清特殊情况以供其他管理员参考", "在封鎖理由中標清特殊情況以供其他管理員參考")
          });
          field_block_options.append({
            type: "checkbox",
            name: "filter_see_also",
            event: Twinkle.block.callback.toggle_see_alsos,
            style: "display:inline-block; margin-right:5px",
            list: [{
              label: window.wgULS("过滤器日志", "過濾器日誌"),
              checked: false,
              value: window.wgULS("过滤器日志", "過濾器日誌")
            }]
          });
          field_block_options.append({
            type: "checkbox",
            name: "deleted_see_also",
            event: Twinkle.block.callback.toggle_see_alsos,
            style: "display:inline-block; margin-right:5px",
            list: [{
              label: window.wgULS("已删除的编辑", "已刪除的編輯"),
              checked: false,
              value: window.wgULS("已删除的编辑", "已刪除的編輯")
            }]
          });
          field_block_options.append({
            type: "checkbox",
            name: "filter_see_also",
            event: Twinkle.block.callback.toggle_see_alsos,
            style: "display:inline-block; margin-right:5px",
            list: [{
              label: window.wgULS("用户讨论页", "使用者討論頁"),
              checked: false,
              value: window.wgULS("用户讨论页", "使用者討論頁")
            }]
          });
          field_block_options.append({
            type: "checkbox",
            name: "filter_see_also",
            event: Twinkle.block.callback.toggle_see_alsos,
            style: "display:inline-block; margin-right:5px",
            list: [{
              label: window.wgULS("过去的封禁记录", "過去的封鎖記錄"),
              checked: false,
              value: window.wgULS("过去的封禁记录", "過去的封鎖記錄")
            }]
          });
          if (blockedUserName === relevantUserName) {
            field_block_options.append({
              type: "hidden",
              name: "reblock",
              value: "1"
            });
          }
        }
        if (templateBox) {
          field_template_options = new Morebits.quickForm.element({
            type: "field",
            label: window.wgULS("模板选项", "模板選項"),
            name: "field_template_options"
          });
          field_template_options.append({
            type: "select",
            name: "template",
            label: window.wgULS("选择讨论页模板：", "選擇討論頁模板："),
            event: Twinkle.block.callback.change_template,
            list: Twinkle.block.callback.filtered_block_groups(blockGroup, true),
            value: Twinkle.block.field_template_options.template
          });
          field_template_options.append({
            type: "input",
            name: "article",
            label: window.wgULS("链接页面", "連結頁面"),
            value: "",
            tooltip: window.wgULS("可以随通知链接页面，例如破坏的目标。没有条目需要链接则请留空。", "可以隨通知連結頁面，例如破壞的目標。沒有條目需要連結則請留空。")
          });
          field_template_options.append({
            type: "input",
            name: "area",
            label: window.wgULS("封禁范围", "封鎖範圍"),
            value: "",
            tooltip: window.wgULS("阻止用户编辑的页面或命名空间的可选说明。", "阻止使用者編輯的頁面或命名空間的可選說明。")
          });
          if (!blockBox) {
            field_template_options.append({
              type: "input",
              name: "template_expiry",
              label: "封禁期限：",
              value: "",
              tooltip: window.wgULS("封禁时长，如24小时、2周、无限期等。", "封鎖時長，如24小時、2週、無限期等。")
            });
          }
          field_template_options.append({
            type: "input",
            name: "block_reason",
            label: window.wgULS("“由于……您已被封禁”", "「由於……您已被封鎖」"),
            tooltip: window.wgULS("可选的理由，用于替换默认理由。只在常规封禁模板中有效。", "可選的理由，用於替換預設理由。只在常規封鎖模板中有效。"),
            value: Twinkle.block.field_template_options.block_reason,
            size: 60
          });
          if (blockBox) {
            field_template_options.append({
              type: "checkbox",
              name: "blank_duration",
              list: [{
                label: window.wgULS("不在模板中包含封禁期限", "不在模板中包含封鎖期限"),
                checked: Twinkle.block.field_template_options.blank_duration,
                tooltip: window.wgULS("模板将会显示“一段时间”而不是具体时长", "模板將會顯示「一段時間」而不是具體時長")
              }]
            });
          } else {
            field_template_options.append({
              type: "checkbox",
              list: [{
                label: window.wgULS("不能编辑自己的讨论页", "不能編輯自己的討論頁"),
                name: "notalk",
                checked: Twinkle.block.field_template_options.notalk,
                tooltip: window.wgULS("用此在封禁模板中指明该用户编辑讨论页的权限已被移除", "用此在封鎖模板中指明該使用者編輯討論頁的權限已被移除")
              }, {
                label: window.wgULS("不能发送电子邮件", "不能傳送電子郵件"),
                name: "noemail_template",
                checked: Twinkle.block.field_template_options.noemail_template,
                tooltip: window.wgULS("用此在封禁模板中指明该用户发送电子邮件的权限已被移除", "用此在封鎖模板中指明該使用者傳送電子郵件的權限已被移除")
              }, {
                label: window.wgULS("不能创建账号", "不能建立賬號"),
                name: "nocreate_template",
                checked: Twinkle.block.field_template_options.nocreate_template,
                tooltip: window.wgULS("用此在封禁模板中指明该用户创建账号的权限已被移除", "用此在封鎖模板中指明該使用者建立賬號的權限已被移除")
              }]
            });
          }
          const $previewlink = $("<a>").attr("id", "twinkleblock-preview-link").text(window.wgULS("预览", "預覽"));
          $previewlink.off("click").on("click", () => {
            Twinkle.block.callback.preview($form[0]);
          });
          $previewlink.css({
            cursor: "pointer"
          });
          field_template_options.append({
            type: "div",
            id: "blockpreview",
            label: [$previewlink[0]]
          });
          field_template_options.append({
            type: "div",
            id: "twinkleblock-previewbox",
            style: "display: none"
          });
        }
        if (tagBox) {
          field_tag_options = new Morebits.quickForm.element({
            type: "field",
            label: window.wgULS("标记用户页", "標記使用者頁面"),
            name: "field_tag_options"
          });
          field_tag_options.append({
            type: "checkbox",
            name: "tag",
            label: window.wgULS("选择用户页模板：", "選擇使用者頁面模板："),
            list: [{
              label: "{{Blocked user}}：".concat(window.wgULS("一般永久封禁", "一般永久封鎖")),
              value: "Blocked user"
            }, {
              label: "{{Sockpuppet}}：".concat(window.wgULS("傀儡账号", "傀儡賬號")),
              value: "Sockpuppet",
              subgroup: [{
                name: "sppUsername",
                type: "input",
                label: window.wgULS("主账号用户名：", "主賬號使用者名稱：")
              }, {
                name: "sppType",
                type: "select",
                label: window.wgULS("状态：", "狀態："),
                list: [{
                  type: "option",
                  value: "blocked",
                  label: "blocked - ".concat(window.wgULS("仅依行为证据认定", "僅依行為證據認定")),
                  selected: true
                }, {
                  type: "option",
                  value: "proven",
                  label: "proven - ".concat(window.wgULS("经傀儡调查确认", "經傀儡調查確認"))
                }, {
                  type: "option",
                  value: "confirmed",
                  label: "confirmed - ".concat(window.wgULS("经查核确认", "經查核確認"))
                }]
              }, {
                name: "sppEvidence",
                type: "input",
                label: window.wgULS("根据……确定：", "根據……確定："),
                tooltip: window.wgULS("纯文字或是带[[]]的链接，例如：[[Special:固定链接/xxxxxxxx|用户查核]]", "純文字或是帶[[]]的連結，例如：[[Special:固定链接/xxxxxxxx|用戶查核]]")
              }]
            }, {
              label: "{{Sockpuppeteer|blocked}}：".concat(window.wgULS("傀儡主账号", "傀儡主賬號")),
              value: "Sockpuppeteer",
              subgroup: [{
                type: "checkbox",
                list: [{
                  name: "spmChecked",
                  value: "spmChecked",
                  label: window.wgULS("经用户查核确认", "經使用者查核確認")
                }]
              }, {
                name: "spmEvidence",
                type: "input",
                label: window.wgULS("额外理由：", "額外理由：")
              }]
            }]
          });
        }
        if (unblockBox) {
          field_unblock_options = new Morebits.quickForm.element({
            type: "field",
            label: window.wgULS("解除封禁选项", "解除封鎖選項"),
            name: "field_unblock_options"
          });
          field_unblock_options.append({
            type: "textarea",
            label: window.wgULS("理由（用于封禁日志）：", "理由（用於封鎖日誌）："),
            name: "reason",
            value: Twinkle.block.field_unblock_options.reason
          });
        }
        let oldfield;
        if (field_preset) {
          [oldfield] = $form.find('fieldset[name="field_preset"]');
          oldfield.parentNode.replaceChild(field_preset.render(), oldfield);
        } else {
          $form.find('fieldset[name="field_preset"]').hide();
        }
        if (field_block_options) {
          [oldfield] = $form.find('fieldset[name="field_block_options"]');
          oldfield.parentNode.replaceChild(field_block_options.render(), oldfield);
          $form.find('fieldset[name="field_64"]').show();
          $form.find("[name=pagerestrictions]").select2({
            width: "100%",
            placeholder: window.wgULS("输入要阻止用户编辑的页面", "輸入要阻止使用者編輯的頁面"),
            language: {
              errorLoading: () => {
                return window.wgULS("搜索词汇不完整或无效", "搜尋詞彙不完整或無效");
              }
            },
            maximumSelectionLength: 10,
            minimumInputLength: 1,
            ajax: {
              url: mw.util.wikiScript("api"),
              dataType: "json",
              delay: 100,
              data: (params) => {
                const title = mw.Title.newFromText(params.term);
                if (!title) {
                  return;
                }
                return {
                  action: "query",
                  format: "json",
                  list: "allpages",
                  apfrom: title.title,
                  apnamespace: title.namespace,
                  aplimit: "10"
                };
              },
              processResults: (data) => {
                return {
                  results: data.query.allpages.map((page) => {
                    const title = mw.Title.newFromText(page.title, page.ns).toText();
                    return {
                      id: title,
                      text: title
                    };
                  })
                };
              }
            },
            templateSelection: (choice) => {
              return $("<a>").text(choice.text).attr({
                href: mw.util.getUrl(choice.text),
                target: "_blank",
                rel: "noopener noreferrer"
              });
            }
          });
          $form.find("[name=namespacerestrictions]").select2({
            width: "100%",
            matcher: Morebits.select2.matchers.wordBeginning,
            language: {
              searching: Morebits.select2.queryInterceptor
            },
            templateResult: Morebits.select2.highlightSearchMatches,
            placeholder: window.wgULS("选择要禁止用户编辑的命名空间", "選擇要禁止使用者編輯的命名空間")
          });
          mw.util.addCSS(
            /* Reduce padding;
             * Adjust font size;
             * Remove black border;
             * Make the tiny cross larger
             */
            ".select2-results .select2-results__option{padding-top:1px;padding-bottom:1px}.select2-container .select2-dropdown .select2-results,.select2-container .selection .select2-selection__rendered{font-size:13px}.select2-container--default.select2-container--focus .select2-selection--multiple{border:1px solid #aaa}.select2-selection__choice__remove{font-size:125%}"
          );
        } else {
          $form.find('fieldset[name="field_block_options"]').hide();
          $form.find('fieldset[name="field_64"]').hide();
          $form.find("[name=pagerestrictions]").val(null).trigger("change");
          $form.find("[name=namespacerestrictions]").val(null).trigger("change");
        }
        if (field_template_options) {
          [oldfield] = $form.find('fieldset[name="field_template_options"]');
          oldfield.parentNode.replaceChild(field_template_options.render(), oldfield);
          e.target.form.root.previewer = new Morebits.wiki.preview($(e.target.form.root).find("#twinkleblock-previewbox").last()[0]);
        } else {
          $form.find('fieldset[name="field_template_options"]').hide();
        }
        if (field_tag_options) {
          [oldfield] = $form.find('fieldset[name="field_tag_options"]');
          oldfield.parentNode.replaceChild(field_tag_options.render(), oldfield);
        } else {
          $form.find('fieldset[name="field_tag_options"]').hide();
        }
        if (field_unblock_options) {
          [oldfield] = $form.find('fieldset[name="field_unblock_options"]');
          oldfield.parentNode.replaceChild(field_unblock_options.render(), oldfield);
        } else {
          $form.find('fieldset[name="field_unblock_options"]').hide();
        }
        if (Twinkle.block.currentBlockInfo) {
          const sameUser = blockedUserName === relevantUserName;
          Morebits.status.init($body.find('div[name="currentblock"] span').last()[0]);
          let statusStr = "".concat(relevantUserName, "已被").concat(Twinkle.block.currentBlockInfo.partial === "" ? window.wgULS("部分封禁", "部分封鎖") : window.wgULS("全站封禁", "全站封鎖"));
          if (Twinkle.block.currentBlockInfo.rangestart !== Twinkle.block.currentBlockInfo.rangeend) {
            if (sameUser) {
              statusStr += window.wgULS("（段封禁）", "（段封鎖）");
            } else {
              const $rangeblockloglink = $("<span>").append($('<a rel="noopener" target="_blank" href="'.concat(mw.util.getUrl("Special:Log", {
                action: "view",
                page: blockedUserName,
                type: "block"
              }), '">').concat(Morebits.ip.get64(relevantUserName) === blockedUserName ? "/64" : blockedUserName, "</a>)")));
              statusStr += window.wgULS("（位于", "（位於") + $rangeblockloglink.html() + window.wgULS("段封禁内）", "段封鎖內）");
            }
          }
          if (Twinkle.block.currentBlockInfo.expiry === "infinity") {
            statusStr += window.wgULS("（无限期）", "（無限期）");
          } else if (new Morebits.date(Twinkle.block.currentBlockInfo.expiry).isValid()) {
            statusStr += "".concat(window.wgULS("（终止于", "（終止於") + new Morebits.date(Twinkle.block.currentBlockInfo.expiry).calendar("utc"), "）");
          }
          let infoStr = window.wgULS("此表单将", "此表單將");
          if (sameUser) {
            infoStr += window.wgULS("更改封禁", "變更封鎖");
            if (Twinkle.block.currentBlockInfo.partial === void 0 && partialBox) {
              infoStr += window.wgULS("为部分封禁", "為部分封鎖");
            } else if (Twinkle.block.currentBlockInfo.partial === "" && !partialBox) {
              infoStr += window.wgULS("为全站封禁", "為全站封鎖");
            }
            infoStr += "。";
          } else {
            infoStr += window.wgULS("加上额外的", "加上額外的") + (partialBox ? "部分" : "") + window.wgULS("封禁。", "封鎖。");
          }
          Morebits.status.warn(statusStr, infoStr);
          Twinkle.block.callback.update_form(e, Twinkle.block.currentBlockInfo);
        }
        if (Twinkle.block.hasBlockLog) {
          const blockloginfo = [];
          const $blockloglink = $("<span>").append($('<a rel="noopener" target="_blank" href="'.concat(mw.util.getUrl("Special:Log", {
            action: "view",
            page: relevantUserName,
            type: "block"
          }), '">').concat(window.wgULS("封禁日志", "封鎖日誌"), "</a>)")));
          if (Twinkle.block.currentBlockInfo) {
            blockloginfo[blockloginfo.length] = window.wgULS("封禁详情", "封鎖詳情");
          } else {
            const [lastBlockAction] = Twinkle.block.blockLog;
            const blockAction = lastBlockAction.action === "unblock" ? Twinkle.block.blockLog[1] : lastBlockAction;
            blockloginfo[blockloginfo.length] = ("此".concat(Morebits.ip.isRange(relevantUserName) ? window.wgULS("IP范围", "IP範圍") : window.wgULS("用户", "使用者"), "曾在"), $("<b>").text(new Morebits.date(blockAction.timestamp).calendar("utc"))[0], "被".concat(blockAction.user).concat(window.wgULS("封禁", "封鎖")), $("<b>").text(Morebits.string.formatTime(blockAction.params.duration))[0]);
            if (lastBlockAction.action === "unblock") {
              blockloginfo[blockloginfo.length] = "，".concat(new Morebits.date(lastBlockAction.timestamp).calendar("utc"), "解封");
            } else {
              blockloginfo[blockloginfo.length] = "，".concat(new Morebits.date(blockAction.params.expiry).calendar("utc")).concat(window.wgULS("过期", "過期"));
            }
          }
          Morebits.status.init($body.find('div[name="hasblocklog"] span').last()[0]);
          Morebits.status.warn(blockloginfo, $blockloglink[0]);
        }
        if (blockBox) {
          Twinkle.block.callback.change_preset(e);
        } else if (templateBox) {
          Twinkle.block.callback.change_template(e);
        }
      };
      Twinkle.block.blockPresetsInfo = {
        // uw-prefixed
        "uw-block": {
          autoblock: true,
          expiry: "1 day",
          forRegisteredOnly: true,
          nocreate: true,
          pageParam: true,
          reasonParam: true,
          summary: window.wgULS("封禁通知", "封鎖通知"),
          suppressArticleInSummary: true
        },
        "uw-blockindef": {
          autoblock: true,
          expiry: "infinity",
          forRegisteredOnly: true,
          nocreate: true,
          pageParam: true,
          reasonParam: true,
          summary: window.wgULS("封禁通知", "封鎖通知"),
          suppressArticleInSummary: true
        },
        "uw-blocknotalk": {
          disabletalk: true,
          pageParam: true,
          reasonParam: true,
          summary: window.wgULS("封禁通知：禁止编辑讨论页", "封鎖通知：禁止編輯討論頁"),
          suppressArticleInSummary: true
        },
        "uw-3block": {
          autoblock: true,
          expiry: "1 day",
          nocreate: true,
          pageParam: true,
          reason: window.wgULS("违反[[QW:3RR|回退不过三原则]]", "違反[[QW:3RR|回退不過三原則]]"),
          summary: window.wgULS("封禁通知：违反[[QW:3RR|回退不过三原则]]", "封鎖通知：違反[[QW:3RR|回退不過三原則]]")
        },
        "uw-adblock": {
          autoblock: true,
          nocreate: true,
          pageParam: true,
          reason: window.wgULS("散发[[QW:SOAP|散发广告或宣传]]", "散發[[QW:SOAP|散發廣告或宣傳]]"),
          summary: window.wgULS("封禁通知：散发[[QW:SOAP|散发广告或宣传]]", "封鎖通知：散發[[QW:SOAP|散發廣告或宣傳]]")
        },
        "uw-attackblock": {
          autoblock: true,
          expiry: "1 day",
          nocreate: true,
          reason: window.wgULS("[[QW:CIV|行为无礼]]或[[QW:NPA|人身攻击]]", "[[QW:CIV|行為無禮]]或[[QW:NPA|人身攻擊]]"),
          summary: window.wgULS("封禁通知：[[QW:CIV|行为无礼]]或[[QW:NPA|人身攻击]]", "封鎖通知：[[QW:CIV|行為無禮]]或[[QW:NPA|人身攻擊]]")
        },
        "uw-copyrightblock": {
          autoblock: true,
          expiry: "infinity",
          nocreate: true,
          pageParam: true,
          reason: window.wgULS("持续[[QW:COPYVIO|侵犯著作权]]", "持續[[QW:COPYVIO|侵犯著作權]]"),
          summary: window.wgULS("封禁通知：持续[[QW:COPYVIO|侵犯著作权]]", "封鎖通知：持續[[QW:COPYVIO|侵犯著作權]]"),
          templateName: "uw-blockindef"
        },
        "uw-dblock": {
          autoblock: true,
          nocreate: true,
          pageParam: true,
          reason: window.wgULS("持续[[QW:VAN|删除内容]]", "持續[[QW:VAN|刪除內容]]"),
          summary: window.wgULS("封禁通知：持续[[QW:VAN|删除内容]]", "封鎖通知：持續[[QW:VAN|刪除內容]]")
        },
        "uw-hblock": {
          autoblock: true,
          nocreate: true,
          pageParam: true,
          reason: window.wgULS("[[QW:骚扰|骚扰]]其他用户", "[[QW:騷擾|騷擾]]其他使用者"),
          summary: window.wgULS("封禁通知：[[QW:骚扰|骚扰]]其他用户", "封鎖通知：[[QW:騷擾|騷擾]]其他使用者")
        },
        "uw-vblock": {
          autoblock: true,
          expiry: "1 day",
          nocreate: true,
          pageParam: true,
          reason: window.wgULS("[[QW:VAN|破坏]]", "[[QW:VAN|破壞]]"),
          summary: window.wgULS("封禁通知：[[QW:VAN|破坏]]", "封鎖通知：[[QW:VAN|破壞]]")
        },
        "uw-illegalblock": {
          autoblock: true,
          expiry: "1 day",
          nocreate: true,
          pageParam: true,
          reason: window.wgULS("持续加入不符合中国价值观的非法内容", "持續加入不符合中國價值觀的非法內容"),
          summary: window.wgULS("封禁通知：持续加入不符合中国价值观的非法内容", "封鎖通知：持續加入不符合中國價值觀的非法內容")
        },
        "uw-sockblock": {
          autoblock: true,
          expiry: "1 week",
          forRegisteredOnly: true,
          nocreate: true,
          reason: window.wgULS("滥用[[QW:SOCK|多个账号]]", "濫用[[QW:SOCK|多個賬號]]"),
          summary: window.wgULS("封禁通知：滥用[[QW:SOCK|多个账号]]", "封鎖通知：濫用[[QW:SOCK|多個賬號]]"),
          templateName: "uw-block"
        },
        // uw-u-prefixed
        "uw-ublock": {
          expiry: "infinity",
          forRegisteredOnly: true,
          reason: "{{uw-ublock}}<!-- ".concat(window.wgULS("不当用户名、软封禁", "不當使用者名稱"), " -->"),
          summary: window.wgULS("封禁通知：您的用户名违反[[QW:U|用户名方针]]", "封鎖通知：您的使用者名稱違反[[QW:U|使用者名稱方針]]")
        },
        "uw-ublock-illegal": {
          autoblock: true,
          expiry: "infinity",
          forRegisteredOnly: true,
          nocreate: true,
          reason: "{{uw-ublock-illegal}}<!-- ".concat(window.wgULS("不合规的用户名", "不合規的使用者名稱"), " -->"),
          summary: window.wgULS("封禁通知：您的用户名违反[[QW:U|用户名方针]]", "封鎖通知：您的使用者名稱違反[[QW:U|使用者名稱方針]]")
        },
        "uw-ublock-suggestive": {
          autoblock: true,
          expiry: "infinity",
          forRegisteredOnly: true,
          nocreate: true,
          reason: "{{uw-ublock-suggestive}}<!-- ".concat(window.wgULS("误导、混淆性用户名", "誤導、混淆性使用者名稱"), " -->"),
          summary: window.wgULS("封禁通知：您的用户名违反[[QW:U|用户名方针]]", "封鎖通知：您的使用者名稱違反[[QW:U|使用者名稱方針]]")
        },
        "uw-ublock-spam": {
          autoblock: true,
          expiry: "infinity",
          forRegisteredOnly: true,
          nocreate: true,
          reason: "{{uw-ublock-spam}}<!-- ".concat(window.wgULS("宣传性用户名或宣传性编辑", "宣傳性使用者名稱或宣傳性編輯"), " -->"),
          summary: window.wgULS("封禁通知：您的用户名违反[[QW:U|用户名方针]]", "封鎖通知：您的使用者名稱違反[[QW:U|使用者名稱方針]]")
        },
        // other block templates
        "range block": {
          expiry: "1 week",
          reason: "{{range block}}",
          nocreate: true,
          nonstandard: true,
          forAnonOnly: true,
          sig: "~~".concat("~~")
        },
        "blocked proxy": {
          expiry: "2 years",
          forAnonOnly: true,
          nocreate: true,
          nonstandard: true,
          hardblock: true,
          reason: "{{blocked proxy}}",
          sig: null
        },
        checkuserblock: {
          expiry: "1 week",
          forAnonOnly: true,
          nocreate: true,
          nonstandard: true,
          reason: "{{checkuserblock}}",
          sig: "~~".concat("~~")
        },
        "checkuserblock-account": {
          autoblock: true,
          expiry: "infinity",
          forRegisteredOnly: true,
          nocreate: true,
          nonstandard: true,
          reason: "{{checkuserblock-account}}",
          sig: "~~".concat("~~")
        },
        "school block": {
          expiry: "1 week",
          forAnonOnly: true,
          nocreate: true,
          nonstandard: true,
          reason: "{{school block}}",
          sig: "~~".concat("~~")
        },
        "Bot block message": {
          expiry: "infinity",
          forRegisteredOnly: true,
          reason: window.wgULS("机器人故障", "機器人故障"),
          summary: window.wgULS("封禁通知：机器人故障", "封鎖通知：機器人故障"),
          sig: "~~".concat("~~")
        },
        // other block reasons
        bioblock: {
          autoblock: true,
          expiry: "1 day",
          nocreate: true,
          pageParam: true,
          reason: window.wgULS("违反生者传记方针", "違反生者傳記方針"),
          summary: window.wgULS("封禁通知：违反生者传记方针", "封鎖通知：違反生者傳記方針"),
          templateName: "uw-vblock"
        },
        ucblock: {
          autoblock: true,
          expiry: "1 day",
          nocreate: true,
          pageParam: true,
          reason: window.wgULS("屡次增加没有[[QW:RS|可靠来源]]的资料", "屢次增加沒有[[QW:RS|可靠來源]]的資料"),
          summary: window.wgULS("封禁通知：屡次增加没有[[QW:RS|可靠来源]]的资料", "封鎖通知：屢次增加沒有[[QW:RS|可靠來源]]的資料"),
          templateName: "uw-block"
        },
        npblock: {
          autoblock: true,
          expiry: "1 day",
          nocreate: true,
          pageParam: true,
          reason: window.wgULS("在条目中增加无意义文字", "在條目中增加無意義文字"),
          summary: window.wgULS("封禁通知：在条目中增加无意义文字", "封鎖通知：在條目中增加無意義文字"),
          templateName: "uw-vblock"
        },
        "point-block": {
          autoblock: true,
          expiry: "1 day",
          nocreate: true,
          pageParam: true,
          reasonParam: true,
          reason: window.wgULS("持续打制度擦边球", "持續打制度擦邊球"),
          summary: window.wgULS("封禁通知：持续打制度擦边球", "封鎖通知：持續打制度擦邊球"),
          templateName: "uw-block"
        },
        "sock-contribs": {
          autoblock: true,
          expiry: "infinity",
          forRegisteredOnly: true,
          nocreate: true,
          reasonParam: true,
          reason: window.wgULS("确认为[[QW:SOCK|傀儡]]或真人傀儡 - 根据用户贡献确定", "確認為[[QW:SOCK|傀儡]]或真人傀儡 - 根據使用者貢獻確定"),
          summary: window.wgULS("封禁通知：确认为[[QW:SOCK|傀儡]]或真人傀儡", "封鎖通知：確認為[[QW:SOCK|傀儡]]或真人傀儡"),
          templateName: "uw-blockindef"
        },
        "sock-cu": {
          autoblock: true,
          expiry: "infinity",
          forRegisteredOnly: true,
          nocreate: true,
          reasonParam: true,
          reason: window.wgULS("确认为[[QW:SOCK|傀儡]]或真人傀儡 - 用户查核确认", "確認為[[QW:SOCK|傀儡]]或真人傀儡 - 使用者查核確認"),
          summary: window.wgULS("封禁通知：确认为[[QW:SOCK|傀儡]]或真人傀儡", "封鎖通知：確認為[[QW:SOCK|傀儡]]或真人傀儡"),
          templateName: "uw-blockindef"
        },
        "uw-ublock-attack": {
          autoblock: true,
          expiry: "infinity",
          forRegisteredOnly: true,
          nocreate: true,
          reason: "{{uw-ublock-attack}}<!-- ".concat(window.wgULS("攻击性用户名", "攻擊性使用者名稱"), " -->"),
          summary: window.wgULS("封禁通知：攻击性用户名", "封鎖通知：攻擊性使用者名稱")
        },
        // Begin partial block templates, accessed in Twinkle.block.blockGroupsPartial
        "uw-pblock": {
          autoblock: true,
          expiry: "1 day",
          nocreate: false,
          pageParam: false,
          reasonParam: true,
          summary: window.wgULS("封禁通知：您已被禁止编辑求闻百科的部分区域", "封鎖通知：您已被禁止編輯求聞百科的部分區域")
        },
        "uw-pblockindef": {
          autoblock: true,
          expiry: "infinity",
          nocreate: false,
          pageParam: false,
          reasonParam: true,
          summary: window.wgULS("封禁通知：您已被永久禁止编辑求闻百科的部分区域", "封鎖通知：您已被永久禁止編輯求聞百科的部分區域")
        }
      };
      Twinkle.block.transformBlockPresets = () => {
        var _iterator8 = _createForOfIteratorHelper(Twinkle.getPref("customBlockReasonList")), _step8;
        try {
          for (_iterator8.s(); !(_step8 = _iterator8.n()).done; ) {
            const item = _step8.value;
            const newKey = "".concat(item.value, "|").concat(item.label);
            Twinkle.block.blockPresetsInfo[newKey] = {
              autoblock: true,
              nocreate: true,
              ...Twinkle.block.blockPresetsInfo[item.value],
              reason: item.label,
              templateName: item.value
            };
            if (Twinkle.block.blockPresetsInfo[item.value] === void 0) {
              Twinkle.block.blockPresetsInfo[item.value] = {
                pageParam: true,
                reasonParam: true,
                custom: true
              };
            }
          }
        } catch (err) {
          _iterator8.e(err);
        } finally {
          _iterator8.f();
        }
        for (var _i5 = 0, _Object$entries3 = Object.entries(Twinkle.block.blockPresetsInfo); _i5 < _Object$entries3.length; _i5++) {
          const [preset, settings] = _Object$entries3[_i5];
          settings.summary || (settings.summary = settings.reason);
          settings.sig = settings.sig === void 0 ? "yes" : settings.sig;
          settings.indefinite || (settings.indefinite = Morebits.string.isInfinity(settings.expiry));
          if (!Twinkle.block.isRegistered && settings.indefinite) {
            settings.expiry = "1 day";
          } else {
            settings.expiry || (settings.expiry = "1 day");
          }
          Twinkle.block.blockPresetsInfo[preset] = settings;
        }
      };
      Twinkle.block.blockGroups = [{
        label: window.wgULS("普通封禁", "普通封鎖"),
        list: [
          {
            label: window.wgULS("通用封禁（自定义理由）", "通用封鎖（自訂理由）"),
            value: "uw-block"
          },
          {
            label: window.wgULS("无限期封禁（自定义理由）", "無限期封鎖（自訂理由）"),
            value: "uw-blockindef"
          },
          {
            label: window.wgULS("禁止编辑讨论页", "禁止編輯討論頁"),
            value: "uw-blocknotalk",
            meta: true
          },
          {
            label: window.wgULS("违反回退不过三原则", "違反回退不過三原則"),
            value: "uw-3block"
          },
          {
            label: window.wgULS("散发广告或宣传", "散發廣告或宣傳"),
            value: "uw-adblock"
          },
          {
            label: window.wgULS("行为无礼或人身攻击", "行為無禮或人身攻擊"),
            value: "uw-attackblock"
          },
          {
            label: window.wgULS("多次加入侵犯著作权的内容", "多次加入侵犯著作權的內容"),
            value: "uw-copyrightblock"
          },
          {
            label: window.wgULS("无故删除内容", "無故刪除內容"),
            value: "uw-dblock"
          },
          {
            label: window.wgULS("骚扰用户", "騷擾使用者"),
            value: "uw-hblock"
          },
          {
            label: window.wgULS("破坏", "破壞"),
            value: "uw-vblock",
            selected: true
          },
          {
            label: window.wgULS("持续加入不符合中国价值观的非法内容", "持續加入不符合中國價值觀的非法內容"),
            value: "uw-illegalblock"
          },
          {
            label: window.wgULS("滥用多个账号", "濫用多個賬號"),
            value: "uw-sockblock"
          },
          // other block reasons
          {
            label: window.wgULS("违反生者传记方针", "違反生者傳記方針"),
            value: "bioblock"
          },
          {
            label: window.wgULS("屡次增加没有可靠来源的资料", "屢次增加沒有可靠來源的資料"),
            value: "ucblock"
          },
          {
            label: window.wgULS("在条目中增加无意义文字", "在條目中增加無意義文字"),
            value: "npblock"
          },
          {
            label: window.wgULS("持续打制度擦边球", "持續打制度擦邊球"),
            value: "point-block"
          },
          {
            label: window.wgULS("确认为傀儡或真人傀儡（根据用户贡献确定）", "確認為傀儡或真人傀儡（根據使用者貢獻確定）"),
            value: "sock-contribs"
          },
          {
            label: window.wgULS("确认为傀儡或真人傀儡（用户查核确认）", "確認為傀儡或真人傀儡（使用者查核確認）"),
            value: "sock-cu"
          },
          {
            label: window.wgULS("机器人发生故障并必须紧急停止", "機器人發生故障並必須緊急停止"),
            value: "Bot block message"
          }
        ]
      }, {
        custom: true,
        label: window.wgULS("自定义封禁理由", "自訂封鎖理由")
      }, {
        label: window.wgULS("用户名封禁", "使用者名稱封鎖"),
        list: [{
          label: window.wgULS("违反用户名方针", "違反使用者名稱方針"),
          value: "uw-ublock"
        }, {
          label: window.wgULS("不合规的用户名", "不合規的使用者名稱"),
          value: "uw-ublock-illegal"
        }, {
          label: window.wgULS("宣传性用户名", "宣傳性使用者名稱"),
          value: "uw-ublock-spam"
        }, {
          label: window.wgULS("攻击性用户名", "攻擊性使用者名稱"),
          value: "uw-ublock-attack"
        }, {
          label: window.wgULS("混淆性或误导性用户名", "混淆性或誤導性使用者名稱"),
          value: "uw-ublock-suggestive"
        }]
      }, {
        label: "其他模板",
        list: [{
          label: "range block",
          value: "range block",
          forAnonOnly: true
        }, {
          label: "school block",
          value: "school block",
          forAnonOnly: true
        }, {
          label: "blocked proxy",
          value: "blocked proxy",
          forAnonOnly: true
        }, {
          label: window.wgULS("用户查核封禁（主用户）", "使用者查核封鎖（主使用者）"),
          value: "checkuserblock",
          forAnonOnly: true
        }, {
          label: window.wgULS("用户查核封禁（子用户）", "使用者查核封鎖（子使用者）"),
          value: "checkuserblock-account",
          forRegisteredOnly: true
        }]
      }];
      Twinkle.block.blockGroupsPartial = [{
        label: window.wgULS("常见部分封禁理由", "常見部分封鎖理由"),
        list: [{
          label: window.wgULS("通用部分封禁（自定义理由）", "通用部分封鎖（自訂理由）"),
          value: "uw-pblock",
          selected: true
        }, {
          label: window.wgULS("无限期部分封禁（自定义理由）", "無限期部分封鎖（自訂理由）"),
          value: "uw-pblockindef"
        }]
      }];
      Twinkle.block.callback.filtered_block_groups = (group, show_template) => {
        return $.map(group, (blockGroup) => {
          if (blockGroup.custom) {
            if (show_template) {
              let templates = Array.prototype.map.call(Twinkle.getPref("customBlockReasonList"), (item) => {
                if (Twinkle.block.blockPresetsInfo[item.value].custom) {
                  return item.value;
                }
              });
              templates = Morebits.array.uniq(templates);
              blockGroup.list = Array.prototype.map.call(templates, (template) => {
                return {
                  label: window.wgULS("自定义模板", "自訂模板"),
                  value: template
                };
              });
            } else {
              blockGroup.list = Array.prototype.map.call(Twinkle.getPref("customBlockReasonList"), (item) => {
                return {
                  label: item.label,
                  value: "".concat(item.value, "|").concat(item.label)
                };
              });
            }
          }
          const list = $.map(blockGroup.list, (blockPreset) => {
            if (!show_template && blockPreset.meta) {
              return;
            }
            switch (blockPreset.value) {
              case "range block":
                if (!Morebits.ip.isRange(relevantUserName)) {
                  return;
                }
                blockPreset.selected = !Morebits.ip.get64(relevantUserName);
                break;
              default:
                break;
            }
            const blockSettings = Twinkle.block.blockPresetsInfo[blockPreset.value];
            let registrationRestrict;
            if (blockSettings.forRegisteredOnly) {
              registrationRestrict = Twinkle.block.isRegistered;
            } else if (blockSettings.forAnonOnly) {
              registrationRestrict = !Twinkle.block.isRegistered;
            } else {
              registrationRestrict = true;
            }
            if (!(blockSettings.templateName && show_template) && registrationRestrict) {
              const templateName = blockSettings.templateName || blockPreset.value;
              return {
                label: (show_template ? "{{".concat(templateName, "}}: ") : "") + blockPreset.label,
                value: blockPreset.value,
                data: [{
                  name: "template-name",
                  value: templateName
                }],
                selected: !!blockPreset.selected,
                disabled: !!blockPreset.disabled
              };
            }
          });
          if (list.length) {
            return {
              label: blockGroup.label,
              list
            };
          }
        });
      };
      Twinkle.block.callback.change_preset = (e) => {
        const {
          form
        } = e.target;
        const key = form.preset.value;
        if (!key) {
          return;
        }
        Twinkle.block.callback.update_form(e, Twinkle.block.blockPresetsInfo[key]);
        if (form.template) {
          form.template.value = Twinkle.block.blockPresetsInfo[key].templateName || key;
          Twinkle.block.callback.change_template(e);
        }
      };
      Twinkle.block.callback.change_expiry = (e) => {
        const {
          expiry
        } = e.target.form;
        if (e.target.value === "custom") {
          Morebits.quickForm.setElementVisibility(expiry.parentNode, true);
        } else {
          Morebits.quickForm.setElementVisibility(expiry.parentNode, false);
          expiry.value = e.target.value;
        }
      };
      Twinkle.block.seeAlsos = [];
      Twinkle.block.callback.toggle_see_alsos = function() {
        const reason = this.form.reason.value.replace(new RegExp("(<!-- )(参见|參見)".concat(Twinkle.block.seeAlsos.join("、"), "( -->)")), "");
        Twinkle.block.seeAlsos = Twinkle.block.seeAlsos.filter((el) => {
          return el !== this.value;
        });
        if (this.checked) {
          Twinkle.block.seeAlsos[Twinkle.block.seeAlsos.length] = this.value;
        }
        const seeAlsoMessage = Twinkle.block.seeAlsos.join("、");
        if (Twinkle.block.seeAlsos.length) {
          this.form.reason.value = "".concat(reason, "<!-- ").concat(window.wgULS("参见", "參見")).concat(seeAlsoMessage, " -->");
        } else {
          this.form.reason.value = reason;
        }
      };
      Twinkle.block.callback.update_form = (e, data) => {
        const {
          form
        } = e.target;
        let {
          expiry
        } = data;
        if (!data.useInitialOptions) {
          if (Date.parse(expiry)) {
            expiry = new Date(expiry).toGMTString();
            form.expiry_preset.value = "custom";
          } else {
            form.expiry_preset.value = data.expiry || "custom";
          }
          form.expiry.value = expiry;
          if (form.expiry_preset.value === "custom") {
            Morebits.quickForm.setElementVisibility(form.expiry.parentNode, true);
          } else {
            Morebits.quickForm.setElementVisibility(form.expiry.parentNode, false);
          }
        }
        data.disabletalk = data.disabletalk === void 0 ? false : data.disabletalk;
        data.hardblock = data.hardblock === void 0 ? false : data.hardblock;
        if (Twinkle.block.userIsBot || /bot\b/i.test(relevantUserName)) {
          data.autoblock = false;
        }
        $(form).find("[name=field_block_options]").find(":checkbox").each((_i, el) => {
          if (data.useInitialOptions && data[el.name] === void 0) {
            return;
          }
          if (el.name === "closevip") {
            return;
          }
          const check = data[el.name] === "" || !!data[el.name];
          $(el).prop("checked", check);
        });
        if (data.prependReason && data.reason) {
          form.reason.value = "".concat(data.reason, "；").concat(form.reason.value);
        } else {
          form.reason.value = data.reason || "";
        }
        if (form.pagerestrictions) {
          const $pageSelect = $(form).find("[name=pagerestrictions]");
          const $namespaceSelect = $(form).find("[name=namespacerestrictions]");
          if (!data.useInitialOptions) {
            $pageSelect.val(null).trigger("change");
            $namespaceSelect.val(null).trigger("change");
          }
          if (data.restrictions) {
            if (data.restrictions.pages && !$pageSelect.val().length) {
              const pages = data.restrictions.pages.map((pr) => {
                return pr.title;
              });
              var _iterator9 = _createForOfIteratorHelper(pages), _step9;
              try {
                for (_iterator9.s(); !(_step9 = _iterator9.n()).done; ) {
                  const page = _step9.value;
                  if (!$pageSelect.find("option[value='".concat($.escapeSelector(page), "']")).length) {
                    const newOption = new Option(page, page, true, true);
                    $pageSelect.append(newOption);
                  }
                }
              } catch (err) {
                _iterator9.e(err);
              } finally {
                _iterator9.f();
              }
              $pageSelect.val([...$pageSelect.val(), ...(0, import_ext_gadget2.generateArray)(pages)]).trigger("change");
            }
            if (data.restrictions.namespaces) {
              $namespaceSelect.val([...$namespaceSelect.val(), ...(0, import_ext_gadget2.generateArray)(data.restrictions.namespaces)]).trigger("change");
            }
          }
        }
      };
      Twinkle.block.callback.change_template = (e) => {
        const {
          form
        } = e.target;
        const {
          value
        } = form.template;
        const settings = Twinkle.block.blockPresetsInfo[value];
        const blockBox = $(form).find("[name=actiontype][value=block]").is(":checked");
        const partialBox = $(form).find("[name=actiontype][value=partial]").is(":checked");
        const templateBox = $(form).find("[name=actiontype][value=template]").is(":checked");
        if (!blockBox) {
          if (settings.indefinite || settings.nonstandard) {
            if (Twinkle.block.prev_template_expiry === null) {
              Twinkle.block.prev_template_expiry = form.template_expiry.value || "";
            }
            form.template_expiry.parentNode.style.display = "none";
            form.template_expiry.value = "infinity";
          } else if (form.template_expiry.parentNode.style.display === "none") {
            if (Twinkle.block.prev_template_expiry !== null) {
              form.template_expiry.value = Twinkle.block.prev_template_expiry;
              Twinkle.block.prev_template_expiry = null;
            }
            form.template_expiry.parentNode.style.display = "block";
          }
          if (Twinkle.block.prev_template_expiry) {
            form.expiry.value = Twinkle.block.prev_template_expiry;
          }
          Morebits.quickForm.setElementVisibility(form.notalk.parentNode, !settings.nonstandard);
          Morebits.quickForm.setElementVisibility(form.noemail_template.parentNode, partialBox);
          Morebits.quickForm.setElementVisibility(form.nocreate_template.parentNode, partialBox);
        } else if (templateBox) {
          Morebits.quickForm.setElementVisibility(form.blank_duration.parentNode, !settings.indefinite && !settings.nonstandard);
        }
        Morebits.quickForm.setElementVisibility(form.article.parentNode, settings && !!settings.pageParam);
        Morebits.quickForm.setElementVisibility(form.block_reason.parentNode, settings && !!settings.reasonParam);
        if (settings.reasonParam) {
          form.block_reason.value = Twinkle.block.blockPresetsInfo[form.preset.value].reason || "";
        } else {
          form.block_reason.value = "";
        }
        Morebits.quickForm.setElementVisibility(form.area.parentNode, partialBox && !blockBox);
        form.root.previewer.closePreview();
      };
      Twinkle.block.prev_template_expiry = null;
      Twinkle.block.callback.preview = (form) => {
        const params = {
          article: form.article.value,
          blank_duration: form.blank_duration ? form.blank_duration.checked : false,
          disabletalk: form.disabletalk.checked || (form.notalk ? form.notalk.checked : false),
          expiry: form.template_expiry ? form.template_expiry.value : form.expiry.value,
          hardblock: Twinkle.block.isRegistered ? form.autoblock.checked : form.hardblock.checked,
          indefinite: Morebits.string.isInfinity(form.template_expiry ? form.template_expiry.value : form.expiry.value),
          reason: form.block_reason.value,
          template: form.template.value,
          partial: $(form).find("[name=actiontype][value=partial]").is(":checked"),
          pagerestrictions: $(form.pagerestrictions).val() || [],
          namespacerestrictions: $(form.namespacerestrictions).val() || [],
          noemail: form.noemail.checked || (form.noemail_template ? form.noemail_template.checked : false),
          nocreate: form.nocreate.checked || (form.nocreate_template ? form.nocreate_template.checked : false),
          area: form.area.value
        };
        const templateText = Twinkle.block.callback.getBlockNoticeWikitext(params);
        form.previewer.beginRender(templateText, "User_talk:".concat(relevantUserName, "/Wikitext"));
      };
      Twinkle.block.callback.evaluate = (e) => {
        var _templateoptions;
        const params = Morebits.quickForm.getInputData(e.target);
        const $form = $(e.target);
        const toBlock = $form.find("[name=actiontype][value=block]").is(":checked");
        const toWarn = $form.find("[name=actiontype][value=template]").is(":checked");
        const toPartial = $form.find("[name=actiontype][value=partial]").is(":checked");
        const toTag = $form.find("[name=actiontype][value=tag]").is(":checked");
        const toProtect = $form.find("[name=actiontype][value=protect]").is(":checked");
        const toUnblock = $form.find("[name=actiontype][value=unblock]").is(":checked");
        let blockoptions = {};
        let templateoptions = {};
        let unblockoptions = {};
        Twinkle.block.callback.saveFieldset($form.find("[name=field_block_options]"));
        Twinkle.block.callback.saveFieldset($form.find("[name=field_template_options]"));
        Twinkle.block.callback.saveFieldset($form.find("[name=field_tag_options]"));
        Twinkle.block.callback.saveFieldset($form.find("[name=field_unblock_options]"));
        blockoptions = Twinkle.block.field_block_options;
        unblockoptions = Twinkle.block.field_unblock_options;
        const toClosevip = !!blockoptions.closevip;
        templateoptions = Twinkle.block.field_template_options;
        templateoptions.disabletalk = !!(templateoptions.disabletalk || blockoptions.disabletalk);
        templateoptions.hardblock = !!blockoptions.hardblock;
        delete blockoptions.expiry_preset;
        delete blockoptions.closevip;
        if (toPartial) {
          blockoptions.partial = true;
          templateoptions.partial = true;
        }
        templateoptions.pagerestrictions = $form.find("[name=pagerestrictions]").val() || [];
        templateoptions.namespacerestrictions = $form.find("[name=namespacerestrictions]").val() || [];
        blockoptions.pagerestrictions = templateoptions.pagerestrictions.join("|");
        blockoptions.namespacerestrictions = templateoptions.namespacerestrictions.join("|");
        (_templateoptions = templateoptions).summary || (_templateoptions.summary = blockoptions.reason);
        templateoptions.expiry = templateoptions.template_expiry || blockoptions.expiry;
        templateoptions.preset = toBlock ? params.preset : null;
        const checkIncompatible = (conflicts, extra) => {
          const count = conflicts.reduce((sum, tag) => {
            return sum += params.tag.includes(tag);
          }, 0);
          if (count > 1) {
            let message = "".concat(window.wgULS("请在以下标签中择一使用", "請在以下標籤中擇一使用"), "：{{").concat(conflicts.join("}}、{{"), "}}。");
            message += extra || "";
            void mw.notify(message, {
              type: "warn",
              tag: "twinkleblock"
            });
            return true;
          }
        };
        if (toTag) {
          if (params.tag.length === 0) {
            void mw.notify(window.wgULS("请至少选择一个用户页标记！", "請至少選擇一個使用者頁面標記！"), {
              type: "warn",
              tag: "twinkleblock"
            });
            return;
          }
          if (checkIncompatible(["Blocked user", "Sockpuppet"], window.wgULS("{{Sockpuppet}}已涵盖{{Blocked user}}的功能。", "{{Sockpuppet}}已涵蓋{{Blocked user}}的功能。"))) {
            return;
          }
          if (checkIncompatible(["Blocked user", "Sockpuppeteer"], window.wgULS("{{Sockpuppeteer}}已涵盖{{Blocked user}}的功能。", "{{Sockpuppeteer}}已涵蓋{{Blocked user}}的功能。"))) {
            return;
          }
          if (checkIncompatible(["Sockpuppet", "Sockpuppeteer"], window.wgULS("请从主账号和分身账号中选择一个。", "請從主賬號和分身賬號中選擇一個。"))) {
            return;
          }
          if (params.tag.includes("Sockpuppet") && params.sppUsername.trim() === "") {
            void mw.notify(window.wgULS("请提供傀儡账号的主账号用户名！", "請提供傀儡賬號的主賬號使用者名稱！"), {
              type: "warn",
              tag: "twinkleblock"
            });
            return;
          }
        }
        if (toBlock) {
          if (blockoptions.partial) {
            if (blockoptions.disabletalk && !blockoptions.namespacerestrictions.includes("3")) {
              void mw.notify(window.wgULS("部分封禁无法阻止编辑自己的讨论页，除非也封禁了User talk命名空间！", "部分封鎖無法阻止編輯自己的討論頁，除非也封鎖了User talk命名空間！"), {
                type: "warn",
                tag: "twinkleblock"
              });
              return;
            }
            if (!blockoptions.namespacerestrictions && !blockoptions.pagerestrictions) {
              if (!blockoptions.noemail && !blockoptions.nocreate) {
                void mw.notify(window.wgULS("没有选择页面或命名空间，也没有停用电子邮件或禁止创建账号；请选择至少一个选项以应用部分封禁！", "沒有選擇頁面或命名空間，也沒有停用電子郵件或禁止建立賬號；請選擇至少一個選項以應用部分封鎖！"), {
                  type: "warn",
                  tag: "twinkleblock"
                });
                return;
              } else if (!confirm(window.wgULS("您将要进行封禁，但没有阻止任何页面或命名空间的编辑，确定要继续？", "您將要進行封鎖，但沒有阻止任何頁面或命名空間的編輯，確定要繼續？"))) {
                return;
              }
            }
          }
          if (!blockoptions.expiry) {
            void mw.notify(window.wgULS("请提供过期时间！", "請提供過期時間！"), {
              type: "warn",
              tag: "twinkleblock"
            });
            return;
          } else if (Morebits.string.isInfinity(blockoptions.expiry) && !Twinkle.block.isRegistered) {
            void mw.notify(window.wgULS("禁止无限期封禁IP地址！", "禁止無限期封鎖IP位址！"), {
              type: "warn",
              tag: "twinkleblock"
            });
            return;
          }
          if (!blockoptions.reason) {
            void mw.notify(window.wgULS("请提供封禁理由！", "請提供封鎖理由！"), {
              type: "warn",
              tag: "twinkleblock"
            });
            return;
          }
          Morebits.simpleWindow.setButtonsEnabled(false);
          Morebits.status.init(e.target);
          const statusElement = new Morebits.status(window.wgULS("执行封禁", "執行封鎖"));
          blockoptions.action = "block";
          blockoptions.user = relevantUserName;
          blockoptions.anononly = blockoptions.hardblock ? void 0 : true;
          blockoptions.allowusertalk = blockoptions.disabletalk ? void 0 : true;
          const query = {
            format: "json",
            action: "query",
            list: "blocks|logevents",
            letype: "block",
            lelimit: 1,
            letitle: "User:".concat(blockoptions.user)
          };
          if (mw.util.isIPAddress(blockoptions.user, true)) {
            query.bkip = blockoptions.user;
          } else {
            query.bkusers = blockoptions.user;
            query.list += "|users";
            query.usprop = "groups";
            query.ususers = blockoptions.user;
            query.meta = "tokens";
            query.type = "userrights";
          }
          void api.get(query).then((data) => {
            let [block] = data.query.blocks;
            if (data.query.blocks.length > 1 && block.user !== relevantUserName) {
              [, block] = data.query.blocks;
            }
            const [logevents] = data.query.logevents;
            const user = data.query.users ? data.query.users[0] : null;
            const logid = data.query.logevents.length ? logevents.logid : false;
            if (logid !== Twinkle.block.blockLogId || !!block !== !!Twinkle.block.currentBlockInfo) {
              let message = blockoptions.user + window.wgULS("的封禁状态已被修改。", "的封鎖狀態已被修改。");
              if (block) {
                message += window.wgULS("新状态：", "新狀態：");
              } else {
                message += window.wgULS("最新日志：", "最新日誌：");
              }
              let logExpiry = "";
              if (logevents.params.duration) {
                if (logevents.params.duration === "infinity") {
                  logExpiry = window.wgULS("无限期", "無限期");
                } else {
                  const expiryDate = new Morebits.date(logevents.params.expiry);
                  logExpiry += (expiryDate.isBefore(/* @__PURE__ */ new Date()) ? window.wgULS("过期于", "過期於") : "直到") + expiryDate.calendar();
                }
              } else {
                logExpiry = "於".concat(new Morebits.date(logevents.timestamp).calendar());
              }
              message += "由".concat(logevents.user).concat(window.wgULS("以“", "以「")).concat(logevents.comment).concat(window.wgULS("”", "」")).concat(blockActionText[logevents.action]).concat(logExpiry).concat(window.wgULS("，你想要以你的设置更改封禁吗？", "，你想要以你的設定變更封鎖嗎？"));
              if (!confirm(message)) {
                Morebits.status.info(window.wgULS("执行封禁", "執行封鎖"), window.wgULS("用户取消操作", "使用者取消操作"));
                return;
              }
              blockoptions.reblock = 1;
            }
            const groupsCanBeRemoved = ["autoreviewer", "confirmed", "rnrsverify-exempt", "massmessage-sender", "patroller", "templateeditor", "transwiki"];
            let groupsToBeRemoved = [];
            if (user && Morebits.string.isInfinity(blockoptions.expiry)) {
              groupsToBeRemoved = user.groups.filter((group) => {
                return groupsCanBeRemoved.includes(group);
              });
            }
            blockoptions.tags = Twinkle.changeTags;
            blockoptions.token = mw.user.tokens.get("csrfToken");
            const mbApi = new Morebits.wiki.api(window.wgULS("执行封禁", "執行封鎖"), blockoptions, () => {
              statusElement.info("完成");
              if (toWarn) {
                Twinkle.block.callback.issue_template(templateoptions);
              }
              if (toClosevip) {
                const vipPage = new Morebits.wiki.page("Qiuwen_talk:报告当前破坏", window.wgULS("关闭请求", "關閉請求"));
                vipPage.setFollowRedirect(true);
                vipPage.setCallbackParameters(blockoptions);
                vipPage.load(Twinkle.block.callback.closeRequest);
              }
              if (groupsToBeRemoved.length > 0) {
                const rightStatusElement = new Morebits.status(window.wgULS("移除权限", "移除權限"));
                if (confirm(window.wgULS("该用户有以下权限：", "該使用者有以下權限：") + groupsToBeRemoved.join("、") + window.wgULS("，您是否想要同时移除这些权限？", "，您是否想要同時移除這些權限？"))) {
                  const revokeOptions = {
                    action: "userrights",
                    user: blockoptions.user,
                    remove: groupsToBeRemoved.join("|"),
                    reason: window.wgULS("用户已被无限期封禁", "使用者已被無限期封鎖"),
                    token: data.query.tokens.userrightstoken,
                    tags: Twinkle.changeTags
                  };
                  const mrApi = new Morebits.wiki.api(window.wgULS("移除权限", "移除權限"), revokeOptions, () => {
                    rightStatusElement.info("已移除".concat(groupsToBeRemoved.join("、")));
                  });
                  mrApi.post();
                } else {
                  rightStatusElement.error(window.wgULS("用户取消操作。", "使用者取消操作。"));
                }
              }
            });
            mbApi.post();
          });
        } else if (toWarn) {
          Morebits.simpleWindow.setButtonsEnabled(false);
          Morebits.status.init(e.target);
          Twinkle.block.callback.issue_template(templateoptions);
        }
        if (toTag || toProtect) {
          Morebits.simpleWindow.setButtonsEnabled(false);
          Morebits.status.init(e.target);
          const userPage = "User:".concat(mw.config.get("wgRelevantUserName"));
          const qiuwen_page = new Morebits.wiki.page(userPage, window.wgULS("标记或保护用户页", "標記或保護使用者頁面"));
          qiuwen_page.setCallbackParameters(params);
          qiuwen_page.load(Twinkle.block.callback.taguserpage);
        }
        if (toUnblock) {
          if (!unblockoptions.reason) {
            void mw.notify(window.wgULS("请提供解除封禁理由！", "請提供解除封鎖理由！"), {
              type: "warn",
              tag: "twinkleblock"
            });
            return;
          }
          Morebits.simpleWindow.setButtonsEnabled(false);
          Morebits.status.init(e.target);
          const unblockStatusElement = new Morebits.status(window.wgULS("执行解除封禁", "執行解除封鎖"));
          unblockoptions.action = "unblock";
          unblockoptions.user = mw.config.get("wgRelevantUserName");
          unblockoptions.tags = Twinkle.changeTags;
          unblockoptions.token = mw.user.tokens.get("csrfToken");
          const unblockMbApi = new Morebits.wiki.api(window.wgULS("执行解除封禁", "執行解除封鎖"), unblockoptions, () => {
            unblockStatusElement.info("完成");
          });
          unblockMbApi.post();
        }
        if (!toBlock && !toWarn && !toTag && !toProtect && !toUnblock) {
          void mw.notify(window.wgULS("请给Twinkle点事做！", "請給Twinkle點事做！"), {
            type: "warn",
            tag: "twinkleblock"
          });
        }
      };
      Twinkle.block.callback.taguserpage = (pageobj) => {
        const params = pageobj.getCallbackParameters();
        const statelem = pageobj.getStatusElement();
        if (params.actiontype.includes("tag")) {
          const tags = [];
          var _iterator10 = _createForOfIteratorHelper(params.tag), _step10;
          try {
            for (_iterator10.s(); !(_step10 = _iterator10.n()).done; ) {
              const tag = _step10.value;
              let tagtext = "{{".concat(tag);
              switch (tag) {
                case "Blocked user":
                  break;
                case "Sockpuppet":
                  tagtext += "\n| 1 = ".concat(params.sppUsername.trim());
                  tagtext += "\n| 2 = ".concat(params.sppType.trim());
                  if (params.sppEvidence.trim()) {
                    tagtext += "\n| evidence = ".concat(params.sppEvidence.trim());
                  }
                  tagtext += "\n| locked = no";
                  tagtext += "\n| notblocked = no";
                  tagtext += "\n";
                  break;
                case "Sockpuppeteer":
                  tagtext += "\n| 1 = blocked";
                  tagtext += "\n| checked = ".concat(params.spmChecked ? "yes" : "");
                  if (params.spmEvidence.trim()) {
                    tagtext += "\n| evidence = ".concat(params.spmEvidence.trim());
                  }
                  tagtext += "\n";
                  break;
                default:
                  void mw.notify(window.wgULS("未知的用户页模板！", "未知的使用者頁面模板！"), {
                    type: "warn",
                    tag: "twinkleblock"
                  });
                  continue;
              }
              tagtext += "}}";
              tags[tags.length] = tagtext;
            }
          } catch (err) {
            _iterator10.e(err);
          } finally {
            _iterator10.f();
          }
          const text = tags.join("\n");
          pageobj.setPageText(text);
          pageobj.setEditSummary(window.wgULS("标记被永久封禁的用户页", "標記被永久封鎖的使用者頁面"));
          pageobj.setChangeTags(Twinkle.changeTags);
          pageobj.save(() => {
            Morebits.status.info(window.wgULS("标记用户页", "標記使用者頁面"), "完成");
            statelem.status(window.wgULS("正在保护页面", "正在保護頁面"));
            pageobj.load(Twinkle.block.callback.protectuserpage);
          });
        } else {
          Twinkle.block.callback.protectuserpage(pageobj);
        }
      };
      Twinkle.block.callback.protectuserpage = (pageobj) => {
        const params = pageobj.getCallbackParameters();
        const statelem = pageobj.getStatusElement();
        if (params.actiontype.includes("protect")) {
          if (pageobj.exists()) {
            pageobj.setEditProtection("sysop", "indefinite");
            pageobj.setMoveProtection("sysop", "indefinite");
          } else {
            pageobj.setCreateProtection("sysop", "indefinite");
          }
          pageobj.setEditSummary(window.wgULS("被永久封禁的用户页", "被永久封鎖的使用者頁面"));
          pageobj.setChangeTags(Twinkle.changeTags);
          pageobj.protect(() => {
            Morebits.status.info(window.wgULS("保护用户页", "保護使用者頁面"), pageobj.exists() ? window.wgULS("已全保护", "已全保護") : window.wgULS("已白纸保护", "已白紙保護"));
            statelem.info("全部完成");
          });
        } else {
          statelem.info("全部完成");
        }
      };
      Twinkle.block.callback.issue_template = (formData) => {
        const userTalkPage = "User_talk:".concat(mw.config.get("wgRelevantUserName"));
        const params = {
          ...formData,
          messageData: Twinkle.block.blockPresetsInfo[formData.template],
          usertalk_summary: Twinkle.block.blockPresetsInfo[formData.preset || formData.template].summary,
          reason: Twinkle.block.field_template_options.block_reason,
          disabletalk: Twinkle.block.field_template_options.notalk,
          noemail: Twinkle.block.field_template_options.noemail_template,
          nocreate: Twinkle.block.field_template_options.nocreate_template
        };
        Morebits.wiki.actionCompleted.redirect = userTalkPage;
        Morebits.wiki.actionCompleted.notice = window.wgULS("完成，将在几秒后加载用户讨论页", "完成，將在幾秒後載入使用者討論頁");
        const qiuwen_page = new Morebits.wiki.page(userTalkPage, window.wgULS("用户讨论页修改", "使用者討論頁修改"));
        qiuwen_page.setCallbackParameters(params);
        qiuwen_page.load(Twinkle.block.callback.main);
      };
      Twinkle.block.callback.closeRequest = (vipPage) => {
        const params = vipPage.getCallbackParameters();
        let text = vipPage.getPageText();
        const statusElement = vipPage.getStatusElement();
        const userName = mw.config.get("wgRelevantUserName");
        const expiryText = Morebits.string.formatTime(params.expiry);
        const comment = "{{Blocked|".concat(Morebits.string.isInfinity(params.expiry) ? "indef" : expiryText, "}}。");
        const requestList = text.split(/(?=\n===.+===\s*\n)/);
        let found = false;
        let hidename = false;
        const vipRe = new RegExp("{{\\s*[Vv]andal\\s*\\|\\s*(1\\s*=\\s*)?".concat(Morebits.pageNameRegex(userName), "\\s*(\\|\\s*hidename\\s*=[^|]+)?}}"), "m");
        var _iterator11 = _createForOfIteratorHelper(requestList), _step11;
        try {
          for (_iterator11.s(); !(_step11 = _iterator11.n()).done; ) {
            let request = _step11.value;
            if (vipRe.exec(request)) {
              hidename = /\|\s*hidename\s*=[^|]+/.test(request);
              request = request.trimEnd();
              let newText = request.replace(/^(\*\s*处理：)[ \t]*(<!-- 非管理員僅可標記已執行的封禁，針對提報的意見請放在下一行 -->)?[ \t]*$/m, "$1".concat(comment, "--~~").concat("~~"));
              if (request === newText) {
                newText = "".concat(request, "\n* 处理：").concat(comment, "--~~").concat("~~");
              }
              request = "".concat(newText, "\n");
              found = true;
              break;
            }
          }
        } catch (err) {
          _iterator11.e(err);
        } finally {
          _iterator11.f();
        }
        if (!found) {
          statusElement.warn(window.wgULS("没有找到相关的请求", "沒有找到相關的請求"));
          return;
        }
        text = requestList.join("");
        let summary;
        if (hidename) {
          summary = window.wgULS("标记为已处理", "標記為已處理");
        } else {
          summary = "/* ".concat(userName, " */ ");
          if (Morebits.string.isInfinity(params.expiry)) {
            summary += window.wgULS("不限期封禁", "不限期封鎖");
          } else {
            summary += window.wgULS("封禁", "封鎖") + expiryText;
          }
        }
        vipPage.setEditSummary(summary);
        vipPage.setChangeTags(Twinkle.changeTags);
        vipPage.setPageText(text);
        vipPage.save();
      };
      Twinkle.block.callback.getBlockNoticeWikitext = (params) => {
        let text = "{{";
        const settings = Twinkle.block.blockPresetsInfo[params.template];
        if (settings.nonstandard) {
          text += params.template;
        } else {
          text += "subst:".concat(params.template);
          if (params.article && settings.pageParam) {
            text += "|page=".concat(params.article);
          }
          if (!/te?mp|^\s*$|min/.exec(params.expiry)) {
            if (params.indefinite) {
              text += "|indef=yes";
            } else if (!params.blank_duration) {
              text += "|time=".concat(Morebits.string.formatTime(params.expiry));
            }
          }
          if (!Twinkle.block.isRegistered && !params.hardblock) {
            text += "|anon=yes";
          }
          if (params.reason) {
            text += "|reason=".concat(params.reason);
          }
          if (params.disabletalk) {
            text += "|notalk=yes";
          }
          if (params.partial) {
            if (params.pagerestrictions.length || params.namespacerestrictions.length) {
              const makeSentence = (array) => {
                if (array.length < 3) {
                  return array.join("和");
                }
                const last = array.pop();
                return "".concat(array.join("、"), "和").concat(last);
              };
              text += "|area=某些";
              if (params.pagerestrictions.length) {
                text += "頁面（".concat(makeSentence(params.pagerestrictions.map((p) => {
                  return "[[:".concat(p, "]]");
                })));
                text += params.namespacerestrictions.length ? "）和某些" : "）";
              }
              if (params.namespacerestrictions.length) {
                const namespaceNames = params.namespacerestrictions.map((id) => {
                  return menuFormattedNamespaces[id];
                });
                text += "".concat(window.wgULS("[[Help:命名空间|命名空间]]（", "[[Help:命名空間|命名空間]]（") + makeSentence(namespaceNames), "）");
              }
            } else if (params.area) {
              text += "|area=".concat(params.area);
            } else {
              if (params.noemail) {
                text += "|email=yes";
              }
              if (params.nocreate) {
                text += "|accountcreate=yes";
              }
            }
          }
        }
        if (settings.sig) {
          text += "|sig=".concat(settings.sig);
        }
        return "".concat(text, "}}");
      };
      Twinkle.block.callback.main = (pageobj) => {
        const params = pageobj.getCallbackParameters();
        const date = new Morebits.date(pageobj.getLoadTime());
        const {
          messageData
        } = params;
        let text;
        params.indefinite = Morebits.string.isInfinity(params.expiry);
        if (Twinkle.getPref("blankTalkpageOnIndefBlock") && params.template !== "uw-lblock" && params.indefinite) {
          Morebits.status.info(window.wgULS("信息", "資訊"), window.wgULS("根据参数设置清空讨论页并为日期创建新2级标题", "根據偏好設定清空討論頁並為日期建立新2級標題"));
          text = "".concat(date.monthHeader(), "\n");
        } else {
          text = pageobj.getPageText();
          const dateHeaderRegex = date.monthHeaderRegex();
          let dateHeaderRegexLast;
          let dateHeaderRegexResult;
          while ((dateHeaderRegexLast = dateHeaderRegex.exec(text)) !== null) {
            dateHeaderRegexResult = dateHeaderRegexLast;
          }
          const lastHeaderIndex = text.lastIndexOf("\n==") + 1;
          if (text.length > 0) {
            text += "\n\n";
          }
          if (!dateHeaderRegexResult || dateHeaderRegexResult.index !== lastHeaderIndex) {
            Morebits.status.info(window.wgULS("信息", "資訊"), window.wgULS("未找到当月的二级标题，将创建新的", "未找到當月的二級標題，將建立新的"));
            text += "".concat(date.monthHeader(), "\n");
          }
        }
        params.expiry = params.template_expiry === void 0 ? params.expiry : params.template_expiry;
        text += Twinkle.block.callback.getBlockNoticeWikitext(params);
        let summary = params.usertalk_summary;
        if (messageData.suppressArticleInSummary !== true && params.article) {
          summary += "".concat(window.wgULS("，于", "，於"), "[[:").concat(params.article, "]]");
        }
        pageobj.setPageText(text);
        pageobj.setEditSummary(summary);
        pageobj.setChangeTags(Twinkle.changeTags);
        pageobj.setWatchlist(Twinkle.getPref("watchBlockNotices"));
        pageobj.save();
      };
      Twinkle.addInitCallback(Twinkle.block, "block");
    })(jQuery);
  }
});
//! src/Twinkle/modules/friendlytalkback.js
var friendlytalkback_exports = {};
var init_friendlytalkback = __esm({
  "src/Twinkle/modules/friendlytalkback.js"() {
    "use strict";
    /*! Twinkle.js - friendlytalkback.js */
    (function friendlytalkback($) {
      const $body = $("body");
      Twinkle.talkback = () => {
        if (!mw.config.get("wgRelevantUserName")) {
          return;
        }
        Twinkle.addPortletLink(Twinkle.talkback.callback, "通告", "friendly-talkback", window.wgULS("回复通告", "回覆通告"));
      };
      Twinkle.talkback.callback = () => {
        if (mw.config.get("wgRelevantUserName") === mw.config.get("wgUserName") && !confirm(window.wgULS("您寂寞到了要自己回复自己的程度么？", "您寂寞到了要自己回覆自己的程度麼？"))) {
          return;
        }
        const Window = new Morebits.simpleWindow(600, 350);
        Window.setTitle(window.wgULS("回复通告", "回覆通告"));
        Window.setScriptName("Twinkle");
        Window.addFooterLink(window.wgULS("关于{{talkback}}", "關於{{talkback}}"), "Template:Talkback");
        Window.addFooterLink(window.wgULS("通告设置", "通告設定"), "H:TW/PREF#talkback");
        Window.addFooterLink(window.wgULS("Twinkle帮助", "Twinkle說明"), "H:TW/DOC#talkback");
        const form = new Morebits.quickForm(Twinkle.talkback.evaluate);
        form.append({
          type: "radio",
          name: "tbtarget",
          list: [{
            label: window.wgULS("回复：我的讨论页", "回覆：我的討論頁"),
            value: "mytalk",
            checked: "true"
          }, {
            label: window.wgULS("回复：其他用户的讨论页", "回覆：其他使用者的討論頁"),
            value: "usertalk"
          }, {
            label: window.wgULS("回复：其它页面", "回覆：其它頁面"),
            value: "other"
          }, {
            label: window.wgULS("邀请讨论", "邀請討論"),
            value: "see"
          }, {
            label: "通告板通知",
            value: "notice"
          }, {
            label: window.wgULS("“有新邮件”", "「有新郵件」"),
            value: "mail"
          }],
          event: Twinkle.talkback.changeTarget
        });
        form.append({
          type: "field",
          label: "工作区",
          name: "work_area"
        });
        const previewlink = document.createElement("a");
        $(previewlink).on("click", () => {
          Twinkle.talkback.preview(result);
        });
        previewlink.style.cursor = "pointer";
        previewlink.textContent = window.wgULS("预览", "預覽");
        form.append({
          type: "div",
          id: "talkbackpreview",
          label: [previewlink]
        });
        form.append({
          type: "div",
          id: "friendlytalkback-previewbox",
          style: "display: none"
        });
        form.append({
          type: "submit"
        });
        const result = form.render();
        Window.setContent(result);
        Window.display();
        result.previewer = new Morebits.wiki.preview($(result).find("div#friendlytalkback-previewbox").last()[0]);
        const evt = document.createEvent("Event");
        evt.initEvent("change", true, true);
        result.tbtarget[0].dispatchEvent(evt);
        const query = {
          action: "query",
          prop: "extlinks",
          titles: "User talk:".concat(mw.config.get("wgRelevantUserName")),
          elquery: "userjs.invalid/noTalkback",
          ellimit: "1"
        };
        const qiuwen_api = new Morebits.wiki.api(window.wgULS("抓取退出通告信息", "抓取退出通告資訊"), query, Twinkle.talkback.callback.optoutStatus);
        qiuwen_api.post();
      };
      Twinkle.talkback.optout = "";
      Twinkle.talkback.callback.optoutStatus = (apiobj) => {
        const $el = $(apiobj.getXML()).find("el");
        if ($el.length) {
          Twinkle.talkback.optout = mw.config.get("wgRelevantUserName") + window.wgULS("不希望收到回复通告", "不希望收到回覆通告");
          const url = $el.text();
          const reason = mw.util.getParamValue("reason", url);
          Twinkle.talkback.optout += reason ? "：".concat(Morebits.string.appendPunctuation(reason)) : "。";
        }
        $body.find("#twinkle-talkback-optout-message").text(Twinkle.talkback.optout);
      };
      let prev_page = "";
      let prev_section = "";
      let prev_message = "";
      Twinkle.talkback.changeTarget = (e) => {
        const value = e.target.values;
        const root = e.target.form;
        const [old_area] = Morebits.quickForm.getElements(root, "work_area");
        if (root.section) {
          prev_section = root.section.value;
        }
        if (root.message) {
          prev_message = root.message.value;
        }
        if (root.page) {
          prev_page = root.page.value;
        }
        let work_area = new Morebits.quickForm.element({
          type: "field",
          label: window.wgULS("回复通告信息", "回覆通告資訊"),
          name: "work_area"
        });
        root.previewer.closePreview();
        switch (value) {
          case "usertalk":
            work_area.append({
              type: "div",
              label: "",
              style: "color: #f00",
              id: "twinkle-talkback-optout-message"
            });
            work_area.append({
              type: "input",
              name: "page",
              label: window.wgULS("用户（必填）", "使用者（必填）"),
              tooltip: window.wgULS("您留言页面的用户名，必填。", "您留言頁面的使用者名稱，必填。"),
              value: prev_page,
              required: true
            });
            work_area.append({
              type: "input",
              name: "section",
              label: window.wgULS("章节（可选）", "章節（可選）"),
              tooltip: window.wgULS("您留言的章节标题，留空则不会产生章节链接。", "您留言的章節標題，留空則不會產生章節連結。"),
              value: prev_section
            });
            break;
          case "notice": {
            const noticeboard = work_area.append({
              type: "select",
              name: "noticeboard",
              label: "通告板："
            });
            for (var _i6 = 0, _Object$entries4 = Object.entries(Twinkle.talkback.noticeboards); _i6 < _Object$entries4.length; _i6++) {
              const [nbname, data] = _Object$entries4[_i6];
              noticeboard.append({
                type: "option",
                label: data.label,
                value: nbname,
                selected: !!data.defaultSelected
              });
            }
            work_area.append({
              type: "input",
              name: "section",
              label: window.wgULS("章节（可选）", "章節（可選）"),
              tooltip: window.wgULS("章节标题，留空则不会产生章节链接。", "章節標題，留空則不會產生章節連結。"),
              value: prev_section
            });
            break;
          }
          case "other":
            work_area.append({
              type: "div",
              label: "",
              style: "color: #f00",
              id: "twinkle-talkback-optout-message"
            });
            work_area.append({
              type: "input",
              name: "page",
              label: window.wgULS("完整页面名", "完整頁面名"),
              tooltip: window.wgULS("您留下消息的完整页面名，例如“Qiuwen_talk:首页”。", "您留下訊息的完整頁面名，例如「Qiuwen_talk:首頁」。"),
              value: prev_page,
              required: true
            });
            work_area.append({
              type: "input",
              name: "section",
              label: window.wgULS("章节（可选）", "章節（可選）"),
              tooltip: window.wgULS("您留言的章节标题，留空则不会产生章节链接。", "您留言的章節標題，留空則不會產生章節連結。"),
              value: prev_section
            });
            break;
          case "mail":
            work_area.append({
              type: "input",
              name: "section",
              label: window.wgULS("电子邮件主题（可选）", "電子郵件主題（可選）"),
              tooltip: window.wgULS("您发出的电子邮件的主题。", "您發出的電子郵件的主題。")
            });
            break;
          case "see":
            work_area.append({
              type: "input",
              name: "page",
              label: window.wgULS("完整页面名", "完整頁面名"),
              tooltip: window.wgULS("您留下消息的完整页面名，例如“Qiuwen_talk:首页”。", "您留下訊息的完整頁面名，例如「Qiuwen_talk:首頁」。"),
              value: prev_page,
              required: true
            });
            work_area.append({
              type: "input",
              name: "section",
              label: window.wgULS("章节（可选）", "章節（可選）"),
              tooltip: window.wgULS("您留言的章节标题，留空则不会产生章节链接。", "您留言的章節標題，留空則不會產生章節連結。"),
              value: prev_section
            });
            break;
          /* case 'mytalk': */
          /* falls through */
          default:
            work_area.append({
              type: "div",
              label: "",
              style: "color: #f00",
              id: "twinkle-talkback-optout-message"
            });
            work_area.append({
              type: "input",
              name: "section",
              label: window.wgULS("章节（可选）", "章節（可選）"),
              tooltip: window.wgULS("您留言的章节标题，留空则不会产生章节链接。", "您留言的章節標題，留空則不會產生章節連結。"),
              value: prev_section
            });
            break;
        }
        if (value !== "notice") {
          work_area.append({
            type: "textarea",
            label: window.wgULS("附加信息（可选）：", "附加資訊（可選）："),
            name: "message",
            tooltip: window.wgULS("会在回复通告模板下出现的消息，您的签名会被加在最后。", "會在回覆通告模板下出現的訊息，您的簽名會被加在最後。")
          });
        }
        work_area = work_area.render();
        root.replaceChild(work_area, old_area);
        if (root.message) {
          root.message.value = prev_message;
        }
        $body.find("#twinkle-talkback-optout-message").text(Twinkle.talkback.optout);
      };
      Twinkle.talkback.noticeboards = {
        affp: {
          label: "QW:AF/FP（".concat(window.wgULS("过滤器处理/报告", "過濾器處理/報告"), "）"),
          title: window.wgULS("过滤器错误报告有新回应", "過濾器錯誤報告有新回應"),
          content: "".concat(window.wgULS("您的[[Qiuwen_talk:过滤器处理/报告|过滤器错误报告]]已有回应，请前往查看。", "您的[[Qiuwen_talk:过滤器处理/报告|過濾器錯誤報告]]已有回應，請前往查看。"), "--~~").concat("~~"),
          editSummary: window.wgULS("有关[[Qiuwen_talk:过滤器处理/报告|过滤器错误报告]]的通知", "有關[[Qiuwen_talk:过滤器处理/报告|過濾器錯誤報告]]的通知"),
          defaultSelected: true
        },
        sbl: {
          label: "Spam-blacklist",
          title: window.wgULS("垃圾链接黑名单请求有新回应", "垃圾連結黑名單請求有新回應"),
          content: "".concat(window.wgULS("您的[[Qiuwen_talk:管理员告示板|垃圾链接黑名单请求]]已有回应，请前往查看。", "您的[[Qiuwen_talk:管理员告示板|垃圾連結黑名單請求]]已有回應，請前往查看。"), "--~~").concat("~~"),
          editSummary: window.wgULS("有关[[Qiuwen_talk:管理员告示板|垃圾链接黑名单请求]]的通知", "有關[[Qiuwen_talk:管理员告示板|垃圾連結黑名單請求]]的通知")
        },
        shl: {
          label: "Spam-whitelist",
          title: window.wgULS("垃圾链接白名单请求有新回应", "垃圾連結白名單請求有新回應"),
          content: "".concat(window.wgULS("您的[[Qiuwen_talk:管理员告示板|垃圾链接白名单请求]]已有回应，请前往查看。", "您的[[Qiuwen_talk:管理员告示板|垃圾連結白名單請求]]已有回應，請前往查看。"), "--~~").concat("~~"),
          editSummary: window.wgULS("有关[[Qiuwen_talk:管理员告示板|垃圾链接白名单请求]]的通知", "有關[[Qiuwen_talk:管理员告示板|垃圾連結白名單請求]]的通知")
        }
      };
      Twinkle.talkback.evaluate = (e) => {
        const form = e.target;
        const [tbtarget] = form.getChecked("tbtarget");
        let page;
        let message;
        const section = form.section.value;
        let editSummary;
        if (tbtarget === "notice") {
          page = form.noticeboard.value;
          ({
            editSummary
          } = Twinkle.talkback.noticeboards[page]);
        } else {
          page = form.page ? form.page.value : mw.config.get("wgUserName");
          if (form.message) {
            message = form.message.value.trim();
          }
          if (tbtarget === "mail") {
            editSummary = window.wgULS("通知：有新邮件", "通知：有新郵件");
          } else if (tbtarget === "see") {
            editSummary = "".concat(window.wgULS("请看看", "請看看"), "[[:").concat(page).concat(section ? "#".concat(section) : "", "]]").concat(window.wgULS("上的讨论", "上的討論"));
          } else {
            editSummary = "".concat(window.wgULS("回复通告", "回覆通告"), "（[[:");
            if (tbtarget !== "other" && !new RegExp("^\\s*".concat(Morebits.namespaceRegex(3), ":"), "i").test(page)) {
              editSummary += "User talk:";
            }
            editSummary += "".concat(page + (section ? "#".concat(section) : ""), "]])");
          }
        }
        Morebits.simpleWindow.setButtonsEnabled(false);
        Morebits.status.init(form);
        const fullUserTalkPageName = "".concat(mw.config.get("wgFormattedNamespaces")[mw.config.get("wgNamespaceIds").user_talk], ":").concat(mw.config.get("wgRelevantUserName"));
        Morebits.wiki.actionCompleted.redirect = fullUserTalkPageName;
        Morebits.wiki.actionCompleted.notice = window.wgULS("回复通告完成，将在几秒内刷新页面", "回覆通告完成，將在幾秒內重新整理頁面");
        const text = "\n\n".concat(Twinkle.talkback.getNoticeWikitext(tbtarget, page, section, message)[0]);
        const talkpage = new Morebits.wiki.page(fullUserTalkPageName, window.wgULS("加入回复通告", "加入回覆通告"));
        talkpage.setEditSummary(editSummary);
        talkpage.setChangeTags(Twinkle.changeTags);
        talkpage.setAppendText(text);
        talkpage.setCreateOption("recreate");
        talkpage.setMinorEdit(Twinkle.getPref("markTalkbackAsMinor"));
        talkpage.setFollowRedirect(true);
        talkpage.append();
      };
      Twinkle.talkback.preview = (form) => {
        const [tbtarget] = form.getChecked("tbtarget");
        const section = form.section.value;
        let page;
        let message;
        if (tbtarget === "notice") {
          page = form.noticeboard.value;
        } else {
          page = form.page ? form.page.value : mw.config.get("wgUserName");
          if (form.message) {
            message = form.message.value.trim();
          }
        }
        const [noticetext] = Twinkle.talkback.getNoticeWikitext(tbtarget, page, section, message);
        form.previewer.beginRender(noticetext, "User_talk:".concat(mw.config.get("wgRelevantUserName")));
      };
      Twinkle.talkback.getNoticeWikitext = (tbtarget, page, section, message) => {
        let text;
        let title;
        let content;
        if (tbtarget === "notice") {
          ({
            title
          } = Twinkle.talkback.noticeboards[page]);
          content = Morebits.string.safeReplace(Twinkle.talkback.noticeboards[page].content, "$SECTION", section);
          text = "== ".concat(title, " ==\n").concat(content);
        } else if (tbtarget === "see") {
          title = page + window.wgULS("的相关讨论", "的相關討論");
          content = "{{".concat("subst:", "Please see|location=".concat(page).concat(section ? "#".concat(section) : "", "|more=").concat(message.trim(), "}}"));
          text = "{{".concat("subst:", "Please see|location=".concat(page).concat(section ? "#".concat(section) : "", "|more=").concat(message.trim(), "}}"));
        } else {
          text = "==";
          if (tbtarget === "mail") {
            title = Twinkle.getPref("mailHeading");
            content = "{{You've got mail|subject=".concat(section, "|ts=~~").concat("~", "~~}}");
            text += "".concat(Twinkle.getPref("mailHeading"), "==\n{{You've got mail|subject=").concat(section);
          } else {
            title = Twinkle.getPref("talkbackHeading").replace(/^\s*=+\s*(.*?)\s*=+$\s*/, "$1");
            content = "{{talkback|".concat(page).concat(section ? "|".concat(section) : "");
            text += "".concat(Twinkle.getPref("talkbackHeading").replace(/^\s*=+\s*(.*?)\s*=+$\s*/, "$1"), "==\n{{talkback|").concat(page).concat(section ? "|".concat(section) : "");
          }
          content += "|ts=~~".concat("~", "~~}}");
          text += "|ts=~~".concat("~", "~~}}");
          if (message) {
            content += "\n".concat(message);
            text += "\n".concat(message, "  ~~").concat("~~");
          } else if (Twinkle.getPref("insertTalkbackSignature")) {
            text += "\n~~".concat("~~");
          }
        }
        return [text, title, content];
      };
      Twinkle.addInitCallback(Twinkle.talkback, "talkback");
    })(jQuery);
  }
});
//! src/Twinkle/modules/twinklespeedy.js
var twinklespeedy_exports = {};
var import_ext_gadget3;
var init_twinklespeedy = __esm({
  "src/Twinkle/modules/twinklespeedy.js"() {
    "use strict";
    import_ext_gadget3 = require("ext.gadget.Util");
    /*! Twinkle.js - twinklespeedy.js */
    (function twinklespeedy($) {
      const $body = $("body");
      Twinkle.speedy = () => {
        if (mw.config.get("wgNamespaceNumber") < 0 || !mw.config.get("wgArticleId")) {
          return;
        }
        Twinkle.addPortletLink(Twinkle.speedy.callback, window.wgULS("速删", "速刪"), "tw-csd", Morebits.userIsSysop ? window.wgULS("快速删除", "快速刪除") : window.wgULS("请求快速删除", "請求快速刪除"));
      };
      Twinkle.speedy.callback = () => {
        Twinkle.speedy.initDialog(Morebits.userIsSysop ? Twinkle.speedy.callback.evaluateSysop : Twinkle.speedy.callback.evaluateUser, true);
      };
      Twinkle.speedy.dialog = null;
      Twinkle.speedy.hasCSD = !!document.querySelector("#delete-reason");
      Twinkle.speedy.mode = {
        sysopSingleSubmit: 1,
        // radio buttons, no subgroups, submit when "Submit" button is clicked
        sysopRadioClick: 2,
        // radio buttons, no subgroups, submit when a radio button is clicked
        sysopMultipleSubmit: 3,
        // check boxes, subgroups, "Submit" button already present
        sysopMultipleRadioClick: 4,
        // check boxes, subgroups, need to add a "Submit" button
        userMultipleSubmit: 5,
        // check boxes, subgroups, "Submit" button already pressent
        userMultipleRadioClick: 6,
        // check boxes, subgroups, need to add a "Submit" button
        userSingleSubmit: 7,
        // radio buttons, subgroups, submit when "Submit" button is clicked
        userSingleRadioClick: 8,
        // radio buttons, subgroups, submit when a radio button is clicked
        // are we in "delete page" mode?
        // (sysops can access both "delete page" [sysop] and "tag page only" [user] modes)
        isSysop: (mode) => {
          return mode === Twinkle.speedy.mode.sysopSingleSubmit || mode === Twinkle.speedy.mode.sysopMultipleSubmit || mode === Twinkle.speedy.mode.sysopRadioClick || mode === Twinkle.speedy.mode.sysopMultipleRadioClick;
        },
        // do we have a "Submit" button once the form is created?
        hasSubmitButton: (mode) => {
          return mode === Twinkle.speedy.mode.sysopSingleSubmit || mode === Twinkle.speedy.mode.sysopMultipleSubmit || mode === Twinkle.speedy.mode.sysopMultipleRadioClick || mode === Twinkle.speedy.mode.userMultipleSubmit || mode === Twinkle.speedy.mode.userMultipleRadioClick || mode === Twinkle.speedy.mode.userSingleSubmit;
        },
        // is db-multiple the outcome here?
        isMultiple: (mode) => {
          return mode === Twinkle.speedy.mode.userMultipleSubmit || mode === Twinkle.speedy.mode.sysopMultipleSubmit || mode === Twinkle.speedy.mode.userMultipleRadioClick || mode === Twinkle.speedy.mode.sysopMultipleRadioClick;
        }
      };
      Twinkle.speedy.initDialog = (callbackfunc) => {
        Twinkle.speedy.dialog = new Morebits.simpleWindow(Twinkle.getPref("speedyWindowWidth"), Twinkle.getPref("speedyWindowHeight"));
        const {
          dialog
        } = Twinkle.speedy;
        dialog.setTitle(window.wgULS("选择快速删除理由", "選擇快速刪除理由"));
        dialog.setScriptName("Twinkle");
        dialog.addFooterLink(window.wgULS("快速删除方针", "快速刪除方針"), "QW:CSD");
        dialog.addFooterLink(window.wgULS("速删设置", "速刪設定"), "H:TW/PREF#speedy");
        dialog.addFooterLink(window.wgULS("Twinkle帮助", "Twinkle說明"), "H:TW/DOC#speedy");
        const form = new Morebits.quickForm(callbackfunc, Twinkle.getPref("speedySelectionStyle") === "radioClick" ? "change" : null);
        if (Morebits.userIsSysop) {
          form.append({
            type: "checkbox",
            list: [{
              label: window.wgULS("只标记，不删除", "只標記，不刪除"),
              value: "tag_only",
              name: "tag_only",
              tooltip: window.wgULS("若您只想标记此页面而不是将其删除", "若您只想標記此頁面而不是將其刪除"),
              checked: !(Twinkle.speedy.hasCSD || Twinkle.getPref("deleteSysopDefaultToDelete")),
              event: (event) => {
                const cForm = event.target.form;
                const cChecked = event.target.checked;
                if (cForm.talkpage) {
                  cForm.talkpage.disabled = cChecked;
                  cForm.talkpage.checked = !cChecked && Twinkle.getPref("deleteTalkPageOnDelete");
                }
                cForm.redirects.disabled = cChecked;
                cForm.redirects.checked = !cChecked;
                cForm.delmultiple.disabled = cChecked;
                cForm.delmultiple.checked = false;
                cForm.openusertalk.disabled = cChecked;
                cForm.openusertalk.checked = false;
                cForm.notify.disabled = !cChecked;
                cForm.notify.checked = cChecked;
                cForm.multiple.disabled = !cChecked;
                cForm.multiple.checked = false;
                cForm.salting.checked = false;
                Twinkle.speedy.callback.modeChanged(cForm);
                event.stopPropagation();
              }
            }]
          });
          const deleteOptions = form.append({
            type: "div",
            name: "delete_options"
          });
          deleteOptions.append({
            type: "header",
            label: window.wgULS("删除相关选项", "刪除相關選項")
          });
          if (mw.config.get("wgNamespaceNumber") % 2 === 0 && mw.config.get("wgNamespaceNumber") !== 2) {
            deleteOptions.append({
              type: "checkbox",
              list: [{
                label: window.wgULS("删除讨论页", "刪除討論頁"),
                value: "talkpage",
                name: "talkpage",
                tooltip: window.wgULS("删除时附带删除此页面的讨论页。", "刪除時附帶刪除此頁面的討論頁。"),
                checked: Twinkle.getPref("deleteTalkPageOnDelete"),
                event: (event) => {
                  event.stopPropagation();
                }
              }]
            });
          }
          deleteOptions.append({
            type: "checkbox",
            list: [{
              label: window.wgULS("删除重定向", "刪除重新導向"),
              value: "redirects",
              name: "redirects",
              tooltip: window.wgULS("删除到此页的重定向。", "刪除到此頁的重新導向。"),
              checked: Twinkle.getPref("deleteRedirectsOnDelete"),
              event: (event) => {
                event.stopPropagation();
              }
            }]
          });
          deleteOptions.append({
            type: "checkbox",
            list: [{
              label: window.wgULS("应用多个理由删除", "應用多個理由刪除"),
              value: "delmultiple",
              name: "delmultiple",
              tooltip: window.wgULS("您可选择应用于该页的多个理由。", "您可選擇應用於該頁的多個理由。"),
              event: (event) => {
                Twinkle.speedy.callback.modeChanged(event.target.form);
                event.stopPropagation();
              }
            }]
          });
          deleteOptions.append({
            type: "checkbox",
            list: [{
              label: window.wgULS("开启用户讨论页", "開啟使用者討論頁"),
              value: "openusertalk",
              name: "openusertalk",
              tooltip: window.wgULS("此项的默认值为您的开启讨论页设置。在您选择应用多条理由删除时此项将保持不变。", "此項的預設值為您的開啟討論頁設定。在您選擇應用多條理由刪除時此項將保持不變。"),
              checked: false
            }]
          });
        }
        const tagOptions = form.append({
          type: "div",
          name: "tag_options"
        });
        if (Morebits.userIsSysop) {
          tagOptions.append({
            type: "header",
            label: window.wgULS("标记相关选项", "標記相關選項")
          });
        }
        tagOptions.append({
          type: "checkbox",
          list: [{
            label: window.wgULS("如可能，通知创建者", "如可能，通知建立者"),
            value: "notify",
            name: "notify",
            tooltip: window.wgULS("一个通知模板将会被加入创建者的讨论页，若您启用了该理据的通知。", "一個通知模板將會被加入建立者的討論頁，若您啟用了該理據的通知。"),
            checked: !Morebits.userIsSysop || !(Twinkle.speedy.hasCSD || Twinkle.getPref("deleteSysopDefaultToDelete")),
            event: (event) => {
              event.stopPropagation();
            }
          }, {
            label: window.wgULS("清空页面", "清空頁面"),
            value: "blank",
            name: "blank",
            tooltip: window.wgULS("在标记模板前，先清空页面，适用于严重破坏或负面生者传记等。", "在標記模板前，先清空頁面，適用於嚴重破壞或負面生者傳記等。")
          }, {
            label: window.wgULS("同时标记以请求白纸保护", "同時標記以請求白紙保護"),
            value: "salting",
            name: "salting",
            tooltip: window.wgULS("选取后，快速删除模板后将附带 {{salt}} 标签，以请求执行删除的管理员进行白纸保护，仅在页面创建3次以上才选择此项。", "選取後，快速刪除模板後將附帶 {{salt}} 標籤，以請求執行刪除的管理員進行白紙保護，僅在頁面建立3次以上才選擇此項。")
          }, {
            label: window.wgULS("应用多个理由", "應用多個理由"),
            value: "multiple",
            name: "multiple",
            tooltip: window.wgULS("您可选择应用于该页的多个理由。", "您可選擇應用於該頁的多個理由。"),
            event: (event) => {
              Twinkle.speedy.callback.modeChanged(event.target.form);
              event.stopPropagation();
            }
          }]
        });
        form.append({
          type: "div",
          id: "prior-deletion-count"
        });
        form.append({
          type: "div",
          name: "work_area",
          label: window.wgULS("初始化CSD模块失败，请重试，或将这报告给Twinkle开发者。", "初始化CSD模組失敗，請重試，或將這報告給Twinkle開發者。")
        });
        if (Twinkle.getPref("speedySelectionStyle") !== "radioClick") {
          form.append({
            type: "submit",
            className: "tw-speedy-submit"
          });
        }
        const result = form.render();
        dialog.setContent(result);
        dialog.display();
        Twinkle.speedy.callback.modeChanged(result);
        Twinkle.speedy.callback.priorDeletionCount();
      };
      Twinkle.speedy.callback.getMode = (form) => {
        let mode = Twinkle.speedy.mode.userSingleSubmit;
        if (form.tag_only && !form.tag_only.checked) {
          if (form.delmultiple.checked) {
            mode = Twinkle.speedy.mode.sysopMultipleSubmit;
          } else {
            mode = Twinkle.speedy.mode.sysopSingleSubmit;
          }
        } else if (form.multiple.checked) {
          mode = Twinkle.speedy.mode.userMultipleSubmit;
        } else {
          mode = Twinkle.speedy.mode.userSingleSubmit;
        }
        if (Twinkle.getPref("speedySelectionStyle") === "radioClick") {
          mode++;
        }
        return mode;
      };
      Twinkle.speedy.callback.modeChanged = (form) => {
        const namespace = mw.config.get("wgNamespaceNumber");
        const mode = Twinkle.speedy.callback.getMode(form);
        const isSysopMode = Twinkle.speedy.mode.isSysop(mode);
        if (isSysopMode) {
          $body.find("[name=delete_options]").show();
          $body.find("[name=tag_options]").hide();
          $body.find("button.tw-speedy-submit").text(window.wgULS("删除页面", "刪除頁面"));
        } else {
          $body.find("[name=delete_options]").hide();
          $body.find("[name=tag_options]").show();
          $body.find("button.tw-speedy-submit").text(window.wgULS("标记页面", "標記頁面"));
        }
        const work_area = new Morebits.quickForm.element({
          type: "div",
          name: "work_area"
        });
        if (mode === Twinkle.speedy.mode.userMultipleRadioClick || mode === Twinkle.speedy.mode.sysopMultipleRadioClick) {
          const evaluateType = Twinkle.speedy.mode.isSysop(mode) ? "evaluateSysop" : "evaluateUser";
          work_area.append({
            type: "div",
            label: window.wgULS("当选择完成后，单击：", "當選擇完成後，點擊：")
          });
          work_area.append({
            type: "button",
            name: "submit-multiple",
            label: isSysopMode ? window.wgULS("删除页面", "刪除頁面") : window.wgULS("标记页面", "標記頁面"),
            event: (event) => {
              Twinkle.speedy.callback[evaluateType](event);
              event.stopPropagation();
            }
          });
        }
        const radioOrCheckbox = Twinkle.speedy.mode.isMultiple(mode) ? "checkbox" : "radio";
        if (isSysopMode) {
          work_area.append({
            type: "header",
            label: window.wgULS("自定义理由", "自訂理由")
          });
          work_area.append({
            type: radioOrCheckbox,
            name: "csd",
            list: Twinkle.speedy.generateCsdList(Twinkle.speedy.customRationale, mode)
          });
        }
        switch (namespace) {
          case 0:
            work_area.append({
              type: "header",
              label: window.wgULS("条目", "條目")
            });
            work_area.append({
              type: radioOrCheckbox,
              name: "csd",
              list: Twinkle.speedy.generateCsdList(Twinkle.speedy.articleList, mode)
            });
            break;
          case 2:
            work_area.append({
              type: "header",
              label: window.wgULS("用户页", "使用者頁面")
            });
            work_area.append({
              type: radioOrCheckbox,
              name: "csd",
              list: Twinkle.speedy.generateCsdList(Twinkle.speedy.userList, mode)
            });
            break;
          case 3:
            if (mw.util.isIPAddress(mw.config.get("wgRelevantUserName"))) {
              work_area.append({
                type: "header",
                label: window.wgULS("用户讨论页", "使用者討論頁")
              });
              work_area.append({
                type: radioOrCheckbox,
                name: "csd",
                list: Twinkle.speedy.generateCsdList(Twinkle.speedy.usertalkList, mode)
              });
            }
            break;
          case 6:
            work_area.append({
              type: "header",
              label: window.wgULS("文件", "檔案")
            });
            work_area.append({
              type: radioOrCheckbox,
              name: "csd",
              list: Twinkle.speedy.generateCsdList(Twinkle.speedy.fileList, mode)
            });
            if (!Twinkle.speedy.mode.isSysop(mode)) {
              work_area.append({
                type: "div",
                label: window.wgULS("标记CSD F1、F3、F5，请使用Twinkle的“图权”功能。", "標記CSD F1、F3、F5，請使用Twinkle的「圖權」功能。")
              });
            }
            break;
          case 14:
            work_area.append({
              type: "header",
              label: window.wgULS("分类", "分類")
            });
            work_area.append({
              type: radioOrCheckbox,
              name: "csd",
              list: Twinkle.speedy.generateCsdList(Twinkle.speedy.categoryList, mode)
            });
            break;
          case 118:
            work_area.append({
              type: "header",
              label: "草稿"
            });
            work_area.append({
              type: radioOrCheckbox,
              name: "csd",
              list: Twinkle.speedy.generateCsdList(Twinkle.speedy.draftList, mode)
            });
            break;
          case (namespace % 2 === 1 && namespace !== 3):
            work_area.append({
              type: "header",
              label: window.wgULS("讨论页", "討論頁")
            });
            work_area.append({
              type: radioOrCheckbox,
              name: "csd",
              list: Twinkle.speedy.generateCsdList(Twinkle.speedy.talkList, mode)
            });
            break;
          default:
            break;
        }
        let generalCriteria = Twinkle.speedy.generalList;
        if (!Twinkle.speedy.mode.isSysop(mode)) {
          generalCriteria = [...Twinkle.speedy.customRationale, ...(0, import_ext_gadget3.generateArray)(generalCriteria)];
        }
        work_area.append({
          type: "header",
          label: window.wgULS("常规", "常規")
        });
        work_area.append({
          type: radioOrCheckbox,
          name: "csd",
          list: Twinkle.speedy.generateCsdList(generalCriteria, mode)
        });
        if (!Twinkle.speedy.mode.isSysop(mode)) {
          work_area.append({
            type: "div",
            label: window.wgULS("提报侵权页面，请使用Twinkle的“侵权”功能。", "提報侵權頁面，請使用Twinkle的「侵權」功能。")
          });
        }
        if (mw.config.get("wgIsRedirect") || Morebits.userIsSysop) {
          work_area.append({
            type: "header",
            label: "重定向"
          });
          work_area.append({
            type: radioOrCheckbox,
            name: "csd",
            list: Twinkle.speedy.generateCsdList(Twinkle.speedy.redirectList, mode)
          });
        }
        const [old_area] = Morebits.quickForm.getElements(form, "work_area");
        form.replaceChild(work_area.render(), old_area);
        if (isSysopMode && Twinkle.speedy.hasCSD) {
          const [customOption] = $body.find("input[name=csd][value=reason]");
          if (customOption) {
            if (Twinkle.getPref("speedySelectionStyle") !== "radioClick") {
              customOption.click();
              customOption.parentNode.appendChild(customOption.subgroup);
            }
            customOption.subgroup.querySelector("input").value = decodeURIComponent($body.find("#delete-reason").text()).replace(/\+/g, " ");
          }
        }
        if (document.querySelector('input[value="g7"]') && Twinkle.getPref("enlargeG7Input")) {
          document.querySelector('input[value="g7"]').style = "height: 2em; width: 2em; height: -moz-initial; width: -moz-initial; -moz-transform: scale(2); -o-transform: scale(2);";
          document.querySelector('input[value="g7"]').labels[0].style = "font-size: 1.5em; line-height: 1.5em;";
        }
        if (!isSysopMode && mw.config.get("wgPageContentModel") !== "wikitext") {
          $body.find("[name=tag_options]").hide();
          $body.find("[name=work_area]").empty();
          const message = [window.wgULS("Twinkle不支持在页面内容模型为", "Twinkle不支援在頁面內容模型為"), mw.config.get("wgPageContentModel"), window.wgULS("的页面上挂上快速删除模板，请参见", "的頁面上掛上快速刪除模板，請參見"), $("<a>").attr({
            target: "_blank",
            rel: "noopener noreferrer",
            href: mw.util.getUrl("QW:SPECIALSD")
          }).text(window.wgULS("手动放置模板时的注意事项", "手動放置模板時的注意事項"))[0], "。"];
          $body.find("[name=work_area]").append(message);
          Morebits.simpleWindow.setButtonsEnabled(false);
        } else {
          Morebits.simpleWindow.setButtonsEnabled(true);
        }
      };
      Twinkle.speedy.callback.priorDeletionCount = () => {
        const query = {
          action: "query",
          format: "json",
          list: "logevents",
          letype: "delete",
          leaction: "delete/delete",
          // Just pure page deletion, no redirect overwrites or revdel
          letitle: mw.config.get("wgPageName"),
          leprop: "",
          // We're just counting we don't actually care about the entries
          lelimit: 5
          // A little bit goes a long way
        };
        new Morebits.wiki.api(window.wgULS("检查之前的删除", "檢查之前的刪除"), query, (apiobj) => {
          const response = apiobj.getResponse();
          const delCount = response.query.logevents.length;
          if (delCount) {
            let message = window.wgULS("被删除", "被刪除");
            if (response.continue) {
              message += window.wgULS("超过", "超過");
            }
            message += "".concat(delCount, "次");
            if (delCount >= 3) {
              $body.find("#prior-deletion-count").css("color", "#ff0000");
            }
            const link = Morebits.htmlNode("a", window.wgULS("（日志）", "（日誌）"));
            link.setAttribute("href", mw.util.getUrl("Special:Log", {
              page: mw.config.get("wgPageName")
            }));
            link.setAttribute("target", "_blank");
            link.setAttribute("rel", "noopener noreferrer");
            $body.find("#prior-deletion-count").text(message);
            $body.find("#prior-deletion-count").append(link);
          }
        }).post();
      };
      Twinkle.speedy.generateCsdList = (list, mode) => {
        const isSysopMode = Twinkle.speedy.mode.isSysop(mode);
        const multiple = Twinkle.speedy.mode.isMultiple(mode);
        const hasSubmitButton = Twinkle.speedy.mode.hasSubmitButton(mode);
        const openSubgroupHandler = (e) => {
          $(e.target.form).find("input").prop("disabled", true);
          $(e.target.form).children().css("color", "gray");
          $(e.target).parent().css("color", "black").find("input").prop("disabled", false);
          $(e.target).parent().find("input:text")[0].focus();
          e.stopPropagation();
        };
        const submitSubgroupHandler = (e) => {
          const evaluateType = Twinkle.speedy.mode.isSysop(mode) ? "evaluateSysop" : "evaluateUser";
          Twinkle.speedy.callback[evaluateType](e);
          e.stopPropagation();
        };
        return Array.prototype.map.call(list, (critElement) => {
          const criterion = {
            ...critElement
          };
          if (multiple) {
            if (criterion.hideWhenMultiple) {
              return null;
            }
            if (criterion.hideSubgroupWhenMultiple) {
              criterion.subgroup = null;
            }
          } else {
            if (criterion.hideWhenSingle) {
              return null;
            }
            if (criterion.hideSubgroupWhenSingle) {
              criterion.subgroup = null;
            }
          }
          if (isSysopMode) {
            if (criterion.hideWhenSysop) {
              return null;
            }
            if (criterion.hideSubgroupWhenSysop) {
              criterion.subgroup = null;
            }
          } else {
            if (criterion.hideWhenUser) {
              return null;
            }
            if (criterion.hideSubgroupWhenUser) {
              criterion.subgroup = null;
            }
          }
          if (mw.config.get("wgIsRedirect") && criterion.hideWhenRedirect) {
            return null;
          }
          if (criterion.showInNamespaces && !criterion.showInNamespaces.includes(mw.config.get("wgNamespaceNumber"))) {
            return null;
          } else if (criterion.hideInNamespaces && criterion.hideInNamespaces.includes(mw.config.get("wgNamespaceNumber"))) {
            return null;
          }
          if (criterion.subgroup && !hasSubmitButton) {
            criterion.subgroup = (0, import_ext_gadget3.generateArray)(criterion.subgroup, {
              type: "button",
              name: "submit",
              label: isSysopMode ? window.wgULS("删除页面", "刪除頁面") : window.wgULS("标记页面", "標記頁面"),
              event: submitSubgroupHandler
            });
            criterion.event = openSubgroupHandler;
          }
          if (isSysopMode) {
            const originalEvent = criterion.event;
            criterion.event = (e) => {
              if (multiple) {
                return originalEvent(e);
              }
              const normalizedCriterion = Twinkle.speedy.normalizeHash[e.target.value];
              $body.find("[name=openusertalk]").prop("checked", Twinkle.getPref("openUserTalkPageOnSpeedyDelete").includes(normalizedCriterion));
              if (originalEvent) {
                return originalEvent(e);
              }
            };
          }
          return criterion;
        });
      };
      Twinkle.speedy.customRationale = [{
        label: "自定义理由".concat(Morebits.userIsSysop ? "（自定义删除理由）" : ""),
        value: "reason",
        tooltip: "该页至少应该符合一条快速删除的标准，并且您必须在理由中提到。",
        subgroup: {
          name: "reason_1",
          type: "input",
          label: "理由：",
          size: 60
        }
      }];
      Twinkle.speedy.fileList = [{
        label: "F1：明显不符合本站著作权方针的文件",
        value: "f1",
        tooltip: "包括以下情况：1.上传后3天内仍然来源不明、著作权不明的文件。2.上传者宣称拥有，而在其他来源找到的文件。3.文件宣称由某作者依据某自由著作权协议发布，但找不到该自由协议的声明。4.其他明显侵权的文件，可附加侵权理由。"
      }, {
        label: "F2：重复且不再被使用的文件",
        value: "f2",
        tooltip: "包括以下情况：与现有文件完全相同（或与现有文件内容一致但尺寸较小），且没有客观需要（如某些场合需使用小尺寸图片）的文件。或是被更加清晰的文件、SVG格式文件所取代的文件。请提报者确定文件没有任何页面使用后再提报删除，并附注对应质量更好的文件名。",
        subgroup: {
          name: "f2_filename",
          type: "input",
          label: "新文件名：",
          tooltip: "可不含“File:”前缀。"
        }
      }];
      Twinkle.speedy.articleList = [{
        label: "A1：内容空泛或完全没有内容。",
        value: "a1",
        tooltip: "条目的内容笼统，或甚至根本没有提及条目主体，使条目不能用以区分其他事物；或条目只包括外部链接、参见、参考来源、分类、模板，而没有文字描述。消歧义页、重定向页不适用此条。请注意有些用户可能会多次保存，若此类页面的最后一次编辑时间超过24小时，则可提请快速删除。"
      }, {
        label: "A2：与其他条目或其历史版本重复，且不适合作为其重定向。",
        value: "a2",
        tooltip: "条目创建时的内容，与其他现有条目（或其历史版本）内容完全相同或非常相似，且名称不适合作为后者的重定向。不包括拆分、合并、重组后产生的条目。如有疑虑，可转交删除讨论。若后创建的条目名称可作为重定向，可直接改为重定向；若先创建的条目宜作为后创建条目的重定向，请提请移动请求。",
        subgroup: {
          name: "a2_pagename",
          type: "input",
          label: "现有条目名：",
          tooltip: "不自动加上链接，若需要请自行加上[[]]。",
          size: 60
        }
      }, {
        label: "A3：非现代汉语或翻译拙劣的条目",
        value: "a3",
        tooltip: "条目内容绝大部分非现代汉语，包括未翻译的外语、方言及文言文；或翻译质量低下，以至于难以理解或出现较多错误。"
      }];
      Twinkle.speedy.categoryList = [{
        label: "O2：空分类。",
        value: "o2",
        tooltip: "没有收录任何页面、文件、子分类的分类。Category:请勿删除的分类中的分类不适用。"
      }];
      Twinkle.speedy.draftList = [{
        label: "O3：废弃草稿。",
        value: "o3",
        tooltip: "草稿名字空间内六个月内无编辑的页面。"
      }];
      Twinkle.speedy.userList = [{
        label: "O1：用户请求删除自己的用户页。",
        value: "o1",
        tooltip: "管理员需查看编辑历史，确认该页面不是从其他名字空间移动而来。"
      }];
      Twinkle.speedy.generalList = [{
        label: "G1：明显违反法律法规或违背公序良俗的页面",
        value: "g1",
        tooltip: "明显违反服务器所在地的法律法规及有关规定，或突破社会公序良俗底线，按照中华人民共和国互联网管理规定应予删除的页面。"
      }, {
        label: "G2：没有实际内容的页面",
        value: "g2",
        tooltip: "仅包括无意义字符串而没有实际内容的页面。由用户本人创建的用户页、用户讨论页，及专为测试提供的沙盒，不适用此准则。"
      }, {
        label: "G3：纯粹破坏",
        value: "g3",
        tooltip: "包括但不限于明显的恶作剧、错误信息、人身攻击等，以及清理移动破坏时留下的重定向。若收到或发现严重的人身攻击与诋毁，管理员及其他用户应通知监督员进行监督隐藏。"
      }, {
        label: "G4：重新创建已被删除的页面",
        value: "g4",
        tooltip: "若现有页面与曾在删除讨论（含页面存废讨论、文件存废讨论和侵权审核，不含快速删除）中被删除内容相同或非常相似，且现有内容仍然适用删除讨论中的结论，无论标题是否相同，都适用本标准。若现有页面标题与已删版本不一致，则提请速删者应一并注明已删版本的页面名；若该页面之前被快速删除，请以相同理由重新提请速删。若现有内容不适用删除讨论中的结论，应重新提出删除讨论。",
        subgroup: [{
          name: "g4_pagename",
          type: "input",
          label: "已删版此页面名：",
          size: 60
        }],
        hideSubgroupWhenMultiple: true
      }, {
        label: "G5：因技术原因删除页面",
        value: "g5",
        tooltip: "包括以下情形：因移动请求而删除页面；以覆盖删除重定向；删除无用的MediaWiki页面，及其他技术团队或界面管理员认为有必要执行的快速删除情形。"
      }, {
        label: "G6：原作者提请删除或清空页面，且页面原作者仅有一人",
        value: "g6",
        tooltip: "页面原作者持合理理由提出的快速删除；或页面原作者（实际贡献者）清空页面，其他用户提交的快速删除。页面原作者（实际贡献者）仅一人时满足本准则。若页面实际贡献者多于一人，请持合理理由提交删除讨论。后一情形不包括用户页、用户讨论页，且应在页面最后一次编辑6小时后提出。被导入的页面，导入者视为原作者。",
        subgroup: {
          name: "g6_rationale",
          type: "input",
          label: "删除原因：",
          size: 60
        },
        hideSubgroupWhenSysop: true
      }, {
        label: "G7：明显的广告宣传",
        value: "g7",
        tooltip: "应用于明显的广告宣传，或只有相关人物、组织等事物联系方法（包括但不限于电话、地址、电子邮箱、即时通讯软件联系方式（如QQ号、微信号）、社交媒体链接）。若宣传语气不明显，建议转交删除讨论。"
      }, {
        label: "G8：未列明可靠来源且语调负面的生者传记",
        value: "g8",
        tooltip: "本情况下有的页面严重侵犯他人名誉权，有时可能侵犯隐私权，可能需要提请监督。"
      }, {
        label: "G9：孤立页面",
        value: "g9",
        tooltip: "包括以下几种类型：1.没有对应文件的文件页面；2.没有对应母页面的子页面（用户页子页面除外）；3.指向不存在页面的重定向；4.没有对应内容页面的讨论页（讨论页存档、用户讨论页，以及在主页面挂有{{CSD Placeholder}}模板的讨论页除外）；5.不存在注册用户的用户页及用户页子页面（随用户更名产生的用户页重定向除外）。请在删除时注意有无将内容移至他处的必要。"
      }];
      Twinkle.speedy.redirectList = [{
        label: "R1：不能发挥实际作用的重定向。",
        value: "r1",
        tooltip: "包括以下情况：1.指向本身或循环的重定向，如A→B→C→……→A或A→A（繁简重定向不适用此项）；2.格式错误的重定向，包括标题仅为繁体、繁简混用、消歧义使用的括弧或空格错误、间隔号使用错误（因类推简化字未收录至《通用规范汉字表》导致的繁简混杂情形，或系统无法自动进行繁简处理的情形，则不适用）。若重定向页面标题，与合乎命名常规的目标页面标题之间，仅存在繁简字体的区别，而不存在词语用法区别，则不保留该重定向。因系统无法自动繁简转换而必须保留的重定向页面除外。对于其他未列出的情况，若用户认为该重定向无法发挥实际作用，且依据常识没有任何争议，可凭合理理由提请速删，由管理员判断。指向不存在页面的重定向，适用G5准则。",
        subgroup: {
          name: "r1_type",
          type: "select",
          label: "适用类型：",
          list: [{
            label: "请选择",
            value: ""
          }, {
            label: "指向本身或循环的重定向",
            value: "指向本身或循环的重定向。"
          }, {
            label: "标题繁简混用",
            value: "标题繁简混用。"
          }, {
            label: "消歧义使用的括号或空格错误",
            value: "消歧义使用的括号或空格错误。"
          }, {
            label: "间隔号使用错误",
            value: "间隔号使用错误。"
          }, {
            label: "其他理由（请勾选上方“应用多个理由”，并填写自定义理由）",
            value: ""
          }]
        }
      }, {
        label: "R2：名称与导向目标代表事物不一致或不完全一致的重定向。",
        value: "r2",
        tooltip: "包括但不限于以下情况：1.由任何非条目页面（除用户页）导向条目页的重定向，以及由条目页导向任何非条目页面的重定向。2.明显笔误的重定向，如出现不常见的错别字等。（别称重定向不适用此项。若含错别字或有笔误的重定向使用频率高，此类重定向有助于帮助用户寻找到正确的页面，不适用此标准。有争议的此类重定向宜提交删除讨论。）3.明显与导向目标所涵盖的主题无关，或比导向目标所涵盖的主题更广泛的重定向。（若不明显，可改为提交删除讨论。）",
        subgroup: {
          name: "r2_type",
          type: "select",
          label: "适用类型：",
          list: [{
            label: "请选择",
            value: ""
          }, {
            label: "由非条目页面（除用户页）导向条目页的重定向",
            value: "由非条目页面（除用户页）导向条目页的重定向。"
          }, {
            label: "由条目页导向非条目页面的重定向",
            value: "由条目页导向任何非条目页面的重定向。"
          }, {
            label: "明显笔误的重定向",
            value: "明显笔误的重定向。"
          }, {
            label: "与导向目标无关或比其范围更广泛的重定向",
            value: "与导向目标无关或比其范围更广泛的重定向。"
          }, {
            label: "其他理由（请勾选上方“应用多个理由”，并填写自定义理由）",
            value: ""
          }]
        }
      }];
      Twinkle.speedy.normalizeHash = {
        reason: "db",
        multiple: "multiple",
        "multiple-finish": "multiple-finish",
        g1: "g1",
        g2: "g2",
        g3: "g3",
        g4: "g4",
        g5: "g5",
        g6: "g6",
        g7: "g7",
        g8: "g8",
        g9: "g9",
        a1: "a1",
        a2: "a2",
        a3: "a3",
        r1: "r1",
        r2: "r2",
        f1: "f1",
        f2: "f2",
        f3: "f3",
        f4: "f4",
        f5: "f5",
        o1: "o1",
        o2: "o2",
        o3: "o3"
      };
      Twinkle.speedy.callbacks = {
        getTemplateCodeAndParams: (params) => {
          let code;
          let parameters;
          let i;
          if (params.normalizeds.length > 1) {
            code = "{{delete";
            params.utparams = {};
            var _iterator12 = _createForOfIteratorHelper(params.normalizeds.entries()), _step12;
            try {
              for (_iterator12.s(); !(_step12 = _iterator12.n()).done; ) {
                const [index, norm] = _step12.value;
                if (norm !== "db") {
                  code += "|".concat(norm.toUpperCase());
                }
                parameters = params.templateParams[index] || [];
                for (const i_ in parameters) {
                  if (typeof parameters[i_] === "string") {
                    code += "|".concat(parameters[i_]);
                  }
                }
                params.utparams = {
                  ...params.utparams,
                  ...Twinkle.speedy.getUserTalkParameters(norm, parameters)
                };
              }
            } catch (err) {
              _iterator12.e(err);
            } finally {
              _iterator12.f();
            }
            code += "}}";
          } else {
            parameters = params.templateParams[0] || [];
            code = "{{delete";
            if (params.values[0] !== "reason") {
              code += "|".concat(params.values[0]);
            }
            for (i in parameters) {
              if (typeof parameters[i] === "string") {
                code += "|".concat(parameters[i]);
              }
            }
            code += "}}";
            params.utparams = Twinkle.speedy.getUserTalkParameters(params.normalizeds[0], parameters);
          }
          return [code, params.utparams];
        },
        parseWikitext: (title, wikitext, callback) => {
          const query = {
            action: "parse",
            prop: "text",
            pst: "true",
            text: wikitext,
            contentmodel: "wikitext",
            title
          };
          const statusIndicator = new Morebits.status(window.wgULS("构造删除理由", "構造刪除理由"));
          const api2 = new Morebits.wiki.api(window.wgULS("解析删除模板", "解析刪除模板"), query, (apiObj) => {
            const reason = decodeURIComponent($(apiObj.getXML().querySelector("text").childNodes[0].nodeValue).find("#delete-reason").text().replace(/\+/g, " "));
            if (reason) {
              statusIndicator.info("完成");
            } else {
              statusIndicator.warn(window.wgULS("未能从删除模板生成删除理由", "未能從刪除模板生成刪除理由"));
            }
            callback(reason);
          }, statusIndicator);
          api2.post();
        },
        sysop: {
          main: (params) => {
            let reason;
            if (!params.normalizeds.length && params.normalizeds[0] === "db") {
              reason = prompt(window.wgULS("输入删除理由：", "輸入刪除理由："), "");
              Twinkle.speedy.callbacks.sysop.deletePage(reason, params);
            } else {
              const [code] = Twinkle.speedy.callbacks.getTemplateCodeAndParams(params);
              Twinkle.speedy.callbacks.parseWikitext(mw.config.get("wgPageName"), code, (deleteReason) => {
                if (params.promptForSummary) {
                  deleteReason = prompt(window.wgULS("输入删除理由，或单击确定以接受自动生成的：", "輸入刪除理由，或點擊確定以接受自動生成的："), deleteReason);
                }
                Twinkle.speedy.callbacks.sysop.deletePage(deleteReason, params);
              });
            }
          },
          deletePage: (reason, params) => {
            const thispage = new Morebits.wiki.page(mw.config.get("wgPageName"), window.wgULS("删除页面", "刪除頁面"));
            if (reason === null) {
              return Morebits.status.error(window.wgULS("询问理由", "詢問理由"), window.wgULS("用户取消操作。", "使用者取消操作。"));
            } else if (!reason || !reason.trim()) {
              return Morebits.status.error(window.wgULS("询问理由", "詢問理由"), window.wgULS("你不给我理由…我就…不管了…", "你不給我理由…我就…不管了…"));
            }
            const deleteMain = () => {
              thispage.setEditSummary(reason);
              thispage.setChangeTags(Twinkle.changeTags);
              thispage.setWatchlist(params.watch);
              thispage.deletePage(() => {
                thispage.getStatusElement().info("完成");
                Twinkle.speedy.callbacks.sysop.deleteTalk(params);
              });
            };
            if (params.openUserTalk) {
              thispage.setCallbackParameters(params);
              thispage.lookupCreation(() => {
                Twinkle.speedy.callbacks.sysop.openUserTalkPage(thispage);
                deleteMain();
              });
            } else {
              deleteMain();
            }
          },
          deleteTalk: (params) => {
            if (params.deleteTalkPage && params.normalized !== "o1" && !document.querySelector("#ca-talk").classList.contains("new")) {
              const talkpage = new Morebits.wiki.page("".concat(mw.config.get("wgFormattedNamespaces")[mw.config.get("wgNamespaceNumber") + 1], ":").concat(mw.config.get("wgTitle")), window.wgULS("删除讨论页", "刪除討論頁"));
              talkpage.setEditSummary("[[QW:CSD#G9|G9]]: 孤立页面：已删除页面“".concat(Morebits.pageNameNorm, "”的讨论页"));
              talkpage.setChangeTags(Twinkle.changeTags);
              talkpage.deletePage();
              setTimeout(() => {
                Twinkle.speedy.callbacks.sysop.deleteRedirects(params);
              }, 1800);
            } else {
              Twinkle.speedy.callbacks.sysop.deleteRedirects(params);
            }
          },
          deleteRedirects: (params) => {
            if (params.deleteRedirects) {
              const query = {
                action: "query",
                titles: mw.config.get("wgPageName"),
                prop: "redirects",
                rdlimit: 5e3
                // 500 is max for normal users, 5000 for bots and sysops
              };
              const qiuwen_api = new Morebits.wiki.api(window.wgULS("获取重定向列表…", "取得重新導向列表…"), query, Twinkle.speedy.callbacks.sysop.deleteRedirectsMain, new Morebits.status(window.wgULS("删除重定向", "刪除重新導向")));
              qiuwen_api.params = params;
              qiuwen_api.post();
            }
            let $link;
            let $bigtext;
            if (params.normalized === "g7") {
              $link = $("<a>").attr("href", "#").text(window.wgULS("单击这里施行保护", "點擊這裡施行保護")).css({
                "font-size": "125%",
                "font-weight": "bold"
              }).on("click", () => {
                Morebits.wiki.actionCompleted.redirect = null;
                Twinkle.speedy.dialog.close();
                mw.config.set("wgArticleId", 0);
                Twinkle.protect.callback();
              });
              $bigtext = $("<span>").css({
                "font-size": "125%",
                "font-weight": "bold"
              }).text(window.wgULS("白纸保护该页", "白紙保護該頁"));
              Morebits.status.info($bigtext[0], $link[0]);
            }
            if (mw.config.get("wgNamespaceNumber") === 6) {
              $link = $("<a>").attr("href", "#").text(window.wgULS("单击这里前往取消链入工具", "點擊這裡前往取消連入工具")).css({
                "font-weight": "bold"
              }).on("click", () => {
                Morebits.wiki.actionCompleted.redirect = null;
                Twinkle.speedy.dialog.close();
                Twinkle.unlink.callback("".concat(window.wgULS("取消对已删除文件 ", "取消對已刪除檔案 ") + Morebits.pageNameNorm, " 的使用"));
              });
              $bigtext = $("<span>").css({
                "font-weight": "bold"
              }).text(window.wgULS("取消对已删除文件的使用", "取消對已刪除檔案的使用"));
              Morebits.status.info($bigtext[0], $link[0]);
            } else {
              $link = $("<a>").attr("href", "#").text(window.wgULS("单击这里前往取消链入工具", "點擊這裡前往取消連入工具")).css({
                "font-weight": "bold"
              }).on("click", () => {
                Morebits.wiki.actionCompleted.redirect = null;
                Twinkle.speedy.dialog.close();
                Twinkle.unlink.callback(window.wgULS("取消对已删除页面 ", "取消對已刪除頁面 ") + Morebits.pageNameNorm + window.wgULS(" 的链接", " 的連結"));
              });
              $bigtext = $("<span>").text(window.wgULS("取消对已删除页面的链接", "取消對已刪除頁面的連結")).css({
                "font-weight": "bold"
              });
              Morebits.status.info($bigtext[0], $link[0]);
            }
            $link = $("<a>").attr("href", mw.util.getUrl("Special:RandomInCategory/快速删除候选")).text(window.wgULS("单击前往下一个快速删除候选", "點擊前往下一個快速刪除候選"));
            Morebits.status.info("工具", $link[0]);
          },
          openUserTalkPage: (pageobj) => {
            pageobj.getStatusElement().unlink();
            const user = pageobj.getCreator();
            const params = pageobj.getCallbackParameters();
            const query = {
              action: "edit",
              preview: "yes",
              vanarticle: Morebits.pageNameNorm
            };
            const title = "User talk:".concat(user);
            if (params.normalized === "db" || Twinkle.getPref("promptForSpeedyDeletionSummary").includes(params.normalized)) {
              const $link = $("<a>").attr({
                href: mw.util.getUrl(title, query),
                target: "_blank",
                rel: "noopener noreferrer"
              }).css({
                "font-size": "125%",
                "font-weight": "bold"
              }).text(window.wgULS("点此打开User talk:", "點此打開User talk:") + user);
              const $bigtext = $("<span>").css({
                "font-size": "125%",
                "font-weight": "bold"
              }).text(window.wgULS("通知页面创建者", "通知頁面建立者"));
              Morebits.status.info($bigtext[0], $link[0]);
            } else {
              const statusIndicator = new Morebits.status(window.wgULS("打开用户", "打開使用者") + user + window.wgULS("的讨论页编辑窗口", "的討論頁編輯視窗"), window.wgULS("打开中…", "打開中…"));
              switch (Twinkle.getPref("userTalkPageMode")) {
                case "tab":
                  window.open(mw.util.getUrl(title, query), "_blank", "noopener,noreferrer");
                  break;
                case "blank":
                  window.open(mw.util.getUrl(title, query), "_blank", "noopener,noreferrer,location=no,toolbar=no,status=no,directories=no,scrollbars=yes,width=1200,height=800");
                  break;
                /* case 'window': */
                /* falls through */
                default:
                  window.open(mw.util.getUrl(title, query), window.name === "twinklewarnwindow" ? "_blank" : "twinklewarnwindow", window.name === "twinklewarnwindow" ? "noopener,noreferrer," : "location=no,toolbar=no,status=no,directories=no,scrollbars=yes,width=1200,height=800");
                  break;
              }
              statusIndicator.info("完成");
            }
          },
          deleteRedirectsMain: (apiobj) => {
            const xmlDoc = apiobj.getXML();
            const $snapshot = $(xmlDoc).find("redirects rd");
            const total = $snapshot.length;
            const statusIndicator = apiobj.statelem;
            if (!total) {
              statusIndicator.info(window.wgULS("未发现重定向", "未發現重新導向"));
              return;
            }
            statusIndicator.status("0%");
            let current = 0;
            const onsuccess = (apiobjInner) => {
              const now = "".concat(Number.parseInt(100 * ++current / total, 10), "%");
              statusIndicator.update(now);
              apiobjInner.statelem.unlink();
              if (current >= total) {
                statusIndicator.info("".concat(now, "（完成）"));
                Morebits.wiki.removeCheckpoint();
              }
            };
            Morebits.wiki.addCheckpoint();
            $snapshot.each((_key, value) => {
              const title = $(value).attr("title");
              const page = new Morebits.wiki.page(title, "".concat(window.wgULS('删除重定向 "', '刪除重新導向 "') + title, '"'));
              page.setEditSummary("[[QW:CSD#G9|G9]]: 孤立页面：重定向到已删除页面“".concat(Morebits.pageNameNorm, "”"));
              page.setChangeTags(Twinkle.changeTags);
              page.deletePage(onsuccess);
            });
          }
        },
        user: {
          main: (pageobj) => {
            const statelem = pageobj.getStatusElement();
            if (!pageobj.exists()) {
              statelem.error(window.wgULS("页面不存在，可能已被删除", "頁面不存在，可能已被刪除"));
              return;
            }
            let text = pageobj.getPageText();
            const params = pageobj.getCallbackParameters();
            statelem.status(window.wgULS("检查页面已有标记…", "檢查頁面已有標記…"));
            const textNoSd = text.replace(/\{\{\s*(db(-\w*)?|d|delete|deletebecause|speedy|csd|速刪|速删|快删|快刪)\s*(\|(?:\{\{[^{}]*\}\}|[^{}])*)?\}\}\s*/gi, "");
            if (text !== textNoSd && !confirm(window.wgULS("在页面上找到快速删除模板，要移除并加入新的吗？", "在頁面上找到快速刪除模板，要移除並加入新的嗎？"))) {
              statelem.error(window.wgULS("快速删除模板已被置于页面中。", "快速刪除模板已被置於頁面中。"));
              return;
            }
            text = textNoSd;
            const copyvio = /(?:\{\{\s*(copyvio|侵权|侵權)[^{}]*?\}\})/i.exec(text);
            if (copyvio && !confirm(window.wgULS("著作权验证模板已被置于页面中，您是否仍想加入一个快速删除模板？", "著作權驗證模板已被置於頁面中，您是否仍想加入一個快速刪除模板？"))) {
              statelem.error(window.wgULS("页面中已有著作权验证模板。", "頁面中已有著作權驗證模板。"));
              return;
            }
            const xfd = /(?:\{\{([rsaiftcmv]fd|md1|proposed deletion)[^{}]*?\}\})/i.exec(text);
            if (xfd && !confirm(window.wgULS("删除相关模板{{", "刪除相關模板{{") + xfd[1] + window.wgULS("}}已被置于页面中，您是否仍想加入一个快速删除模板？", "}}已被置於頁面中，您是否仍想加入一個快速刪除模板？"))) {
              statelem.error(window.wgULS("页面已被提交至存废讨论。", "頁面已被提交至存廢討論。"));
              return;
            }
            const buildData = Twinkle.speedy.callbacks.getTemplateCodeAndParams(params);
            let [code] = buildData;
            [, params.utparams] = buildData;
            const thispage = new Morebits.wiki.page(mw.config.get("wgPageName"));
            if (Twinkle.getPref("markSpeedyPagesAsPatrolled")) {
              thispage.patrol();
            }
            if (mw.config.get("wgNamespaceNumber") === 10) {
              code = "<noinclude>".concat(code, "</noinclude>");
            }
            text = text.replace(/\{\{\s*([Nn]ew unreviewed article|[Uu]nreviewed|[Uu]serspace draft)\s*(\|(?:\{\{[^{}]*\}\}|[^{}])*)?\}\}\s*/g, "");
            if (mw.config.get("wgNamespaceNumber") === 6) {
              text = text.replace(/\{\{(mtc|(copy |move )?to ?(share|commons)|move to (qiuwen share|wikimedia commons)|copy to (qiuwen share|wikimedia commons))[^}]*\}\}/gi, "");
            }
            if (params.requestsalt) {
              code = "{{salt}}\n".concat(code);
            }
            let editsummary;
            if (params.normalizeds.length > 1) {
              editsummary = window.wgULS("请求快速删除（", "請求快速刪除（");
              var _iterator13 = _createForOfIteratorHelper(params.normalizeds), _step13;
              try {
                for (_iterator13.s(); !(_step13 = _iterator13.n()).done; ) {
                  const norm = _step13.value;
                  if (norm !== "db") {
                    editsummary += "[[QW:CSD#".concat(norm.toUpperCase(), "|CSD ").concat(norm.toUpperCase(), "]]、");
                  }
                }
              } catch (err) {
                _iterator13.e(err);
              } finally {
                _iterator13.f();
              }
              editsummary = editsummary.slice(0, Math.max(0, editsummary.length - 1));
              editsummary += "）";
            } else if (params.normalizeds[0] === "db") {
              editsummary = window.wgULS("请求[[QW:CSD|快速删除]]：", "請求[[QW:CSD|快速刪除]]：") + params.templateParams[0]["1"];
            } else {
              editsummary = "".concat(window.wgULS("请求快速删除", "請求快速刪除"), "（[[QW:CSD#").concat(params.normalizeds[0].toUpperCase(), "|CSD ").concat(params.normalizeds[0].toUpperCase(), "]]）");
            }
            if (params.blank) {
              text = code;
            } else {
              const qiuwen_page = new Morebits.wikitext.page(text);
              text = qiuwen_page.insertAfterTemplates("".concat(code, "\n"), Twinkle.hatnoteRegex).getText();
            }
            pageobj.setPageText(text);
            pageobj.setEditSummary(editsummary);
            pageobj.setChangeTags(Twinkle.changeTags);
            pageobj.setWatchlist(params.watch);
            pageobj.save(Twinkle.speedy.callbacks.user.tagComplete);
          },
          tagComplete: (pageobj) => {
            const params = pageobj.getCallbackParameters();
            if (params.usertalk) {
              const callback = (pageObj) => {
                let initialContrib = pageObj.getCreator();
                if (initialContrib === mw.config.get("wgUserName")) {
                  Morebits.status.warn("您（".concat(initialContrib).concat(window.wgULS("）创建了该页，跳过通知", "）建立了該頁，跳過通知")));
                  initialContrib = null;
                } else if (initialContrib === mw.config.get("wgTitle") && mw.config.get("wgNamespaceNumber") === 3) {
                  Morebits.status.warn(window.wgULS("通知页面创建者：用户创建了自己的讨论页", "通知頁面建立者：使用者建立了自己的討論頁"));
                  initialContrib = null;
                } else if (initialContrib === "A2093064-bot" && params.normalizeds[0] === "g15") {
                  Morebits.status.warn(window.wgULS("通知页面创建者：由机器人创建，跳过通知", "通知頁面建立者：由機器人建立，跳過通知"));
                  initialContrib = null;
                } else {
                  const talkPageName = "User talk:".concat(initialContrib);
                  const usertalkpage = new Morebits.wiki.page(talkPageName, "".concat(window.wgULS("通知页面创建者（", "通知頁面建立者（") + initialContrib, "）"));
                  let notifytext;
                  notifytext = "\n{{".concat("subst:", "db-notice|target=".concat(Morebits.pageNameNorm));
                  notifytext += "|nowelcome=yes'}}--~~".concat("~~");
                  let editsummary = "通知：";
                  if (params.normalizeds.includes("g3")) {
                    editsummary += "一攻击性页面";
                  } else {
                    editsummary += "页面[[".concat(Morebits.pageNameNorm, "]]");
                  }
                  editsummary += "快速删除提名";
                  usertalkpage.setAppendText(notifytext);
                  usertalkpage.setEditSummary(editsummary);
                  usertalkpage.setChangeTags(Twinkle.changeTags);
                  usertalkpage.setCreateOption("recreate");
                  usertalkpage.setFollowRedirect(true, false);
                  usertalkpage.append();
                }
                if (params.lognomination) {
                  Twinkle.speedy.callbacks.user.addToLog(params, initialContrib);
                }
              };
              const thispage = new Morebits.wiki.page(Morebits.pageNameNorm);
              thispage.lookupCreation(callback);
            } else if (params.lognomination) {
              Twinkle.speedy.callbacks.user.addToLog(params, null);
            }
          },
          // note: this code is also invoked from twinkleimage
          // the params used are:
          //   for CSD: params.values, params.normalizeds  (note: normalizeds is an array)
          //   for DI: params.fromDI = true, params.templatename, params.normalized  (note: normalized is a string)
          addToLog: (params, initialContrib) => {
            const usl = new Morebits.userspaceLogger(Twinkle.getPref("speedyLogPageName"));
            usl.initialText = "这是该用户使用[[H:TW|Twinkle]]的速删模块做出的[[QW:CSD|快速删除]]提名列表。\n\n若您不再想保留此日志，请在[[".concat(Twinkle.getPref("configPage"), "|参数设置]]中关掉，并使用[[QW:CSD#O1|CSD O1]]提交快速删除。").concat(Morebits.userIsSysop ? "\n\n此日志并不记录用Twinkle直接执行的删除。" : "");
            let appendText = "# [[:".concat(Morebits.pageNameNorm, "]]：");
            if (params.fromDI) {
              appendText += "图版[[QW:CSD#".concat(params.normalized.toUpperCase(), "|CSD ").concat(params.normalized.toUpperCase(), "]]（{{tl|").concat(params.templatename, "}}）");
            } else if (params.normalizeds.length > 1) {
              appendText += "多个理由（";
              var _iterator14 = _createForOfIteratorHelper(params.normalizeds), _step14;
              try {
                for (_iterator14.s(); !(_step14 = _iterator14.n()).done; ) {
                  const norm = _step14.value;
                  appendText += "[[QW:CSD#".concat(norm.toUpperCase(), "|").concat(norm.toUpperCase(), "]]、");
                }
              } catch (err) {
                _iterator14.e(err);
              } finally {
                _iterator14.f();
              }
              appendText = appendText.slice(0, Math.max(0, appendText.length - 1));
              appendText += "）";
            } else if (params.normalizeds[0] === "db") {
              appendText += "自定义理由";
            } else {
              appendText += "[[QW:CSD#".concat(params.normalizeds[0].toUpperCase(), "|CSD ").concat(params.normalizeds[0].toUpperCase(), "]]");
            }
            if (params.requestsalt) {
              appendText += window.wgULS("；请求白纸保护", "；請求白紙保護");
            }
            if (initialContrib) {
              appendText += "；通知{{user|".concat(initialContrib, "}}");
            }
            appendText += " ~~".concat("~", "~~\n");
            usl.changeTags = Twinkle.changeTags;
            usl.log(appendText, window.wgULS("记录对[[", "記錄對[[") + Morebits.pageNameNorm + window.wgULS("]]的快速删除提名", "]]的快速刪除提名"));
          }
        }
      };
      Twinkle.speedy.getParameters = (form, values) => {
        let parameters = [];
        var _iterator15 = _createForOfIteratorHelper(values), _step15;
        try {
          for (_iterator15.s(); !(_step15 = _iterator15.n()).done; ) {
            const value = _step15.value;
            const currentParams = [];
            let redimage;
            switch (value) {
              case "reason":
                if (form["csd.reason_1"]) {
                  const dbrationale = form["csd.reason_1"].value;
                  if (!dbrationale || !dbrationale.trim()) {
                    void mw.notify(window.wgULS("自定义理由：请指定理由。", "自訂理由：請指定理由。"), {
                      type: "warn",
                      tag: "twinklespeedy"
                    });
                    parameters = null;
                    continue;
                  }
                  currentParams["1"] = dbrationale;
                }
                break;
              case "a2":
                if (form["csd.a2_pagename"]) {
                  const otherpage = form["csd.a2_pagename"].value;
                  if (!otherpage || !otherpage.trim()) {
                    void mw.notify(window.wgULS("CSD A2：请提供现有条目的名称。", "CSD A2：請提供現有條目的名稱。"), {
                      type: "warn",
                      tag: "twinklespeedy"
                    });
                    parameters = null;
                    continue;
                  }
                  currentParams.pagename = otherpage;
                }
                break;
              case "g4":
                if (form["csd.g4_pagename"]) {
                  const pagename = form["csd.g4_pagename"].value;
                  if (!pagename || !pagename.trim()) {
                    void mw.notify(window.wgULS("CSD G4：请提供页面名称。", "CSD G4：請提供頁面名稱。"), {
                      type: "warn",
                      tag: "twinklespeedy"
                    });
                    parameters = null;
                    continue;
                  }
                  currentParams.pagename = pagename;
                }
                break;
              case "f2":
                if (form["csd.f2_filename"]) {
                  redimage = form["csd.f2_filename"].value;
                  if (!redimage || !redimage.trim()) {
                    void mw.notify(window.wgULS("CSD F2：请提供另一文件的名称。", "CSD F2：請提供另一檔案的名稱。"), {
                      type: "warn",
                      tag: "twinklespeedy"
                    });
                    parameters = null;
                    continue;
                  }
                  currentParams.filename = redimage.replace(new RegExp("^\\s*".concat(Morebits.namespaceRegex(6), ":"), "i"), "");
                }
                break;
              case "r1":
                if (form["csd.r1_type"]) {
                  const redirtype = form["csd.r1_type"].value;
                  if (!redirtype) {
                    void mw.notify(window.wgULS("CSD R1：请选择适用类型。", "CSD R1：請選擇適用類別。"), {
                      type: "warn",
                      tag: "twinklespeedy"
                    });
                    parameters = null;
                    continue;
                  }
                  currentParams["1"] = redirtype;
                }
                break;
              case "r2":
                if (form["csd.r2_type"]) {
                  const redirtype = form["csd.r2_type"].value;
                  if (!redirtype) {
                    void mw.notify(window.wgULS("CSD R2：请选择适用类型。", "CSD R2：請選擇適用類別。"), {
                      type: "warn",
                      tag: "twinklespeedy"
                    });
                    parameters = null;
                    continue;
                  }
                  currentParams["1"] = redirtype;
                }
                break;
              default:
                break;
            }
            parameters[parameters.length] = currentParams;
          }
        } catch (err) {
          _iterator15.e(err);
        } finally {
          _iterator15.f();
        }
        return parameters;
      };
      Twinkle.speedy.getUserTalkParameters = (normalized) => {
        const utparams = [];
        switch (normalized) {
          default:
            break;
        }
        return utparams;
      };
      Twinkle.speedy.resolveCsdValues = (e) => {
        var _e$target$form;
        const values = ((_e$target$form = e.target.form) !== null && _e$target$form !== void 0 ? _e$target$form : e.target).getChecked("csd");
        if (values.length === 0) {
          void mw.notify(window.wgULS("请选择一个理据！", "請選擇一個理據！"), {
            type: "warn",
            tag: "twinklespeedy"
          });
          return null;
        }
        return values;
      };
      Twinkle.speedy.callback.evaluateSysop = (e) => {
        var _e$target$form2;
        const form = (_e$target$form2 = e.target.form) !== null && _e$target$form2 !== void 0 ? _e$target$form2 : e.target;
        if (e.target.type === "checkbox" || e.target.type === "text" || e.target.type === "select") {
          return;
        }
        const {
          tag_only
        } = form;
        if (tag_only && tag_only.checked) {
          Twinkle.speedy.callback.evaluateUser(e);
          return;
        }
        const values = Twinkle.speedy.resolveCsdValues(e);
        if (!values) {
          return;
        }
        const normalizeds = values.map((value) => {
          return Twinkle.speedy.normalizeHash[value];
        });
        let watchPage;
        let promptForSummary;
        var _iterator16 = _createForOfIteratorHelper(normalizeds), _step16;
        try {
          for (_iterator16.s(); !(_step16 = _iterator16.n()).done; ) {
            const norm = _step16.value;
            if (Twinkle.getPref("watchSpeedyPages").includes(norm)) {
              watchPage = Twinkle.getPref("watchSpeedyExpiry");
            }
            if (Twinkle.getPref("promptForSpeedyDeletionSummary").includes(norm)) {
              promptForSummary = true;
            }
          }
        } catch (err) {
          _iterator16.e(err);
        } finally {
          _iterator16.f();
        }
        const params = {
          values,
          normalizeds,
          watch: watchPage,
          deleteTalkPage: form.talkpage && form.talkpage.checked,
          deleteRedirects: form.redirects.checked,
          openUserTalk: form.openusertalk.checked,
          promptForSummary,
          templateParams: Twinkle.speedy.getParameters(form, values)
        };
        if (!params.templateParams) {
          return;
        }
        Morebits.simpleWindow.setButtonsEnabled(false);
        Morebits.status.init(form);
        Twinkle.speedy.callbacks.sysop.main(params);
      };
      Twinkle.speedy.callback.evaluateUser = (e) => {
        var _e$target$form3;
        const form = (_e$target$form3 = e.target.form) !== null && _e$target$form3 !== void 0 ? _e$target$form3 : e.target;
        if (e.target.type === "checkbox" || e.target.type === "text" || e.target.type === "select") {
          return;
        }
        const values = Twinkle.speedy.resolveCsdValues(e);
        if (!values) {
          return;
        }
        const normalizeds = [];
        var _iterator17 = _createForOfIteratorHelper(values), _step17;
        try {
          for (_iterator17.s(); !(_step17 = _iterator17.n()).done; ) {
            const value = _step17.value;
            const norm = Twinkle.speedy.normalizeHash[value];
            normalizeds[normalizeds.length] = norm;
          }
        } catch (err) {
          _iterator17.e(err);
        } finally {
          _iterator17.f();
        }
        let watchPage = false;
        for (var _i7 = 0, _normalizeds = normalizeds; _i7 < _normalizeds.length; _i7++) {
          const norm = _normalizeds[_i7];
          if (Twinkle.getPref("watchSpeedyPages").includes(norm)) {
            watchPage = Twinkle.getPref("watchSpeedyExpiry");
            continue;
          }
        }
        let notifyuser = false;
        if (form.notify.checked) {
          var _iterator18 = _createForOfIteratorHelper(normalizeds), _step18;
          try {
            for (_iterator18.s(); !(_step18 = _iterator18.n()).done; ) {
              const norm = _step18.value;
              if (Twinkle.getPref("notifyUserOnSpeedyDeletionNomination").includes(norm)) {
                notifyuser = true;
                continue;
              }
            }
          } catch (err) {
            _iterator18.e(err);
          } finally {
            _iterator18.f();
          }
        }
        let csdlog = false;
        if (Twinkle.getPref("logSpeedyNominations")) {
          var _iterator19 = _createForOfIteratorHelper(normalizeds), _step19;
          try {
            for (_iterator19.s(); !(_step19 = _iterator19.n()).done; ) {
              const norm = _step19.value;
              if (!Twinkle.getPref("noLogOnSpeedyNomination").includes(norm)) {
                csdlog = true;
                continue;
              }
            }
          } catch (err) {
            _iterator19.e(err);
          } finally {
            _iterator19.f();
          }
        }
        const params = {
          values,
          normalizeds,
          watch: watchPage,
          usertalk: notifyuser,
          lognomination: csdlog,
          blank: form.blank.checked,
          requestsalt: form.salting.checked,
          templateParams: Twinkle.speedy.getParameters(form, values)
        };
        if (!params.templateParams) {
          return;
        }
        Morebits.simpleWindow.setButtonsEnabled(false);
        Morebits.status.init(form);
        Morebits.wiki.actionCompleted.redirect = mw.config.get("wgPageName");
        Morebits.wiki.actionCompleted.notice = window.wgULS("标记完成", "標記完成");
        const qiuwen_page = new Morebits.wiki.page(mw.config.get("wgPageName"), window.wgULS("标记页面", "標記頁面"));
        qiuwen_page.setCallbackParameters(params);
        qiuwen_page.load(Twinkle.speedy.callbacks.user.main);
      };
      Twinkle.addInitCallback(Twinkle.speedy, "speedy");
    })(jQuery);
  }
});
//! src/Twinkle/modules/twinklecopyvio.js
var twinklecopyvio_exports = {};
var init_twinklecopyvio = __esm({
  "src/Twinkle/modules/twinklecopyvio.js"() {
    "use strict";
    /*! Twinkle.js - twinklecopyvio.js */
    (function twinklecopyvio() {
      Twinkle.copyvio = () => {
        if (mw.config.get("wgNamespaceNumber") < 0 || !mw.config.get("wgArticleId") || mw.config.get("wgNamespaceNumber") === 6 && (document.querySelector("#mw-sharedupload") || !document.querySelector("#mw-imagepage-section-filehistory") && !Morebits.isPageRedirect())) {
          return;
        }
        Twinkle.addPortletLink(Twinkle.copyvio.callback, window.wgULS("侵权", "侵權"), "tw-copyvio", window.wgULS("提报侵权页面", "提報侵權頁面"), "");
      };
      Twinkle.copyvio.callback = () => {
        const Window = new Morebits.simpleWindow(600, 350);
        Window.setTitle(window.wgULS("提报侵权页面", "提報侵權頁面"));
        Window.setScriptName("Twinkle");
        Window.addFooterLink(window.wgULS("侵权设置", "侵權設定"), "H:TW/PREF#copyvio");
        Window.addFooterLink(window.wgULS("Twinkle帮助", "Twinkle說明"), "H:TW/DOC#copyvio");
        const form = new Morebits.quickForm(Twinkle.copyvio.callback.evaluate);
        form.append({
          type: "textarea",
          label: window.wgULS("侵权来源：", "侵權來源："),
          name: "source"
        });
        form.append({
          type: "checkbox",
          list: [{
            label: window.wgULS("CSD G4: 曾经根据侵权审核删除后又重新创建的内容", "CSD G4: 曾經根據侵權審核刪除後又重新建立的內容"),
            value: "g4",
            name: "g4",
            tooltip: window.wgULS("同时以G4准则提报快速删除", "同時以G4準則提報快速刪除"),
            subgroup: [{
              name: "g4_pagename",
              type: "input",
              label: window.wgULS("前次删除的页面名称", "前次刪除的頁面名稱"),
              tooltip: window.wgULS("选填，若前次删除的页面名称不同，请提供", "選填，若前次刪除的頁面名稱不同，請提供")
            }]
          }, {
            label: window.wgULS("通知页面创建者", "通知頁面建立者"),
            value: "notify",
            name: "notify",
            tooltip: window.wgULS("在页面创建者讨论页上放置一通知模板。", "在頁面建立者討論頁上放置一通知模板。"),
            checked: true
          }]
        });
        form.append({
          type: "submit"
        });
        const result = form.render();
        Window.setContent(result);
        Window.display();
      };
      Twinkle.copyvio.callbacks = {
        tryTagging: (pageobj) => {
          const text = pageobj.getPageText();
          if (text.includes("{{Copyvio|")) {
            Morebits.status.error(window.wgULS("错误", "錯誤"), window.wgULS("页面已经标记侵权，请人工确认是否已经提报。", "頁面已經標記侵權，請人工確認是否已經提報。"));
          } else {
            Twinkle.copyvio.callbacks.taggingArticle(pageobj);
            const qiuwen_page = new Morebits.wiki.page(mw.config.get("wgPageName"));
            qiuwen_page.setCallbackParameters(pageobj.getCallbackParameters());
            qiuwen_page.lookupCreation(Twinkle.copyvio.callbacks.main);
          }
        },
        main: (pageobj) => {
          const params = pageobj.getCallbackParameters();
          const initialContrib = pageobj.getCreator();
          const qiuwen_page = new Morebits.wiki.page(params.logpage, window.wgULS("加入侵权记录项", "加入侵權記錄項"));
          qiuwen_page.setFollowRedirect(true);
          qiuwen_page.setCallbackParameters(params);
          qiuwen_page.load(Twinkle.copyvio.callbacks.copyvioList);
          if (params.notify) {
            const usertalkpage = new Morebits.wiki.page("User talk:".concat(initialContrib), "".concat(window.wgULS("通知页面创建者（", "通知頁面建立者（") + initialContrib, "）"));
            const notifytext = "\n{{".concat("subst:", "CopyvioNotice|".concat(mw.config.get("wgPageName"), "}}"));
            usertalkpage.setAppendText(notifytext);
            usertalkpage.setEditSummary(window.wgULS("通知：页面[[", "通知：頁面[[") + mw.config.get("wgPageName") + window.wgULS("]]疑似侵犯著作权", "]]疑似侵犯版權"));
            usertalkpage.setChangeTags(Twinkle.changeTags);
            usertalkpage.setCreateOption("recreate");
            usertalkpage.setWatchlist(Twinkle.getPref("copyvioWatchUser"));
            usertalkpage.setFollowRedirect(true, false);
            usertalkpage.append();
          }
        },
        taggingArticle: (pageobj) => {
          const params = pageobj.getCallbackParameters();
          const revisionId = mw.config.get("wgRevisionId") || mw.config.get("wgDiffNewId") || mw.config.get("wgCurRevisionId");
          let tag = "{{".concat("subst:", "Copyvio/auto|url=".concat(params.source.replace(/http/g, "&#104;ttp").replace(/\n+/g, "\n").replace(/^\s*([^*])/gm, "* $1").replace(/^\* $/m, ""), "|OldRevision=").concat(revisionId, "}}"));
          const text = pageobj.getPageText();
          const oldcsd = text.match(/\{\{\s*(db(-\w*)?|d|delete)\s*(\|(?:\{\{[^{}]*\}\}|[^{}])*)?\}\}/i);
          if (oldcsd && confirm(window.wgULS("在页面上找到快速删除模板，要保留吗？\n\n当页面同时侵犯著作权又符合快速删除标准时，应该优先走快速删除程序。\n单击“确认”以保留快速删除模板，若您认为快速删除理由不合，单击“取消”以移除快速删除模板。", "在頁面上找到快速刪除模板，要保留嗎？\n\n當頁面同時侵犯版權又符合快速刪除標準時，應該優先走快速刪除程序。\n點擊「確認」以保留快速刪除模板，若您認為快速刪除理由不合，點擊「取消」以移除快速刪除模板。"))) {
            tag = "".concat(oldcsd[0], "\n").concat(tag);
          }
          if (params.g4) {
            let speedyTag = "{{delete";
            speedyTag += "|g4";
            if (params.g4_pagename) {
              speedyTag += "|".concat(params.g4_pagename, "|c1=[[Special:Undelete/").concat(params.g4_pagename, "]]");
            } else {
              speedyTag += "|c1=[[Special:Undelete/".concat(mw.config.get("wgPageName"), "]]");
            }
            speedyTag += "}}";
            tag = "".concat(speedyTag, "\n").concat(tag);
          }
          pageobj.setPageText(tag);
          pageobj.setEditSummary(window.wgULS("此页面疑似侵犯著作权", "此頁面疑似侵犯版權"));
          pageobj.setChangeTags(Twinkle.changeTags);
          pageobj.setWatchlist(Twinkle.getPref("copyvioWatchPage"));
          pageobj.save();
          if (Twinkle.getPref("markCopyvioPagesAsPatrolled")) {
            pageobj.patrol();
          }
        },
        copyvioList: (pageobj) => {
          const text = pageobj.getPageText();
          let output = "";
          const date = /* @__PURE__ */ new Date();
          const dateHeaderRegex = new RegExp("^==+\\s*".concat(date.getUTCMonth() + 1, "月").concat(date.getUTCDate(), "日\\s*==+"), "mg");
          if (!dateHeaderRegex.exec(text)) {
            output = "\n\n==".concat(date.getUTCMonth() + 1, "月").concat(date.getUTCDate(), "日==");
          }
          output += "\n{{".concat("subst:", "CopyvioVFDRecord|".concat(mw.config.get("wgPageName"), "}}"));
          pageobj.setAppendText(output);
          pageobj.setEditSummary("加入[[".concat(mw.config.get("wgPageName"), "]]"));
          pageobj.setChangeTags(Twinkle.changeTags);
          pageobj.setCreateOption("recreate");
          pageobj.append();
        }
      };
      Twinkle.copyvio.callback.evaluate = (e) => {
        const params = Morebits.quickForm.getInputData(e.target);
        if (!params.source.trim()) {
          void mw.notify(window.wgULS("请指定侵权来源", "請指定侵權來源"), {
            type: "warn",
            tag: "twinklecopyvio"
          });
          return;
        }
        Morebits.simpleWindow.setButtonsEnabled(false);
        Morebits.status.init(e.target);
        params.logpage = "Qiuwen_talk:侵权提报";
        Morebits.wiki.addCheckpoint();
        Morebits.wiki.actionCompleted.redirect = mw.config.get("wgPageName");
        Morebits.wiki.actionCompleted.notice = window.wgULS("提报完成，将在几秒内刷新页面", "提報完成，將在幾秒內重新整理頁面");
        const qiuwen_page = new Morebits.wiki.page(mw.config.get("wgPageName"), window.wgULS("加入侵权模板到页面", "加入侵權模板到頁面"));
        qiuwen_page.setCallbackParameters(params);
        qiuwen_page.load(Twinkle.copyvio.callbacks.tryTagging);
        Morebits.wiki.removeCheckpoint();
      };
      Twinkle.addInitCallback(Twinkle.copyvio, "copyvio");
    })();
  }
});
//! src/Twinkle/modules/twinklexfd.js
var twinklexfd_exports = {};
var init_twinklexfd = __esm({
  "src/Twinkle/modules/twinklexfd.js"() {
    "use strict";
    /*! Twinkle.js - twinklexfd.js */
    (function twinklexfd() {
      Twinkle.xfd = () => {
        if (mw.config.get("wgNamespaceNumber") < 0 || !mw.config.get("wgArticleId") || mw.config.get("wgNamespaceNumber") === 6 && (document.querySelector("#mw-sharedupload") || !document.querySelector("#mw-imagepage-section-filehistory") && !Morebits.isPageRedirect())) {
          return;
        }
        Twinkle.addPortletLink(Twinkle.xfd.callback, window.wgULS("提删", "提刪"), "tw-xfd", window.wgULS("提交删除讨论", "提交刪除討論"));
      };
      Twinkle.xfd.currentRationale = null;
      Twinkle.xfd.printRationale = () => {
        if (Twinkle.xfd.currentRationale) {
          Morebits.status.printUserText(Twinkle.xfd.currentRationale, window.wgULS("您的理由已在下方提供，若您想重新提交，请将其复制到一新窗口中：", "您的理由已在下方提供，若您想重新提交，請將其複製到一新視窗中："));
          Twinkle.xfd.currentRationale = null;
        }
      };
      Twinkle.xfd.callback = () => {
        const Window = new Morebits.simpleWindow(600, 350);
        Window.setTitle(window.wgULS("提交存废讨论", "提交存廢討論"));
        Window.setScriptName("Twinkle");
        Window.addFooterLink(window.wgULS("提删设置", "提刪設定"), "H:TW/PREF#xfd");
        Window.addFooterLink(window.wgULS("Twinkle帮助", "Twinkle說明"), "H:TW/DOC#xfd");
        const form = new Morebits.quickForm(Twinkle.xfd.callback.evaluate);
        const categories = form.append({
          type: "select",
          name: "category",
          label: window.wgULS("提交类型：", "提交類別："),
          event: Twinkle.xfd.callback.change_category
        });
        categories.append({
          type: "option",
          label: window.wgULS("页面存废讨论", "頁面存廢討論"),
          selected: mw.config.get("wgNamespaceNumber") === 0,
          value: "afd"
        });
        categories.append({
          type: "option",
          label: window.wgULS("文件存废讨论", "檔案存廢討論"),
          selected: mw.config.get("wgNamespaceNumber") === 6,
          value: "ffd"
        });
        form.append({
          type: "checkbox",
          list: [{
            label: window.wgULS("如可能，通知页面创建者", "如可能，通知頁面建立者"),
            value: "notify",
            name: "notify",
            tooltip: window.wgULS("在页面创建者讨论页上放置一通知模板。", "在頁面建立者討論頁上放置一通知模板。"),
            checked: true
          }]
        });
        form.append({
          type: "field",
          label: "工作区",
          name: "work_area"
        });
        form.append({
          type: "submit"
        });
        const result = form.render();
        Window.setContent(result);
        Window.display();
        const evt = document.createEvent("Event");
        evt.initEvent("change", true, true);
        result.category.dispatchEvent(evt);
      };
      Twinkle.xfd.callback.change_category = (e) => {
        const {
          value
        } = e.target;
        const {
          form
        } = e.target;
        const [old_area] = Morebits.quickForm.getElements(e.target.form, "work_area");
        let work_area = null;
        const oldreasontextbox = form.querySelector("textarea");
        let oldreason = oldreasontextbox ? oldreasontextbox.value : "";
        const appendReasonBox = (xfd_cat) => {
          switch (xfd_cat) {
            case "fwdcsd":
              oldreason = decodeURIComponent(document.querySelector("#delete-reason").textContent).replace(/\+/g, " ");
              break;
            case "fame":
              oldreason = Twinkle.getPref("afdFameDefaultReason");
              break;
            case "substub":
              oldreason = Twinkle.getPref("afdSubstubDefaultReason");
              break;
            default:
              break;
          }
          work_area.append({
            type: "textarea",
            name: "xfdreason",
            label: window.wgULS("提删理由：", "提刪理由："),
            value: oldreason,
            tooltip: window.wgULS("您可以使用wikitext，Twinkle将自动为您加入签名。若您使用批量提删功能，存废讨论页只会使用第一次提交的理由，但之后您仍需提供以用于删除通告模板的参数。", "您可以使用wikitext，Twinkle將自動為您加入簽名。若您使用批次提刪功能，存廢討論頁只會使用第一次提交的理由，但之後您仍需提供以用於刪除通告模板的參數。"),
            placeholder: window.wgULS("此值亦显示于页面的删除通告模板内，故务必提供此值，避免使用“同上”等用语。", "此值亦顯示於頁面的刪除通告模板內，故務必提供此值，避免使用「同上」等用語。")
          });
        };
        switch (value) {
          case "afd": {
            work_area = new Morebits.quickForm.element({
              type: "field",
              label: window.wgULS("页面存废讨论", "頁面存廢討論"),
              name: "work_area"
            });
            work_area.append({
              type: "checkbox",
              list: [{
                label: "使用&lt;noinclude&gt;包裹模板",
                value: "noinclude",
                name: "noinclude",
                checked: mw.config.get("wgNamespaceNumber") === 10 && mw.config.get("wgPageContentModel") !== "Scribunto",
                // Template namespace
                tooltip: window.wgULS("使其不会在被包含时出现。", "使其不會在被包含時出現。"),
                disabled: mw.config.get("wgPageContentModel") === "Scribunto"
              }]
            });
            const afd_category = work_area.append({
              type: "select",
              name: "xfdcat",
              label: window.wgULS("选择提删类型：", "選擇提刪類別："),
              event: Twinkle.xfd.callback.change_afd_category
            });
            let afd_cat = "delete";
            if (Twinkle.getPref("afdDefaultCategory") === "same") {
              if (localStorage.Twinkle_afdCategory === void 0) {
                localStorage.Twinkle_afdCategory = "delete";
              } else {
                afd_cat = localStorage.Twinkle_afdCategory;
              }
            }
            afd_category.append({
              type: "option",
              label: window.wgULS("删除", "刪除"),
              value: "delete",
              selected: afd_cat === "delete"
            });
            afd_category.append({
              type: "option",
              label: window.wgULS("合并", "合併"),
              value: "merge",
              selected: afd_cat === "merge"
            });
            if (Twinkle.getPref("FwdCsdToXfd")) {
              afd_category.append({
                type: "option",
                label: window.wgULS("转交自快速删除候选", "轉交自快速刪除候選"),
                value: "fwdcsd",
                selected: afd_cat === "fwdcsd"
              });
            }
            afd_category.append({
              type: "option",
              label: window.wgULS("批量关注度提删", "批次關注度提刪"),
              value: "fame",
              selected: afd_cat === "fame"
            });
            afd_category.append({
              type: "option",
              label: window.wgULS("批量小小作品提删", "批次小小作品提刪"),
              value: "substub",
              selected: afd_cat === "substub"
            });
            afd_category.append({
              type: "option",
              label: window.wgULS("批量其他提删", "批次其他提刪"),
              value: "batch",
              selected: afd_cat === "batch"
            });
            work_area.append({
              type: "input",
              name: "mergeinto",
              label: window.wgULS("合并到：", "合併到："),
              hidden: true
            });
            appendReasonBox(afd_cat);
            work_area.append({
              type: "textarea",
              name: "fwdcsdreason",
              label: window.wgULS("转交理由：", "轉交理由："),
              tooltip: window.wgULS("您可以使用wikitext，Twinkle将自动为您加入签名。", "您可以使用wikitext，Twinkle將自動為您加入簽名。"),
              hidden: true
            });
            work_area = work_area.render();
            old_area.parentNode.replaceChild(work_area, old_area);
            const evt = document.createEvent("Event");
            evt.initEvent("change", true, true);
            form.xfdcat.dispatchEvent(evt);
            break;
          }
          case "ffd":
            work_area = new Morebits.quickForm.element({
              type: "field",
              label: window.wgULS("文件存废讨论", "檔案存廢討論"),
              name: "work_area"
            });
            appendReasonBox("ffd");
            work_area = work_area.render();
            old_area.parentNode.replaceChild(work_area, old_area);
            break;
          default:
            work_area = new Morebits.quickForm.element({
              type: "field",
              label: window.wgULS("未定义", "未定義"),
              name: "work_area"
            });
            work_area = work_area.render();
            old_area.parentNode.replaceChild(work_area, old_area);
            break;
        }
        form.notify.checked = true;
        form.notify.disabled = false;
      };
      Twinkle.xfd.callback.change_afd_category = (e) => {
        switch (e.target.value) {
          case "merge":
            e.target.form.mergeinto.parentElement.removeAttribute("hidden");
            e.target.form.fwdcsdreason.parentElement.setAttribute("hidden", "");
            e.target.form.mergeinto.previousElementSibling.innerHTML = window.wgULS("合并到：", "合併到：");
            break;
          case "fwdcsd":
            e.target.form.mergeinto.parentElement.removeAttribute("hidden");
            e.target.form.fwdcsdreason.parentElement.removeAttribute("hidden");
            e.target.form.mergeinto.previousElementSibling.innerHTML = "提交人：";
            e.target.form.xfdreason.value = decodeURIComponent(document.querySelector("#delete-reason").textContent).replace(/\+/g, " ");
            break;
          case "fame":
            e.target.form.mergeinto.parentElement.setAttribute("hidden", "");
            e.target.form.fwdcsdreason.parentElement.setAttribute("hidden", "");
            e.target.form.xfdreason.value = Twinkle.getPref("afdFameDefaultReason");
            break;
          case "substub":
            e.target.form.mergeinto.parentElement.setAttribute("hidden", "");
            e.target.form.fwdcsdreason.parentElement.setAttribute("hidden", "");
            e.target.form.xfdreason.value = Twinkle.getPref("afdSubstubDefaultReason");
            break;
          default:
            e.target.form.mergeinto.parentElement.setAttribute("hidden", "");
            e.target.form.fwdcsdreason.parentElement.setAttribute("hidden", "");
        }
        if (Twinkle.getPref("afdDefaultCategory") === "same") {
          localStorage.Twinkle_afdCategory = e.target.value;
        }
      };
      Twinkle.xfd.callbacks = {
        afd: {
          main: (tagging_page) => {
            const params = tagging_page.getCallbackParameters();
            Twinkle.xfd.callbacks.afd.taggingArticle(tagging_page);
            const discussion_page = new Morebits.wiki.page(params.logpage, window.wgULS("加入讨论到当日列表", "加入討論到當日列表"));
            discussion_page.setFollowRedirect(true);
            discussion_page.setCallbackParameters(params);
            discussion_page.load(Twinkle.xfd.callbacks.afd.todaysList);
            if (params.notify) {
              if (params.creator === mw.config.get("wgUserName")) {
                Morebits.status.warn("".concat(window.wgULS("通知页面创建者（", "通知頁面建立者（") + params.creator, "）"), window.wgULS("您创建了该页，跳过通知", "您建立了該頁，跳過通知"));
                params.creator = null;
              } else {
                const talkPageName = "User talk:".concat(params.creator);
                const usertalkpage = new Morebits.wiki.page(talkPageName, "".concat(window.wgULS("通知页面创建者（", "通知頁面建立者（") + params.creator, "）"));
                const notifytext = "\n{{".concat("subst:").concat("AFDNote|".concat(Morebits.pageNameNorm, "}}--~~"), "~~");
                usertalkpage.setAppendText(notifytext);
                usertalkpage.setEditSummary("通知：页面[[".concat(Morebits.pageNameNorm, "]]存废讨论提名"));
                usertalkpage.setChangeTags(Twinkle.changeTags);
                usertalkpage.setCreateOption("recreate");
                usertalkpage.setWatchlist(Twinkle.getPref("xfdWatchUser"));
                usertalkpage.setFollowRedirect(true, false);
                usertalkpage.append();
              }
              if (params.lognomination) {
                Twinkle.xfd.callbacks.addToLog(params, params.creator);
              }
            } else if (params.lognomination) {
              Twinkle.xfd.callbacks.addToLog(params, null);
            }
          },
          taggingArticle: (pageobj) => {
            let text = pageobj.getPageText();
            const params = pageobj.getCallbackParameters();
            let tag = "{{vfd|".concat(Morebits.string.formatReasonText(params.xfdreason));
            if (Morebits.isPageRedirect()) {
              tag += "|r";
            }
            tag += "|date={{".concat("subst:", "#time:Y/m/d}}}}");
            if (params.noinclude) {
              tag = "<noinclude>".concat(tag, "</noinclude>");
              if (text.indexOf("{|") === 0) {
                tag += "\n";
              }
            } else {
              tag += "\n";
            }
            const textNoSd = text.replace(/\{\{\s*(db(-\w*)?|d|delete|(?:hang|hold)[- ]?on)\s*(\|(?:\{\{[^{}]*\}\}|[^{}])*)?\}\}\s*/gi, "");
            if (text !== textNoSd && confirm(window.wgULS("在页面上找到快速删除模板，要移除吗？", "在頁面上找到快速刪除模板，要移除嗎？"))) {
              text = textNoSd;
            }
            const textNoNotMandarin = text.replace(/\{\{\s*(NotMandarin|Notchinese|非中文|非現代漢語|非现代汉语|非現代標準漢語|非现代标准汉语)\s*(\|(?:\{\{[^{}]*\}\}|[^{}])*)?\}\}\s*/gi, "");
            if (text !== textNoNotMandarin && confirm(window.wgULS("在页面上找到非现代标准汉语模板，要移除吗？", "在頁面上找到非現代標準漢語模板，要移除嗎？"))) {
              text = textNoNotMandarin;
            }
            const textNoAfc = text.replace(/{{\s*AFC submission\s*\|\s*\|[^}]*?}}\s*/gi, "");
            if (text !== textNoAfc && confirm(window.wgULS("在页面上找到AFC提交模板，要移除吗？", "在頁面上找到AFC提交模板，要移除嗎？"))) {
              text = textNoAfc;
            }
            if (Twinkle.getPref("markXfdPagesAsPatrolled")) {
              pageobj.patrol();
            }
            const qiuwen_page = new Morebits.wikitext.page(text);
            text = qiuwen_page.insertAfterTemplates(tag, Twinkle.hatnoteRegex).getText();
            pageobj.setPageText(text);
            pageobj.setEditSummary("".concat(window.wgULS("页面存废讨论：[[", "頁面存廢討論：[[") + params.logpage, "#").concat(Morebits.pageNameNorm, "]]"));
            pageobj.setChangeTags(Twinkle.changeTags);
            pageobj.setWatchlist(Twinkle.getPref("xfdWatchPage"));
            pageobj.save();
          },
          todaysList: (pageobj) => {
            let text = pageobj.getPageText();
            const params = pageobj.getCallbackParameters();
            let type = "";
            let to = "";
            switch (params.xfdcat) {
              case "fwdcsd":
              case "merge":
                to = params.mergeinto;
              /* Fall through */
              default:
                type = params.xfdcat;
                break;
            }
            let append = true;
            switch (type) {
              case "fame":
              case "substub":
              case "batch": {
                const commentText = "<!-- Twinkle: User:".concat(mw.config.get("wgUserName"), " 的 ").concat(type, " 提删插入点，请勿更改或移除此行，除非不再于此页面提删 -->");
                let newText = "===[[:".concat(Morebits.pageNameNorm, "]]===");
                if (type === "fame") {
                  newText += "\n{{Findsources|".concat(Morebits.pageNameNorm, "}}");
                }
                if (text.includes(commentText)) {
                  text = text.replace(commentText, "".concat(newText, "\n\n").concat(commentText));
                  pageobj.setPageText(text);
                  append = false;
                } else {
                  const safesubst = "safesubst";
                  const appendText = "\n{{".concat(safesubst).concat(":SafeAfdHead}}\n".concat({
                    fame: '== 30天后仍挂有{{tl|notability}}模板的条目 ==\n<span style="font-size: smaller;">（已挂[[Template:notability|不符收录标准模板]]30天）</span>',
                    substub: '== 30天后仍挂有{{tl|substub}}模板的条目 ==\n<span style="font-size: smaller;">（已挂[[Template:substub|小小条目模板]]30天）</span>',
                    batch: "== 批量提删 =="
                  }[type], "\n").concat(newText, "\n\n").concat(commentText, "\n----\n:建议：删除前述页面；理由：").concat(Morebits.string.formatReasonText(params.xfdreason), "\n提报以上").concat({
                    fame: "<u>不符合收录标准</u>条目",
                    substub: "<u>长度过短</u>条目",
                    batch: "页面"
                  }[type], '的求闻编者及时间：<br id="no-new-title">~~').concat("~~"));
                  pageobj.setAppendText(appendText);
                }
                break;
              }
              default:
                pageobj.setAppendText("\n{{".concat("subst:", "DRItem|Type=".concat(type, "|DRarticles=").concat(Morebits.pageNameNorm, "|Reason=").concat(Morebits.string.formatReasonText(params.xfdreason)).concat(params.fwdcsdreason.trim() === "" ? "" : "<br>\n转交理由：".concat(params.fwdcsdreason), "|To=").concat(to, "}}~~").concat("~~")));
                break;
            }
            pageobj.setEditSummary("加入[[".concat(Morebits.pageNameNorm, "]]"));
            pageobj.setChangeTags(Twinkle.changeTags);
            pageobj.setWatchlist(Twinkle.getPref("xfdWatchDiscussion"));
            pageobj.setCreateOption("recreate");
            if (append) {
              pageobj.append();
            } else {
              pageobj.save();
            }
            Twinkle.xfd.currentRationale = null;
          },
          lookupCreation: (target_page) => {
            target_page.getStatusElement().info("完成");
            const params = target_page.getCallbackParameters();
            params.creator = target_page.getCreator();
            const tagging_page = new Morebits.wiki.page(mw.config.get("wgPageName"), window.wgULS("加入存废讨论模板到页面", "加入存廢討論模板到頁面"));
            tagging_page.setFollowRedirect(false);
            tagging_page.setCallbackParameters(params);
            tagging_page.load(Twinkle.xfd.callbacks.afd.tryTagging);
          },
          tryTagging: (tagging_page) => {
            const statelem = tagging_page.getStatusElement();
            if (!tagging_page.exists()) {
              statelem.error(window.wgULS("页面不存在，可能已被删除", "頁面不存在，可能已被刪除"));
              return;
            }
            const text = tagging_page.getPageText();
            const xfd = /(?:\{\{([rsaiftcmv]fd|md1|proposed deletion)[^{}]*?\}\})/i.exec(text);
            if (xfd && !confirm(window.wgULS("删除相关模板{{", "刪除相關模板{{") + xfd[1] + window.wgULS("}}已被置于页面中，您是否仍想继续提报？", "}}已被置於頁面中，您是否仍想繼續提報？"))) {
              statelem.error(window.wgULS("页面已被提交至存废讨论。", "頁面已被提交至存廢討論。"));
              return;
            }
            const copyvio = /(?:\{\{\s*(copyvio)[^{}]*?\}\})/i.exec(text);
            if (copyvio) {
              statelem.error(window.wgULS("页面中已有著作权验证模板。", "頁面中已有著作權驗證模板。"));
              return;
            }
            Twinkle.xfd.callbacks.afd.main(tagging_page);
          }
        },
        ffd: {
          main: (tagging_page) => {
            const params = tagging_page.getCallbackParameters();
            Twinkle.xfd.callbacks.ffd.taggingImage(tagging_page);
            const qiuwen_page = new Morebits.wiki.page(params.logpage, window.wgULS("加入讨论到当日列表", "加入討論到當日列表"));
            qiuwen_page.setFollowRedirect(true);
            qiuwen_page.setCallbackParameters(params);
            qiuwen_page.load(Twinkle.xfd.callbacks.ffd.todaysList);
            if (params.notify) {
              if (params.creator === mw.config.get("wgUserName")) {
                Morebits.status.warn("".concat(window.wgULS("通知页面创建者（", "通知頁面建立者（") + params.creator, "）"), window.wgULS("您创建了该页，跳过通知", "您建立了該頁，跳過通知"));
                return;
              }
              const talkPageName = "User talk:".concat(params.creator);
              const usertalkpage = new Morebits.wiki.page(talkPageName, "".concat(window.wgULS("通知页面创建者（", "通知頁面建立者（") + params.creator, "）"));
              const notifytext = "\n{{".concat("subst:", "idw|File:".concat(mw.config.get("wgTitle"), "}}"), "--~~", "~~");
              usertalkpage.setAppendText(notifytext);
              usertalkpage.setEditSummary("通知：文件[[".concat(Morebits.pageNameNorm, "]]存废讨论提名"));
              usertalkpage.setChangeTags(Twinkle.changeTags);
              usertalkpage.setCreateOption("recreate");
              usertalkpage.setWatchlist(Twinkle.getPref("xfdWatchUser"));
              usertalkpage.setFollowRedirect(true, false);
              usertalkpage.append();
              if (params.lognomination) {
                Twinkle.xfd.callbacks.addToLog(params, params.creator);
              }
            } else if (params.lognomination) {
              Twinkle.xfd.callbacks.addToLog(params, null);
            }
          },
          taggingImage: (pageobj) => {
            const text = pageobj.getPageText();
            const params = pageobj.getCallbackParameters();
            pageobj.setPageText("{{ifd|".concat(Morebits.string.formatReasonText(params.xfdreason), "|date={{").concat("subst:", "#time:c}}}}\n".concat(text)));
            pageobj.setEditSummary("".concat(window.wgULS("文件存废讨论：[[", "檔案存廢討論：[[") + params.logpage, "#").concat(Morebits.pageNameNorm, "]]"));
            pageobj.setChangeTags(Twinkle.changeTags);
            pageobj.setWatchlist(Twinkle.getPref("xfdWatchPage"));
            pageobj.setCreateOption("recreate");
            pageobj.save();
          },
          todaysList: (pageobj) => {
            const params = pageobj.getCallbackParameters();
            pageobj.setAppendText("\n{{".concat("subst:", "IfdItem|Filename=".concat(mw.config.get("wgTitle"), "|Uploader=").concat(params.creator, "|Reason=").concat(Morebits.string.formatReasonText(params.xfdreason), "}}--~~").concat("~~")));
            pageobj.setEditSummary("加入[[".concat(Morebits.pageNameNorm, "]]"));
            pageobj.setChangeTags(Twinkle.changeTags);
            pageobj.setWatchlist(Twinkle.getPref("xfdWatchDiscussion"));
            pageobj.setCreateOption("recreate");
            pageobj.append(() => {
              Twinkle.xfd.currentRationale = null;
            });
          },
          lookupCreation: (target_page) => {
            target_page.getStatusElement().info("完成");
            const params = target_page.getCallbackParameters();
            params.creator = target_page.getCreator();
            const tagging_page = new Morebits.wiki.page(mw.config.get("wgPageName"), window.wgULS("加入存废讨论模板到文件描述页", "加入存廢討論模板到檔案描述頁"));
            tagging_page.setFollowRedirect(false);
            tagging_page.setCallbackParameters(params);
            tagging_page.load(Twinkle.xfd.callbacks.ffd.tryTagging);
          },
          tryTagging: (tagging_page) => {
            const statelem = tagging_page.getStatusElement();
            if (!tagging_page.exists()) {
              statelem.error(window.wgULS("页面不存在，可能已被删除", "頁面不存在，可能已被刪除"));
              return;
            }
            const text = tagging_page.getPageText();
            const xfd = /(?:\{\{([rsaiftcmv]fd|md1|proposed deletion)[^{}]*?\}\})/i.exec(text);
            if (xfd && !confirm(window.wgULS("删除相关模板{{", "刪除相關模板{{") + xfd[1] + window.wgULS("}}已被置于页面中，您是否仍想继续提报？", "}}已被置於頁面中，您是否仍想繼續提報？"))) {
              statelem.error(window.wgULS("页面已被提交至存废讨论。", "頁面已被提交至存廢討論。"));
              return;
            }
            Twinkle.xfd.callbacks.ffd.main(tagging_page);
          }
        },
        addToLog: (params, initialContrib) => {
          const editsummary = window.wgULS("记录对[[", "記錄對[[") + Morebits.pageNameNorm + window.wgULS("]]的存废讨论提名", "]]的存廢討論提名");
          const usl = new Morebits.userspaceLogger(Twinkle.getPref("xfdLogPageName"));
          usl.initialText = window.wgULS("这是该用户使用[[H:TW|Twinkle]]的提删模块做出的[[QW:XFD|存废讨论]]提名列表。\n\n若您不再想保留此日志，请在[[".concat(Twinkle.getPref("configPage"), "|参数设置]]中关掉，并使用[[QW:CSD#O1|CSD O1]]提交快速删除。"), "這是該使用者使用[[H:TW|Twinkle]]的提刪模塊做出的[[QW:XFD|存廢討論]]提名列表。\n\n若您不再想保留此日誌，請在[[".concat(Twinkle.getPref("configPage"), "|偏好設定]]中關掉，並使用[[QW:CSD#O1|CSD O1]]提交快速刪除。"));
          let xfdCatName;
          switch (params.xfdcat) {
            case "delete":
              xfdCatName = window.wgULS("删除", "刪除");
              break;
            case "merge":
              xfdCatName = window.wgULS("合并到", "合併到");
              break;
            case "fwdcsd":
              xfdCatName = window.wgULS("转交自快速删除候选", "轉交自快速刪除候選");
              break;
            case "fame":
              xfdCatName = window.wgULS("批量关注度提删", "批次關注度提刪");
              break;
            case "substub":
              xfdCatName = window.wgULS("批量小小作品提删", "批次小小作品提刪");
              break;
            case "batch":
              xfdCatName = window.wgULS("批量其他提删", "批次其他提刪");
              break;
            default:
              xfdCatName = window.wgULS("文件存废讨论", "檔案存廢討論");
              break;
          }
          let appendText = "# [[:".concat(Morebits.pageNameNorm, "]]");
          if (mw.config.get("wgNamespaceNumber") === 6) {
            appendText += "（[{{fullurl:Special:Log|page=".concat(mw.util.wikiUrlencode(mw.config.get("wgPageName")), "}} ").concat(window.wgULS("日志", "日誌"), "]）");
          }
          appendText += "：".concat(xfdCatName);
          if (params.xfdcat === "merge") {
            appendText += "[[:".concat(params.mergeinto, "]]");
          }
          appendText += "。";
          if (params.xfdreason) {
            appendText += "'''".concat(params.xfdcat === "fwdcsd" ? window.wgULS("原删除理据", "原刪除理據") : window.wgULS("理据", "理據"), "'''：").concat(Morebits.string.formatReasonForLog(params.xfdreason));
            appendText = Morebits.string.appendPunctuation(appendText);
          }
          if (params.fwdcsdreason) {
            appendText += "'''".concat(params.xfdcat === "fwdcsd" ? window.wgULS("转交理据", "轉交理據") : window.wgULS("理据", "理據"), "'''：").concat(Morebits.string.formatReasonForLog(params.fwdcsdreason));
            appendText = Morebits.string.appendPunctuation(appendText);
          }
          if (initialContrib) {
            appendText += "；通知{{user|".concat(initialContrib, "}}");
          }
          appendText += " ~~".concat("~~", "~\n");
          usl.changeTags = Twinkle.changeTags;
          usl.log(appendText, editsummary);
        }
      };
      Twinkle.xfd.callback.evaluate = (e) => {
        const params = Morebits.quickForm.getInputData(e.target);
        if (params.xfdcat === "merge" && params.mergeinto.trim() === "") {
          void mw.notify(window.wgULS("请提供合并目标！", "請提供合併目標！"), {
            type: "warn",
            tag: "twinklexfd"
          });
          return;
        }
        Morebits.simpleWindow.setButtonsEnabled(false);
        Morebits.status.init(e.target);
        Twinkle.xfd.currentRationale = params.xfdreason;
        Morebits.status.onError(Twinkle.xfd.printRationale);
        if (!params.category) {
          Morebits.status.error("错误", "未定义的动作");
          return;
        }
        let target_page;
        const date = new Morebits.date();
        switch (params.category) {
          case "afd":
            params.logpage = "Qiuwen_talk:存废讨论/记录/".concat(date.format("YYYY/MM/DD", "utc"));
            params.lognomination = Twinkle.getPref("logXfdNominations") && !Twinkle.getPref("noLogOnXfdNomination").includes(params.xfdcat);
            Morebits.wiki.addCheckpoint();
            Morebits.wiki.actionCompleted.redirect = params.logpage;
            Morebits.wiki.actionCompleted.notice = window.wgULS("提名完成，重定向到讨论页", "提名完成，重新導向到討論頁");
            target_page = new Morebits.wiki.page(mw.config.get("wgPageName"), window.wgULS("获取页面创建信息", "取得頁面建立資訊"));
            target_page.setCallbackParameters(params);
            if (mw.config.get("wgPageContentModel") === "wikitext") {
              target_page.setLookupNonRedirectCreator(true);
            }
            target_page.lookupCreation(Twinkle.xfd.callbacks.afd.lookupCreation);
            Morebits.wiki.removeCheckpoint();
            break;
          case "ffd": {
            params.logpage = "Qiuwen_talk:存废讨论/记录/".concat(date.format("YYYY/MM/DD", "utc"));
            params.lognomination = Twinkle.getPref("logXfdNominations") && !Twinkle.getPref("noLogOnXfdNomination").includes("ffd");
            Morebits.wiki.addCheckpoint();
            Morebits.wiki.actionCompleted.redirect = params.logpage;
            Morebits.wiki.actionCompleted.notice = window.wgULS("提名完成，重定向到讨论页", "提名完成，重新導向到討論頁");
            const qiuwen_page = new Morebits.wiki.page(mw.config.get("wgPageName"), window.wgULS("获取页面创建信息", "取得頁面建立資訊"));
            qiuwen_page.setCallbackParameters(params);
            qiuwen_page.setLookupNonRedirectCreator(true);
            qiuwen_page.lookupCreation(Twinkle.xfd.callbacks.ffd.lookupCreation);
            Morebits.wiki.removeCheckpoint();
            break;
          }
          default:
            void mw.notify("twinklexfd：未定义的类别", {
              type: "warn",
              tag: "twinklexfd"
            });
            break;
        }
      };
      Twinkle.addInitCallback(Twinkle.xfd, "xfd");
    })();
  }
});
//! src/Twinkle/modules/twinkleimage.js
var twinkleimage_exports = {};
var init_twinkleimage = __esm({
  "src/Twinkle/modules/twinkleimage.js"() {
    "use strict";
    /*! Twinkle.js - twinkleimage.js */
    (function twinkleimage() {
      Twinkle.image = () => {
        if (mw.config.get("wgNamespaceNumber") === 6 && !document.querySelector("#mw-sharedupload") && document.querySelector("#mw-imagepage-section-filehistory")) {
          Twinkle.addPortletLink(Twinkle.image.callback, window.wgULS("图权", "圖權"), "tw-di", window.wgULS("提交文件快速删除", "提交檔案快速刪除"));
        }
      };
      Twinkle.image.callback = () => {
        const Window = new Morebits.simpleWindow(600, 330);
        Window.setTitle(window.wgULS("文件快速删除候选", "檔案快速刪除候選"));
        Window.setScriptName("Twinkle");
        Window.addFooterLink(window.wgULS("快速删除方针", "快速刪除方針"), "QW:CSD");
        Window.addFooterLink(window.wgULS("图权设置", "圖權設定"), "H:TW/PREF#image");
        Window.addFooterLink(window.wgULS("Twinkle帮助", "Twinkle說明"), "H:TW/DOC#image");
        const form = new Morebits.quickForm(Twinkle.image.callback.evaluate);
        form.append({
          type: "checkbox",
          list: [{
            label: window.wgULS("通知上传者", "通知上傳者"),
            value: "notify",
            name: "notify",
            tooltip: window.wgULS("若您在标记同一用户的很多文件，请取消此复选框以避免发送过多消息。CSD F5永远不会通知。", "若您在標記同一使用者的很多檔案，請取消此核取方塊以避免發送過多訊息。CSD F5永遠不會通知。"),
            checked: Twinkle.getPref("notifyUserOnDeli")
          }]
        });
        const field = form.append({
          type: "field",
          label: window.wgULS("需要的动作", "需要的動作")
        });
        field.append({
          type: "radio",
          name: "type",
          list: [{
            label: window.wgULS("明显侵权之文件（CSD F1）", "明顯侵權之檔案（CSD F1）"),
            value: "no permission",
            tooltip: window.wgULS("上传者宣称拥有，而在其他来源找到的文件，或从侵权的来源获取的文件。", "上傳者宣稱擁有，而在其他來源找到的檔案，或從侵權的來源取得的檔案。"),
            subgroup: {
              name: "f1_source",
              type: "textarea",
              label: window.wgULS("侵权来源：", "侵權來源：")
            }
          }, {
            label: window.wgULS("来源不明（CSD F3）", "來源不明（CSD F3）"),
            value: "no source",
            checked: true,
            tooltip: window.wgULS("本文件并未注明原始出处", "本檔案並未註明原始出處")
          }, {
            label: window.wgULS("未知著作权信息（CSD F3）", "未知著作權資訊（CSD F3）"),
            value: "no license",
            tooltip: window.wgULS("本文件缺少著作权信息", "本檔案缺少著作權資訊")
          }, {
            label: window.wgULS("著作权无法被查证（CSD F3）", "著作權無法被查證（CSD F3）"),
            value: "no license",
            tooltip: window.wgULS("本文件声称的著作权信息无法被查证", "本檔案聲稱的著作權資訊無法被查證")
          }, {
            label: window.wgULS("可被替代的非自由著作权文件（CSD F4）", "可被替代的非自由著作權檔案（CSD F4）"),
            value: "replaceable fair use",
            tooltip: window.wgULS("文件仅用于描述、识别或评论文件中展示的事物，或仅用作插图，且满足以下四个条件之一。若给出了其他合理使用依据，不适用本条。如对文件的可替代性存在争议，应交文件存废讨论处理。本条也不适用于正在或曾经由文件存废讨论处理过的文件。", "檔案僅用於描述、辨識或評論檔案中展示的事物，或僅用作插圖，且滿足以下四個條件之一。若給出了其他合理使用依據，不適用本條。如對檔案的可替代性存在爭議，應交檔案存廢討論處理。本條也不適用於正在或曾經由檔案存廢討論處理過的檔案。"),
            subgroup: {
              name: "f4_type",
              type: "select",
              label: window.wgULS("适用类型：", "適用類別："),
              style: "width: 85%;",
              list: [{
                type: "option",
                label: window.wgULS("请选择", "請選擇"),
                value: ""
              }, {
                type: "option",
                label: window.wgULS("有其他自由著作权文件展示相同的事物", "有其他自由著作權檔案展示相同的事物"),
                value: "1"
              }, {
                type: "option",
                label: window.wgULS("文件描述的是在世或假定在世人物、仍然存在的建筑、室外雕塑或仍然在售的商品，且预计自行拍摄的照片不受他人著作权保护", "檔案描述的是在世或假定在世人物、仍然存在的建築、室外雕塑或仍然在售的商品，且預計自行拍攝的相片不受他人著作權保護"),
                value: "2"
              }, {
                type: "option",
                label: window.wgULS("文件为可自行绘制的地图或图表", "檔案為可自行繪製的地圖或圖表"),
                value: "3"
              }, {
                type: "option",
                label: window.wgULS("文件来自商业图片机构（如Getty）", "檔案來自商業圖片機構（如Getty）"),
                value: "4"
              }]
            }
          }, {
            label: window.wgULS("没有被条目使用的非自由著作权文件（CSD F5）", "沒有被條目使用的非自由著作權檔案（CSD F5）"),
            value: "orphaned fair use",
            tooltip: window.wgULS("本文件为非自由著作权且没有被条目使用", "本檔案為非自由著作權且沒有被條目使用")
          }, {
            label: window.wgULS("没有填写任何合理使用依据的非自由著作权文件（CSD F5）", "沒有填寫任何合理使用依據的非自由著作權檔案（CSD F5）"),
            value: "no fair use rationale",
            tooltip: window.wgULS("不适用于有争议但完整的合理使用依据。若非自由著作权文件只有部分条目的使用依据，但同时被使用于未提供合理使用依据的条目，则本方针也不适用。", "不適用於有爭議但完整的合理使用依據。若非自由著作權檔案只有部分條目的使用依據，但同時被使用於未提供合理使用依據的條目，則本方針也不適用。")
          }]
        });
        form.append({
          type: "submit"
        });
        const result = form.render();
        Window.setContent(result);
        Window.display();
        const evt = document.createEvent("Event");
        evt.initEvent("change", true, true);
        result.type[0].dispatchEvent(evt);
      };
      Twinkle.image.callback.evaluate = (event) => {
        let type;
        let notify = event.target.notify.checked;
        const types = event.target.type;
        var _iterator20 = _createForOfIteratorHelper(types), _step20;
        try {
          for (_iterator20.s(); !(_step20 = _iterator20.n()).done; ) {
            const type_ = _step20.value;
            if (type_.checked) {
              type = type_.values;
              break;
            }
          }
        } catch (err) {
          _iterator20.e(err);
        } finally {
          _iterator20.f();
        }
        let csdcrit;
        switch (type) {
          case "no source":
            csdcrit = "f3";
            break;
          case "no license":
            csdcrit = "f3";
            break;
          case "orphaned fair use":
            csdcrit = "f5";
            notify = false;
            break;
          case "no permission":
            csdcrit = "f1";
            break;
          case "no fair use rationale":
            csdcrit = "f5";
            break;
          case "replaceable fair use":
            csdcrit = "f4";
            break;
          default:
            throw new Error("Twinkle.image.callback.evaluate：未知条款");
        }
        const lognomination = Twinkle.getPref("logSpeedyNominations") && !Twinkle.getPref("noLogOnSpeedyNomination").includes(csdcrit.toLowerCase());
        const templatename = type;
        const params = {
          type,
          templatename,
          normalized: csdcrit,
          lognomination
        };
        if (csdcrit === "f1") {
          params.f1_source = event.target["type.f1_source"].value;
        }
        if (csdcrit === "f4") {
          const f4_type = event.target["type.f4_type"].value;
          if (!f4_type) {
            void mw.notify(window.wgULS("CSD F4：请选择适用类型。", "CSD F4：請選擇適用類別。"), {
              type: "warn",
              tag: "twinkleimage"
            });
            return false;
          }
          params.f4_type = f4_type;
        }
        Morebits.simpleWindow.setButtonsEnabled(false);
        Morebits.status.init(event.target);
        Morebits.wiki.actionCompleted.redirect = mw.config.get("wgPageName");
        Morebits.wiki.actionCompleted.notice = window.wgULS("标记完成", "標記完成");
        const qiuwen_page = new Morebits.wiki.page(mw.config.get("wgPageName"), window.wgULS("加入删除标记", "加入刪除標記"));
        qiuwen_page.setCallbackParameters(params);
        qiuwen_page.load(Twinkle.image.callbacks.taggingImage);
        if (notify) {
          qiuwen_page.lookupCreation(Twinkle.image.callbacks.userNotification);
        } else {
          if (lognomination) {
            params.fromDI = true;
            Twinkle.speedy.callbacks.user.addToLog(params, null);
          }
          if (type !== "orphaned fair use") {
            const noteData = document.createElement("pre");
            noteData.appendChild(document.createTextNode("{{".concat("subst:", "Uploadvionotice|".concat(Morebits.pageNameNorm, "}}--~~"), "~~")));
            Morebits.status.info("提示", [window.wgULS("这些内容应贴进上传者对话页：", "這些內容應貼進上傳者討論頁："), noteData]);
          }
        }
      };
      Twinkle.image.callbacks = {
        taggingImage: (pageobj) => {
          let text = pageobj.getPageText();
          const params = pageobj.getCallbackParameters();
          text = text.replace(/\{\{(mtc|(copy |move )?to ?(share|commons)|move to (qiuwen share|wikimedia commons)|copy to (qiuwen share|wikimedia commons))[^}]*\}\}/gi, "");
          if (params.type !== "orphaned fair use") {
            const qiuwen_page = new Morebits.wiki.page("Qiuwen_talk:存废讨论/文件快速删除提报", window.wgULS("加入快速删除记录项", "加入快速刪除記錄項"));
            qiuwen_page.setFollowRedirect(true);
            qiuwen_page.setCallbackParameters(params);
            qiuwen_page.load(Twinkle.image.callbacks.imageList);
          }
          let tag = "";
          switch (params.type) {
            case "orphaned fair use":
              tag = "{{".concat("subst:", "orphaned fair use}}\n");
              break;
            case "no permission":
              tag = "{{".concat("subst:", "".concat(params.templatename, "/auto|1=").concat(params.f1_source.replace(/http/g, "&#104;ttp").replace(/\n+/g, "\n").replace(/^\s*([^*])/gm, "* $1").replace(/^\* $/m, ""), "}}\n"));
              break;
            case "replaceable fair use":
              tag = "{{".concat("subst:", "".concat(params.templatename, "/auto|1=").concat(params.f4_type, "}}\n"));
              break;
            default:
              tag = "{{".concat("subst:", "".concat(params.templatename, "/auto}}\n"));
              break;
          }
          const textNoSd = text.replace(/\{\{\s*(db(-\w*)?|d|delete|(?:hang|hold)[- ]?on)\s*(\|(?:\{\{[^{}]*\}\}|[^{}])*)?\}\}\s*/gi, "");
          if (text !== textNoSd && confirm(window.wgULS("在页面上找到快速删除模板，要移除吗？", "在頁面上找到快速刪除模板，要移除嗎？"))) {
            text = textNoSd;
          }
          pageobj.setPageText(tag + text);
          let editSummary = window.wgULS("请求快速删除（", "請求快速刪除（");
          editSummary += "[[QW:CSD#".concat(params.normalized.toUpperCase(), "|CSD ").concat(params.normalized.toUpperCase(), "]]");
          editSummary += "）";
          pageobj.setEditSummary(editSummary);
          pageobj.setChangeTags(Twinkle.changeTags);
          pageobj.setWatchlist(Twinkle.getPref("deliWatchPage"));
          pageobj.setCreateOption("nocreate");
          pageobj.save();
        },
        userNotification: (pageobj) => {
          const params = pageobj.getCallbackParameters();
          const initialContrib = pageobj.getCreator();
          if (initialContrib === mw.config.get("wgUserName")) {
            pageobj.getStatusElement().warn("您（".concat(initialContrib, "）").concat(window.wgULS("创建了该页，跳过通知", "建立了該頁，跳過通知")));
          } else {
            const talkPageName = "User talk:".concat(initialContrib);
            const usertalkpage = new Morebits.wiki.page(talkPageName, "".concat(window.wgULS("通知上传者", "通知上傳者"), "（").concat(initialContrib, "）"));
            const notifytext = "\n{{".concat("subst:", "Di-".concat(params.templatename, "-notice|1=").concat(Morebits.pageNameNorm, "}}--~~"), "~~");
            usertalkpage.setAppendText(notifytext);
            usertalkpage.setEditSummary(window.wgULS("通知：文件[[", "通知：檔案[[") + Morebits.pageNameNorm + window.wgULS("]]快速删除提名", "]]快速刪除提名"));
            usertalkpage.setChangeTags(Twinkle.changeTags);
            usertalkpage.setCreateOption("recreate");
            usertalkpage.setWatchlist(Twinkle.getPref("deliWatchUser"));
            usertalkpage.setFollowRedirect(true, false);
            usertalkpage.append();
          }
          if (params.lognomination) {
            params.fromDI = true;
            Twinkle.speedy.callbacks.user.addToLog(params, initialContrib);
          }
        },
        imageList: (pageobj) => {
          const text = pageobj.getPageText();
          pageobj.setPageText("".concat(text, "\n* [[:").concat(Morebits.pageNameNorm, "]]--~~").concat("~~"));
          pageobj.setEditSummary("加入[[".concat(Morebits.pageNameNorm, "]]"));
          pageobj.setChangeTags(Twinkle.changeTags);
          pageobj.setCreateOption("recreate");
          pageobj.save();
        }
      };
      Twinkle.addInitCallback(Twinkle.image, "image");
    })();
  }
});
//! src/Twinkle/modules/twinkleprotect.js
var twinkleprotect_exports = {};
var init_twinkleprotect = __esm({
  "src/Twinkle/modules/twinkleprotect.js"() {
    "use strict";
    init_api();
    /*! Twinkle.js - twinkleprotect.js */
    (function twinkleprotect($) {
      const $body = $("body");
      Twinkle.protect = () => {
        if (mw.config.get("wgNamespaceNumber") < 0 || mw.config.get("wgNamespaceNumber") === 8) {
          return;
        }
        Twinkle.addPortletLink(Twinkle.protect.callback, window.wgULS("保护", "保護"), "tw-rpp", Morebits.userIsSysop ? window.wgULS("保护页面", "保護頁面") : window.wgULS("请求保护页面", "請求保護頁面"));
      };
      Twinkle.protect.callback = () => {
        const Window = new Morebits.simpleWindow(620, 530);
        Window.setTitle(Morebits.userIsSysop ? window.wgULS("施行或请求保护页面", "施行或請求保護頁面") : window.wgULS("请求保护页面", "請求保護頁面"));
        Window.setScriptName("Twinkle");
        Window.addFooterLink(window.wgULS("保护方针", "保護方針"), "QW:PROT");
        Window.addFooterLink(window.wgULS("保护设置", "保護設定"), "H:TW/PREF#protect");
        Window.addFooterLink(window.wgULS("Twinkle帮助", "Twinkle說明"), "H:TW/DOC#protect");
        const form = new Morebits.quickForm(Twinkle.protect.callback.evaluate);
        const actionfield = form.append({
          type: "field",
          label: window.wgULS("操作类型", "操作類別")
        });
        if (Morebits.userIsSysop) {
          actionfield.append({
            type: "radio",
            name: "actiontype",
            event: Twinkle.protect.callback.changeAction,
            list: [{
              label: window.wgULS("保护页面", "保護頁面"),
              value: "protect",
              checked: true
            }]
          });
        }
        actionfield.append({
          type: "radio",
          name: "actiontype",
          event: Twinkle.protect.callback.changeAction,
          list: [{
            label: window.wgULS("请求保护页面", "請求保護頁面"),
            value: "request",
            tooltip: window.wgULS("若您想在QW:RFPP请求保护此页", "若您想在QW:RFPP請求保護此頁") + (Morebits.userIsSysop ? "而不是自行完成。" : "。"),
            checked: !Morebits.userIsSysop
          }, {
            label: window.wgULS("用保护模板标记此页", "用保護模板標記此頁"),
            value: "tag",
            tooltip: window.wgULS("可以用此为页面加上合适的保护模板。", "可以用此為頁面加上合適的保護模板。"),
            disabled: mw.config.get("wgArticleId") === 0 || mw.config.get("wgPageContentModel") === "Scribunto"
          }]
        });
        form.append({
          type: "field",
          label: window.wgULS("默认", "預設"),
          name: "field_preset"
        });
        form.append({
          type: "field",
          label: "1",
          name: "field1"
        });
        form.append({
          type: "field",
          label: "2",
          name: "field2"
        });
        form.append({
          type: "submit"
        });
        const result = form.render();
        Window.setContent(result);
        Window.display();
        const evt = document.createEvent("Event");
        evt.initEvent("change", true, true);
        result.actiontype[0].dispatchEvent(evt);
        Twinkle.protect.fetchProtectionLevel();
      };
      const isTemplate = mw.config.get("wgNamespaceNumber") === 10 || mw.config.get("wgNamespaceNumber") === 828;
      Twinkle.protect.currentProtectionLevels = {};
      Twinkle.protect.previousProtectionLevels = {};
      Twinkle.protect.fetchProtectionLevel = () => {
        const params = {
          format: "json",
          indexpageids: true,
          action: "query",
          list: "logevents",
          letype: "protect",
          letitle: mw.config.get("wgPageName"),
          prop: "info",
          inprop: "protection|watched",
          titles: mw.config.get("wgPageName")
        };
        void api.get(params).then((protectData) => {
          const [pageid] = protectData.query.pageids;
          const page = protectData.query.pages[pageid];
          const current = {};
          const previous = {};
          Twinkle.protect.watched = page.watchlistexpiry || page.watched === "";
          var _iterator21 = _createForOfIteratorHelper(page.protection), _step21;
          try {
            for (_iterator21.s(); !(_step21 = _iterator21.n()).done; ) {
              const protection = _step21.value;
              if (protection.type !== "aft") {
                current[protection.type] = {
                  level: protection.level,
                  expiry: protection.expiry,
                  cascade: protection.cascade === ""
                };
              }
            }
          } catch (err) {
            _iterator21.e(err);
          } finally {
            _iterator21.f();
          }
          if (protectData.query.logevents.length >= 1 && protectData.query.logevents[0].action !== "unprotect") {
            [Twinkle.protect.previousProtectionLog] = protectData.query.logevents;
          } else if (protectData.query.logevents.length >= 2) {
            [, Twinkle.protect.previousProtectionLog] = protectData.query.logevents;
          }
          if (Twinkle.protect.previousProtectionLog) {
            var _iterator22 = _createForOfIteratorHelper(Twinkle.protect.previousProtectionLog.params.details), _step22;
            try {
              for (_iterator22.s(); !(_step22 = _iterator22.n()).done; ) {
                const protection = _step22.value;
                if (protection.type !== "aft") {
                  previous[protection.type] = {
                    level: protection.level,
                    expiry: protection.expiry,
                    cascade: protection.cascade === ""
                  };
                }
              }
            } catch (err) {
              _iterator22.e(err);
            } finally {
              _iterator22.f();
            }
          }
          Twinkle.protect.hasProtectLog = !!protectData.query.logevents.length;
          Twinkle.protect.currentProtectionLevels = current;
          Twinkle.protect.previousProtectionLevels = previous;
          Twinkle.protect.callback.showLogAndCurrentProtectInfo();
        });
      };
      Twinkle.protect.callback.showLogAndCurrentProtectInfo = () => {
        const currentlyProtected = Object.keys(Twinkle.protect.currentProtectionLevels).length !== 0;
        if (Twinkle.protect.hasProtectLog || Twinkle.protect.hasStableLog) {
          const $linkMarkup = $("<span>");
          if (Twinkle.protect.hasProtectLog) {
            $linkMarkup.append($('<a rel="noopener" target="_blank" href="'.concat(mw.util.getUrl("Special:Log", {
              action: "view",
              page: mw.config.get("wgPageName"),
              type: "protect"
            }), '">').concat(window.wgULS("保护日志", "保護日誌"), "</a>")), Twinkle.protect.hasStableLog ? $("<span>").html(" &bull; ") : null);
          }
          Morebits.status.init($body.find('div[name="hasprotectlog"] span')[0]);
          Morebits.status.warn(currentlyProtected ? window.wgULS("先前保护", "先前保護") : [window.wgULS("此页面曾在", "此頁面曾在"), $("<b>".concat(new Morebits.date(Twinkle.protect.previousProtectionLog.timestamp).calendar("utc"), "</b>"))[0], "被".concat(Twinkle.protect.previousProtectionLog.user).concat(window.wgULS("保护", "保護"), "："), ...Twinkle.protect.formatProtectionDescription(Twinkle.protect.previousProtectionLevels)], $linkMarkup[0]);
        }
        Morebits.status.init($body.find('div[name="currentprot"] span')[0]);
        let protectionNode = [];
        let statusLevel = "info";
        protectionNode = Twinkle.protect.formatProtectionDescription(Twinkle.protect.currentProtectionLevels);
        if (currentlyProtected) {
          statusLevel = "warn";
        }
        Morebits.status[statusLevel](window.wgULS("当前保护等级", "目前保護等級"), protectionNode);
      };
      Twinkle.protect.callback.changeAction = (e) => {
        let field_preset;
        let field1;
        let field2;
        switch (e.target.values) {
          case "protect":
            field_preset = new Morebits.quickForm.element({
              type: "field",
              label: window.wgULS("默认", "預設"),
              name: "field_preset"
            });
            field_preset.append({
              type: "select",
              name: "category",
              label: window.wgULS("选择默认：", "選擇預設："),
              event: Twinkle.protect.callback.changePreset,
              list: mw.config.get("wgArticleId") ? Twinkle.protect.protectionTypesAdmin : Twinkle.protect.protectionTypesCreate
            });
            field2 = new Morebits.quickForm.element({
              type: "field",
              label: window.wgULS("保护选项", "保護選項"),
              name: "field2"
            });
            field2.append({
              type: "div",
              name: "currentprot",
              label: " "
            });
            field2.append({
              type: "div",
              name: "hasprotectlog",
              label: " "
            });
            if (mw.config.get("wgArticleId")) {
              field2.append({
                type: "checkbox",
                event: Twinkle.protect.formevents.editmodify,
                list: [{
                  label: window.wgULS("修改编辑权限", "修改編輯權限"),
                  name: "editmodify",
                  tooltip: window.wgULS("若此项关闭，编辑权限将不会修改。", "若此項關閉，編輯權限將不會修改。"),
                  checked: true
                }]
              });
              field2.append({
                type: "select",
                name: "editlevel",
                label: window.wgULS("编辑权限：", "編輯權限："),
                event: Twinkle.protect.formevents.editlevel,
                list: Twinkle.protect.protectionLevels.filter(
                  // Filter TE outside of templates and modules
                  (level) => {
                    return isTemplate || level.value !== "templateeditor";
                  }
                )
              });
              field2.append({
                type: "select",
                name: "editexpiry",
                label: window.wgULS("终止时间：", "終止時間："),
                event: (event) => {
                  if (event.target.value === "custom") {
                    Twinkle.protect.doCustomExpiry(event.target);
                  }
                  $("input[name=small]", $(event.target).closest("form"))[0].checked = event.target.selectedIndex >= 4;
                },
                // default expiry selection (2 days) is conditionally set in Twinkle.protect.callback.changePreset
                list: Twinkle.protect.protectionLengths
              });
              field2.append({
                type: "checkbox",
                event: Twinkle.protect.formevents.movemodify,
                list: [{
                  label: window.wgULS("修改移动权限", "修改移動權限"),
                  name: "movemodify",
                  tooltip: window.wgULS("若此项被关闭，移动权限将不被修改。", "若此項被關閉，移動權限將不被修改。"),
                  checked: true
                }]
              });
              field2.append({
                type: "select",
                name: "movelevel",
                label: window.wgULS("移动权限：", "移動權限："),
                event: Twinkle.protect.formevents.movelevel,
                list: Twinkle.protect.protectionLevels.filter(
                  // Autoconfirmed is required for a move, redundant
                  (level) => {
                    return level.value !== "autoconfirmed" && (isTemplate || level.value !== "templateeditor");
                  }
                )
              });
              field2.append({
                type: "select",
                name: "moveexpiry",
                label: window.wgULS("终止时间：", "終止時間："),
                event: (event) => {
                  if (event.target.value === "custom") {
                    Twinkle.protect.doCustomExpiry(event.target);
                  }
                },
                // default expiry selection (2 days) is conditionally set in Twinkle.protect.callback.changePreset
                list: Twinkle.protect.protectionLengths
              });
            } else {
              field2.append({
                type: "select",
                name: "createlevel",
                label: window.wgULS("创建权限：", "建立權限："),
                event: Twinkle.protect.formevents.createlevel,
                list: Twinkle.protect.protectionLevels.filter(
                  // Filter TE always, and autoconfirmed in mainspace
                  (level) => {
                    return level.value !== "templateeditor";
                  }
                )
              });
              field2.append({
                type: "select",
                name: "createexpiry",
                label: window.wgULS("终止时间：", "終止時間："),
                event: (event) => {
                  if (event.target.value === "custom") {
                    Twinkle.protect.doCustomExpiry(event.target);
                  }
                },
                // default expiry selection (indefinite) is conditionally set in Twinkle.protect.callback.changePreset
                list: Twinkle.protect.protectionLengths
              });
            }
            field2.append({
              type: "checkbox",
              list: [{
                name: "close",
                label: window.wgULS("标记请求保护页面中的请求", "標記請求保護頁面中的請求"),
                checked: true
              }]
            });
            field2.append({
              type: "textarea",
              name: "protectReason",
              label: window.wgULS("理由（保护日志）：", "理由（保護日誌）：")
            });
            if (!mw.config.get("wgArticleId") || mw.config.get("wgPageContentModel") === "Scribunto") {
              break;
            }
          /* falls through */
          case "tag":
            field1 = new Morebits.quickForm.element({
              type: "field",
              label: window.wgULS("标记选项", "標記選項"),
              name: "field1"
            });
            field1.append({
              type: "div",
              name: "currentprot",
              label: " "
            });
            field1.append({
              type: "div",
              name: "hasprotectlog",
              label: " "
            });
            field1.append({
              type: "select",
              name: "tagtype",
              label: window.wgULS("选择保护模板：", "選擇保護模板："),
              list: Twinkle.protect.protectionTags,
              event: Twinkle.protect.formevents.tagtype
            });
            field1.append({
              type: "checkbox",
              list: [{
                name: "small",
                label: window.wgULS("使用图标（small=yes）", "使用圖示（small=yes）"),
                tooltip: window.wgULS("将给模板加上|small=yes参数，显示成右上角的一把挂锁。", "將給模板加上|small=yes參數，顯示成右上角的一把掛鎖。")
              }, {
                name: "noinclude",
                label: window.wgULS("用&lt;noinclude&gt;包裹保护模板", "用&lt;noinclude&gt;包裹保護模板"),
                tooltip: window.wgULS("将保护模板包裹在&lt;noinclude&gt;中", "將保護模板包裹在&lt;noinclude&gt;中"),
                checked: mw.config.get("wgNamespaceNumber") === 10
              }, {
                name: "showexpiry",
                label: window.wgULS("在模板显示到期时间", "在模板顯示到期時間"),
                tooltip: window.wgULS("将给模板加上|expiry参数", "將給模板加上|expiry參數"),
                checked: true,
                hidden: e.target.values === "tag"
              }]
            });
            break;
          case "request":
            field_preset = new Morebits.quickForm.element({
              type: "field",
              label: window.wgULS("保护类型", "保護類別"),
              name: "field_preset"
            });
            field_preset.append({
              type: "select",
              name: "category",
              label: window.wgULS("类型和理由：", "類別和理由："),
              event: Twinkle.protect.callback.changePreset,
              list: mw.config.get("wgArticleId") ? Twinkle.protect.protectionTypes : Twinkle.protect.protectionTypesCreate
            });
            field1 = new Morebits.quickForm.element({
              type: "field",
              label: window.wgULS("选项", "選項"),
              name: "field1"
            });
            field1.append({
              type: "div",
              name: "currentprot",
              label: " "
            });
            field1.append({
              type: "div",
              name: "hasprotectlog",
              label: " "
            });
            field1.append({
              type: "select",
              name: "expiry",
              label: window.wgULS("时长：", "時長："),
              list: [{
                label: "",
                selected: true,
                value: ""
              }, {
                label: window.wgULS("临时", "臨時"),
                value: "temporary"
              }, {
                label: "永久",
                value: "infinity"
              }]
            });
            field1.append({
              type: "textarea",
              name: "reason",
              label: "理由："
            });
            break;
          default:
            void mw.notify(window.wgULS("这玩意儿被海豚吃掉了！", "這玩意兒被海豚吃掉了！"), {
              type: "warn",
              tag: "twinkleprotect"
            });
            break;
        }
        let oldfield;
        if (field_preset) {
          [oldfield] = $(e.target.form).find('fieldset[name="field_preset"]');
          oldfield.parentNode.replaceChild(field_preset.render(), oldfield);
        } else {
          $(e.target.form).find('fieldset[name="field_preset"]').css("display", "none");
        }
        if (field1) {
          [oldfield] = $(e.target.form).find('fieldset[name="field1"]');
          oldfield.parentNode.replaceChild(field1.render(), oldfield);
        } else {
          $(e.target.form).find('fieldset[name="field1"]').css("display", "none");
        }
        if (field2) {
          [oldfield] = $(e.target.form).find('fieldset[name="field2"]');
          oldfield.parentNode.replaceChild(field2.render(), oldfield);
        } else {
          $(e.target.form).find('fieldset[name="field2"]').css("display", "none");
        }
        if (e.target.values === "protect") {
          const evt = document.createEvent("Event");
          evt.initEvent("change", true, true);
          e.target.form.category.dispatchEvent(evt);
          $(e.target.form).find('fieldset[name="field2"] select').parent().css({
            display: "inline-block",
            marginRight: "0.5em"
          });
        }
        Twinkle.protect.callback.showLogAndCurrentProtectInfo();
      };
      Twinkle.protect.formevents = {
        editmodify: (e) => {
          e.target.form.editlevel.disabled = !e.target.checked;
          e.target.form.editexpiry.disabled = !e.target.checked || e.target.form.editlevel.value === "all";
          e.target.form.editlevel.style.color = e.target.checked ? "" : "transparent";
          e.target.form.editexpiry.style.color = e.target.checked ? "" : "transparent";
        },
        editlevel: (e) => {
          e.target.form.editexpiry.disabled = e.target.value === "all";
        },
        movemodify: (e) => {
          if (e.target.form.movelevel.disabled && !e.target.form.editlevel.disabled) {
            e.target.form.movelevel.value = e.target.form.editlevel.value;
            e.target.form.moveexpiry.value = e.target.form.editexpiry.value;
          } else if (e.target.form.editlevel.disabled) {
            e.target.form.movelevel.value = "sysop";
            e.target.form.moveexpiry.value = "infinity";
          }
          e.target.form.movelevel.disabled = !e.target.checked;
          e.target.form.moveexpiry.disabled = !e.target.checked || e.target.form.movelevel.value === "all";
          e.target.form.movelevel.style.color = e.target.checked ? "" : "transparent";
          e.target.form.moveexpiry.style.color = e.target.checked ? "" : "transparent";
        },
        movelevel: (e) => {
          e.target.form.moveexpiry.disabled = e.target.value === "all";
        },
        createlevel: (e) => {
          e.target.form.createexpiry.disabled = e.target.value === "all";
        },
        tagtype: (e) => {
          e.target.form.small.disabled = e.target.value === "none" || e.target.value === "noop";
          e.target.form.noinclude.disabled = e.target.value === "none" || e.target.value === "noop";
          e.target.form.showexpiry.disabled = e.target.value === "none" || e.target.value === "noop";
        }
      };
      Twinkle.protect.doCustomExpiry = (target) => {
        const custom = prompt(window.wgULS("输入自定义终止时间。\n您可以使用相对时间，如“1 minute”或“19 days”，或绝对时间“yyyymmddhhmm”（如“200602011405”是2006年02月01日14：05（UTC））", "輸入自訂終止時間。\n您可以使用相對時間，如「1 minute」或「19 days」，或絕對時間「yyyymmddhhmm」（如「200602011405」是2006年02月01日14：05（UTC））"), "");
        if (custom) {
          const option = document.createElement("option");
          option.setAttribute("value", custom);
          option.textContent = custom;
          target.appendChild(option);
          target.value = custom;
        } else {
          target.selectedIndex = 0;
        }
      };
      Twinkle.protect.protectionLevels = [{
        label: "全部",
        value: "all"
      }, {
        label: window.wgULS("仅允许自动确认用户", "僅允許自動確認使用者"),
        value: "autoconfirmed"
      }, {
        label: window.wgULS("仅模板编辑员和管理员", "僅模板編輯員和管理員"),
        value: "templateeditor"
      }, {
        label: window.wgULS("仅管理员", "僅管理員"),
        value: "sysop",
        selected: true
      }, {
        label: window.wgULS("仅允许资深用户", "僅允許資深用戶"),
        value: "revisionprotected"
      }, {
        label: window.wgULS("仅允许裁决委员", "僅允許裁決委員"),
        value: "officialprotected"
      }];
      Twinkle.protect.protectionLengths = [{
        label: "1天",
        value: "1 day"
      }, {
        label: "3天",
        value: "3 days"
      }, {
        label: window.wgULS("1周", "1週"),
        value: "1 week"
      }, {
        label: window.wgULS("2周", "2週"),
        value: "2 weeks"
      }, {
        label: window.wgULS("1个月", "1個月"),
        value: "1 month"
      }, {
        label: window.wgULS("3个月", "3個月"),
        value: "3 months"
      }, {
        label: window.wgULS("6个月", "6個月"),
        value: "6 months"
      }, {
        label: "1年",
        value: "1 year"
      }, {
        label: window.wgULS("无限期", "無限期"),
        value: "infinity"
      }, {
        label: window.wgULS("自定义……", "自訂……"),
        value: "custom"
      }];
      Twinkle.protect.protectionTypesAdmin = [{
        label: window.wgULS("解除保护", "解除保護"),
        value: "unprotect"
      }, {
        label: window.wgULS("全保护", "全保護"),
        list: [{
          label: window.wgULS("常规（全）", "常規（全）"),
          value: "pp-protected"
        }, {
          label: window.wgULS("争议、编辑战（全）", "爭議、編輯戰（全）"),
          value: "pp-dispute"
        }]
      }, {
        label: window.wgULS("模板保护", "模板保護"),
        list: [{
          label: window.wgULS("高风险模板（模板）", "高風險模板（模板）"),
          value: "pp-template"
        }]
      }, {
        label: window.wgULS("半保护", "半保護"),
        list: [{
          label: window.wgULS("常规（半）", "常規（半）"),
          value: "pp-semi-protected"
        }, {
          label: window.wgULS("持续破坏（半）", "持續破壞（半）"),
          value: "pp-semi-vandalism"
        }, {
          label: window.wgULS("违反生者传记方针（半）", "違反生者傳記方針（半）"),
          value: "pp-semi-blp"
        }, {
          label: window.wgULS("傀儡破坏（半）", "傀儡破壞（半）"),
          value: "pp-semi-sock"
        }, {
          label: window.wgULS("高风险模板（半）", "高風險模板（半）"),
          value: "pp-semi-template"
        }, {
          label: window.wgULS("被封禁用户滥用讨论页（半）", "被封禁使用者濫用討論頁（半）"),
          value: "pp-semi-usertalk"
        }]
      }, {
        label: window.wgULS("移动保护", "移動保護"),
        list: [{
          label: window.wgULS("常规（移动）", "常規（移動）"),
          value: "pp-move"
        }, {
          label: window.wgULS("争议、移动战（移动）", "爭議、移動戰（移動）"),
          value: "pp-move-dispute"
        }, {
          label: window.wgULS("移动破坏（移动）", "移動破壞（移動）"),
          value: "pp-move-vandalism"
        }, {
          label: window.wgULS("高风险页面（移动）", "高風險頁面（移動）"),
          value: "pp-move-indef"
        }]
      }].filter(({
        label
      }) => {
        return isTemplate || label !== "模板保护" && label !== "模板保護";
      });
      Twinkle.protect.protectionTypesCreateOnly = [{
        label: window.wgULS("白纸保护", "白紙保護"),
        list: [{
          label: window.wgULS("常规（白纸）", "常規（白紙）"),
          value: "pp-create"
        }, {
          label: window.wgULS("多次重复创建（白纸）", "多次重複建立（白紙）"),
          value: "pp-create-repeat"
        }, {
          label: window.wgULS("持续破坏（白纸）", "持續破壞（白紙）"),
          value: "pp-create-vandalism"
        }, {
          label: window.wgULS("已封禁用户的用户页（白纸）", "已封禁使用者的使用者頁（白紙）"),
          value: "pp-create-userpage"
        }]
      }];
      Twinkle.protect.protectionTypes = [...Twinkle.protect.protectionTypesAdmin, ...Twinkle.protect.protectionTypesCreateOnly];
      Twinkle.protect.protectionTypesCreate = [{
        label: "解除保护",
        value: "unprotect"
      }, ...Twinkle.protect.protectionTypesCreateOnly];
      Twinkle.protect.protectionPresetsInfo = {
        "pp-protected": {
          edit: "sysop",
          move: "sysop",
          reason: null
        },
        "pp-dispute": {
          edit: "sysop",
          move: "sysop",
          reason: window.wgULS("编辑战", "編輯戰")
        },
        "pp-template": {
          edit: "templateeditor",
          move: "templateeditor",
          expiry: "infinity",
          reason: window.wgULS("[[QW:HRT|高风险模板]]", "[[QW:HRT|高風險模板]]"),
          template: "noop"
        },
        "pp-vandalism": {
          edit: "sysop",
          move: "sysop",
          reason: window.wgULS("被自动确认用户破坏", "被自動確認使用者破壞")
        },
        "pp-sock": {
          edit: "sysop",
          move: "sysop",
          reason: window.wgULS("持续的傀儡破坏", "持續的傀儡破壞")
        },
        "pp-semi-vandalism": {
          edit: "autoconfirmed",
          reason: window.wgULS("被新用户破坏", "被新使用者破壞"),
          template: "pp-vandalism"
        },
        "pp-semi-blp": {
          edit: "autoconfirmed",
          reason: window.wgULS("新用户违反生者传记方针", "新使用者違反生者傳記方針")
        },
        "pp-semi-usertalk": {
          edit: "autoconfirmed",
          reason: window.wgULS("被封禁用户滥用其讨论页", "被封禁使用者濫用其討論頁")
        },
        "pp-semi-template": {
          // removed for now
          edit: "autoconfirmed",
          expiry: "infinity",
          reason: window.wgULS("[[QW:HRT|高风险模板]]", "[[QW:HRT|高風險模板]]"),
          template: "noop"
        },
        "pp-semi-sock": {
          edit: "autoconfirmed",
          reason: window.wgULS("持续的傀儡破坏", "持續的傀儡破壞"),
          template: "pp-sock"
        },
        "pp-semi-protected": {
          edit: "autoconfirmed",
          reason: null,
          template: "pp-protected"
        },
        "pp-move": {
          move: "sysop",
          reason: null
        },
        "pp-move-dispute": {
          move: "sysop",
          reason: window.wgULS("页面移动战", "頁面移動戰")
        },
        "pp-move-vandalism": {
          move: "sysop",
          reason: window.wgULS("移动破坏", "移動破壞")
        },
        "pp-move-indef": {
          move: "sysop",
          expiry: "infinity",
          reason: window.wgULS("高风险页面", "高風險頁面")
        },
        unprotect: {
          edit: "all",
          move: "all",
          create: "all",
          reason: null,
          template: "none"
        },
        "pp-create": {
          create: "autoconfirmed",
          reason: null
        },
        "pp-create-repeat": {
          create: "autoconfirmed",
          reason: window.wgULS("多次重复创建", "多次重複建立")
        },
        "pp-create-vandalism": {
          create: "autoconfirmed",
          reason: window.wgULS("被新用户破坏", "被新使用者破壞")
        },
        "pp-create-userpage": {
          create: "sysop",
          expiry: "infinity",
          reason: window.wgULS("被永久封禁的用户页", "被永久封禁的使用者頁面")
        }
      };
      Twinkle.protect.protectionTags = [{
        label: window.wgULS("无（移除现有模板）", "無（移除現有模板）"),
        value: "none"
      }, {
        label: window.wgULS("无（不移除现有模板）", "無（不移除現有模板）"),
        value: "noop"
      }, {
        label: "通用模板",
        list: [{
          label: "{{pp-dispute}}: ".concat(window.wgULS("争议", "爭議")),
          value: "pp-dispute"
        }, {
          label: "{{pp-vandalism}}: ".concat(window.wgULS("破坏", "破壞")),
          value: "pp-vandalism",
          selected: true
        }, {
          label: "{{pp-sock}}: 傀儡",
          value: "pp-sock"
        }, {
          label: "{{pp-template}}: ".concat(window.wgULS("高风险模板", "高風險模板")),
          value: "pp-template"
        }, {
          label: "{{pp-protected}}: ".concat(window.wgULS("常规", "常規")),
          value: "pp-protected"
        }]
      }, {
        label: window.wgULS("半保护模板", "半保護模板"),
        list: [{
          label: "{{pp-semi-usertalk}}: ".concat(window.wgULS("封禁的用户", "封禁的使用者")),
          value: "pp-semi-usertalk"
        }, {
          label: "{{pp-semi-blp}}: ".concat(window.wgULS("生者传记", "生者傳記")),
          value: "pp-semi-blp"
        }, {
          label: "{{pp-semi-indef}}: ".concat(window.wgULS("长期", "長期")),
          value: "pp-semi-indef"
        }]
      }, {
        label: window.wgULS("移动保护模板", "移動保護模板"),
        list: [{
          label: "{{pp-move-dispute}}: ".concat(window.wgULS("争议", "爭議")),
          value: "pp-move-dispute"
        }, {
          label: "{{pp-move-vandalism}}: ".concat(window.wgULS("破坏", "破壞")),
          value: "pp-move-vandalism"
        }, {
          label: "{{pp-move-indef}}: ".concat(window.wgULS("长期", "長期")),
          value: "pp-move-indef"
        }, {
          label: "{{pp-move}}: ".concat(window.wgULS("常规", "常規")),
          value: "pp-move"
        }]
      }];
      Twinkle.protect.callback.changePreset = (e) => {
        const {
          form
        } = e.target;
        const actiontypes = form.actiontype;
        let actiontype;
        var _iterator23 = _createForOfIteratorHelper(actiontypes), _step23;
        try {
          for (_iterator23.s(); !(_step23 = _iterator23.n()).done; ) {
            const action_type_value = _step23.value;
            if (!action_type_value.checked) {
              continue;
            }
            actiontype = action_type_value.values;
            break;
          }
        } catch (err) {
          _iterator23.e(err);
        } finally {
          _iterator23.f();
        }
        if (actiontype === "protect") {
          const item = Twinkle.protect.protectionPresetsInfo[form.category.value];
          if (mw.config.get("wgArticleId")) {
            if (item.edit) {
              form.editmodify.checked = true;
              Twinkle.protect.formevents.editmodify({
                target: form.editmodify
              });
              form.editlevel.value = item.edit;
              Twinkle.protect.formevents.editlevel({
                target: form.editlevel
              });
            } else {
              form.editmodify.checked = false;
              Twinkle.protect.formevents.editmodify({
                target: form.editmodify
              });
            }
            if (item.move) {
              form.movemodify.checked = true;
              Twinkle.protect.formevents.movemodify({
                target: form.movemodify
              });
              form.movelevel.value = item.move;
              Twinkle.protect.formevents.movelevel({
                target: form.movelevel
              });
            } else {
              form.movemodify.checked = false;
              Twinkle.protect.formevents.movemodify({
                target: form.movemodify
              });
            }
            form.editexpiry.value = item.expiry || "1 week";
            form.moveexpiry.value = item.expiry || "1 week";
          } else {
            if (item.create) {
              form.createlevel.value = item.create;
              Twinkle.protect.formevents.createlevel({
                target: form.createlevel
              });
              form.createexpiry.value = item.createexpiry || "1 week";
            }
            form.createexpiry.value = item.expiry || "1 week";
          }
          const reasonField = actiontype === "protect" ? form.protectReason : form.reason;
          if (item.reason) {
            reasonField.value = item.reason;
          } else {
            reasonField.value = "";
          }
          if (mw.config.get("wgArticleId") && mw.config.get("wgPageContentModel") !== "Scribunto") {
            if (form.category.value === "unprotect") {
              form.tagtype.value = "none";
            } else {
              var _item$template;
              form.tagtype.value = (_item$template = item.template) !== null && _item$template !== void 0 ? _item$template : form.category.value;
            }
            Twinkle.protect.formevents.tagtype({
              target: form.tagtype
            });
            if (/template/.test(form.category.value)) {
              form.noinclude.checked = true;
            } else if (mw.config.get("wgNamespaceNumber") !== 10) {
              form.noinclude.checked = false;
            }
          }
        } else if (form.category.value === "unprotect") {
          form.expiry.value = "";
          form.expiry.disabled = true;
        } else {
          form.expiry.value = "";
          form.expiry.disabled = false;
        }
      };
      Twinkle.protect.callback.evaluate = (e) => {
        const form = e.target;
        const input = Morebits.quickForm.getInputData(form);
        let tagparams;
        if (input.actiontype === "tag" || input.actiontype === "protect" && mw.config.get("wgArticleId") && mw.config.get("wgPageContentModel") !== "Scribunto") {
          tagparams = {
            tag: input.tagtype,
            reason: (input.tagtype === "pp-protected" || input.tagtype === "pp-semi-protected" || input.tagtype === "pp-move") && input.protectReason ? input.protectReason : null,
            showexpiry: input.actiontype === "protect" ? input.showexpiry : null,
            small: input.small,
            noinclude: input.noinclude
          };
          if (input.actiontype === "protect") {
            if (input.editmodify) {
              tagparams.expiry = input.editexpiry;
            } else if (input.movemodify) {
              tagparams.expiry = input.moveexpiry;
            }
          }
        }
        const closeparams = {};
        if (input.close) {
          if (input.category === "unprotect") {
            closeparams.type = "unprotect";
          } else if (mw.config.get("wgArticleId")) {
            if (input.editmodify) {
              switch (input.editlevel) {
                case "officialprotected":
                  closeparams.type = "officialprotected";
                  closeparams.expiry = input.editexpiry;
                  break;
                case "revisionprotected":
                  closeparams.type = "revisionprotected";
                  closeparams.expiry = input.editexpiry;
                  break;
                case "sysop":
                  closeparams.type = "full";
                  closeparams.expiry = input.editexpiry;
                  break;
                case "templateeditor":
                  closeparams.type = "temp";
                  closeparams.expiry = input.editexpiry;
                  break;
                case "autoconfirmed":
                  closeparams.type = "semi";
                  closeparams.expiry = input.editexpiry;
                  break;
              }
            } else if (input.movemodify && ["officialprotected", "revisionprotected", "sysop", "templateeditor"].includes(input.movelevel)) {
              closeparams.type = "move";
              closeparams.expiry = input.moveexpiry;
            }
          } else if (input.createlevel !== "all") {
            closeparams.type = "salt";
            closeparams.expiry = input.createexpiry;
          }
        }
        switch (input.actiontype) {
          case "protect": {
            Morebits.wiki.actionCompleted.redirect = mw.config.get("wgPageName");
            Morebits.wiki.actionCompleted.notice = window.wgULS("保护完成", "保護完成");
            let statusInited = false;
            let thispage;
            const allDone = () => {
              if (thispage) {
                thispage.getStatusElement().info("完成");
              }
              if (tagparams) {
                Twinkle.protect.callbacks.taggingPageInitial(tagparams);
              }
              if (closeparams && closeparams.type) {
                const rppPage = new Morebits.wiki.page("Qiuwen_talk:页面保护请求", window.wgULS("关闭请求", "關閉請求"));
                rppPage.setFollowRedirect(true);
                rppPage.setCallbackParameters(closeparams);
                rppPage.load(Twinkle.protect.callbacks.closeRequest);
              }
            };
            const protectIt = (next) => {
              thispage = new Morebits.wiki.page(mw.config.get("wgPageName"), window.wgULS("保护页面", "保護頁面"));
              if (mw.config.get("wgArticleId")) {
                if (input.editmodify) {
                  thispage.setEditProtection(input.editlevel, input.editexpiry);
                }
                if (input.movemodify) {
                  if (input.movelevel) {
                    thispage.setMoveProtection(input.movelevel, input.moveexpiry);
                  } else {
                    void mw.notify(window.wgULS("您需要选择保护层级！", "您需要選擇保護層級！"), {
                      type: "warn",
                      tag: "twinkleprotect"
                    });
                    return;
                  }
                }
                thispage.setWatchlist(Twinkle.getPref("watchProtectedPages"));
              } else {
                thispage.setCreateProtection(input.createlevel, input.createexpiry);
                thispage.setWatchlist(false);
              }
              if (input.protectReason) {
                thispage.setEditSummary(input.protectReason);
                thispage.setChangeTags(Twinkle.changeTags);
              } else {
                void mw.notify(window.wgULS("您必须输入保护理由，这将被记录在保护日志中。", "您必須輸入保護理由，這將被記錄在保護日誌中。"), {
                  type: "warn",
                  tag: "twinkleprotect"
                });
                return;
              }
              if (!statusInited) {
                Morebits.simpleWindow.setButtonsEnabled(false);
                Morebits.status.init(form);
                statusInited = true;
              }
              thispage.setChangeTags(Twinkle.changeTags);
              thispage.protect(next);
            };
            if (input.editmodify || input.movemodify || !mw.config.get("wgArticleId")) {
              protectIt(allDone);
            } else {
              void mw.notify(window.wgULS("请告诉Twinkle要做什么！\n若您只是想标记该页，请选择上面的“用保护模板标记此页”选项。", "請告訴Twinkle要做什麼！\n若您只是想標記該頁，請選擇上面的「用保護模板標記此頁」選項。"), {
                type: "warn",
                tag: "twinkleprotect"
              });
            }
            break;
          }
          case "tag":
            Morebits.simpleWindow.setButtonsEnabled(false);
            Morebits.status.init(form);
            Morebits.wiki.actionCompleted.redirect = mw.config.get("wgPageName");
            Morebits.wiki.actionCompleted.followRedirect = false;
            Morebits.wiki.actionCompleted.notice = window.wgULS("标记完成", "標記完成");
            Twinkle.protect.callbacks.taggingPageInitial(tagparams);
            break;
          case "request": {
            let typename;
            let typereason;
            switch (input.category) {
              case "pp-dispute":
              case "pp-protected":
                typename = window.wgULS("全保护", "全保護");
                break;
              case "pp-template":
                typename = window.wgULS("模板保护", "模板保護");
                break;
              case "pp-vandalism":
              case "pp-semi-disruptive":
              case "pp-semi-unsourced":
              case "pp-semi-vandalism":
              case "pp-semi-usertalk":
              case "pp-semi-template":
              // removed for now
              case "pp-semi-sock":
              case "pp-semi-blp":
              case "pp-semi-protected":
                typename = window.wgULS("半保护", "半保護");
                break;
              case "pp-move":
              case "pp-move-dispute":
              case "pp-move-indef":
              case "pp-move-vandalism":
                typename = window.wgULS("移动保护", "移動保護");
                break;
              case "pp-create":
              case "pp-create-offensive":
              case "pp-create-blp":
              case "pp-create-salt":
              case "pp-create-userpage":
              case "pp-create-repeat":
              case "pp-create-vandalism":
                typename = window.wgULS("白纸保护", "白紙保護");
                break;
              /* case 'unprotect': */
              /* falls through */
              default:
                typename = window.wgULS("解除保护", "解除保護");
                break;
            }
            switch (input.category) {
              case "pp-dispute":
                typereason = window.wgULS("争议、编辑战", "爭議、編輯戰");
                break;
              case "pp-vandalism":
              case "pp-semi-vandalism":
              case "pp-create-vandalism":
                typereason = window.wgULS("持续破坏", "持續破壞");
                break;
              case "pp-template":
              case "pp-semi-template":
                typereason = window.wgULS("高风险模板", "高風險模板");
                break;
              case "pp-create-userpage":
                typereason = window.wgULS("被永久封禁的用户页", "被永久封鎖的使用者頁面");
                break;
              case "pp-semi-usertalk":
                typereason = window.wgULS("已封禁用户的讨论页", "已封鎖使用者的討論頁");
                break;
              case "pp-semi-sock":
                typereason = window.wgULS("傀儡破坏", "傀儡破壞");
                break;
              case "pp-semi-blp":
                typereason = window.wgULS("违反生者传记方针", "違反生者傳記方針");
                break;
              case "pp-move-dispute":
                typereason = window.wgULS("争议、移动战", "爭議、移動戰");
                break;
              case "pp-move-vandalism":
                typereason = window.wgULS("移动破坏", "移動破壞");
                break;
              case "pp-move-indef":
                typereason = window.wgULS("高风险页面", "高風險頁面");
                break;
              case "pp-create-repeat":
                typereason = window.wgULS("多次重复创建", "多次重複建立");
                break;
              default:
                typereason = "";
                break;
            }
            let reason = typereason;
            if (input.reason !== "") {
              if (typereason !== "") {
                reason += "：";
              }
              reason += input.reason;
            }
            if (reason !== "") {
              reason = Morebits.string.appendPunctuation(reason);
            }
            const rppparams = {
              reason,
              typename,
              category: input.category,
              expiry: input.expiry
            };
            Morebits.simpleWindow.setButtonsEnabled(false);
            Morebits.status.init(form);
            const rppName = "Qiuwen_talk:页面保护请求";
            Morebits.wiki.actionCompleted.redirect = rppName;
            Morebits.wiki.actionCompleted.notice = window.wgULS("提名完成，重定向到讨论页", "提名完成，重新導向到討論頁");
            const rppPage = new Morebits.wiki.page(rppName, window.wgULS("请求保护页面", "請求保護頁面"));
            rppPage.setFollowRedirect(true);
            rppPage.setCallbackParameters(rppparams);
            rppPage.load(Twinkle.protect.callbacks.fileRequest);
            break;
          }
          default:
            void mw.notify("twinkleprotect: 未知操作类型", {
              type: "warn",
              tag: "twinkleprotect"
            });
            break;
        }
      };
      Twinkle.protect.callbacks = {
        taggingPageInitial: (tagparams) => {
          if (tagparams.tag === "noop") {
            Morebits.status.info(window.wgULS("应用保护模板", "應用保護模板"), window.wgULS("没什么要做的", "沒什麼要做的"));
            return;
          }
          const pageName = mw.config.get("wgPageName");
          const protectedPage = new Morebits.wiki.page(pageName, window.wgULS("标记页面", "標記頁面"));
          protectedPage.setCallbackParameters(tagparams);
          protectedPage.load(Twinkle.protect.callbacks.taggingPage);
        },
        getTaggedPage: (params, text) => {
          let tag;
          let summary;
          const oldtag_re = /(?:<noinclude>)?[ \t]*\{\{\s*(pp-[^{}]*?|protected|(?:t|v|s|p-|usertalk-v|usertalk-s|sb|move)protected(?:2)?|protected template|privacy protection)\s*?\}\}\s*(?:<\/noinclude>)?\s*/gi;
          const re_result = oldtag_re.exec(text);
          if (re_result && (params.tag === "none" || confirm(window.wgULS("在页面上找到{{", "在頁面上找到{{") + re_result[1] + window.wgULS("}}\n单击确定以移除，或单击取消以取消操作。", "}}\n點擊確定以移除，或點擊取消以取消操作。")))) {
            text = text.replace(oldtag_re, "");
          }
          if (params.tag === "none") {
            summary = window.wgULS("移除保护模板", "移除保護模板");
          } else {
            ({
              tag
            } = params);
            if (params.reason) {
              tag += "|reason=".concat(params.reason);
            }
            if (params.showexpiry && params.expiry && !Morebits.string.isInfinity(params.expiry)) {
              tag += "|expiry={{".concat("subst:", "#time:c|".concat(params.expiry, "}}"));
            }
            if (params.small) {
              tag += "|small=yes";
            }
            if (/^\s*#(?:redirect|重定向|重新導向)/i.test(text)) {
              if (text.match(/{{(?:Redirect[ _]category shell|Rcat[ _]shell|This[ _]is a redirect|多种类型重定向|多種類型重定向|多種類型重新導向|多种类型重新导向|R0|其他重定向|RCS|Redirect[ _]shell)/i)) {
                Morebits.status.info("已存在Redirect category shell", window.wgULS("没什么可做的", "沒什麼可做的"));
                return;
              }
              text = text.replace(/#(?:redirect|重定向|重新導向) ?(\[\[.*?\]\])(.*)/i, "#REDIRECT $1$2\n\n{{".concat(tag, "}}"));
            } else {
              if (params.noinclude) {
                tag = "<noinclude>{{".concat(tag, "}}</noinclude>");
                if (text.indexOf("{|") === 0) {
                  tag += "\n";
                }
              } else {
                tag = "{{".concat(tag, "}}\n");
              }
              const qiuwen_page = new Morebits.wikitext.page(text);
              text = qiuwen_page.insertAfterTemplates(tag, Twinkle.hatnoteRegex).getText();
            }
            summary = "加入{{".concat(params.tag, "}}");
          }
          return {
            text,
            summary
          };
        },
        taggingPage: (protectedPage) => {
          const params = protectedPage.getCallbackParameters();
          const text = protectedPage.getPageText();
          const newVersion = Twinkle.protect.callbacks.getTaggedPage(params, text);
          if (newVersion === void 0) {
            protectedPage.getStatusElement().info("完成");
            return;
          }
          protectedPage.setEditSummary(newVersion.summary);
          protectedPage.setChangeTags(Twinkle.changeTags);
          protectedPage.setWatchlist(Twinkle.getPref("watchPPTaggedPages"));
          protectedPage.setPageText(newVersion.text);
          protectedPage.setCreateOption("nocreate");
          protectedPage.suppressProtectWarning();
          protectedPage.save();
        },
        fileRequest: (rppPage) => {
          const params = rppPage.getCallbackParameters();
          let text = rppPage.getPageText();
          const statusElement = rppPage.getStatusElement();
          const rppRe = new RegExp("===\\s*(\\[\\[)?\\s*:?\\s*".concat(Morebits.string.escapeRegExp(Morebits.pageNameNorm), "\\s*(\\]\\])?\\s*==="), "m");
          const tag = rppRe.exec(text);
          const rppLink = document.createElement("a");
          rppLink.setAttribute("href", mw.util.getUrl(rppPage.getPageName()));
          rppLink.appendChild(document.createTextNode(rppPage.getPageName()));
          if (tag) {
            statusElement.error([rppLink, window.wgULS("已有对此页面的保护提名，取消操作。", "已有對此頁面的保護提名，取消操作。")]);
            return;
          }
          let newtag = "=== [[:".concat(Morebits.pageNameNorm, "]] ===\n");
          if (new RegExp("^".concat(mw.util.escapeRegExp(newtag).replace(/\s+/g, String.raw(_templateObject || (_templateObject = _taggedTemplateLiteral(["s*"], ["\\s*"]))))), "m").test(text)) {
            statusElement.error([rppLink, window.wgULS("已有对此页面的保护提名，取消操作。", "已有對此頁面的保護提名，取消操作。")]);
            return;
          }
          let words;
          switch (params.expiry) {
            case "temporary":
              words = window.wgULS("临时", "臨時");
              break;
            case "infinity":
              words = "永久";
              break;
            default:
              words = "";
              break;
          }
          words += params.typename;
          newtag += '* <span style="font-size: 90%">'.concat(window.wgULS("当前保护状态", "目前保護狀態"), "：{{protection status|").concat(/[=]/.test(Morebits.pageNameNorm) ? "1=" : "").concat(Morebits.pageNameNorm, "}}</span>\n");
          newtag += "".concat(window.wgULS("请求", "請求") + Morebits.string.toUpperCaseFirstChar(words) + (params.reason === "" ? "。" : "：".concat(Morebits.string.formatReasonText(params.reason))), "--~~").concat("~~");
          let reg;
          if (params.category === "unprotect") {
            reg = /(==\s*请求解除保护\s*==)/;
          } else {
            reg = /({{\s*\/header\s*}})/;
          }
          const originalTextLength = text.length;
          text = text.replace(reg, "$1\n".concat(newtag, "\n"));
          if (text.length === originalTextLength) {
            const linknode = document.createElement("a");
            linknode.setAttribute("href", mw.util.getUrl("Help:Twinkle/修复RFPP"));
            linknode.appendChild(document.createTextNode(window.wgULS("如何修复RFPP", "如何修復RFPP")));
            statusElement.error([window.wgULS("无法在QW:RFPP上找到相关定位点标记，要修复此问题，请参见", "無法在QW:RFPP上找到相關定位點標記，要修復此問題，請參見"), linknode, "。"]);
            return;
          }
          statusElement.status("加入新提名…");
          rppPage.setEditSummary("/* ".concat(Morebits.pageNameNorm, " */ ").concat(window.wgULS("请求对", "請求對"), "[[").concat(Morebits.pageNameNorm, "]]").concat(params.typename));
          rppPage.setChangeTags(Twinkle.changeTags);
          rppPage.setPageText(text);
          rppPage.setCreateOption("recreate");
          rppPage.save(() => {
            const watchPref = Twinkle.getPref("watchRequestedPages");
            const watch = watchPref !== "no" && (watchPref !== "default" || !!Number.parseInt(mw.user.options.get("watchdefault"), 10));
            if (watch) {
              const watch_query = {
                action: "watch",
                titles: mw.config.get("wgPageName"),
                token: mw.user.tokens.get("watchToken")
              };
              if (Twinkle.protect.watched !== true && watchPref !== "default" && watchPref !== "yes") {
                watch_query.expiry = watchPref;
              }
              new Morebits.wiki.api(window.wgULS("将请求保护的页面加入到监视列表", "將請求保護的頁面加入到監視清單"), watch_query).post();
            }
          });
        },
        closeRequest: (rppPage) => {
          const params = rppPage.getCallbackParameters();
          let text = rppPage.getPageText();
          const statusElement = rppPage.getStatusElement();
          const sections = text.split(/(?=\n==\s*请求解除保护\s*==)/);
          if (sections.length !== 2) {
            const linknode2 = document.createElement("a");
            linknode2.setAttribute("href", mw.util.getUrl("Help:Twinkle/修复RFPP"));
            linknode2.appendChild(document.createTextNode("如何修复RFPP"));
            statusElement.error([window.wgULS("无法在QW:RFPP上找到相关定位点标记，要修复此问题，请参见", "無法在QW:RFPP上找到相關定位點標記，要修復此問題，請參見"), linknode2, "。"]);
            return;
          }
          let sectionText;
          let expiryText = "";
          if (params.type === "unprotect") {
            [, sectionText] = sections;
          } else {
            [sectionText] = sections;
            expiryText = Morebits.string.formatTime(params.expiry);
          }
          const requestList = sectionText.split(/(?=\n===.+===\s*\n)/);
          let found = false;
          const rppRe = new RegExp("===\\s*(\\[\\[)?\\s*:?\\s*".concat(Morebits.pageNameRegex(Morebits.pageNameNorm), "\\s*(\\]\\])?\\s*==="), "m");
          var _iterator24 = _createForOfIteratorHelper(requestList), _step24;
          try {
            for (_iterator24.s(); !(_step24 = _iterator24.n()).done; ) {
              let request = _step24.value;
              if (rppRe.exec(request)) {
                request = request.trimEnd();
                if (params.type === "unprotect") {
                  request += "\n: {{RFPP|isun}}。--~~".concat("~~\n");
                } else {
                  request += "\n: {{RFPP|".concat(params.type, "|").concat(Morebits.string.isInfinity(params.expiry) ? "infinity" : expiryText, "}}。--~~").concat("~~\n");
                }
                found = true;
                break;
              }
            }
          } catch (err) {
            _iterator24.e(err);
          } finally {
            _iterator24.f();
          }
          if (!found) {
            statusElement.warn(window.wgULS("没有找到相关的请求", "沒有找到相關的請求"));
            return;
          }
          if (params.type === "unprotect") {
            text = sections[0] + requestList.join("");
          } else {
            text = requestList.join("") + sections[1];
          }
          let summary = "";
          if (params.type === "unprotect") {
            [, sectionText] = sections;
          } else {
            [sectionText] = sections;
          }
          switch (params.type) {
            case "semi":
              summary = window.wgULS("半保护", "半保護");
              break;
            case "temp":
              summary = window.wgULS("模板保护", "模板保護");
              break;
            case "ecp":
              summary = window.wgULS("延伸确认保护", "延伸確認保護");
              break;
            case "full":
              summary = window.wgULS("全保护", "全保護");
              break;
            case "revisionprotected":
              summary = window.wgULS("版本保护", "版本保護");
              break;
            case "officialprotected":
              summary = window.wgULS("裁委会保护", "裁委會保護");
              break;
            case "move":
              summary = window.wgULS("移动保护", "移動保護");
              break;
            case "salt":
              summary = window.wgULS("白纸保护", "白紙保護");
              break;
            case "unprotect":
              summary = window.wgULS("解除保护", "解除保護");
              break;
            default:
              statusElement.warn(window.wgULS("未知保护类型", "未知保護類別"));
              return;
          }
          if (Morebits.string.isInfinity(params.expiry)) {
            summary = expiryText + summary;
          } else {
            summary += expiryText;
          }
          rppPage.setEditSummary("/* ".concat(Morebits.pageNameNorm, " */ ").concat(summary));
          rppPage.setChangeTags(Twinkle.changeTags);
          rppPage.setPageText(text);
          rppPage.save();
        }
      };
      Twinkle.protect.formatProtectionDescription = (protectionLevels) => {
        const protectionNode = [];
        if (Object.keys(protectionLevels).length === 0) {
          [protectionNode[protectionNode.length]] = $("<b>").text(window.wgULS("无保护", "無保護"));
        } else {
          for (var _i8 = 0, _Object$entries5 = Object.entries(protectionLevels); _i8 < _Object$entries5.length; _i8++) {
            const [type, settings] = _Object$entries5[_i8];
            let label;
            switch (type) {
              case "edit":
                label = window.wgULS("编辑", "編輯");
                break;
              case "move":
                label = window.wgULS("移动", "移動");
                break;
              case "create":
                label = window.wgULS("创建", "建立");
                break;
              case "upload":
                label = window.wgULS("上传", "上傳");
                break;
              default:
                label = type;
                break;
            }
            let level;
            switch (settings.level) {
              case "officialprotected":
                level = window.wgULS("仅允许裁决委员", "僅允許裁決委員");
                break;
              case "revisionprotected":
                level = window.wgULS("仅允许资深用户", "僅允許資深用戶");
                break;
              case "autoconfirmed":
                level = window.wgULS("仅允许自动确认用户", "僅允許自動確認使用者");
                break;
              case "templateeditor":
                level = window.wgULS("仅模板编辑员和管理员", "僅模板編輯員和管理員");
                break;
              case "sysop":
                level = window.wgULS("仅管理员", "僅管理員");
                break;
              default:
                ({
                  level
                } = settings);
                break;
            }
            [protectionNode[protectionNode.length]] = $("<b>").text("".concat(label, "：").concat(level));
            if (Morebits.string.isInfinity(settings.expiry)) {
              protectionNode[protectionNode.length] = window.wgULS("（无限期）", "（無限期）");
            } else {
              protectionNode[protectionNode.length] = "".concat(window.wgULS("（过期：", "（過期：") + new Morebits.date(settings.expiry).calendar("utc"), "）");
            }
            if (settings.cascade) {
              protectionNode[protectionNode.length] = window.wgULS("（连锁）", "（連鎖）");
            }
          }
        }
        return protectionNode;
      };
      Twinkle.addInitCallback(Twinkle.protect, "protect");
    })(jQuery);
  }
});
//! src/Twinkle/modules/friendlytag.js
var friendlytag_exports = {};
var init_friendlytag = __esm({
  "src/Twinkle/modules/friendlytag.js"() {
    "use strict";
    /*! Twinkle.js - friendlytag.js */
    (function friendlytag($) {
      const $body = $("body");
      Twinkle.tag = () => {
        if (Morebits.isPageRedirect()) {
          Twinkle.tag.mode = window.wgULS("重定向", "重新導向");
          Twinkle.tag.modeEn = "redirect";
          Twinkle.addPortletLink(Twinkle.tag.callback, window.wgULS("标记", "標記"), "friendly-tag", window.wgULS("标记重定向", "標記重新導向"));
        } else if (mw.config.get("wgNamespaceNumber") === 6 && !document.querySelector("#mw-sharedupload") && document.querySelector("#mw-imagepage-section-filehistory")) {
          Twinkle.tag.mode = window.wgULS("文件", "檔案");
          Twinkle.tag.modeEn = "file";
          Twinkle.addPortletLink(Twinkle.tag.callback, window.wgULS("标记", "標記"), "friendly-tag", window.wgULS("标记文件", "標記檔案"));
        } else if ([0, 118].includes(mw.config.get("wgNamespaceNumber")) && mw.config.get("wgCurRevisionId") || Morebits.pageNameNorm === Twinkle.getPref("sandboxPage")) {
          Twinkle.tag.mode = window.wgULS("条目", "條目");
          Twinkle.tag.modeEn = "article";
          Twinkle.tag.canRemove = mw.config.get("wgCurRevisionId") === mw.config.get("wgRevisionId") && // Disabled on latest diff because the diff slider could be used to slide
          // away from the latest diff without causing the script to reload
          !mw.config.get("wgDiffNewId");
          Twinkle.addPortletLink(Twinkle.tag.callback, window.wgULS("标记", "標記"), "friendly-tag", window.wgULS("标记条目", "標記條目"));
        }
      };
      Twinkle.tag.checkedTags = [];
      Twinkle.tag.callback = () => {
        const Window = new Morebits.simpleWindow(630, Twinkle.tag.modeEn === "article" ? 500 : 400);
        Window.setScriptName("Twinkle");
        Window.addFooterLink(window.wgULS("标记设置", "標記設定"), "H:TW/PREF#tag");
        Window.addFooterLink(window.wgULS("Twinkle帮助", "Twinkle說明"), "H:TW/DOC#tag");
        const form = new Morebits.quickForm(Twinkle.tag.callback.evaluate);
        form.append({
          type: "input",
          label: window.wgULS("筛选标记列表：", "篩選標記列表："),
          name: "quickfilter",
          size: "30",
          event: function event() {
            $allCheckboxDivs.find(".search-hit").each((_i, e) => {
              const label_element = e.parentElement;
              label_element.innerHTML = label_element.textContent;
            });
            if (this.value) {
              $allCheckboxDivs.hide();
              $allHeaders.hide();
              const searchString = this.value;
              const searchRegex = new RegExp(mw.util.escapeRegExp(searchString), "i");
              $allCheckboxDivs.find("label").each((_index, element) => {
                const label_text = element.textContent;
                const searchHit = searchRegex.exec(label_text);
                if (searchHit) {
                  const range = document.createRange();
                  const [textnode] = element.childNodes;
                  range.selectNodeContents(textnode);
                  range.setStart(textnode, searchHit.index);
                  range.setEnd(textnode, searchHit.index + searchString.length);
                  const [underline_span] = $("<span>").addClass("search-hit").css("text-decoration", "underline");
                  range.surroundContents(underline_span);
                  element.parentElement.style.display = "block";
                }
              });
            } else {
              $allCheckboxDivs.show();
              $allHeaders.show();
            }
          }
        });
        switch (Twinkle.tag.modeEn) {
          case "article":
            Window.setTitle(window.wgULS("条目维护标记", "條目維護標記"));
            Twinkle.tag.article.flatObject = {};
            var _iterator25 = _createForOfIteratorHelper(Twinkle.tag.article.tagList), _step25;
            try {
              for (_iterator25.s(); !(_step25 = _iterator25.n()).done; ) {
                const group = _step25.value;
                var _iterator26 = _createForOfIteratorHelper(group.value), _step26;
                try {
                  for (_iterator26.s(); !(_step26 = _iterator26.n()).done; ) {
                    const subgroup = _step26.value;
                    if (subgroup.value) {
                      var _iterator27 = _createForOfIteratorHelper(subgroup.value), _step27;
                      try {
                        for (_iterator27.s(); !(_step27 = _iterator27.n()).done; ) {
                          const item = _step27.value;
                          Twinkle.tag.article.flatObject[item.tag] = {
                            description: item.description,
                            excludeMI: !!item.excludeMI
                          };
                        }
                      } catch (err) {
                        _iterator27.e(err);
                      } finally {
                        _iterator27.f();
                      }
                    } else {
                      Twinkle.tag.article.flatObject[subgroup.tag] = {
                        description: subgroup.description,
                        excludeMI: !!subgroup.excludeMI
                      };
                    }
                  }
                } catch (err) {
                  _iterator26.e(err);
                } finally {
                  _iterator26.f();
                }
              }
            } catch (err) {
              _iterator25.e(err);
            } finally {
              _iterator25.f();
            }
            form.append({
              type: "select",
              name: "sortorder",
              label: window.wgULS("查看列表：", "檢視列表："),
              tooltip: window.wgULS("您可以在Twinkle参数设置（H:TW/PREF）中更改此项。", "您可以在Twinkle偏好設定（H:TW/PREF）中更改此項。"),
              event: Twinkle.tag.updateSortOrder,
              list: [{
                type: "option",
                value: "cat",
                label: window.wgULS("按类型", "按類別"),
                selected: Twinkle.getPref("tagArticleSortOrder") === "cat"
              }, {
                type: "option",
                value: "alpha",
                label: "按字母",
                selected: Twinkle.getPref("tagArticleSortOrder") === "alpha"
              }]
            });
            if (!Twinkle.tag.canRemove) {
              const divElement = document.createElement("div");
              divElement.innerHTML = window.wgULS("要移除现有维护标记，请从当前条目版本中打开“标记”菜单", "要移除現有維護標記，請從目前條目版本中打開「標記」選單");
              form.append({
                type: "div",
                name: "untagnotice",
                label: divElement
              });
            }
            form.append({
              type: "div",
              id: "tagWorkArea",
              className: "morebits-scrollbox",
              style: "max-height: 28em"
            });
            form.append({
              type: "checkbox",
              list: [{
                label: window.wgULS("如可能，合并入{{multiple issues}}", "如可能，合併入{{multiple issues}}"),
                value: "group",
                name: "group",
                tooltip: window.wgULS("若加入{{multiple issues}}支持的三个以上的模板，所有支持的模板都会被合并入{{multiple issues}}模板中。", "若加入{{multiple issues}}支援的三個以上的模板，所有支援的模板都會被合併入{{multiple issues}}模板中。"),
                checked: Twinkle.getPref("groupByDefault")
              }]
            });
            form.append({
              type: "input",
              label: "理由：",
              name: "reason",
              tooltip: window.wgULS("附加于编辑摘要的可选理由，例如指出条目内容的哪些部分有问题或移除模板的理由，但若理由很长则应该发表在讨论页。", "附加於編輯摘要的可選理由，例如指出條目內容的哪些部分有問題或移除模板的理由，但若理由很長則應該發表在討論頁。"),
              size: "80"
            });
            break;
          case "file":
            Window.setTitle(window.wgULS("文件维护标记", "檔案維護標記"));
            var _iterator28 = _createForOfIteratorHelper(Twinkle.tag.fileList), _step28;
            try {
              for (_iterator28.s(); !(_step28 = _iterator28.n()).done; ) {
                const group = _step28.value;
                if (group.buildFilename) {
                  var _iterator29 = _createForOfIteratorHelper(group.value), _step29;
                  try {
                    for (_iterator29.s(); !(_step29 = _iterator29.n()).done; ) {
                      const el = _step29.value;
                      el.subgroup = {
                        type: "input",
                        label: window.wgULS("替换的文件：", "替換的檔案："),
                        tooltip: window.wgULS("输入替换此文件的文件名称（必填）", "輸入替換此檔案的檔案名稱（必填）"),
                        name: "".concat(el.value.replace(/ /g, "_"), "File")
                      };
                    }
                  } catch (err) {
                    _iterator29.e(err);
                  } finally {
                    _iterator29.f();
                  }
                }
                form.append({
                  type: "header",
                  label: group.key
                });
                form.append({
                  type: "checkbox",
                  name: "tags",
                  list: group.value
                });
              }
            } catch (err) {
              _iterator28.e(err);
            } finally {
              _iterator28.f();
            }
            if (Twinkle.getPref("customFileTagList").length) {
              form.append({
                type: "header",
                label: window.wgULS("自定义模板", "自訂模板")
              });
              form.append({
                type: "checkbox",
                name: "tags",
                list: Twinkle.getPref("customFileTagList")
              });
            }
            break;
          case "redirect": {
            Window.setTitle(window.wgULS("重定向标记", "重新導向標記"));
            const i = 1;
            var _iterator30 = _createForOfIteratorHelper(Twinkle.tag.redirectList), _step30;
            try {
              for (_iterator30.s(); !(_step30 = _iterator30.n()).done; ) {
                const group = _step30.value;
                form.append({
                  type: "header",
                  id: "tagHeader".concat(i),
                  label: group.key
                });
                form.append({
                  type: "checkbox",
                  name: "tags",
                  list: group.value.map((item) => {
                    return {
                      value: item.tag,
                      label: "{{".concat(item.tag, "}}：").concat(item.description),
                      subgroup: item.subgroup
                    };
                  })
                });
              }
            } catch (err) {
              _iterator30.e(err);
            } finally {
              _iterator30.f();
            }
            if (Twinkle.getPref("customRedirectTagList").length) {
              form.append({
                type: "header",
                label: window.wgULS("自定义模板", "自訂模板")
              });
              form.append({
                type: "checkbox",
                name: "tags",
                list: Twinkle.getPref("customRedirectTagList")
              });
            }
            break;
          }
          default:
            void mw.notify("Twinkle.tag：未知模式 ".concat(Twinkle.tag.mode), {
              type: "warn",
              tag: "friendlytag"
            });
            break;
        }
        if (document.querySelectorAll(".patrollink").length) {
          form.append({
            type: "checkbox",
            list: [{
              label: window.wgULS("标记页面为已巡查", "標記頁面為已巡查"),
              value: "patrol",
              name: "patrol",
              checked: Twinkle.getPref("markTaggedPagesAsPatrolled")
            }]
          });
        }
        form.append({
          type: "submit",
          className: "tw-tag-submit"
        });
        const result = form.render();
        Window.setContent(result);
        Window.display();
        $allCheckboxDivs = $(result).find("[name$=tags]").parent();
        $allHeaders = $(result).find("h5");
        result.quickfilter.focus();
        result.quickfilter.autocomplete = "off";
        result.quickfilter.addEventListener("keypress", (e) => {
          if (e.key === "Enter") {
            e.preventDefault();
            return false;
          }
        });
        if (Twinkle.tag.modeEn === "article") {
          Twinkle.tag.alreadyPresentTags = [];
          if (Twinkle.tag.canRemove) {
            $body.find(".mw-parser-output").children().each((_i, e) => {
              if (e.tagName === "H2") {
                return false;
              }
              if (e.className.indexOf("box-") === 0) {
                if (e.classList[0] === "box-问题条目") {
                  $(e).find(".ambox").each((_index, element) => {
                    if (element.classList[0].indexOf("box-") === 0) {
                      const boxTag = element.classList[0].slice("box-".length).replace(/_/g, " ");
                      Twinkle.tag.alreadyPresentTags[Twinkle.tag.alreadyPresentTags.length] = boxTag;
                    }
                  });
                  return true;
                }
                const tag = e.classList[0].slice("box-".length).replace(/_/g, " ");
                Twinkle.tag.alreadyPresentTags[Twinkle.tag.alreadyPresentTags.length] = tag;
              }
            });
            if ($body.find(".box-Uncategorized").length) {
              Twinkle.tag.alreadyPresentTags[Twinkle.tag.alreadyPresentTags.length] = "Uncategorized";
            }
            if ($body.find(".box-Improve_categories").length) {
              Twinkle.tag.alreadyPresentTags[Twinkle.tag.alreadyPresentTags.length] = "Improve categories";
            }
          }
          const statusNode = document.createElement("span");
          statusNode.style.fontSize = "90%";
          statusNode.id = "tw-tag-status";
          Twinkle.tag.status = {
            // initial state; defined like this because these need to be available for reference
            // in the click event handler
            numAdded: 0,
            numRemoved: 0
          };
          $body.find("button.tw-tag-submit").after(statusNode);
          const evt = document.createEvent("Event");
          evt.initEvent("change", true, true);
          result.sortorder.dispatchEvent(evt);
        } else {
          var _iterator31 = _createForOfIteratorHelper(Morebits.quickForm.getElements(result, "tags")), _step31;
          try {
            for (_iterator31.s(); !(_step31 = _iterator31.n()).done; ) {
              const checkbox = _step31.value;
              generateLinks(checkbox);
            }
          } catch (err) {
            _iterator31.e(err);
          } finally {
            _iterator31.f();
          }
        }
      };
      let $allCheckboxDivs;
      let $allHeaders;
      Twinkle.tag.updateSortOrder = (e) => {
        const {
          form
        } = e.target;
        const sortorder = e.target.value;
        Twinkle.tag.checkedTags = form.getChecked("tags");
        const container = new Morebits.quickForm.element({
          type: "fragment"
        });
        const makeCheckbox = (tag, description) => {
          const checkbox = {
            value: tag,
            label: "{{".concat(tag, "}}: ").concat(description)
          };
          if (Twinkle.tag.checkedTags.includes(tag)) {
            checkbox.checked = true;
          }
          switch (tag) {
            case "Expert needed":
              checkbox.subgroup = [{
                name: "expert",
                type: "input",
                label: window.wgULS("哪个领域的专家（必填）：", "哪個領域的專家（必填）："),
                tooltip: window.wgULS("必填，可参考 Category:需要专业人士关注的页面 使用现存的分类。", "必填，可參考 Category:需要專業人士關注的頁面 使用現存的分類。")
              }, {
                name: "expert2",
                type: "input",
                label: window.wgULS("哪个领域的专家：", "哪個領域的專家："),
                tooltip: window.wgULS("可选，可参考 Category:需要专业人士关注的页面 使用现存的分类。", "可選，可參考 Category:需要專業人士關注的頁面 使用現存的分類。")
              }, {
                name: "expert3",
                type: "input",
                label: window.wgULS("哪个领域的专家：", "哪個領域的專家："),
                tooltip: window.wgULS("可选，可参考 Category:需要专业人士关注的页面 使用现存的分类。", "可選，可參考 Category:需要專業人士關注的頁面 使用現存的分類。")
              }];
              break;
            case "Merge":
            case "Merge from":
            case "Merge to": {
              let otherTagName = "Merge";
              switch (tag) {
                case "Merge from":
                  otherTagName = "Merge to";
                  break;
                case "Merge to":
                  otherTagName = "Merge from";
                  break;
              }
              checkbox.subgroup = [{
                name: "mergeTarget",
                type: "input",
                label: window.wgULS("其他条目：", "其他條目："),
                tooltip: window.wgULS("如指定多个条目，请用管道符分隔：条目甲|条目乙", "如指定多個條目，請用管道符分隔：條目甲|條目乙")
              }, {
                type: "checkbox",
                list: [{
                  name: "mergeTagOther",
                  label: "用{{".concat(otherTagName).concat(window.wgULS("}}标记其他条目", "}}標記其他條目")),
                  checked: true,
                  tooltip: window.wgULS("仅在只输入了一个条目名时可用", "僅在只輸入了一個條目名時可用")
                }]
              }];
              if (mw.config.get("wgNamespaceNumber") === 0) {
                checkbox.subgroup[checkbox.subgroup.length] = {
                  name: "mergeReason",
                  type: "textarea",
                  label: window.wgULS("合并理由（会被贴上".concat(tag === "Merge to" ? "其他" : "这", "条目的讨论页）："), "合併理由（會被貼上".concat(tag === "Merge to" ? "其他" : "這", "條目的討論頁）：")),
                  tooltip: window.wgULS("可选，但强烈推荐。如不需要请留空。仅在只输入了一个条目名时可用。", "可選，但強烈推薦。如不需要請留空。僅在只輸入了一個條目名時可用。")
                };
              }
              break;
            }
            case "Missing information":
              checkbox.subgroup = {
                name: "missingInformation",
                type: "input",
                label: window.wgULS("缺少的内容（必填）：", "缺少的內容（必填）："),
                tooltip: window.wgULS("必填，显示为“缺少有关……的信息。”", "必填，顯示為「缺少有關……的資訊。」")
              };
              break;
            case "Notability":
              checkbox.subgroup = {
                name: "notability",
                type: "select",
                list: [{
                  label: "{{Notability}}：".concat(window.wgULS("通用的关注度指引", "通用的關注度指引")),
                  value: "none"
                }, {
                  label: "{{Notability|Astro}}：".concat(window.wgULS("天体", "天體")),
                  value: "Astro"
                }, {
                  label: "{{Notability|Biographies}}：".concat(window.wgULS("人物传记", "人物傳記")),
                  value: "Biographies"
                }, {
                  label: "{{Notability|Book}}：".concat(window.wgULS("书籍", "書籍")),
                  value: "Book"
                }, {
                  label: "{{Notability|Cyclone}}：".concat(window.wgULS("气旋", "氣旋")),
                  value: "Cyclone"
                }, {
                  label: "{{Notability|Fiction}}：".concat(window.wgULS("虚构事物", "虛構事物")),
                  value: "Fiction"
                }, {
                  label: "{{Notability|Geographic}}：".concat(window.wgULS("地理特征", "地理特徵")),
                  value: "Geographic"
                }, {
                  label: "{{Notability|Geometry}}：".concat(window.wgULS("几何图形", "幾何圖形")),
                  value: "Geometry"
                }, {
                  label: "{{Notability|Invention}}：".concat(window.wgULS("发明、研究", "發明、研究")),
                  value: "Invention"
                }, {
                  label: "{{Notability|Music}}：".concat(window.wgULS("音乐", "音樂")),
                  value: "Music"
                }, {
                  label: "{{Notability|Numbers}}：".concat(window.wgULS("数字", "數字")),
                  value: "Numbers"
                }, {
                  label: "{{Notability|Organizations}}：".concat(window.wgULS("组织", "組織")),
                  value: "Organizations"
                }, {
                  label: "{{Notability|Property}}：".concat(window.wgULS("性质表", "性質表")),
                  value: "Property"
                }, {
                  label: "{{Notability|Traffic}}：交通",
                  value: "Traffic"
                }, {
                  label: "{{Notability|Web}}：".concat(window.wgULS("网站、网络内容", "網站、網路內容"), "（非正式指引）"),
                  value: "Web"
                }]
              };
              break;
            case "Requested move":
              checkbox.subgroup = [{
                name: "moveTarget",
                type: "input",
                label: window.wgULS("新名称：", "新名稱：")
              }, {
                name: "moveReason",
                type: "textarea",
                label: window.wgULS("移动理由（会被粘贴该条目的讨论页）：", "移動理由（會被貼上該條目的討論頁）："),
                tooltip: window.wgULS("可选，但强烈推荐。如不需要请留空。", "可選，但強烈推薦。如不需要請留空。")
              }];
              break;
            case "Split":
              checkbox.subgroup = [{
                name: "target1",
                type: "input",
                label: window.wgULS("页面名1：", "頁面名1："),
                tooltip: window.wgULS("可选。", "可選。")
              }, {
                name: "target2",
                type: "input",
                label: window.wgULS("页面名2：", "頁面名2："),
                tooltip: window.wgULS("可选。", "可選。")
              }, {
                name: "target3",
                type: "input",
                label: window.wgULS("页面名3：", "頁面名3："),
                tooltip: window.wgULS("可选。", "可選。")
              }];
              break;
            case "Cleanup":
              checkbox.subgroup = [{
                name: "cleanupReason",
                type: "input",
                label: "需要清理的理由",
                tooltip: window.wgULS("可选，但强烈推荐。如不需要请留空。", "可選，但強烈推薦。如不需要請留空。")
              }];
              break;
            default:
              break;
          }
          return checkbox;
        };
        const makeCheckboxesForAlreadyPresentTags = () => {
          container.append({
            type: "header",
            id: "tagHeader0",
            label: window.wgULS("已放置的维护标记", "已放置的維護標記")
          });
          const subdiv = container.append({
            type: "div",
            id: "tagSubdiv0"
          });
          const checkboxes = [];
          const unCheckedTags = e.target.form.getUnchecked("existingTags");
          var _iterator32 = _createForOfIteratorHelper(Twinkle.tag.alreadyPresentTags), _step32;
          try {
            for (_iterator32.s(); !(_step32 = _iterator32.n()).done; ) {
              const tag = _step32.value;
              const checkbox = {
                value: tag,
                label: "{{".concat(tag, "}}").concat(Twinkle.tag.article.flatObject[tag] ? ": ".concat(Twinkle.tag.article.flatObject[tag].description) : ""),
                checked: !unCheckedTags.includes(tag)
              };
              checkboxes[checkboxes.length] = checkbox;
            }
          } catch (err) {
            _iterator32.e(err);
          } finally {
            _iterator32.f();
          }
          subdiv.append({
            type: "checkbox",
            name: "existingTags",
            list: checkboxes
          });
        };
        if (sortorder === "cat") {
          const doCategoryCheckboxes = (subdiv, subgroup) => {
            const checkboxes = [];
            var _iterator33 = _createForOfIteratorHelper(subgroup), _step33;
            try {
              for (_iterator33.s(); !(_step33 = _iterator33.n()).done; ) {
                const item = _step33.value;
                if (!Twinkle.tag.alreadyPresentTags.includes(item.tag)) {
                  checkboxes[checkboxes.length] = makeCheckbox(item.tag, item.description);
                }
              }
            } catch (err) {
              _iterator33.e(err);
            } finally {
              _iterator33.f();
            }
            subdiv.append({
              type: "checkbox",
              name: "tags",
              list: checkboxes
            });
          };
          if (Twinkle.tag.alreadyPresentTags.length > 0) {
            makeCheckboxesForAlreadyPresentTags();
          }
          let i = 1;
          var _iterator34 = _createForOfIteratorHelper(Twinkle.tag.article.tagList), _step34;
          try {
            for (_iterator34.s(); !(_step34 = _iterator34.n()).done; ) {
              const group = _step34.value;
              container.append({
                type: "header",
                id: "tagHeader".concat(i),
                label: group.key
              });
              const subdiv = container.append({
                type: "div",
                id: "tagSubdiv".concat(i++)
              });
              if (group.value[0].tag) {
                doCategoryCheckboxes(subdiv, group.value);
              } else {
                var _iterator35 = _createForOfIteratorHelper(group.value), _step35;
                try {
                  for (_iterator35.s(); !(_step35 = _iterator35.n()).done; ) {
                    const subgroup = _step35.value;
                    subdiv.append({
                      type: "div",
                      label: [Morebits.htmlNode("b", subgroup.key)]
                    });
                    doCategoryCheckboxes(subdiv, subgroup.value);
                  }
                } catch (err) {
                  _iterator35.e(err);
                } finally {
                  _iterator35.f();
                }
              }
            }
          } catch (err) {
            _iterator34.e(err);
          } finally {
            _iterator34.f();
          }
        } else {
          var _Twinkle$tag$article;
          if (Twinkle.tag.alreadyPresentTags.length > 0) {
            makeCheckboxesForAlreadyPresentTags();
            container.append({
              type: "header",
              id: "tagHeader1",
              label: window.wgULS("可用的维护标记", "可用的維護標記")
            });
          }
          (_Twinkle$tag$article = Twinkle.tag.article).alphabeticalList || (_Twinkle$tag$article.alphabeticalList = Object.keys(Twinkle.tag.article.flatObject).sort());
          const checkboxes = [];
          var _iterator36 = _createForOfIteratorHelper(Twinkle.tag.article.alphabeticalList), _step36;
          try {
            for (_iterator36.s(); !(_step36 = _iterator36.n()).done; ) {
              const tag = _step36.value;
              if (!Twinkle.tag.alreadyPresentTags.includes(tag)) {
                checkboxes[checkboxes.length] = makeCheckbox(tag, Twinkle.tag.article.flatObject[tag].description);
              }
            }
          } catch (err) {
            _iterator36.e(err);
          } finally {
            _iterator36.f();
          }
          container.append({
            type: "checkbox",
            name: "tags",
            list: checkboxes
          });
        }
        if (Twinkle.getPref("customTagList").length) {
          container.append({
            type: "header",
            label: window.wgULS("自定义模板", "自訂模板")
          });
          container.append({
            type: "checkbox",
            name: "tags",
            list: Twinkle.getPref("customTagList").map((el) => {
              el.checked = Twinkle.tag.checkedTags.includes(el.value);
              return el;
            })
          });
        }
        const $workarea = $(form).find("#tagWorkArea");
        const rendered = container.render();
        $workarea.empty().append(rendered);
        $allCheckboxDivs = $workarea.find("[name=tags], [name=existingTags]").parent();
        $allHeaders = $workarea.find("h5, .quickformDescription");
        form.quickfilter.value = "";
        form.quickfilter.focus();
        $workarea.find("h5").css({
          "font-size": "110%"
        });
        $workarea.find("h5:not(:first-child)").css({
          "margin-top": "1em"
        });
        $workarea.find("div").filter(":has(span.quickformDescription)").css({
          "margin-top": "0.4em"
        });
        var _iterator37 = _createForOfIteratorHelper(Morebits.quickForm.getElements(form, "existingTags")), _step37;
        try {
          for (_iterator37.s(); !(_step37 = _iterator37.n()).done; ) {
            const checkbox = _step37.value;
            generateLinks(checkbox);
          }
        } catch (err) {
          _iterator37.e(err);
        } finally {
          _iterator37.f();
        }
        var _iterator38 = _createForOfIteratorHelper(Morebits.quickForm.getElements(form, "tags")), _step38;
        try {
          for (_iterator38.s(); !(_step38 = _iterator38.n()).done; ) {
            const checkbox = _step38.value;
            generateLinks(checkbox);
          }
        } catch (err) {
          _iterator38.e(err);
        } finally {
          _iterator38.f();
        }
        const statusNode = document.querySelector("#tw-tag-status");
        $body.find("[name=tags], [name=existingTags]").on("click", function() {
          if (this.name === "tags") {
            Twinkle.tag.status.numAdded += this.checked ? 1 : -1;
          } else if (this.name === "existingTags") {
            Twinkle.tag.status.numRemoved += this.checked ? -1 : 1;
          }
          const firstPart = "加入".concat(Twinkle.tag.status.numAdded).concat(window.wgULS("个标记", "個標記"));
          const secondPart = "移除".concat(Twinkle.tag.status.numRemoved).concat(window.wgULS("个标记", "個標記"));
          statusNode.textContent = (Twinkle.tag.status.numAdded ? "  ".concat(firstPart) : "") + (Twinkle.tag.status.numRemoved ? (Twinkle.tag.status.numAdded ? "；" : "  ") + secondPart : "");
        });
      };
      const generateLinks = (checkbox) => {
        const link = Morebits.htmlNode("a", ">");
        link.setAttribute("class", "tag-template-link");
        const tagname = checkbox.values;
        link.setAttribute("href", mw.util.getUrl((tagname.includes(":") ? "" : "Template:") + (tagname.includes("|") ? tagname.slice(0, tagname.indexOf("|")) : tagname)));
        link.setAttribute("target", "_blank");
        link.setAttribute("rel", "noopener noreferrer");
        $(checkbox).parent().append([" ", link]);
      };
      Twinkle.tag.article = {};
      Twinkle.tag.article.tagList = [{
        key: window.wgULS("清理和维护模板", "清理和維護模板"),
        value: [{
          key: window.wgULS("常规清理", "常規清理"),
          value: [{
            tag: "Cleanup",
            description: window.wgULS("可能需要进行清理，以符合求闻百科的质量标准", "可能需要進行清理，以符合求聞百科的質量標準")
          }, {
            tag: "Cleanup rewrite",
            description: window.wgULS("不符合求闻百科的质量标准，需要完全重写", "不符合求聞百科的質量標準，需要完全重寫")
          }, {
            tag: "Cleanup-jargon",
            description: window.wgULS("包含过多行话或专业术语，可能需要简化或提出进一步解释", "包含過多行話或專業術語，可能需要簡化或提出進一步解釋")
          }, {
            tag: "Copy edit",
            description: window.wgULS("需要编修，以确保文法、用词、语气、格式、标点等使用恰当", "需要編修，以確保文法、用詞、語氣、格式、標點等使用恰當")
          }]
        }, {
          key: window.wgULS("可能多余的内容", "可能多餘的內容"),
          value: [{
            tag: "Copypaste",
            description: window.wgULS("内容可能是从某个来源处拷贝后粘贴", "內容可能是從某個來源處拷貝後貼上")
          }, {
            tag: "External links",
            description: window.wgULS("使用外部链接的方式可能不符合求闻百科的方针", "使用外部連結的方式可能不符合求聞百科的方針")
          }, {
            tag: "Non-free",
            description: window.wgULS("可能过多或不当地使用了受著作权保护的文字、图像或多媒体文件", "可能過多或不當地使用了受版權保護的文字、圖像或多媒體檔案")
          }]
        }, {
          key: window.wgULS("结构和导言", "結構和導言"),
          value: [{
            tag: "Lead too long",
            description: window.wgULS("导言部分也许过于冗长", "導言部分也許過於冗長")
          }, {
            tag: "Lead too short",
            description: window.wgULS("导言部分也许不足以概括其内容", "導言部分也許不足以概括其內容")
          }, {
            tag: "Very long",
            description: window.wgULS("可能过于冗长", "可能過於冗長")
          }]
        }, {
          key: window.wgULS("虚构作品相关清理", "虛構作品相關清理"),
          value: [{
            tag: "In-universe",
            description: window.wgULS("使用小说故事内的观点描述一个虚构事物", "使用小說故事內的觀點描述一個虛構事物")
          }, {
            tag: "Long plot",
            description: window.wgULS("可能包含过于详细的剧情摘要", "可能包含過於詳細的劇情摘要")
          }]
        }]
      }, {
        key: window.wgULS("常规条目问题", "常規條目問題"),
        value: [{
          key: "重要性和知名度",
          value: [{
            tag: "Notability",
            description: window.wgULS("可能不符合通用关注度指引", "可能不符合通用關注度指引"),
            excludeMI: true
          }, {
            tag: "Notability Unreferenced",
            description: window.wgULS("可能具备关注度，但需要来源加以彰显", "可能具備關注度，但需要來源加以彰顯")
          }]
        }, {
          key: window.wgULS("写作风格", "寫作風格"),
          value: [{
            tag: "Advert",
            description: window.wgULS("类似广告或宣传性内容", "類似廣告或宣傳性內容")
          }, {
            tag: "Fanpov",
            description: window.wgULS("类似爱好者网页", "類似愛好者網頁")
          }, {
            tag: "How-to",
            description: window.wgULS("包含指南或教学内容", "包含指南或教學內容")
          }, {
            tag: "Inappropriate person",
            description: window.wgULS("使用不适当的第一人称和第二人称", "使用不適當的第一人稱和第二人稱")
          }, {
            tag: "Newsrelease",
            description: window.wgULS("阅读起来像是新闻稿及包含过度的宣传性语调", "閱讀起來像是新聞稿及包含過度的宣傳性語調")
          }, {
            tag: "Prose",
            description: window.wgULS("使用了日期或时间列表式记述，需要改写为连贯的叙述性文字", "使用了日期或時間列表式記述，需要改寫為連貫的敘述性文字")
          }, {
            tag: "Review",
            description: window.wgULS("阅读起来类似评论，需要清理", "閱讀起來類似評論，需要清理")
          }, {
            tag: "Tone",
            description: window.wgULS("语调或风格可能不适合百科全书的写作方式", "語調或風格可能不適合百科全書的寫作方式")
          }]
        }, {
          key: window.wgULS("内容", "內容"),
          value: [
            {
              tag: "Missing information",
              description: "缺少必要的信息"
            },
            // these three have a subgroup with several options
            {
              tag: "Substub",
              description: window.wgULS("过于短小", "過於短小"),
              excludeMI: true
            },
            {
              tag: "Unencyclopedic",
              description: window.wgULS("可能不适合写入百科全书", "可能不適合寫入百科全書")
            }
          ]
        }, {
          key: window.wgULS("信息和细节", "資訊和細節"),
          value: [{
            tag: "Expert needed",
            description: window.wgULS("需要精通或熟悉本主题的专业人士（专家）参与及协助编辑", "需要精通或熟悉本主題的專業人士（專家）參與及協助編輯")
          }, {
            tag: "Overly detailed",
            description: window.wgULS("包含太多过度细节内容", "包含太多過度細節內容")
          }, {
            tag: "Trivia",
            description: window.wgULS("应避免有陈列杂项、琐碎资料的部分", "應避免有陳列雜項、瑣碎資料的部分")
          }]
        }, {
          key: window.wgULS("时间性", "時間性"),
          value: [{
            tag: "Current",
            description: window.wgULS("记述新闻动态", "記述新聞動態"),
            excludeMI: true
          }, {
            tag: "Update",
            description: window.wgULS("当前条目或章节需要更新", "當前條目或章節需要更新")
          }]
        }, {
          key: window.wgULS("客观性和事实准确性", "客觀性和事實準確性"),
          value: [{
            tag: "Autobiography",
            description: window.wgULS("类似一篇自传，或内容主要由条目描述的当事人或组织撰写、编辑", "類似一篇自傳，或內容主要由條目描述的當事人或組織撰寫、編輯")
          }, {
            tag: "COI",
            description: window.wgULS("主要贡献者与本条目所宣扬的内容可能存在利益冲突", "主要貢獻者與本條目所宣揚的內容可能存在利益衝突")
          }, {
            tag: "Disputed",
            description: window.wgULS("内容疑欠准确，有待查证", "內容疑欠準確，有待查證")
          }, {
            tag: "Globalize",
            description: window.wgULS("仅具有一部分地区的信息或观点", "僅具有一部分地區的資訊或觀點")
          }, {
            tag: "Hoax",
            description: window.wgULS("真实性被质疑", "真實性被質疑")
          }, {
            tag: "POV",
            description: window.wgULS("客观性有争议。内容、语调可能带有明显的个人观点或地方色彩", "客觀性有爭議。內容、語調可能帶有明顯的個人觀點或地方色彩")
          }, {
            tag: "Self-contradictory",
            description: window.wgULS("内容自相矛盾", "內容自相矛盾")
          }, {
            tag: "Weasel",
            description: window.wgULS("语义模棱两可而损及其客观性或准确性", "語意模棱兩可而損及其客觀性或準確性")
          }]
        }, {
          key: window.wgULS("可供查证和来源", "可供查證和來源"),
          value: [{
            tag: "BLPdispute",
            description: window.wgULS("可能违反了求闻百科关于生者传记的方针", "可能違反了求聞百科關於生者傳記的方針")
          }, {
            tag: "BLPsources",
            description: window.wgULS("生者传记需要补充更多可供查证的来源", "生者傳記需要補充更多可供查證的來源")
          }, {
            tag: "BLP unsourced",
            description: window.wgULS("生者传记没有列出任何参考或来源", "生者傳記沒有列出任何參考或來源")
          }, {
            tag: "Citecheck",
            description: window.wgULS("可能包含不适用或被曲解的引用资料，部分内容的准确性无法被证实", "可能包含不適用或被曲解的引用資料，部分內容的準確性無法被證實")
          }, {
            tag: "More footnotes needed",
            description: window.wgULS("因为文内引用不足，部分字句的来源仍然不明", "因為文內引用不足，部分字句的來源仍然不明")
          }, {
            tag: "No footnotes",
            description: window.wgULS("因为没有内文引用而来源仍然不明", "因為沒有內文引用而來源仍然不明")
          }, {
            tag: "Onesource",
            description: window.wgULS("极大或完全地依赖于某个单一的来源", "極大或完全地依賴於某個單一的來源")
          }, {
            tag: "Original research",
            description: window.wgULS("可能包含原创研究或未查证内容", "可能包含原創研究或未查證內容")
          }, {
            tag: "Primarysources",
            description: window.wgULS("依赖第一手来源", "依賴第一手來源")
          }, {
            tag: "Refimprove",
            description: window.wgULS("需要补充更多来源", "需要補充更多來源")
          }, {
            tag: "Unreferenced",
            description: window.wgULS("没有列出任何参考或来源", "沒有列出任何參考或來源")
          }]
        }]
      }, {
        key: window.wgULS("具体内容问题", "具體內容問題"),
        value: [{
          key: window.wgULS("语言", "語言"),
          value: [{
            tag: "NotMandarin",
            description: window.wgULS("包含过多不是现代标准汉语的内容", "包含過多不是現代標準漢語的內容"),
            excludeMI: true
          }, {
            tag: "Rough translation",
            description: window.wgULS("翻译品质不佳", "翻譯品質不佳")
          }]
        }, {
          key: window.wgULS("链接", "連結"),
          value: [{
            tag: "Dead end",
            description: window.wgULS("需要加上内部链接以构筑百科全书的链接网络", "需要加上內部連結以構築百科全書的連結網絡")
          }, {
            tag: "Orphan",
            description: window.wgULS("没有或只有很少链入页面", "沒有或只有很少連入頁面")
          }, {
            tag: "Overlinked",
            description: window.wgULS("含有过多、重复、或不必要的内部链接", "含有過多、重複、或不必要的內部連結")
          }, {
            tag: "Underlinked",
            description: window.wgULS("需要更多内部链接以构筑百科全书的链接网络", "需要更多內部連結以構築百科全書的連結網絡")
          }]
        }, {
          key: window.wgULS("参考技术", "參考技術"),
          value: [{
            tag: "Citation style",
            description: window.wgULS("引用需要进行清理", "引用需要進行清理")
          }]
        }, {
          key: window.wgULS("分类", "分類"),
          value: [{
            tag: "Improve categories",
            description: window.wgULS("需要更多页面分类", "需要更多頁面分類"),
            excludeMI: true
          }, {
            tag: "Uncategorized",
            description: window.wgULS("缺少页面分类", "缺少頁面分類"),
            excludeMI: true
          }]
        }]
      }, {
        key: window.wgULS("合并、拆分、移动", "合併、拆分、移動"),
        value: [{
          tag: "Merge from",
          description: window.wgULS("建议将页面并入此页面", "建議將頁面併入此頁面"),
          excludeMI: true
        }, {
          tag: "Merge to",
          description: window.wgULS("建议将此页面并入页面", "建議將此頁面併入頁面"),
          excludeMI: true
        }, {
          tag: "Merge",
          description: window.wgULS("建议此页面与页面合并", "建議此頁面與頁面合併"),
          excludeMI: true
        }, {
          tag: "Requested move",
          description: window.wgULS("建议将此页面移动到新名称", "建議將此頁面移動到新名稱"),
          excludeMI: true
        }, {
          tag: "Split",
          description: window.wgULS("建议将此页面分割为多个页面", "建議將此頁面分割為多個頁面"),
          excludeMI: true
        }]
      }];
      Twinkle.tag.redirectList = [{
        key: "常用模板",
        value: [{
          tag: window.wgULS("合并重定向", "合併重定向"),
          description: window.wgULS("保持页面题名至相应主条目，令页面内容在合并后仍能保存其编辑历史", "保持頁面題名至相應主條目，令頁面內容在合併後仍能儲存其編輯歷史")
        }, {
          tag: window.wgULS("简繁重定向", "簡繁重定向"),
          description: window.wgULS("引导简体至繁体，或繁体至简体", "引導簡體至繁體，或繁體至簡體")
        }, {
          tag: window.wgULS("关注度重定向", "關注度重定向"),
          description: window.wgULS("缺乏关注度的子主题向有关注度的母主题的重定向", "缺乏關注度的子主題向有關注度的母主題的重定向")
        }, {
          tag: "模板重定向",
          description: window.wgULS("指向模板的重定向页面", "指向模板的重定向頁面")
        }, {
          tag: window.wgULS("别名重定向", "別名重定向"),
          description: window.wgULS("标题的其他名称、笔名、绰号、同义字等", "標題的其他名稱、筆名、綽號、同義字等")
        }, {
          tag: window.wgULS("译名重定向", "譯名重定向"),
          description: window.wgULS("人物、作品等各项事物的其他翻译名称", "人物、作品等各項事物的其他翻譯名稱")
        }, {
          tag: window.wgULS("缩写重定向", "縮寫重定向"),
          description: window.wgULS("标题缩写", "標題縮寫")
        }, {
          tag: window.wgULS("拼写重定向", "拼寫重定向"),
          description: window.wgULS("标题的其他不同拼写", "標題的其他不同拼寫")
        }, {
          tag: window.wgULS("错字重定向", "錯字重定向"),
          description: window.wgULS("纠正标题的常见错误拼写或误植", "糾正標題的常見錯誤拼寫或誤植")
        }, {
          tag: window.wgULS("旧名重定向", "舊名重定向"),
          description: window.wgULS("将事物早前的名称引导至更改后的主题", "將事物早前的名稱引導至更改後的主題")
        }, {
          tag: "全名重定向",
          description: window.wgULS("标题的完整或更完整名称", "標題的完整或更完整名稱")
        }, {
          tag: "短名重定向",
          description: window.wgULS("完整标题名称或人物全名的部分、不完整的名称或简称", "完整標題名稱或人物全名的部分、不完整的名稱或簡稱")
        }, {
          tag: "姓氏重定向",
          description: "人物姓氏"
        }, {
          tag: "名字重定向",
          description: "人物人名"
        }, {
          tag: "本名重定向",
          description: "人物本名"
        }, {
          tag: "非中文重定向",
          description: window.wgULS("非中文标题", "非中文標題"),
          subgroup: [{
            name: "altLangFrom",
            type: "input",
            label: "本重新導向的語言（可選）",
            tooltip: "輸入重新導向名稱所使用語言的ISO 639代碼，例如en代表英語，代碼可參見 Template:ISO_639_name"
          }]
        }, {
          tag: "日文重定向",
          description: window.wgULS("日语名称", "日語名稱")
        }]
      }, {
        key: "偶用模板",
        value: [{
          tag: "角色重定向",
          description: window.wgULS("电视剧、电影、书籍等作品的角色", "電視劇、電影、書籍等作品的角色")
        }, {
          tag: window.wgULS("章节重定向", "章節重定向"),
          description: window.wgULS("导向至较高密度组织的页面", "導向至較高密度組織的頁面")
        }, {
          tag: "列表重定向",
          description: window.wgULS("导向至低密度的列表", "導向至低密度的列表")
        }, {
          tag: "可能性重定向",
          description: window.wgULS("导向至当前提供内容更为详尽的目标页面", "導向至當前提供內容更為詳盡的目標頁面")
        }, {
          tag: window.wgULS("关联字重定向", "關聯字重定向"),
          description: window.wgULS("标题名称关联字", "標題名稱關聯字")
        }, {
          tag: window.wgULS("条目请求重定向", "條目請求重定向"),
          description: window.wgULS("需要独立条目的页面", "需要獨立條目的頁面"),
          subgroup: [{
            name: "reqArticleLang",
            type: "input",
            label: "外語語言代碼：",
            tooltip: "使用ISO 639代碼，可參見 Template:ISO_639_name"
          }, {
            name: "reqArticleTitle",
            type: "input",
            label: "外語頁面名稱：",
            size: 60
          }]
        }, {
          tag: window.wgULS("快捷方式重定向", "捷徑重定向"),
          description: window.wgULS("求闻百科快捷方式", "求聞百科快捷方式")
        }]
      }, {
        key: window.wgULS("鲜用模板", "鮮用模板"),
        value: [{
          tag: window.wgULS("词组重定向", "詞組重定向"),
          description: window.wgULS("将词组/词组/成语指向切题的条目及恰当章节", "將詞組/詞組/成語指向切題的條目及恰當章節")
        }, {
          tag: window.wgULS("消歧义页重定向", "消歧義頁重定向"),
          description: window.wgULS("指向消歧义页", "指向消歧義頁")
        }, {
          tag: "域名重定向",
          description: window.wgULS("域名", "網域名稱")
        }, {
          tag: "年代重定向",
          description: window.wgULS("于年份条目导向至年代条目", "於年份條目導向至年代條目")
        }, {
          tag: window.wgULS("用户框模板重定向", "用戶框模板重定向"),
          description: window.wgULS("用户框模板", "用戶框模板")
        }, {
          tag: "重定向模板用重定向",
          description: window.wgULS("导向至重定向模板", "導向至重定向模板")
        }, {
          tag: "EXIF重定向",
          description: window.wgULS("JPEG图像文件包含EXIF信息", "JPEG圖檔包含EXIF資訊")
        }]
      }];
      Twinkle.tag.fileList = [{
        key: window.wgULS("著作权和来源问题标签", "著作權和來源問題標籤"),
        value: [{
          label: "{{Non-free reduce}}：".concat(window.wgULS("非低分辨率的合理使用图像（或过长的音频剪辑等）", "非低解析度的合理使用圖像（或過長的音頻剪輯等）")),
          value: "Non-free reduce"
        }]
      }, {
        key: window.wgULS("清理标签", "清理標籤"),
        value: [{
          label: "{{Watermark}}：".concat(window.wgULS("图像包含了水印", "圖像包含了浮水印")),
          value: "Watermark"
        }, {
          label: "{{Rename media}}：".concat(window.wgULS("文件应该根据文件名称指引被重命名", "檔案應該根據檔案名稱指引被重新命名")),
          value: "Rename media",
          subgroup: [{
            type: "input",
            name: "renamemediaNewname",
            label: window.wgULS("新名称：", "新名稱："),
            tooltip: window.wgULS("输入图像的新名称（可选）", "輸入圖像的新名稱（可選）")
          }, {
            type: "input",
            name: "renamemediaReason",
            label: "原因：",
            tooltip: window.wgULS("输入重命名的原因（可选）", "輸入重新命名的原因（可選）")
          }]
        }, {
          label: "{{Should be SVG}}：".concat(window.wgULS("PNG、GIF、JPEG文件应该重制成矢量图形", "PNG、GIF、JPEG檔案應該重製成向量圖形")),
          value: "Should be SVG"
        }]
      }, {
        key: window.wgULS("文件取代标签", "檔案取代標籤"),
        value: [{
          label: "{{Obsolete}}：".concat(window.wgULS("有新版本可用的过时文件", "有新版本可用的過時檔案")),
          value: "Obsolete"
        }, {
          label: "{{Vector version available}}：".concat(window.wgULS("有矢量图形可用的非矢量图形文件", "有向量圖形可用的非向量圖形檔案")),
          value: "Vector version available"
        }],
        buildFilename: true
      }];
      Twinkle.tag.callbacks = {
        article: (pageobj) => {
          let pageText = pageobj.getPageText().replace(/\{\{\s*([Nn]ew unreviewed article|[Uu]nreviewed|[Uu]serspace draft)\s*(\|(?:\{\{[^{}]*\}\}|[^{}])*)?\}\}\s*/g, "");
          const params = pageobj.getCallbackParameters();
          const postRemoval = () => {
            if (params.tagsToRemove.length) {
              pageText = pageText.replace(/\{\{(multiple ?issues|article ?issues|mi|ai|issues|多個問題|多个问题|問題條目|问题条目|數個問題|数个问题)\s*\|\s*\}\}\n?/im, "");
              pageText = pageText.replace(/\{\{(?:multiple ?issues|article ?issues|mi|ai|issues|多個問題|多个问题|問題條目|问题条目|數個問題|数个问题)\s*\|\s*(\{\{(?:\{\{[^{}]*\}\}|[^{}])+\}\})\s*\}\}/im, "$1");
            }
            const makeSentence = (array) => {
              if (array.length < 3) {
                return array.join("和");
              }
              const last = array.pop();
              return "".concat(array.join("、"), "和").concat(last);
            };
            const makeTemplateLink = (tag) => {
              let text = "{{[[";
              if (tag.includes("|")) {
                tag = tag.slice(0, tag.indexOf("|"));
              }
              text += tag.includes(":") ? tag : "Template:".concat(tag, "|").concat(tag);
              return "".concat(text, "]]}}");
            };
            let summaryText;
            const addedTags = params.tags.map(makeTemplateLink);
            const removedTags = params.tagsToRemove.map(makeTemplateLink);
            if (addedTags.length) {
              summaryText = "加入".concat(makeSentence(addedTags));
              summaryText += removedTags.length ? "並移除".concat(makeSentence(removedTags)) : "";
            } else {
              summaryText = "移除".concat(makeSentence(removedTags));
            }
            summaryText += window.wgULS("标记", "標記");
            if (params.reason) {
              summaryText += "：".concat(params.reason);
            }
            if (summaryText.length > 499) {
              summaryText = summaryText.replace(/\[\[[^|]+\|([^\]]+)\]\]/g, "$1");
            }
            pageobj.setPageText(pageText);
            pageobj.setEditSummary(summaryText);
            pageobj.setChangeTags(Twinkle.changeTags);
            pageobj.setWatchlist(Twinkle.getPref("watchTaggedPages"));
            pageobj.setMinorEdit(Twinkle.getPref("markTaggedPagesAsMinor"));
            pageobj.setCreateOption("nocreate");
            pageobj.save(() => {
              if (params.mergeReason) {
                const talkpage = new Morebits.wiki.page("Talk:".concat(params.discussArticle), window.wgULS("将理由贴进讨论页", "將理由貼進討論頁"));
                talkpage.setNewSectionText("".concat(params.mergeReason.trim(), " ~~").concat("~~"));
                talkpage.setNewSectionTitle("请求与[[".concat(params.nonDiscussArticle, "]]合并"));
                talkpage.setChangeTags(Twinkle.changeTags);
                talkpage.setWatchlist(Twinkle.getPref("watchMergeDiscussions"));
                talkpage.setCreateOption("recreate");
                talkpage.newSection();
              }
              if (params.mergeTagOther) {
                let otherTagName = "Merge";
                if (params.mergeTag === "Merge from") {
                  otherTagName = "Merge to";
                } else if (params.mergeTag === "Merge to") {
                  otherTagName = "Merge from";
                }
                const newParams = {
                  tags: [otherTagName],
                  tagsToRemove: [],
                  tagsToRemain: [],
                  mergeTarget: Morebits.pageNameNorm,
                  discussArticle: params.discussArticle,
                  talkDiscussionTitle: params.talkDiscussionTitle,
                  talkDiscussionTitleLinked: params.talkDiscussionTitleLinked
                };
                const otherpage = new Morebits.wiki.page(params.mergeTarget, "".concat(window.wgULS("标记其他页面（", "標記其他頁面（") + params.mergeTarget, "）"));
                otherpage.setCallbackParameters(newParams);
                otherpage.load(Twinkle.tag.callbacks.article);
              }
              if (params.moveReason) {
                let moveTalkpageText = "\n\n{{".concat("subst:", "RM|1=".concat(params.moveReason.trim()));
                if (params.moveTarget) {
                  moveTalkpageText += "|2=".concat(params.moveTarget);
                }
                moveTalkpageText += "}}";
                const moveTalkpage = new Morebits.wiki.page("Talk:".concat(params.discussArticle), window.wgULS("将理由贴进讨论页", "將理由貼進討論頁"));
                moveTalkpage.setAppendText(moveTalkpageText);
                moveTalkpage.setEditSummary(window.wgULS("请求移动", "請求移動") + (params.moveTarget ? "至[[".concat(params.moveTarget, "]]") : ""));
                moveTalkpage.setChangeTags(Twinkle.changeTags);
                moveTalkpage.setCreateOption("recreate");
                moveTalkpage.append();
              }
            });
            if (params.patrol) {
              pageobj.patrol();
            }
          };
          const removeTags = () => {
            if (params.tagsToRemove.length === 0) {
              postRemoval();
              return;
            }
            Morebits.status.info(window.wgULS("信息", "資訊"), window.wgULS("移除取消选择的已存在标记", "移除取消選擇的已存在標記"));
            const getRedirectsFor = [];
            var _iterator39 = _createForOfIteratorHelper(params.tagsToRemove), _step39;
            try {
              for (_iterator39.s(); !(_step39 = _iterator39.n()).done; ) {
                const tag = _step39.value;
                const tag_re = new RegExp("\\{\\{".concat(Morebits.pageNameRegex(tag), "\\s*(\\|[^}]+)?\\}\\}\\n?"));
                if (tag_re.test(pageText)) {
                  pageText = pageText.replace(tag_re, "");
                } else {
                  getRedirectsFor[getRedirectsFor.length] = "Template:".concat(tag);
                }
              }
            } catch (err) {
              _iterator39.e(err);
            } finally {
              _iterator39.f();
            }
            if (!getRedirectsFor.length) {
              postRemoval();
              return;
            }
            const api2 = new Morebits.wiki.api(window.wgULS("获取模板重定向", "取得模板重新導向"), {
              action: "query",
              prop: "linkshere",
              titles: getRedirectsFor.join("|"),
              redirects: 1,
              lhnamespace: "10",
              lhshow: "redirect",
              lhlimit: "max"
              // 500 is max for normal users, 5000 for bots and sysops
            }, (apiobj) => {
              $(apiobj.responseXML).find("page").each((_idx, page) => {
                let removed = false;
                $(page).find("lh").each((_index, element) => {
                  const tag = $(element).attr("title").slice(9);
                  const tag_re = new RegExp("\\{\\{".concat(Morebits.pageNameRegex(tag), "\\s*(\\|(?:\\{\\{[^{}]*\\}\\}|[^{}])*)?\\}\\}\\n?"));
                  if (tag_re.test(pageText)) {
                    pageText = pageText.replace(tag_re, "");
                    removed = true;
                    return false;
                  }
                });
                if (!removed) {
                  Morebits.status.warn(window.wgULS("信息", "資訊"), window.wgULS("无法在页面上找到{{", "無法在頁面上找到{{") + $(page).attr("title").slice(9) + window.wgULS("}}……跳过", "}}……跳過"));
                }
              });
              postRemoval();
            });
            api2.post();
          };
          if (!params.tags.length) {
            removeTags();
            return;
          }
          let tagRe;
          let tagText = "";
          let tags = [];
          const groupableTags = [];
          const groupableExistingTags = [];
          const addTag = (tagName) => {
            let currentTag = "";
            if (tagName === "Uncategorized" || tagName === "Improve categories") {
              pageText += "\n\n{{".concat(tagName, "|time={{").concat("subst:", "#time:c}}}}");
            } else {
              currentTag += "{{".concat(tagName);
              switch (tagName) {
                case "Expert needed":
                  currentTag += "|subject=".concat(params.expert);
                  if (params.expert2) {
                    currentTag += "|subject2=".concat(params.expert2);
                  }
                  if (params.expert3) {
                    currentTag += "|subject3=".concat(params.expert3);
                  }
                  break;
                case "Merge":
                case "Merge to":
                case "Merge from":
                  if (params.mergeTarget) {
                    params.mergeTarget = Morebits.string.toUpperCaseFirstChar(params.mergeTarget.replace(/_/g, " "));
                    currentTag += "|".concat(params.mergeTarget);
                    if (mw.config.get("wgNamespaceNumber") === 0 && (params.mergeReason || params.discussArticle)) {
                      if (!params.discussArticle) {
                        params.discussArticle = tagName === "Merge to" ? params.mergeTarget : mw.config.get("wgTitle");
                        params.nonDiscussArticle = tagName === "Merge to" ? mw.config.get("wgTitle") : params.mergeTarget;
                        params.talkDiscussionTitle = window.wgULS("请求与", "請求與") + params.nonDiscussArticle + window.wgULS("合并", "合併");
                      }
                      currentTag += "|discuss=Talk:".concat(params.discussArticle, "#").concat(params.talkDiscussionTitle);
                    }
                  }
                  break;
                case "Missing information":
                  currentTag += "|1=".concat(params.missingInformation);
                  break;
                case "Notability":
                  if (params.notability !== "none") {
                    currentTag += "|3=".concat(params.notability);
                  }
                  break;
                case "Requested move":
                  if (params.moveTarget) {
                    params.moveTarget = Morebits.string.toUpperCaseFirstChar(params.moveTarget.replace(/_/g, " "));
                    params.discussArticle = mw.config.get("wgTitle");
                    currentTag += "|".concat(params.moveTarget);
                  }
                  break;
                case "Split":
                  if (params.target1) {
                    currentTag += "|1=".concat(params.target1);
                  }
                  if (params.target2) {
                    currentTag += "|2=".concat(params.target2);
                  }
                  if (params.target3) {
                    currentTag += "|3=".concat(params.target3);
                  }
                  break;
                case "Cleanup":
                  if (params.cleanupReason) {
                    currentTag += "|reason=".concat(params.cleanupReason);
                  }
                  break;
                default:
                  break;
              }
              currentTag += "|time={{".concat("subst:", "#time:c}}}}\n");
              tagText += currentTag;
            }
          };
          const addUngroupedTags = () => {
            for (var _i9 = 0, _tags = tags; _i9 < _tags.length; _i9++) {
              const tag = _tags[_i9];
              addTag(tag);
            }
            const qiuwen_page = new Morebits.wikitext.page(pageText);
            const templatesAfter = (
              // Protection templates
              // CSD
              // AfD
              "".concat(Twinkle.hatnoteRegex, "pp|pp-.*?|(?:Delete|Db-reason|D|Deletebecause|Db|速删|速刪|Speedy|SD|快删|快刪|CSD)|[rsaiftcmv]fd|vfd-(?:b|q|s|source|v|wikt)|(?:移动到维基|移動到維基)(?:教科书|教科書|语录|語錄|文库|文庫|导游|導遊|词典|詞典)")
            );
            pageText = qiuwen_page.insertAfterTemplates(tagText, templatesAfter).getText();
            removeTags();
          };
          var _iterator40 = _createForOfIteratorHelper(params.tags), _step40;
          try {
            for (_iterator40.s(); !(_step40 = _iterator40.n()).done; ) {
              const tag = _step40.value;
              tagRe = new RegExp("\\{\\{".concat(tag, "(\\||\\}\\})"), "im");
              if (Twinkle.tag.canRemove || !tagRe.exec(pageText)) {
                if (tag === "Notability" && (mw.config.get("wgNamespaceNumber") === 0 || confirm(window.wgULS("该页面不是条目，您仍要提报到关注度提报吗？", "該頁面不是條目，您仍要提報到關注度提報嗎？")))) {
                  const qiuwen_page = new Morebits.wiki.page("Qiuwen_talk:存废讨论/关注度提报", window.wgULS("加入关注度记录项", "加入關注度記錄項"));
                  qiuwen_page.setFollowRedirect(true);
                  qiuwen_page.setCallbackParameters(params);
                  qiuwen_page.load(Twinkle.tag.callbacks.notabilityList);
                }
                if (Twinkle.tag.article.flatObject[tag] && !Twinkle.tag.article.flatObject[tag].excludeMI) {
                  groupableTags[groupableTags.length] = tag;
                } else {
                  tags[tags.length] = tag;
                }
              } else if (tag === "Merge from") {
                tags[tags.length] = tag;
              } else {
                Morebits.status.warn(window.wgULS("信息", "資訊"), window.wgULS("在页面上找到{{", "在頁面上找到{{") + tag + window.wgULS("}}……跳过", "}}……跳過"));
                if (["Merge", "Merge to"].includes(tag)) {
                  params.mergeTarget = null;
                  params.mergeReason = null;
                  params.mergeTagOther = null;
                }
              }
            }
          } catch (err) {
            _iterator40.e(err);
          } finally {
            _iterator40.f();
          }
          var _iterator41 = _createForOfIteratorHelper(params.tagsToRemain), _step41;
          try {
            for (_iterator41.s(); !(_step41 = _iterator41.n()).done; ) {
              const tag = _step41.value;
              if (Twinkle.tag.article.flatObject[tag] && !Twinkle.tag.article.flatObject[tag].excludeMI) {
                groupableExistingTags[groupableExistingTags.length] = tag;
              }
            }
          } catch (err) {
            _iterator41.e(err);
          } finally {
            _iterator41.f();
          }
          const miTest = /\{\{(multiple ?issues|article ?issues|mi|ai|issues|多個問題|多个问题|問題條目|问题条目|數個問題|数个问题)\s*\|[^}]+\{/im.exec(pageText);
          if (miTest && groupableTags.length > 0) {
            Morebits.status.info(window.wgULS("信息", "資訊"), window.wgULS("加入支持的标记入已存在的{{multiple issues}}", "加入支援的標記入已存在的{{multiple issues}}"));
            tagText = "";
            var _iterator42 = _createForOfIteratorHelper(groupableTags), _step42;
            try {
              for (_iterator42.s(); !(_step42 = _iterator42.n()).done; ) {
                const tag = _step42.value;
                addTag(tag);
              }
            } catch (err) {
              _iterator42.e(err);
            } finally {
              _iterator42.f();
            }
            const miRegex = new RegExp("(\\{\\{\\s*".concat(miTest[1], "\\s*(?:\\|(?:\\{\\{[^{}]*\\}\\}|[^{}])*)?)\\}\\}\\s*"), "im");
            pageText = pageText.replace(miRegex, "$1".concat(tagText, "}}\n"));
            tagText = "";
            addUngroupedTags();
          } else if (params.group && !miTest && groupableExistingTags.length + groupableTags.length >= 2) {
            Morebits.status.info(window.wgULS("信息", "資訊"), window.wgULS("加入支持的标记入{{multiple issues}}", "加入支援的標記入{{multiple issues}}"));
            tagText += "{{Multiple issues|\n";
            const addNewTagsToMI = () => {
              var _iterator43 = _createForOfIteratorHelper(groupableTags), _step43;
              try {
                for (_iterator43.s(); !(_step43 = _iterator43.n()).done; ) {
                  const tag = _step43.value;
                  addTag(tag);
                }
              } catch (err) {
                _iterator43.e(err);
              } finally {
                _iterator43.f();
              }
              tagText += "}}\n";
              addUngroupedTags();
            };
            const getRedirectsFor = [];
            var _iterator44 = _createForOfIteratorHelper(groupableExistingTags), _step44;
            try {
              for (_iterator44.s(); !(_step44 = _iterator44.n()).done; ) {
                const tag = _step44.value;
                const tag_re = new RegExp("(\\{\\{".concat(Morebits.pageNameRegex(tag), "\\s*(\\|[^}]+)?\\}\\}\\n?)"));
                if (tag_re.test(pageText)) {
                  tagText += tag_re.exec(pageText)[1];
                  pageText = pageText.replace(tag_re, "");
                } else {
                  getRedirectsFor[getRedirectsFor.length] = "Template:".concat(tag);
                }
              }
            } catch (err) {
              _iterator44.e(err);
            } finally {
              _iterator44.f();
            }
            if (!getRedirectsFor.length) {
              addNewTagsToMI();
              return;
            }
            const api2 = new Morebits.wiki.api(window.wgULS("获取模板重定向", "取得模板重新導向"), {
              action: "query",
              prop: "linkshere",
              titles: getRedirectsFor.join("|"),
              redirects: 1,
              lhnamespace: "10",
              lhshow: "redirect",
              lhlimit: "max"
              // 500 is max for normal users, 5000 for bots and sysops
            }, (apiobj) => {
              $(apiobj.responseXML).find("page").each((_idx, page) => {
                let found = false;
                $(page).find("lh").each((_index, element) => {
                  const tag = $(element).attr("title").slice(9);
                  const tag_re = new RegExp("(\\{\\{".concat(Morebits.pageNameRegex(tag), "\\s*(\\|[^}]*)?\\}\\}\\n?)"));
                  if (tag_re.test(pageText)) {
                    tagText += tag_re.exec(pageText)[1];
                    pageText = pageText.replace(tag_re, "");
                    found = true;
                    return false;
                  }
                });
                if (!found) {
                  Morebits.status.warn(window.wgULS("信息", "資訊"), window.wgULS("无法在页面上找到{{", "無法在頁面上找到{{") + $(page).attr("title").slice(9) + window.wgULS("}}……跳过", "}}……跳過"));
                }
              });
              addNewTagsToMI();
            });
            api2.post();
          } else {
            tags = [...tags, ...groupableTags];
            addUngroupedTags();
          }
        },
        notabilityList: (pageobj) => {
          pageobj.setAppendText("\n{{".concat("subst:", "Fameitem|title=".concat(Morebits.pageNameNorm, "}}")));
          pageobj.setEditSummary("加入[[".concat(Morebits.pageNameNorm, "]]"));
          pageobj.setChangeTags(Twinkle.changeTags);
          pageobj.setCreateOption("recreate");
          pageobj.append();
        },
        redirect: (pageobj) => {
          const params = pageobj.getCallbackParameters();
          let pageText = pageobj.getPageText();
          let tagRe;
          let tagText = "";
          let summaryText = "加入";
          const tags = [];
          let i;
          for (i = 0; i < params.tags.length; i++) {
            tagRe = new RegExp("(\\{\\{".concat(params.tags[i], "(\\||\\}\\}))"), "im");
            if (tagRe.exec(pageText)) {
              Morebits.status.warn(window.wgULS("信息", "資訊"), window.wgULS("在重定向上找到{{", "在重新導向上找到{{") + params.tags[i] + window.wgULS("}}……跳过", "}}……跳過"));
            } else {
              tags[tags.length] = params.tags[i];
            }
          }
          const addTag = (tagName, tagIndex) => {
            tagText += "\n{{".concat(tagName);
            if (tagName === "非中文重定向") {
              if (params.altLangFrom) {
                tagText += "|1=".concat(params.altLangFrom);
              }
            } else if ((tagName === "条目请求重定向" || tagName === "條目請求重定向") && params.reqArticleLang && params.reqArticleTitle) {
              tagText += "|1=".concat(params.reqArticleLang);
              tagText += "|2=".concat(params.reqArticleTitle);
            }
            tagText += "}}";
            if (tagIndex > 0) {
              if (tagIndex === tags.length - 1) {
                summaryText += "和";
              } else if (tagIndex < tags.length - 1) {
                summaryText += "、";
              }
            }
            summaryText += "{{[[:".concat(tagName.includes(":") ? tagName : "Template:".concat(tagName, "|").concat(tagName), "]]}}");
          };
          if (!tags.length) {
            Morebits.status.warn(window.wgULS("信息", "資訊"), window.wgULS("没有标签可供标记", "沒有標籤可供標記"));
          }
          tags.sort();
          for (var _i10 = 0, _tags2 = tags; _i10 < _tags2.length; _i10++) {
            const tag = _tags2[_i10];
            addTag(tag);
          }
          if (pageText.match(/{{(?:redr|this is a redirect|r(?:edirect)?(?:.?cat.*)?[ _]?sh)/i)) {
            const oldTags = pageText.match(/(\s*{{[A-Za-z\s]+\|(?:\s*1=)?)((?:[^|{}]|{{[^}]+}})+)(}})\s*/i);
            pageText = pageText.replace(oldTags[0], oldTags[1] + tagText + oldTags[2] + oldTags[3]);
          } else {
            const pageTags = pageText.match(/\s*{{.+?重定向.*?}}/gim);
            let oldPageTags = "";
            if (pageTags) {
              var _iterator45 = _createForOfIteratorHelper(pageTags), _step45;
              try {
                for (_iterator45.s(); !(_step45 = _iterator45.n()).done; ) {
                  let pageTag = _step45.value;
                  const pageRe = new RegExp(Morebits.string.escapeRegExp(pageTag), "img");
                  pageText = pageText.replace(pageRe, "");
                  pageTag = pageTag.trim();
                  oldPageTags += "\n".concat(pageTag);
                }
              } catch (err) {
                _iterator45.e(err);
              } finally {
                _iterator45.f();
              }
            }
            pageText += "\n{{Redirect category shell|".concat(tagText).concat(oldPageTags, "\n}}");
          }
          summaryText += (tags.length > 0 ? window.wgULS("标记", "標記") : "{{Redirect category shell}}") + window.wgULS("到重定向", "到重新導向");
          if (summaryText.length > 499) {
            summaryText = summaryText.replace(/\[\[[^|]+\|([^\]]+)\]\]/g, "$1");
          }
          pageobj.setPageText(pageText);
          pageobj.setEditSummary(summaryText);
          pageobj.setChangeTags(Twinkle.changeTags);
          pageobj.setWatchlist(Twinkle.getPref("watchTaggedPages"));
          pageobj.setMinorEdit(Twinkle.getPref("markTaggedPagesAsMinor"));
          pageobj.setCreateOption("nocreate");
          pageobj.save();
          if (params.patrol) {
            pageobj.patrol();
          }
        },
        file: (pageobj) => {
          let text = pageobj.getPageText();
          const params = pageobj.getCallbackParameters();
          let summary = "加入";
          if (params.tags.length) {
            let tagtext = "";
            let currentTag;
            var _iterator46 = _createForOfIteratorHelper(params.tags), _step46;
            try {
              for (_iterator46.s(); !(_step46 = _iterator46.n()).done; ) {
                const tag = _step46.value;
                if (["Keep local", "Now Qiuwen Share", "Do not move to Qiuwen Share"].includes(tag)) {
                  text = text.replace(/{{(mtc|(copy |move )?to ?share|move to qiuwen share|copy to qiuwen share)[^}]*}}/gi, "");
                }
                if (tag === "Vector version available") {
                  text = text.replace(/\{\{((convert to |convertto|should be |shouldbe|to)?svg|badpng|vectorize)[^}]*\}\}/gi, "");
                }
                currentTag = tag;
                switch (tag) {
                  case "Now Commons":
                    currentTag = "subst:".concat(currentTag);
                    if (params.nowcommonsName !== "") {
                      currentTag += "|1=".concat(params.nowcommonsName);
                    }
                    break;
                  case "Keep local":
                    if (params.keeplocalName !== "") {
                      currentTag += "|1=".concat(params.keeplocalName);
                    }
                    if (params.keeplocalReason !== "") {
                      currentTag += "|reason=".concat(params.keeplocalReason);
                    }
                    break;
                  case "Rename media":
                    if (params.renamemediaNewname !== "") {
                      currentTag += "|1=".concat(params.renamemediaNewname);
                    }
                    if (params.renamemediaReason !== "") {
                      currentTag += "|2=".concat(params.renamemediaReason);
                    }
                    break;
                  case "Vector version available":
                  /* falls through */
                  case "Obsolete":
                    currentTag += "|1=".concat(params["".concat(tag.replace(/ /g, "_"), "File")]);
                    break;
                  case "Do not move to Commons":
                    currentTag += "|reason=".concat(params.DoNotMoveToCommons_reason);
                    break;
                  case "Copy to Wikimedia Commons":
                    currentTag += "|human=".concat(mw.config.get("wgUserName"));
                    break;
                  default:
                    break;
                }
                currentTag = "{{".concat(currentTag, "}}\n");
                tagtext += currentTag;
                summary += "{{".concat(tag, "}}、");
              }
            } catch (err) {
              _iterator46.e(err);
            } finally {
              _iterator46.f();
            }
            if (!tagtext) {
              pageobj.getStatusElement().warn(window.wgULS("用户取消操作，没什么要做的", "使用者取消操作，沒什麼要做的"));
              return;
            }
            text = tagtext + text;
          }
          pageobj.setPageText(text);
          pageobj.setEditSummary(summary.slice(0, Math.max(0, summary.length - 1)));
          pageobj.setChangeTags(Twinkle.changeTags);
          pageobj.setWatchlist(Twinkle.getPref("watchTaggedPages"));
          pageobj.setMinorEdit(Twinkle.getPref("markTaggedPagesAsMinor"));
          pageobj.setCreateOption("nocreate");
          pageobj.save();
          if (params.patrol) {
            pageobj.patrol();
          }
        }
      };
      Twinkle.tag.callback.evaluate = (e) => {
        const form = e.target;
        const params = Morebits.quickForm.getInputData(form);
        const checkIncompatible = (conflicts, extra) => {
          const count = conflicts.reduce((sum, tag) => {
            return sum += params.tags.includes(tag);
          }, 0);
          if (count > 1) {
            let message = "".concat(window.wgULS("请在以下标签中择一使用", "請在以下標籤中擇一使用"), "：{{").concat(conflicts.join("}}、{{"), "}}。");
            message += extra || "";
            void mw.notify(message, {
              type: "warn",
              tag: "friendlytag"
            });
            return true;
          }
        };
        const checkParameter = (tag, parameter, description = "理由") => {
          if (params.tags.includes(tag) && params[parameter].trim() === "") {
            void mw.notify("".concat(window.wgULS("您必须指定", "您必須指定"), "{{").concat(tag, "}}的").concat(description, "。"), {
              type: "warn",
              tag: "friendlytag"
            });
            return true;
          }
        };
        switch (Twinkle.tag.modeEn) {
          case "article":
            params.tagsToRemove = form.getUnchecked("existingTags");
            params.tagsToRemain = params.existingTags || [];
            if (params.tags.includes("Merge") || params.tags.includes("Merge from") || params.tags.includes("Merge to")) {
              if (checkIncompatible(["Merge", "Merge from", "Merge to"], window.wgULS("若需要多次合并，请使用{{Merge}}并用管道符分隔条目名（但在这种情形中Twinkle不能自动标记其他条目）。", "若需要多次合併，請使用{{Merge}}並用管道符分隔條目名（但在這種情形中Twinkle不能自動標記其他條目）。"))) {
                return;
              }
              if (!params.mergeTarget) {
                void mw.notify(window.wgULS("请指定使用于merge模板中的另一个页面标题。", "請指定使用於merge模板中的另一個頁面標題。"), {
                  type: "warn",
                  tag: "friendlytag"
                });
                return;
              }
              if ((params.mergeTagOther || params.mergeReason) && params.mergeTarget.includes("|")) {
                void mw.notify(window.wgULS("当前还不支持在一次合并中标记多个条目，与开启关于多个条目的讨论。请不要勾选“标记其他条目”并清空“理由”框后再提交。", "目前還不支援在一次合併中標記多個條目，與開啟關於多個條目的討論。請不要勾選「標記其他條目」並清空「理由」框後再提交。"), {
                  type: "warn",
                  tag: "friendlytag"
                });
                return;
              }
            }
            if (checkParameter("Missing information", "missingInformation", window.wgULS("缺少的内容", "缺少的內容"))) {
              return;
            }
            if (checkParameter("Expert needed", "expert", window.wgULS("专家领域", "專家領域"))) {
              return;
            }
            break;
          case "file":
            if (checkParameter("Obsolete", "ObsoleteFile", window.wgULS("替换的文件名称", "替換的檔案名稱")) || checkParameter("Vector version available", "Vector_version_availableFile", window.wgULS("替换的文件名称", "替換的檔案名稱"))) {
              return;
            }
            if (checkParameter("Do not move to Commons", "DoNotMoveToCommons_reason")) {
              return;
            }
            break;
          case "redirect":
            break;
          default:
            void mw.notify("Twinkle.tag：未知模式 ".concat(Twinkle.tag.mode), {
              type: "warn",
              tag: "friendlytag"
            });
            break;
        }
        if (params.tags.length === 0 && (Twinkle.tag.modeEn !== "article" || params.tagsToRemove.length === 0)) {
          void mw.notify(window.wgULS("必须选择至少一个标记！", "必須選擇至少一個標記！"), {
            type: "warn",
            tag: "friendlytag"
          });
          return;
        }
        Morebits.simpleWindow.setButtonsEnabled(false);
        Morebits.status.init(form);
        Morebits.wiki.actionCompleted.redirect = Morebits.pageNameNorm;
        Morebits.wiki.actionCompleted.notice = window.wgULS("标记完成，将在几秒内刷新页面", "標記完成，將在幾秒內重新整理頁面");
        if (Twinkle.tag.modeEn === "redirect") {
          Morebits.wiki.actionCompleted.followRedirect = false;
        }
        const qiuwen_page = new Morebits.wiki.page(Morebits.pageNameNorm, window.wgULS("正在标记", "正在標記") + Twinkle.tag.mode);
        qiuwen_page.setCallbackParameters(params);
        qiuwen_page.load(Twinkle.tag.callbacks[Twinkle.tag.modeEn]);
      };
      Twinkle.addInitCallback(Twinkle.tag, "tag");
    })(jQuery);
  }
});
//! src/Twinkle/modules/twinklestub.js
var twinklestub_exports = {};
var import_ext_gadget4;
var init_twinklestub = __esm({
  "src/Twinkle/modules/twinklestub.js"() {
    "use strict";
    import_ext_gadget4 = require("ext.gadget.Util");
    /*! Twinkle.js - twinklestub.js */
    (function twinklestub($) {
      Twinkle.stub = () => {
        if (Morebits.isPageRedirect()) {
        } else if ([0, 118].includes(mw.config.get("wgNamespaceNumber")) && mw.config.get("wgCurRevisionId") || Morebits.pageNameNorm === Twinkle.getPref("sandboxPage")) {
          Twinkle.stub.mode = "条目";
          Twinkle.addPortletLink(Twinkle.stub.callback, "小作品", "friendly-tag", "标记小作品");
        }
      };
      Twinkle.stub.callback = () => {
        if (Morebits.isPageRedirect()) {
        } else if ((mw.config.get("wgNamespaceNumber") === 0 || mw.config.get("wgNamespaceNumber") === 118) && mw.config.get("wgCurRevisionId") || Morebits.pageNameNorm === Twinkle.getPref("sandboxPage")) {
          Twinkle.stub.mode = window.wgULS("条目", "條目");
          Twinkle.addPortletLink(Twinkle.stub.callback, "小作品", "friendly-tag", window.wgULS("标记小作品", "標記小作品"));
        }
      };
      Twinkle.stub.callback = () => {
        const Window = new Morebits.simpleWindow(630, Twinkle.stub.mode === "article" ? 450 : 400);
        Window.setScriptName("Twinkle");
        Window.addFooterLink(window.wgULS("小作品說明", "小作品说明"), "QW:小作品");
        Window.addFooterLink(window.wgULS("小作品设置", "小作品設定"), "H:TW/PREF#stub");
        Window.addFooterLink(window.wgULS("Twinkle帮助", "Twinkle說明"), "H:TW/DOC#stub");
        const form = new Morebits.quickForm(Twinkle.stub.callback.evaluate);
        if (document.querySelectorAll(".patrollink").length) {
          form.append({
            type: "checkbox",
            list: [{
              label: window.wgULS("标记页面为已巡查", "標記頁面為已巡查"),
              value: "patrolPage",
              name: "patrolPage",
              checked: Twinkle.getPref("markStubbedPagesAsPatrolled")
            }]
          });
        }
        switch (Twinkle.stub.mode) {
          case "條目":
          case "条目":
            Window.setTitle(window.wgULS("条目小作品标记", "條目小作品標記"));
            form.append({
              type: "select",
              name: "sortorder",
              label: window.wgULS("查看列表：", "檢視列表："),
              tooltip: window.wgULS("您可以在Twinkle参数设置（H:TW/PREF）中更改此项。", "您可以在Twinkle偏好設定（H:TW/PREF）中更改此項。"),
              event: Twinkle.stub.updateSortOrder,
              list: [{
                type: "option",
                value: "cat",
                label: window.wgULS("按类型", "按類別"),
                selected: Twinkle.getPref("stubArticleSortOrder") === "cat"
              }, {
                type: "option",
                value: "alpha",
                label: "按字母",
                selected: Twinkle.getPref("stubArticleSortOrder") === "alpha"
              }]
            });
            form.append({
              type: "div",
              id: "tagWorkArea"
            });
            break;
          default:
            void mw.notify("Twinkle.stub：未知模式 ".concat(Twinkle.stub.mode), {
              type: "warn",
              tag: "twinklestub"
            });
            break;
        }
        form.append({
          type: "submit"
        });
        const result = form.render();
        Window.setContent(result);
        Window.display();
        if (["条目", "條目"].includes(Twinkle.stub.mode)) {
          const evt = document.createEvent("Event");
          evt.initEvent("change", true, true);
          result.sortorder.dispatchEvent(evt);
        }
      };
      Twinkle.stub.checkedTags = [];
      Twinkle.stub.updateSortOrder = (e) => {
        var _Twinkle$stub, _Twinkle$stub$checked;
        const sortorder = e.target.value;
        Twinkle.stub.checkedTags = e.target.form.getChecked("articleTags");
        (_Twinkle$stub$checked = (_Twinkle$stub = Twinkle.stub).checkedTags) !== null && _Twinkle$stub$checked !== void 0 ? _Twinkle$stub$checked : _Twinkle$stub.checkedTags = [];
        const container = new Morebits.quickForm.element({
          type: "fragment"
        });
        const makeCheckbox = (tag, description) => {
          const checkbox = {
            value: tag,
            label: "{{".concat(tag, "}}: ").concat(description)
          };
          if (Twinkle.stub.checkedTags.includes(tag)) {
            checkbox.checked = true;
          }
          return checkbox;
        };
        if (Twinkle.getPref("customStubList").length) {
          container.append({
            type: "header",
            label: window.wgULS("自定义模板", "自訂模板")
          });
          const customcheckboxes = [];
          var _iterator47 = _createForOfIteratorHelper(Twinkle.getPref("customStubList")), _step47;
          try {
            for (_iterator47.s(); !(_step47 = _iterator47.n()).done; ) {
              const item = _step47.value;
              customcheckboxes[customcheckboxes.length] = makeCheckbox(item.value, item.label);
            }
          } catch (err) {
            _iterator47.e(err);
          } finally {
            _iterator47.f();
          }
          container.append({
            type: "checkbox",
            name: "articleTags",
            list: customcheckboxes
          });
        }
        if (sortorder === "cat") {
          const doCategoryCheckboxes = (subdiv, array) => {
            const checkboxes = [];
            var _iterator48 = _createForOfIteratorHelper(array), _step48;
            try {
              for (_iterator48.s(); !(_step48 = _iterator48.n()).done; ) {
                const tag = _step48.value;
                const description = Twinkle.stub.article.tags[tag];
                checkboxes[checkboxes.length] = makeCheckbox(tag, description);
              }
            } catch (err) {
              _iterator48.e(err);
            } finally {
              _iterator48.f();
            }
            subdiv.append({
              type: "checkbox",
              name: "articleTags",
              list: checkboxes
            });
          };
          let i = 0;
          for (var _i11 = 0, _Object$entries6 = Object.entries(Twinkle.stub.article.tagCategories); _i11 < _Object$entries6.length; _i11++) {
            const [title, content] = _Object$entries6[_i11];
            const titleName = Twinkle.stub.article.tagCategoriesHeader[title];
            container.append({
              type: "header",
              id: "tagHeader".concat(i),
              label: titleName
            });
            const subdiv = container.append({
              type: "div",
              id: "tagSubdiv".concat(i++)
            });
            if (Array.isArray(content)) {
              doCategoryCheckboxes(subdiv, content);
            } else {
              for (var _i12 = 0, _Object$entries7 = Object.entries(content); _i12 < _Object$entries7.length; _i12++) {
                const [subtitle, subcontent] = _Object$entries7[_i12];
                subdiv.append({
                  type: "div",
                  label: [Morebits.htmlNode("b", subtitle)]
                });
                doCategoryCheckboxes(subdiv, subcontent);
              }
            }
          }
        } else {
          const checkboxes = [];
          for (var _i13 = 0, _Object$entries8 = Object.entries(Twinkle.stub.article.tags); _i13 < _Object$entries8.length; _i13++) {
            const [tag, description] = _Object$entries8[_i13];
            checkboxes[checkboxes.length] = makeCheckbox(tag, description);
          }
          container.append({
            type: "checkbox",
            name: "articleTags",
            list: checkboxes
          });
        }
        const $workarea = $(e.target.form).find("div#tagWorkArea");
        const rendered = container.render();
        $workarea.empty().append(rendered);
        $workarea.find("h5").css({
          "font-size": "110%"
        });
        $workarea.find("h5:not(:first-child)").css({
          "margin-top": "1em"
        });
        $workarea.find("div").filter(":has(span.quickformDescription)").css({
          "margin-top": "0.4em"
        });
        var _iterator49 = _createForOfIteratorHelper(Morebits.quickForm.getElements(e.target.form, "articleTags")), _step49;
        try {
          for (_iterator49.s(); !(_step49 = _iterator49.n()).done; ) {
            const checkbox = _step49.value;
            const $checkbox = $(checkbox);
            const link = Morebits.htmlNode("a", ">");
            link.setAttribute("class", "tag-template-link");
            link.setAttribute("href", mw.util.getUrl("Template:".concat(Morebits.string.toUpperCaseFirstChar(checkbox.values))));
            link.setAttribute("target", "_blank");
            link.setAttribute("rel", "noopener noreferrer");
            $checkbox.parent().append([" ", link]);
          }
        } catch (err) {
          _iterator49.e(err);
        } finally {
          _iterator49.f();
        }
      };
      Twinkle.stub.article = {};
      Twinkle.stub.article.tags = {
        "actor-stub": "演员",
        "asia-stub": "亚洲",
        "bio-stub": "人物",
        "biology-stub": "生物学",
        "chem-stub": "化学",
        "europe-stub": "欧洲",
        "expand list": "未完成列表",
        "food-stub": "食物",
        "france-geo-stub": "法国地理",
        "geo-stub": "地理位置",
        "hist-stub": "历史或历史学",
        "JP-stub": "日本",
        "lit-stub": "文学",
        "math-stub": "数学",
        "med-stub": "医学",
        "mil-stub": "军事",
        "movie-stub": "电影",
        "music-stub": "音乐",
        "physics-stub": "物理学",
        "politic-stub": "政治",
        "religion-stub": "宗教",
        "science-stub": "科学",
        "sport-stub": "体育",
        stub: "通用小作品",
        "switzerland-stub": "瑞士",
        "tech-stub": "科技",
        "transp-stub": "交通",
        "TV-stub": "电视",
        "UK-stub": "英国",
        "US-bio-stub": "美国人物",
        "US-geo-stub": "美国地理",
        "US-stub": "美国",
        "weather-stub": "天气和特别的天气事件"
      };
      Twinkle.stub.article.tagCategoriesHeader = {
        general: "通用模板",
        geo: "国家和地理",
        others: "杂项",
        bio: "人物",
        science: "科学",
        sport: "体育",
        tech: "技术",
        art: "艺术"
      };
      Twinkle.stub.article.tagCategories = {
        general: ["stub", "expand list"],
        geo: ["asia-stub", "europe-stub", "france-geo-stub", "geo-stub", "JP-stub", "switzerland-stub", "UK-stub", "US-bio-stub", "US-geo-stub", "US-stub"],
        others: ["food-stub", "hist-stub", "mil-stub", "politic-stub", "religion-stub", "transp-stub"],
        bio: ["actor-stub", "bio-stub", "US-bio-stub"],
        science: ["biology-stub", "chem-stub", "math-stub", "med-stub", "physics-stub", "science-stub", "weather-stub"],
        sport: ["sport-stub"],
        tech: ["tech-stub"],
        art: ["actor-stub", "lit-stub", "movie-stub", "music-stub", "TV-stub"]
      };
      Twinkle.stub.callbacks = {
        main: (pageobj) => {
          const params = pageobj.getCallbackParameters();
          let tagRe;
          let summaryText = "加入";
          let tags = [];
          const groupableTags = [];
          let i;
          let pageText = pageobj.getPageText();
          for (i = 0; i < params.tags.length; i++) {
            tagRe = new RegExp("(\\{\\{".concat(params.tags[i], "(\\||\\}\\}))"), "im");
            if (tagRe.exec(pageText)) {
              Morebits.status.info(window.wgULS("信息", "資訊"), window.wgULS("在页面上找到{{".concat(params.tags[i], "}}……跳过"), "在頁面上找到{{".concat(params.tags[i], "}}……跳過")));
            } else {
              tags = [...tags, ...(0, import_ext_gadget4.generateArray)(params.tags[i])];
            }
          }
          tags = [...tags, ...groupableTags];
          tags.sort();
          const totalTags = tags.length;
          const addTag = (tagName, tagIndex) => {
            pageText += "\n{{".concat(tagName, "}}");
            if (tagIndex > 0) {
              if (tagIndex === totalTags - 1) {
                summaryText += "和";
              } else if (tagIndex < totalTags - 1) {
                summaryText += "、";
              }
            }
            summaryText += "{{[[";
            summaryText += tagName.includes(":") ? tagName : "Template:".concat(tagName, "|").concat(tagName);
            summaryText += "]]}}";
          };
          for (var _i14 = 0, _tags3 = tags; _i14 < _tags3.length; _i14++) {
            const tag = _tags3[_i14];
            addTag(tag);
          }
          summaryText += window.wgULS("标记到", "標記到") + Twinkle.stub.mode;
          pageobj.setPageText(pageText);
          pageobj.setEditSummary(summaryText);
          pageobj.setChangeTags(Twinkle.changeTags);
          pageobj.setWatchlist(Twinkle.getPref("watchStubbedPages"));
          pageobj.setMinorEdit(Twinkle.getPref("markStubbedPagesAsMinor"));
          pageobj.setCreateOption("nocreate");
          pageobj.save();
          if (params.patrol) {
            pageobj.patrol();
          }
        }
      };
      Twinkle.stub.callback.evaluate = (e) => {
        const form = e.target;
        const params = {};
        if (form.patrolPage) {
          params.patrol = form.patrolPage.checked;
        }
        switch (Twinkle.stub.mode) {
          case "條目":
          case "条目":
            params.tags = form.getChecked("articleTags");
            params.group = false;
            break;
          default:
            void mw.notify("Twinkle.stub：未知模式 ".concat(Twinkle.stub.mode), {
              type: "warn",
              tag: "twinklestub"
            });
            break;
        }
        if (!params.tags.length) {
          void mw.notify("必须选择至少一个标记！", {
            type: "warn",
            tag: "twinklestub"
          });
          return;
        }
        Morebits.simpleWindow.setButtonsEnabled(false);
        Morebits.status.init(form);
        Morebits.wiki.actionCompleted.redirect = mw.config.get("wgPageName");
        Morebits.wiki.actionCompleted.notice = window.wgULS("标记完成，将在几秒内刷新页面", "標記完成，將在幾秒內重新整理頁面");
        if (Twinkle.stub.mode === "重定向") {
          Morebits.wiki.actionCompleted.followRedirect = false;
        }
        const qiuwen_page = new Morebits.wiki.page(mw.config.get("wgPageName"), window.wgULS("正在标记", "正在標記") + Twinkle.stub.mode);
        qiuwen_page.setCallbackParameters(params);
        switch (Twinkle.stub.mode) {
          case "條目":
          case "条目":
          /* falls through */
          case "重定向":
            qiuwen_page.load(Twinkle.stub.callbacks.main);
            return;
          case "文件":
          case "檔案":
            qiuwen_page.load(Twinkle.stub.callbacks.file);
            break;
          default:
            void mw.notify("Twinkle.stub：未知模式 ".concat(Twinkle.stub.mode), {
              type: "warn",
              tag: "twinklestub"
            });
            break;
        }
      };
      Twinkle.addInitCallback(Twinkle.stub, "stub");
    })(jQuery);
  }
});
//! src/Twinkle/modules/twinklediff.js
var twinklediff_exports = {};
var init_twinklediff = __esm({
  "src/Twinkle/modules/twinklediff.js"() {
    "use strict";
    /*! Twinkle.js - twinklediff.js */
    (function twinklediff($) {
      Twinkle.diff = () => {
        if (mw.config.get("wgNamespaceNumber") < 0 || !mw.config.get("wgArticleId")) {
          return;
        }
        Twinkle.addPortletLink(mw.util.getUrl(mw.config.get("wgPageName"), {
          diff: "cur",
          oldid: "prev"
        }), window.wgULS("最后", "最後"), "tw-lastdiff", window.wgULS("显示最后修改", "顯示最後修改"));
        if (mw.config.get("wgDiffNewId")) {
          Twinkle.addPortletLink(() => {
            Twinkle.diff.evaluate(false);
          }, "自上", "tw-since", window.wgULS("显示与上一修订版本间的差异", "顯示與上一修訂版本間的差異"));
          Twinkle.addPortletLink(() => {
            Twinkle.diff.evaluate(true);
          }, "自我", "tw-sincemine", window.wgULS("显示与我做出的修订版本的差异", "顯示與我做出的修訂版本的差異"));
          Twinkle.addPortletLink(mw.util.getUrl(mw.config.get("wgPageName"), {
            diff: "cur",
            oldid: mw.config.get("wgDiffNewId")
          }), window.wgULS("当前", "目前"), "tw-curdiff", window.wgULS("显示与当前版本间的差异", "顯示與目前版本間的差異"));
        }
      };
      Twinkle.diff.evaluate = (me) => {
        let user;
        if (me) {
          user = mw.config.get("wgUserName");
        } else {
          const node = document.querySelector("#mw-diff-ntitle2");
          if (!node) {
            return;
          }
          user = $(node).find("a").first().text();
        }
        const query = {
          prop: "revisions",
          action: "query",
          titles: mw.config.get("wgPageName"),
          rvlimit: 1,
          rvprop: ["ids", "user"],
          rvstartid: mw.config.get("wgCurRevisionId") - 1,
          rvuser: user
        };
        Morebits.status.init(document.querySelector("#mw-content-text"));
        const qiuwen_api = new Morebits.wiki.api(window.wgULS("抓取最初贡献者信息", "抓取最初貢獻者資訊"), query, Twinkle.diff.callbacks.main);
        qiuwen_api.params = {
          user
        };
        qiuwen_api.post();
      };
      Twinkle.diff.callbacks = {
        main: (self) => {
          const xmlDoc = self.responseXML;
          const revid = $(xmlDoc).find("rev").attr("revid");
          if (!revid) {
            self.statelem.error(window.wgULS("未找到合适的早期版本，或 ", "未找到合適的早期版本，或 ") + self.params.user + window.wgULS(" 是唯一贡献者。取消。", " 是唯一貢獻者。取消。"));
            return;
          }
          location = mw.util.getUrl(mw.config.get("wgPageName"), {
            diff: mw.config.get("wgCurRevisionId"),
            oldid: revid
          });
        }
      };
      Twinkle.addInitCallback(Twinkle.diff, "diff");
    })(jQuery);
  }
});
//! src/Twinkle/modules/twinkleunlink.js
var twinkleunlink_exports = {};
var init_twinkleunlink = __esm({
  "src/Twinkle/modules/twinkleunlink.js"() {
    "use strict";
    /*! Twinkle.js - twinkleunlink.js */
    (function twinkleunlink($) {
      Twinkle.unlink = () => {
        if (mw.config.get("wgNamespaceNumber") < 0 || mw.config.get("wgPageName") === Twinkle.getPref("sandboxPage") || !Morebits.userIsSysop) {
          return;
        }
        Twinkle.addPortletLink(Twinkle.unlink.callback, window.wgULS("消链", "消連"), "tw-unlink", window.wgULS("取消到本页的链接", "取消到本頁的連結"));
      };
      Twinkle.unlink.callback = (presetReason) => {
        const fileSpace = mw.config.get("wgNamespaceNumber") === 6;
        const Window = new Morebits.simpleWindow(600, 440);
        Window.setTitle(window.wgULS("取消链入", "取消連入") + (fileSpace ? window.wgULS("和模板、文件使用", "和模板、檔案使用") : ""));
        Window.setScriptName("Twinkle");
        Window.addFooterLink(window.wgULS("链入设置", "連入設定"), "H:TW/PREF#unlink");
        Window.addFooterLink(window.wgULS("Twinkle帮助", "Twinkle說明"), "H:TW/DOC#unlink");
        const form = new Morebits.quickForm(Twinkle.unlink.callback.evaluate);
        const linkTextBefore = Morebits.htmlNode("code", "[[".concat(fileSpace ? ":" : "").concat(Morebits.pageNameNorm).concat(window.wgULS("|链接文字]]", "|連結文字]]")));
        const linkTextAfter = Morebits.htmlNode("code", window.wgULS("链接文字", "連結文字"));
        const linkPlainBefore = Morebits.htmlNode("code", "[[".concat(Morebits.pageNameNorm, "]]"));
        const linkTemplateBefore = Morebits.htmlNode("code", "{{".concat(mw.config.get("wgTitle"), "}}"));
        let linkPlainAfter;
        if (fileSpace) {
          linkPlainAfter = Morebits.htmlNode("code", "<!-- [[".concat(Morebits.pageNameNorm, "]] -->"));
        } else {
          linkPlainAfter = Morebits.htmlNode("code", Morebits.pageNameNorm);
        }
        for (var _i15 = 0, _arr2 = [linkTextBefore, linkTextAfter, linkPlainBefore, linkPlainAfter, linkTemplateBefore]; _i15 < _arr2.length; _i15++) {
          const node = _arr2[_i15];
          node.style.fontFamily = "monospace";
          node.style.fontStyle = "normal";
        }
        form.append({
          type: "div",
          style: "margin-bottom: 0.5em; font-style: normal",
          label: ["".concat(window.wgULS("这个工具可以取消所有指向该页的链接（“链入”）", "這個工具可以取消所有指向該頁的連結（「連入」）") + (fileSpace ? window.wgULS("，或通过加入<!-- -->注释标记隐藏所有对此文件的使用", "，或透過加入<!-- -->注釋標記隱藏所有對此檔案的使用") : ""), "。例如："), linkTextBefore, window.wgULS("将会变成", "將會變成"), linkTextAfter, "，", linkPlainBefore, window.wgULS("将会变成", "將會變成"), linkPlainAfter, "，", linkTemplateBefore, window.wgULS("将会被移除", "將會被移除"), window.wgULS("。请小心使用。", "。請小心使用。")]
        });
        form.append({
          type: "input",
          name: "reason",
          label: "理由：",
          value: presetReason || "",
          size: 60
        });
        const query = {
          action: "query",
          list: "backlinks",
          bltitle: mw.config.get("wgPageName"),
          bllimit: "max",
          // 500 is max for normal users, 5000 for bots and sysops
          blnamespace: Twinkle.getPref("unlinkNamespaces"),
          rawcontinue: true,
          format: "json"
        };
        if (fileSpace) {
          query.list += "|imageusage";
          query.iutitle = query.bltitle;
          query.iulimit = query.bllimit;
          query.iunamespace = query.blnamespace;
        } else {
          query.blfilterredir = "nonredirects";
        }
        const qiuwen_api = new Morebits.wiki.api(window.wgULS("抓取链入", "抓取連入"), query, Twinkle.unlink.callbacks.display.backlinks);
        qiuwen_api.params = {
          form,
          Window,
          image: fileSpace
        };
        qiuwen_api.post();
        const root = document.createElement("div");
        root.style.padding = "15px";
        Morebits.status.init(root);
        qiuwen_api.statelem.status(window.wgULS("加载中……", "載入中……"));
        Window.setContent(root);
        Window.display();
      };
      Twinkle.unlink.callback.evaluate = (event) => {
        const form = event.target;
        const input = Morebits.quickForm.getInputData(form);
        if (!input.reason) {
          void mw.notify(window.wgULS("您必须指定取消链入的理由。", "您必須指定取消連入的理由。"), {
            type: "warn",
            tag: "twinkleunlink"
          });
          return;
        }
        input.backlinks || (input.backlinks = []);
        input.imageusage || (input.imageusage = []);
        const pages = Morebits.array.uniq([...input.backlinks, ...input.imageusage]);
        if (!pages.length) {
          void mw.notify(window.wgULS("您必须至少选择一个要取消链入的页面。", "您必須至少選擇一個要取消連入的頁面。"), {
            type: "warn",
            tag: "twinkleunlink"
          });
          return;
        }
        Morebits.simpleWindow.setButtonsEnabled(false);
        Morebits.status.init(form);
        const unlinker = new Morebits.batchOperation("取消".concat(input.backlinks.length ? window.wgULS("链入", "連入") + (input.imageusage.length ? window.wgULS("与文件使用", "與檔案使用") : "") : window.wgULS("文件使用", "檔案使用")));
        unlinker.setOption("preserveIndividualStatusLines", true);
        unlinker.setPageList(pages);
        const params = {
          reason: input.reason,
          unlinker
        };
        unlinker.run((pageName) => {
          const qiuwen_page = new Morebits.wiki.page(pageName, window.wgULS("在页面“", "在頁面「") + pageName + window.wgULS("”中取消链入", "」中取消連入"));
          qiuwen_page.setBotEdit(true);
          qiuwen_page.setCallbackParameters({
            doBacklinks: input.backlinks.includes(pageName),
            doImageusage: input.imageusage.includes(pageName),
            ...params
          });
          qiuwen_page.load(Twinkle.unlink.callbacks.unlinkBacklinks);
        });
      };
      Twinkle.unlink.callbacks = {
        display: {
          backlinks: (apiobj) => {
            const response = apiobj.getResponse();
            let havecontent = false;
            let list;
            let namespaces;
            let i;
            if (apiobj.params.image) {
              const imageusage = response.query.imageusage.sort(Twinkle.sortByNamespace);
              list = [];
              for (i = 0; i < imageusage.length; ++i) {
                list[list.length] = {
                  label: "",
                  value: imageusage[i].title,
                  checked: true
                };
              }
              if (list.length) {
                apiobj.params.form.append({
                  type: "header",
                  label: window.wgULS("文件使用", "檔案使用")
                });
                namespaces = [];
                var _iterator50 = _createForOfIteratorHelper(Twinkle.getPref("unlinkNamespaces")), _step50;
                try {
                  for (_iterator50.s(); !(_step50 = _iterator50.n()).done; ) {
                    const v = _step50.value;
                    namespaces[namespaces.length] = v === "0" ? window.wgULS("（条目）", "（條目）") : mw.config.get("wgFormattedNamespaces")[v];
                  }
                } catch (err) {
                  _iterator50.e(err);
                } finally {
                  _iterator50.f();
                }
                apiobj.params.form.append({
                  type: "div",
                  label: window.wgULS("已选择的命名空间：", "已選擇的命名空間：") + namespaces.join("、"),
                  tooltip: window.wgULS("您可在Twinkle参数设置中更改相关选项，请参见[[H:TW/PREF]]", "您可在Twinkle偏好設定中更改相關選項，請參見[[H:TW/PREF]]")
                });
                if (response["query-continue"] && response["query-continue"].imageusage) {
                  apiobj.params.form.append({
                    type: "div",
                    label: window.wgULS("显示前", "顯示前") + mw.language.convertNumber(list.length) + window.wgULS("个文件使用。", "個檔案使用。")
                  });
                }
                apiobj.params.form.append({
                  type: "button",
                  label: window.wgULS("全选", "全選"),
                  event: (e) => {
                    $(Morebits.quickForm.getElements(e.target.form, "imageusage")).prop("checked", true);
                  }
                });
                apiobj.params.form.append({
                  type: "button",
                  label: window.wgULS("全不选", "全不選"),
                  event: (e) => {
                    $(Morebits.quickForm.getElements(e.target.form, "imageusage")).prop("checked", false);
                  }
                });
                apiobj.params.form.append({
                  type: "checkbox",
                  name: "imageusage",
                  shiftClickSupport: true,
                  list
                });
                havecontent = true;
              } else {
                apiobj.params.form.append({
                  type: "div",
                  label: window.wgULS("未找到文件使用。", "未找到檔案使用。")
                });
              }
            }
            const backlinks = response.query.backlinks.sort(Twinkle.sortByNamespace);
            if (backlinks.length > 0) {
              list = [];
              for (i = 0; i < backlinks.length; ++i) {
                list[list.length] = {
                  label: "",
                  value: backlinks[i].title,
                  checked: true
                };
              }
              apiobj.params.form.append({
                type: "header",
                label: window.wgULS("链入", "連入")
              });
              namespaces = [];
              var _iterator51 = _createForOfIteratorHelper(Twinkle.getPref("unlinkNamespaces")), _step51;
              try {
                for (_iterator51.s(); !(_step51 = _iterator51.n()).done; ) {
                  const v = _step51.value;
                  namespaces[namespaces.length] = v === "0" ? window.wgULS("（条目）", "（條目）") : mw.config.get("wgFormattedNamespaces")[v];
                }
              } catch (err) {
                _iterator51.e(err);
              } finally {
                _iterator51.f();
              }
              apiobj.params.form.append({
                type: "div",
                label: window.wgULS("已选择的命名空间：", "已選擇的命名空間：") + namespaces.join("、"),
                tooltip: window.wgULS("您可在Twinkle参数设置中更改相关选项，请参见[[H:TW/PREF]]", "您可在Twinkle偏好設定中更改相關選項，請參見[[H:TW/PREF]]")
              });
              if (response["query-continue"] && response["query-continue"].backlinks) {
                apiobj.params.form.append({
                  type: "div",
                  label: window.wgULS("显示前", "顯示前") + mw.language.convertNumber(list.length) + window.wgULS("个链入。", "個連入。")
                });
              }
              apiobj.params.form.append({
                type: "button",
                label: window.wgULS("全选", "全選"),
                event: (e) => {
                  $(Morebits.quickForm.getElements(e.target.form, "backlinks")).prop("checked", true);
                }
              });
              apiobj.params.form.append({
                type: "button",
                label: window.wgULS("全不选", "全不選"),
                event: (e) => {
                  $(Morebits.quickForm.getElements(e.target.form, "backlinks")).prop("checked", false);
                }
              });
              apiobj.params.form.append({
                type: "checkbox",
                name: "backlinks",
                shiftClickSupport: true,
                list
              });
              havecontent = true;
            } else {
              apiobj.params.form.append({
                type: "div",
                label: window.wgULS("未找到链入。", "未找到連入。")
              });
            }
            if (havecontent) {
              apiobj.params.form.append({
                type: "submit"
              });
            }
            const result = apiobj.params.form.render();
            apiobj.params.Window.setContent(result);
            var _iterator52 = _createForOfIteratorHelper(Morebits.quickForm.getElements(result, "backlinks")), _step52;
            try {
              for (_iterator52.s(); !(_step52 = _iterator52.n()).done; ) {
                const link = _step52.value;
                Twinkle.generateBatchPageLinks(link);
              }
            } catch (err) {
              _iterator52.e(err);
            } finally {
              _iterator52.f();
            }
            var _iterator53 = _createForOfIteratorHelper(Morebits.quickForm.getElements(result, "imageusage")), _step53;
            try {
              for (_iterator53.s(); !(_step53 = _iterator53.n()).done; ) {
                const link = _step53.value;
                Twinkle.generateBatchPageLinks(link);
              }
            } catch (err) {
              _iterator53.e(err);
            } finally {
              _iterator53.f();
            }
          }
        },
        unlinkBacklinks: (pageobj) => {
          let oldtext = pageobj.getPageText();
          const params = pageobj.getCallbackParameters();
          const qiuwen_page = new Morebits.wikitext.page(oldtext);
          let summaryText = "";
          let warningString = false;
          let text;
          if (params.doImageusage) {
            text = qiuwen_page.commentOutImage(mw.config.get("wgTitle"), window.wgULS("注释", "注釋")).getText();
            if (text === oldtext) {
              warningString = window.wgULS("文件使用", "檔案使用");
            } else {
              summaryText = window.wgULS("注释文件使用", "注釋檔案使用");
              oldtext = text;
            }
          }
          if (params.doBacklinks) {
            text = qiuwen_page.removeLink(Morebits.pageNameNorm).getText();
            text = qiuwen_page.removeTemplate(mw.config.get("wgTitle")).getText();
            if (text === oldtext) {
              warningString = warningString ? window.wgULS("取消链入或文件使用", "取消連入或檔案使用") : window.wgULS("取消链入", "取消連入");
            } else {
              summaryText = (summaryText ? "".concat(summaryText, " / ") : "") + window.wgULS("取消链接到", "取消連結到");
              oldtext = text;
            }
          }
          if (warningString) {
            pageobj.getStatusElement().error("".concat(window.wgULS("未能在页面上找到", "未能在頁面上找到") + warningString, "。"));
            params.unlinker.workerFailure(pageobj);
            return;
          }
          pageobj.setPageText(text);
          pageobj.setEditSummary(summaryText + window.wgULS("“", "「") + Morebits.pageNameNorm + window.wgULS("”：", "」：") + params.reason);
          pageobj.setChangeTags(Twinkle.changeTags);
          pageobj.setCreateOption("nocreate");
          pageobj.save(params.unlinker.workerSuccess, params.unlinker.workerFailure);
        }
      };
      Twinkle.addInitCallback(Twinkle.unlink, "unlink");
    })(jQuery);
  }
});
//! src/Twinkle/modules/twinklefluff.js
var twinklefluff_exports = {};
var init_twinklefluff = __esm({
  "src/Twinkle/modules/twinklefluff.js"() {
    "use strict";
    /*! Twinkle.js - twinklefluff.js */
    (function twinklefluff($) {
      const $body = $("body");
      Twinkle.fluff = () => {
        if (mw.config.get("wgIsProbablyEditable")) {
          if (mw.config.get("wgDiffNewId") || mw.config.get("wgDiffOldId")) {
            mw.hook("wikipage.diff").add(() => {
              Twinkle.fluff.addLinks.diff();
            });
          } else if (mw.config.get("wgAction") === "view" && mw.config.get("wgRevisionId") && mw.config.get("wgCurRevisionId") !== mw.config.get("wgRevisionId")) {
            Twinkle.fluff.addLinks.oldid();
          } else if (mw.config.get("wgAction") === "history") {
            Twinkle.fluff.addLinks.history();
          }
        } else if (mw.config.get("wgNamespaceNumber") === -1) {
          Twinkle.fluff.skipTalk = !Twinkle.getPref("openTalkPageOnAutoRevert");
          Twinkle.fluff.rollbackInPlace = Twinkle.getPref("rollbackInPlace");
          if (mw.config.get("wgCanonicalSpecialPageName") === "Contributions") {
            Twinkle.fluff.addLinks.contributions();
          } else if (mw.config.get("wgCanonicalSpecialPageName") === "Recentchanges" || mw.config.get("wgCanonicalSpecialPageName") === "Recentchangeslinked") {
            mw.hook("wikipage.content").add((item) => {
              if (item.is("div")) {
                Twinkle.fluff.addLinks.recentchanges();
              }
            });
          }
        }
      };
      Twinkle.fluff.trustedBots = [];
      Twinkle.fluff.skipTalk = null;
      Twinkle.fluff.rollbackInPlace = null;
      Twinkle.fluff.hiddenName = window.wgULS("已隐藏的用户", "已隱藏的使用者");
      Twinkle.fluff.linkBuilder = {
        spanTag: (color, content) => {
          const span = document.createElement("span");
          span.style.color = color;
          span.appendChild(document.createTextNode(content));
          return span;
        },
        buildLink: (color, text) => {
          const link = document.createElement("a");
          link.appendChild(Twinkle.fluff.linkBuilder.spanTag("Black", "["));
          link.appendChild(Twinkle.fluff.linkBuilder.spanTag(color, text));
          link.appendChild(Twinkle.fluff.linkBuilder.spanTag("Black", "]"));
          link.href = "#";
          return link;
        },
        /**
         * @param {string} [vandal=null] - Username of the editor being reverted
         * Provide a falsey value if the username is hidden, defaults to null
         * @param {boolean} inline - True to create two links in a span, false
         * to create three links in a div (optional)
         * @param {number|string} [rev=wgCurRevisionId] - Revision ID being reverted (optional)
         * @param {string} [page=wgPageName] - Page being reverted (optional)
         * @return {HTMLElement} revNode
         */
        rollbackLinks: (vandal, inline, rev, page) => {
          vandal || (vandal = null);
          const elem = inline ? "span" : "div";
          const revNode = document.createElement(elem);
          rev = Number.parseInt(rev, 10);
          if (rev) {
            revNode.setAttribute("id", "tw-revert".concat(rev));
          } else {
            revNode.setAttribute("id", "tw-revert");
          }
          const normNode = document.createElement("strong");
          const vandNode = document.createElement("strong");
          const normLink = Twinkle.fluff.linkBuilder.buildLink("SteelBlue", "回退");
          const vandLink = Twinkle.fluff.linkBuilder.buildLink("Red", window.wgULS("破坏", "破壞"));
          $(normLink).on("click", (e) => {
            e.preventDefault();
            Twinkle.fluff.revert("norm", vandal, rev, page);
            Twinkle.fluff.disableLinks(revNode);
          });
          $(vandLink).on("click", (e) => {
            e.preventDefault();
            Twinkle.fluff.revert("vand", vandal, rev, page);
            Twinkle.fluff.disableLinks(revNode);
          });
          vandNode.appendChild(vandLink);
          normNode.appendChild(normLink);
          const separator = inline ? " " : " || ";
          revNode.appendChild(normNode);
          revNode.appendChild(document.createTextNode(separator));
          revNode.appendChild(vandNode);
          return revNode;
        },
        // Build [restore this revision] links
        restoreThisRevisionLink: (revisionRef, inline) => {
          revisionRef = typeof revisionRef === "number" ? revisionRef : mw.config.get(revisionRef);
          const elem = inline ? "span" : "div";
          const revertToRevisionNode = document.createElement(elem);
          revertToRevisionNode.setAttribute("id", "tw-revert-to-".concat(revisionRef));
          revertToRevisionNode.style.fontWeight = "bold";
          const revertToRevisionLink = Twinkle.fluff.linkBuilder.buildLink("SaddleBrown", window.wgULS("恢复此版本", "恢復此版本"));
          $(revertToRevisionLink).on("click", (e) => {
            e.preventDefault();
            Twinkle.fluff.revertToRevision(revisionRef);
          });
          if (inline) {
            revertToRevisionNode.appendChild(document.createTextNode(" "));
          }
          revertToRevisionNode.appendChild(revertToRevisionLink);
          return revertToRevisionNode;
        }
      };
      Twinkle.fluff.addLinks = {
        contributions: () => {
          const isRange = !!$body.find("#sp-contributions-footer-anon-range")[0];
          if (mw.config.exists("wgRelevantUserName") || isRange) {
            let username = mw.config.get("wgRelevantUserName");
            if (Twinkle.getPref("showRollbackLinks").includes("contribs") || mw.config.get("wgUserName") !== username && Twinkle.getPref("showRollbackLinks").includes("others") || mw.config.get("wgUserName") === username && Twinkle.getPref("showRollbackLinks").includes("mine")) {
              const $list = $body.find("#mw-content-text").find("ul li:has(span.mw-uctop):has(.mw-changeslist-diff)");
              $list.each((_key, current) => {
                const page = $(current).find(".mw-contributions-title").text();
                if (isRange) {
                  username = $(current).find(".mw-userlink:not(.history-deleted)").text();
                }
                current.appendChild(Twinkle.fluff.linkBuilder.rollbackLinks(username, true, current.dataset.mwRevid, page));
              });
            }
          }
        },
        recentchanges: () => {
          if (mw.config.get("wgCanonicalSpecialPageName") === "Recentchanges" && Twinkle.getPref("showRollbackLinks").includes("recentchanges") || mw.config.get("wgCanonicalSpecialPageName") === "Recentchangeslinked" && Twinkle.getPref("showRollbackLinks").includes("recentchangeslinked")) {
            let $list = $body.find(".mw-changeslist .mw-changeslist-last.mw-changeslist-src-mw-edit");
            $list = $list.not(".mw-rcfilters-ui-highlights-enhanced-toplevel").find(".mw-changeslist-line-inner, td.mw-enhanced-rc-nested");
            $list.each((_key, current) => {
              const vandal = $(current).find(".mw-userlink:not(.history-deleted)").text();
              const href = $(current).find(".mw-changeslist-diff").attr("href");
              const rev = mw.util.getParamValue("diff", href);
              const page = current.dataset.targetPage;
              current.appendChild(Twinkle.fluff.linkBuilder.rollbackLinks(vandal, true, rev, page));
            });
          }
        },
        history: () => {
          if (Twinkle.getPref("showRollbackLinks").includes("history")) {
            const histList = $body.find("#pagehistory li").toArray();
            if (!$body.find("a.mw-firstlink").length) {
              const first = histList.shift();
              const vandal = $(first).find(".mw-userlink:not(.history-deleted)").text();
              var _iterator54 = _createForOfIteratorHelper(histList), _step54;
              try {
                for (_iterator54.s(); !(_step54 = _iterator54.n()).done; ) {
                  const item = _step54.value;
                  if ($(item).find(".mw-userlink").text() !== vandal) {
                    first.appendChild(Twinkle.fluff.linkBuilder.rollbackLinks(vandal, true));
                    break;
                  }
                }
              } catch (err) {
                _iterator54.e(err);
              } finally {
                _iterator54.f();
              }
            }
            var _iterator55 = _createForOfIteratorHelper(histList), _step55;
            try {
              for (_iterator55.s(); !(_step55 = _iterator55.n()).done; ) {
                const rev = _step55.value;
                const {
                  href
                } = rev.querySelector(".mw-changeslist-date");
                const oldid = Number.parseInt(mw.util.getParamValue("oldid", href), 10);
                if (!Number.isNaN(oldid)) {
                  rev.appendChild(Twinkle.fluff.linkBuilder.restoreThisRevisionLink(oldid, true));
                }
              }
            } catch (err) {
              _iterator55.e(err);
            } finally {
              _iterator55.f();
            }
          }
        },
        diff: () => {
          const warnFromTalk = (xtitle) => {
            const talkLink = $("#mw-diff-".concat(xtitle, "2 .mw-usertoollinks a")).first();
            if (talkLink.length) {
              let extraParams = "vanarticle=".concat(mw.util.rawurlencode(Morebits.pageNameNorm), "&noautowarn=true");
              extraParams += "&vanarticlerevid=";
              extraParams += xtitle === "otitle" ? mw.config.get("wgDiffOldId") : mw.config.get("wgDiffNewId");
              const href = talkLink.attr("href");
              if (href.includes("?")) {
                talkLink.attr("href", "".concat(href, "&").concat(extraParams));
              } else {
                talkLink.attr("href", "".concat(href, "?").concat(extraParams));
              }
            }
          };
          warnFromTalk("otitle");
          if (mw.config.get("wgDiffOldId") && mw.config.get("wgDiffOldId") !== mw.config.get("wgDiffNewId")) {
            const oldTitle = document.querySelector("#mw-diff-otitle1").parentNode;
            const revertToRevision = Twinkle.fluff.linkBuilder.restoreThisRevisionLink("wgDiffOldId");
            oldTitle.insertBefore(revertToRevision, oldTitle.firstChild);
            if (Twinkle.getPref("customRevertSummary").length > 0) {
              revertToRevision.appendChild(document.createTextNode(" || "));
              const revertsummary = new Morebits.quickForm.element({
                type: "select",
                name: "revertsummary"
              });
              revertsummary.append({
                type: "option",
                label: window.wgULS("选择回退理由", "選擇回退理由"),
                value: ""
              });
              $(Twinkle.getPref("customRevertSummary")).each((_, e) => {
                revertsummary.append({
                  type: "option",
                  label: e.label,
                  value: e.value
                });
              });
              revertToRevision.appendChild(revertsummary.render().childNodes[0]);
            }
          }
          warnFromTalk("ntitle");
          if (document.querySelector("#differences-nextlink")) {
            const newTitle = document.querySelector("#mw-diff-ntitle1").parentNode;
            newTitle.insertBefore(Twinkle.fluff.linkBuilder.restoreThisRevisionLink("wgDiffNewId"), newTitle.firstChild);
          } else if (Twinkle.getPref("showRollbackLinks").includes("diff") && mw.config.get("wgDiffOldId") && (mw.config.get("wgDiffOldId") !== mw.config.get("wgDiffNewId") || document.querySelector("#differences-prevlink"))) {
            const vandal = $body.find("#mw-diff-ntitle2").find(".mw-userlink")[0].text;
            const ntitle = document.querySelector("#mw-diff-ntitle1").parentNode;
            ntitle.insertBefore(Twinkle.fluff.linkBuilder.rollbackLinks(vandal), ntitle.firstChild);
          }
        },
        oldid: () => {
          const title = document.querySelector("#mw-revision-info").parentNode;
          title.insertBefore(Twinkle.fluff.linkBuilder.restoreThisRevisionLink("wgRevisionId"), title.firstChild);
        }
      };
      Twinkle.fluff.disableLinks = (parentNode) => {
        $(parentNode).children().each((_i, node) => {
          node.innerHTML = node.textContent;
          $(node).css("font-weight", "normal").css("color", "darkgray");
        });
      };
      Twinkle.fluff.revert = (type, vandal, rev, page) => {
        if (mw.util.isIPv6Address(vandal)) {
          vandal = Morebits.ip.sanitizeIPv6(vandal);
        }
        const pagename = page || mw.config.get("wgPageName");
        const revid = rev || mw.config.get("wgCurRevisionId");
        let summary = "";
        if (document.querySelectorAll('[name="revertsummary"]')[0] !== void 0) {
          summary = document.querySelectorAll('[name="revertsummary"]')[0].value;
        }
        if (Twinkle.fluff.rollbackInPlace) {
          const notifyStatus = document.createElement("span");
          void mw.notify(notifyStatus, {
            autoHide: false,
            title: "回退".concat(page),
            tag: "twinklefluff_".concat(rev)
            // Shouldn't be necessary given disableLink
          });
          Morebits.status.init(notifyStatus);
        } else {
          Morebits.status.init(document.querySelector("#mw-content-text"));
          $body.find("#catlinks").remove();
        }
        const params = {
          type,
          user: vandal,
          userHidden: !vandal,
          pagename,
          revid,
          summary
        };
        const query = {
          action: "query",
          prop: ["info", "revisions"],
          titles: pagename,
          intestactions: "edit",
          rvlimit: Twinkle.getPref("revertMaxRevisions"),
          rvprop: ["ids", "timestamp", "user"],
          curtimestamp: "",
          meta: "tokens",
          type: "csrf"
        };
        const qiuwen_api = new Morebits.wiki.api(window.wgULS("抓取较早修订版本信息", "抓取較早修訂版本資訊"), query, Twinkle.fluff.callbacks.main);
        qiuwen_api.params = params;
        qiuwen_api.post();
      };
      Twinkle.fluff.revertToRevision = (oldrev) => {
        let summary = "";
        if (document.querySelectorAll('[name="revertsummary"]')[0] !== void 0) {
          summary = document.querySelectorAll('[name="revertsummary"]')[0].value;
        }
        Morebits.status.init(document.querySelector("#mw-content-text"));
        const query = {
          action: "query",
          prop: ["info", "revisions"],
          titles: mw.config.get("wgPageName"),
          rvlimit: 1,
          rvstartid: oldrev,
          rvprop: ["ids", "user"],
          format: "xml",
          curtimestamp: "",
          meta: "tokens",
          type: "csrf"
        };
        const qiuwen_api = new Morebits.wiki.api(window.wgULS("抓取较早修订版本信息", "抓取較早修訂版本資訊"), query, Twinkle.fluff.callbacks.toRevision);
        qiuwen_api.params = {
          rev: oldrev,
          summary
        };
        qiuwen_api.post();
      };
      Twinkle.fluff.callbacks = {
        toRevision: (apiobj) => {
          const xmlDoc = apiobj.responseXML;
          const lastrevid = Number.parseInt($(xmlDoc).find("page").attr("lastrevid"), 10);
          const touched = $(xmlDoc).find("page").attr("touched");
          const loadtimestamp = $(xmlDoc).find("api").attr("curtimestamp");
          const csrftoken = $(xmlDoc).find("tokens").attr("csrftoken");
          const revertToRevID = Number.parseInt($(xmlDoc).find("rev").attr("revid"), 10);
          const revertToUser = $(xmlDoc).find("rev").attr("user");
          const revertToUserHidden = typeof $(xmlDoc).find("rev").attr("userhidden") === "string";
          if (revertToRevID !== apiobj.params.rev) {
            apiobj.statelem.error(window.wgULS("抓取到的修订版本与请求的修订版本不符，取消。", "抓取到的修訂版本與請求的修訂版本不符，取消。"));
            return;
          }
          const optional_summary = prompt("".concat(window.wgULS("请输入回退理由：", "請輸入回退理由："), "                                "), apiobj.params.summary);
          if (optional_summary === null) {
            apiobj.statelem.error(window.wgULS("由用户取消。", "由使用者取消。"));
            return;
          }
          const summary = Twinkle.fluff.formatSummary(window.wgULS("回退到由$USER做出的修订版本", "回退到由$USER做出的修訂版本") + revertToRevID, revertToUserHidden ? null : revertToUser, optional_summary);
          const query = {
            action: "edit",
            title: mw.config.get("wgPageName"),
            summary,
            tags: Twinkle.changeTags,
            token: csrftoken,
            undo: lastrevid,
            undoafter: revertToRevID,
            basetimestamp: touched,
            starttimestamp: loadtimestamp,
            minor: Twinkle.getPref("markRevertedPagesAsMinor").includes("torev") ? true : void 0,
            bot: true
          };
          if (Twinkle.getPref("watchRevertedPages").includes("torev")) {
            const watchOrExpiry = Twinkle.getPref("watchRevertedExpiry");
            if (!watchOrExpiry || watchOrExpiry === "no") {
              query.watchlist = "nochange";
            } else if (watchOrExpiry === "default" || watchOrExpiry === "preferences") {
              query.watchlist = "preferences";
            } else {
              query.watchlist = "watch";
              if (typeof watchOrExpiry === "string" && watchOrExpiry !== "yes") {
                query.watchlistexpiry = watchOrExpiry;
              }
            }
          }
          Morebits.wiki.actionCompleted.redirect = mw.config.get("wgPageName");
          Morebits.wiki.actionCompleted.notice = "回退完成";
          const qiuwen_api = new Morebits.wiki.api(window.wgULS("保存回退内容", "儲存回退內容"), query, Twinkle.fluff.callbacks.complete, apiobj.statelem);
          qiuwen_api.params = apiobj.params;
          qiuwen_api.post();
        },
        main: (apiobj) => {
          const xmlDoc = apiobj.responseXML;
          if ($(xmlDoc).find("actions").attr("edit") === void 0) {
            apiobj.statelem.error("Unable to edit the page, it's probably protected.");
            return;
          }
          const lastrevid = Number.parseInt($(xmlDoc).find("page").attr("lastrevid"), 10);
          const touched = $(xmlDoc).find("page").attr("touched");
          const loadtimestamp = $(xmlDoc).find("api").attr("curtimestamp");
          const csrftoken = $(xmlDoc).find("tokens").attr("csrftoken");
          const revs = $(xmlDoc).find("rev");
          const {
            statelem
          } = apiobj;
          const {
            params
          } = apiobj;
          if (revs.length < 1) {
            statelem.error(window.wgULS("没有其它修订版本，无法回退", "沒有其它修訂版本，無法回退"));
            return;
          }
          const [top] = revs;
          const lastuser = top.getAttribute("user");
          if (lastrevid < params.revid) {
            Morebits.status.error(window.wgULS("错误", "錯誤"), window.wgULS(["从服务器获取的最新修订版本ID ", Morebits.htmlNode("strong", lastrevid), " 小于目前所显示的修订版本ID。这可能意味着当前修订版本已被删除、服务器延迟、或抓取到了坏掉的信息。取消。"], ["從伺服器取得的最新修訂版本ID ", Morebits.htmlNode("strong", lastrevid), " 小於目前所顯示的修訂版本ID。這可能意味著當前修訂版本已被刪除、伺服器延遲、或擷取到了壞掉的資訊。取消。"]));
            return;
          }
          let userNorm = params.user || Twinkle.fluff.hiddenName;
          let index = 1;
          if (params.revid === lastrevid) {
            params.user = lastuser;
            userNorm = params.user || Twinkle.fluff.hiddenName;
          } else {
            Morebits.status.warn("警告", window.wgULS(["最新修订版本 ", Morebits.htmlNode("strong", lastrevid), " 与我们的修订版本 ", Morebits.htmlNode("strong", params.revid), "不同"], ["最新修訂版本 ", Morebits.htmlNode("strong", lastrevid), " 與我們的修訂版本 ", Morebits.htmlNode("strong", params.revid), " 不同"]));
            if (lastuser === params.user) {
              switch (params.type) {
                case "vand":
                  Morebits.status.info(window.wgULS("信息", "資訊"), [window.wgULS("最新修订版本由 ", "最新修訂版本由 "), Morebits.htmlNode("strong", userNorm), window.wgULS(" 做出，因我们假定破坏，继续回退操作。", " 做出，因我們假定破壞，繼續回退操作。")]);
                  break;
                default:
                  Morebits.status.warn("提示", [window.wgULS("最新修订版本由 ", "最新修訂版本由 "), Morebits.htmlNode("strong", userNorm), window.wgULS(" 做出，但我们还是不回退了。", " 做出，但我們還是不回退了。")]);
                  return;
              }
            } else if (params.type === "vand" && // Okay to test on user since it will either fail or sysop will correctly access it
            // Besides, none of the trusted bots are going to be revdel'd
            Twinkle.fluff.trustedBots.includes(top.getAttribute("user")) && revs.length > 1 && revs[1].getAttribute("revid") === params.revid) {
              Morebits.status.info(window.wgULS("信息", "資訊"), window.wgULS(["最新修订版本由 ", Morebits.htmlNode("strong", lastuser), "，一个可信的机器人做出，但之前的版本被认为是破坏，继续回退操作。"], ["最新修訂版本由 ", Morebits.htmlNode("strong", lastuser), "，一個可信的機器人做出，但之前的版本被認為是破壞，繼續回退操作。"]));
              index = 2;
            } else {
              Morebits.status.error(window.wgULS("错误", "錯誤"), window.wgULS(["最新修订版本由 ", Morebits.htmlNode("strong", lastuser), " 做出，所以这个修订版本可能已经被回退了，取消回退操作。"], ["最新修訂版本由 ", Morebits.htmlNode("strong", lastuser), " 做出，所以這個修訂版本可能已經被回退了，取消回退操作。"]));
              return;
            }
          }
          if (Twinkle.fluff.trustedBots.includes(params.user)) {
            switch (params.type) {
              case "vand":
                Morebits.status.info(window.wgULS("信息", "資訊"), [window.wgULS("将对 ", "將對 "), Morebits.htmlNode("strong", userNorm), window.wgULS(" 执行破坏回退，这是一个可信的机器人，我们假定您要回退前一个修订版本。", " 執行破壞回退，這是一個可信的機器人，我們假定您要回退前一個修訂版本。")]);
                index = 2;
                params.user = revs[1].getAttribute("user");
                params.userHidden = revs[1].getAttribute("userhidden") === "";
                break;
              /* case 'norm': */
              /* falls through */
              default: {
                const cont = confirm(window.wgULS("选择了常规回退，但最新修改是由一个可信的机器人（", "選擇了常規回退，但最新修改是由一個可信的機器人（") + userNorm + window.wgULS("）做出的。确定以回退前一个修订版本，取消以回退机器人的修改", "）做出的。確定以回退前一個修訂版本，取消以回退機器人的修改"));
                if (cont) {
                  Morebits.status.info(window.wgULS("信息", "資訊"), [window.wgULS("将对 ", "將對 "), Morebits.htmlNode("strong", userNorm), window.wgULS(" 执行常规回退，这是一个可信的机器人，基于确认，我们将回退前一个修订版本。", " 執行常規回退，這是一個可信的機器人，基於確認，我們將回退前一個修訂版本。")]);
                  index = 2;
                  params.user = revs[1].getAttribute("user");
                  params.userHidden = revs[1].getAttribute("userhidden") === "";
                  userNorm = params.user || Twinkle.fluff.hiddenName;
                } else {
                  Morebits.status.warn("提示", [window.wgULS("将对 ", "將對 "), Morebits.htmlNode("strong", userNorm), window.wgULS(" 执行常规回退，这是一个可信的机器人，基于确认，我们仍将回退这个修订版本。", " 執行常規回退，這是一個可信的機器人，基於確認，我們仍將回退這個修訂版本。")]);
                }
                break;
              }
            }
          }
          let found = false;
          let count = 0;
          for (let i = index; i < revs.length; ++i) {
            ++count;
            if (revs[i].getAttribute("user") !== params.user) {
              found = i;
              break;
            }
          }
          if (!found) {
            statelem.error([window.wgULS("未找到之前的修订版本，可能 ", "未找到之前的修訂版本，可能 "), Morebits.htmlNode("strong", userNorm), window.wgULS(" 是唯一贡献者，或这个用户连续做出了超过 ", " 是唯一貢獻者，或這個用戶連續做出了超過 ") + mw.language.convertNumber(Twinkle.getPref("revertMaxRevisions")) + window.wgULS(" 次编辑。", " 次編輯。")]);
            return;
          }
          if (!count) {
            Morebits.status.error(window.wgULS("错误", "錯誤"), window.wgULS("我们将要回退0个修订版本，这没有意义，所以取消回退操作。可能是因为这个修订版本已经被回退，但修订版本ID仍是一样的。", "我們將要回退0個修訂版本，這沒有意義，所以取消回退操作。可能是因為這個修訂版本已經被回退，但修訂版本ID仍是一樣的。"));
            return;
          }
          const good_revision = revs[found];
          let userHasAlreadyConfirmedAction = false;
          if (params.type !== "vand" && count > 1) {
            if (!confirm(userNorm + window.wgULS(" 连续做出了 ", " 連續做出了 ") + mw.language.convertNumber(count) + window.wgULS(" 次编辑，是否要全部回退？", " 次編輯，是否要全部回退？"))) {
              Morebits.status.info("提示", window.wgULS("用户取消操作", "使用者取消操作"));
              return;
            }
            userHasAlreadyConfirmedAction = true;
          }
          params.count = count;
          params.goodid = good_revision.getAttribute("revid");
          params.gooduser = good_revision.getAttribute("user");
          params.gooduserHidden = good_revision.getAttribute("userhidden") === "";
          statelem.status([Morebits.htmlNode("strong", mw.language.convertNumber(count)), window.wgULS(" 个修订版本之前由 ", " 個修訂版本之前由 "), Morebits.htmlNode("strong", params.gooduserHidden ? Twinkle.fluff.hiddenName : params.gooduser), window.wgULS(" 做出的修订版本 ", " 做出的修訂版本 "), Morebits.htmlNode("strong", params.goodid)]);
          let summary;
          let extra_summary;
          switch (params.type) {
            case "vand":
              summary = Twinkle.fluff.formatSummary("回退$USER做出的".concat(params.count).concat(window.wgULS("次编辑，到由", "次編輯，到由")).concat(params.gooduserHidden ? Twinkle.fluff.hiddenName : params.gooduser).concat(window.wgULS("做出的最后修订版本 ", "做出的最後修訂版本 ")), params.userHidden ? null : params.user);
              break;
            /* case 'norm': */
            /* falls through */
            default:
              if (Twinkle.getPref("offerReasonOnNormalRevert")) {
                extra_summary = prompt("".concat(window.wgULS("可选的编辑摘要：", "可選的編輯摘要："), "                              "), params.summary);
                if (extra_summary === null) {
                  statelem.error(window.wgULS("用户取消操作。", "使用者取消操作。"));
                  return;
                }
                userHasAlreadyConfirmedAction = true;
              }
              summary = Twinkle.fluff.formatSummary("回退$USER做出的".concat(params.count).concat(window.wgULS("次编辑", "次編輯")), params.userHidden ? null : params.user, extra_summary);
              break;
          }
          if (Twinkle.getPref("confirmOnFluff") && !userHasAlreadyConfirmedAction && !confirm(window.wgULS("回退页面：您确定吗？", "回退頁面：您確定嗎？"))) {
            statelem.error(window.wgULS("用户取消操作。", "使用者取消操作。"));
            return;
          }
          if (!Twinkle.fluff.skipTalk && Twinkle.getPref("openTalkPage").includes(params.type) && !params.userHidden && mw.config.get("wgUserName") !== params.user) {
            params.notifyUser = true;
            params.vantimestamp = top.getAttribute("timestamp");
          }
          const query = {
            action: "edit",
            title: params.pagename,
            summary,
            tags: Twinkle.changeTags,
            token: csrftoken,
            undo: lastrevid,
            undoafter: params.goodid,
            basetimestamp: touched,
            starttimestamp: loadtimestamp,
            minor: Twinkle.getPref("markRevertedPagesAsMinor").includes(params.type) ? true : void 0,
            bot: true
          };
          if (Twinkle.getPref("watchRevertedPages").includes(params.type)) {
            const watchOrExpiry = Twinkle.getPref("watchRevertedExpiry");
            if (!watchOrExpiry || watchOrExpiry === "no") {
              query.watchlist = "nochange";
            } else if (watchOrExpiry === "default" || watchOrExpiry === "preferences") {
              query.watchlist = "preferences";
            } else {
              query.watchlist = "watch";
              if (typeof watchOrExpiry === "string" && watchOrExpiry !== "yes") {
                query.watchlistexpiry = watchOrExpiry;
              }
            }
          }
          if (!Twinkle.fluff.rollbackInPlace) {
            Morebits.wiki.actionCompleted.redirect = params.pagename;
          }
          Morebits.wiki.actionCompleted.notice = "回退完成";
          const qiuwen_api = new Morebits.wiki.api(window.wgULS("保存回退内容", "儲存回退內容"), query, Twinkle.fluff.callbacks.complete, statelem);
          qiuwen_api.params = params;
          qiuwen_api.post();
        },
        complete: (apiobj) => {
          const xml = apiobj.getXML();
          const $edit = $(xml).find("edit");
          if ($(xml).find("captcha").length > 0) {
            apiobj.statelem.error(window.wgULS("不能回退，因服务器要求您输入验证码。", "不能回退，因伺服器要求您輸入驗證碼。"));
          } else if ($edit.attr("nochange") === "") {
            apiobj.statelem.error(window.wgULS("要回退到的版本与当前版本相同，没什么要做的", "要回退到的版本與目前版本相同，沒什麼要做的"));
          } else {
            apiobj.statelem.info("完成");
            const {
              params
            } = apiobj;
            if (params.notifyUser && !params.userHidden) {
              Morebits.status.info(window.wgULS("信息", "資訊"), [window.wgULS("开启用户 ", "開啟使用者 "), Morebits.htmlNode("strong", params.user), window.wgULS(" 的讨论页", " 的討論頁")]);
              const windowQuery = {
                title: "User talk:".concat(params.user),
                action: "edit",
                preview: "yes",
                vanarticle: params.pagename.replace(/_/g, " "),
                vanarticlerevid: params.revid,
                vantimestamp: params.vantimestamp,
                vanarticlegoodrevid: params.goodid,
                type: params.type,
                count: params.count
              };
              switch (Twinkle.getPref("userTalkPageMode")) {
                case "tab":
                  window.open(mw.util.getUrl("", windowQuery), "_blank", "noopener,noreferrer");
                  break;
                case "blank":
                  window.open(mw.util.getUrl("", windowQuery), "_blank", "noopener,noreferrer,location=no,toolbar=no,status=no,directories=no,scrollbars=yes,width=1200,height=800");
                  break;
                /* case 'window': */
                /* falls through */
                default:
                  window.open(mw.util.getUrl("", windowQuery), window.name === "twinklewarnwindow" ? "_blank" : "twinklewarnwindow", window.name === "twinklewarnwindow" ? "noopener,noreferrer," : "location=no,toolbar=no,status=no,directories=no,scrollbars=yes,width=1200,height=800");
                  break;
              }
            }
          }
        }
      };
      Twinkle.fluff.formatSummary = (builtInString, userName, customString) => {
        let result = builtInString;
        if (customString) {
          result += "：".concat(Morebits.string.toUpperCaseFirstChar(customString));
        }
        if (/\$USER/.test(builtInString)) {
          if (userName) {
            const resultLen = unescape(encodeURIComponent(result.replace("$USER", ""))).length;
            const contribsLink = "[[Special:Contributions/".concat(userName, "|").concat(userName, "]]");
            const contribsLen = unescape(encodeURIComponent(contribsLink)).length;
            if (resultLen + contribsLen <= 499) {
              const talkLink = "（[[User talk:".concat(userName).concat(window.wgULS("|讨论]]）", "|討論]]）"));
              if (resultLen + contribsLen + unescape(encodeURIComponent(talkLink)).length <= 499) {
                result = Morebits.string.safeReplace(result, "$USER", contribsLink + talkLink);
              } else {
                result = Morebits.string.safeReplace(result, "$USER", contribsLink);
              }
            } else {
              result = Morebits.string.safeReplace(result, "$USER", userName);
            }
          } else {
            result = Morebits.string.safeReplace(result, "$USER", Twinkle.fluff.hiddenName);
          }
        }
        return result;
      };
      Twinkle.addInitCallback(Twinkle.fluff, "fluff");
    })(jQuery);
  }
});
//! src/Twinkle/modules/twinklebatchdelete.js
var twinklebatchdelete_exports = {};
var init_twinklebatchdelete = __esm({
  "src/Twinkle/modules/twinklebatchdelete.js"() {
    "use strict";
    /*! Twinkle.js - twinklebatchdelete.js */
    (function twinklebatchdelete($) {
      const $body = $("body");
      Twinkle.batchdelete = () => {
        if (Morebits.userIsSysop && (mw.config.get("wgCurRevisionId") && mw.config.get("wgNamespaceNumber") > 0 || mw.config.get("wgCanonicalSpecialPageName") === "Prefixindex" || mw.config.get("wgCanonicalSpecialPageName") === "BrokenRedirects")) {
          Twinkle.addPortletLink(Twinkle.batchdelete.callback, window.wgULS("批删", "批刪"), "tw-batch", window.wgULS("删除此分类或页面中的所有链接", "刪除此分類或頁面中的所有連結"));
        }
      };
      Twinkle.batchdelete.unlinkCache = {};
      let subpagesLoaded;
      Twinkle.batchdelete.callback = () => {
        subpagesLoaded = false;
        const Window = new Morebits.simpleWindow(600, 400);
        Window.setTitle(window.wgULS("批量删除", "批次刪除"));
        Window.setScriptName("Twinkle");
        Window.addFooterLink(window.wgULS("Twinkle帮助", "Twinkle說明"), "H:TW/DOC#batchdelete");
        const form = new Morebits.quickForm(Twinkle.batchdelete.callback.evaluate);
        form.append({
          type: "checkbox",
          list: [{
            label: window.wgULS("删除页面", "刪除頁面"),
            name: "delete_page",
            value: "delete",
            checked: true,
            subgroup: {
              type: "checkbox",
              list: [{
                label: window.wgULS("删除关联的讨论页（用户讨论页除外）", "刪除關聯的討論頁（使用者討論頁除外）"),
                name: "delete_talk",
                value: "delete_talk",
                checked: true
              }, {
                label: window.wgULS("删除到已删页面的重定向页", "刪除到已刪頁面的重新導向頁面"),
                name: "delete_redirects",
                value: "delete_redirects",
                checked: true
              }, {
                label: window.wgULS("删除已删页面的子页面", "刪除已刪頁面的子頁面"),
                name: "delete_subpages",
                value: "delete_subpages",
                checked: false,
                event: Twinkle.batchdelete.callback.toggleSubpages,
                subgroup: {
                  type: "checkbox",
                  list: [{
                    label: window.wgULS("删除已删子页面的讨论页", "刪除已刪子頁面的討論頁"),
                    name: "delete_subpage_talks",
                    value: "delete_subpage_talks"
                  }, {
                    label: window.wgULS("删除到已删子页面的重定向页", "刪除到已刪子頁面的重新導向頁面"),
                    name: "delete_subpage_redirects",
                    value: "delete_subpage_redirects"
                  }, {
                    label: window.wgULS("取消所有已删页面的链入（仅处理条目命名空间）", "取消所有已刪頁面的連入（僅處理條目命名空間）"),
                    name: "unlink_subpages",
                    value: "unlink_subpages"
                  }]
                }
              }]
            }
          }, {
            label: window.wgULS("取消链入（仅处理条目命名空间）", "取消連入（僅處理條目命名空間）"),
            name: "unlink_page",
            value: "unlink",
            checked: false
          }, {
            label: window.wgULS("移除文件使用（所有命名空间）", "移除檔案使用（所有命名空間）"),
            name: "unlink_file",
            value: "unlink_file",
            checked: true
          }]
        });
        form.append({
          type: "select",
          name: "common_reason",
          label: "常用理由：",
          style: "width: 85%;",
          list: Twinkle.batchdelete.deletereasonlist,
          event: Twinkle.batchdelete.callback.change_common_reason
        });
        form.append({
          name: "reason",
          type: "input",
          label: "理由：",
          size: 75
        });
        const query = {
          action: "query",
          prop: "revisions|info|imageinfo",
          inprop: "protection",
          rvprop: "size|user"
        };
        if (mw.config.get("wgNamespaceNumber") === 14) {
          query.generator = "categorymembers";
          query.gcmtitle = mw.config.get("wgPageName");
          query.gcmlimit = Twinkle.getPref("batchMax");
        } else if (mw.config.get("wgCanonicalSpecialPageName") === "Prefixindex") {
          query.generator = "allpages";
          query.gaplimit = Twinkle.getPref("batchMax");
          if (mw.util.getParamValue("prefix")) {
            query.gapnamespace = mw.util.getParamValue("namespace");
            query.gapprefix = mw.util.getParamValue("prefix");
          } else {
            let pathSplit = decodeURIComponent(location.pathname).split("/");
            if (pathSplit.length < 3 || pathSplit[2] !== "Special:前缀索引") {
              return;
            }
            const titleSplit = pathSplit[3].split(":");
            query.gapnamespace = mw.config.get("wgNamespaceIds")[titleSplit[0].toLowerCase()];
            if (titleSplit.length < 2 || query.gapnamespace === void 0) {
              query.gapnamespace = 0;
              query.gapprefix = pathSplit.splice(3).join("/");
            } else {
              pathSplit = pathSplit.splice(4);
              pathSplit.splice(0, 0, titleSplit.splice(1).join(":"));
              query.gapprefix = pathSplit.join("/");
            }
          }
        } else if (mw.config.get("wgCanonicalSpecialPageName") === "BrokenRedirects") {
          query.generator = "querypage";
          query.gqppage = "BrokenRedirects";
          query.gqplimit = Twinkle.getPref("batchMax");
        } else {
          query.generator = "links";
          query.titles = mw.config.get("wgPageName");
          query.gpllimit = Twinkle.getPref("batchMax");
        }
        const statusdiv = document.createElement("div");
        statusdiv.style.padding = "15px";
        Window.setContent(statusdiv);
        Morebits.status.init(statusdiv);
        Window.display();
        Twinkle.batchdelete.pages = {};
        const statelem = new Morebits.status(window.wgULS("抓取页面列表", "抓取頁面列表"));
        const qiuwen_api = new Morebits.wiki.api(window.wgULS("加载中…", "載入中…"), query, (apiobj) => {
          const xml = apiobj.responseXML;
          const $pages = $(xml).find("page").filter(":not([missing])");
          $pages.each((_index, page) => {
            const $page = $(page);
            const ns = $page.attr("ns");
            const title = $page.attr("title");
            const isRedir = $page.attr("redirect") === "";
            const $editprot = $page.find('pr[type="edit"][level="sysop"]');
            const isProtected = $editprot.length > 0;
            const size = $page.find("rev").attr("size");
            const metadata = [];
            if (isRedir) {
              metadata[metadata.length] = window.wgULS("重定向", "重新導向");
            }
            if (isProtected) {
              metadata[metadata.length] = window.wgULS("全保护，", "全保護，") + ($editprot.attr("expiry") === "infinity" ? window.wgULS("无限期", "無限期") : "".concat(new Morebits.date($editprot.attr("expiry")).calendar("utc"), " (UTC)")) + window.wgULS("过期", "過期");
            }
            if (ns === "6") {
              metadata[metadata.length] = (window.wgULS("上传者：", "上傳者：") + $page.find("ii").attr("user"), window.wgULS("最后编辑：", "最後編輯：") + $page.find("rev").attr("user"));
            } else {
              metadata[metadata.length] = mw.language.convertNumber(size) + window.wgULS("字节", "位元組");
            }
            Twinkle.batchdelete.pages[title] = {
              label: title + (metadata.length ? "（".concat(metadata.join("，"), "）") : ""),
              value: title,
              checked: true,
              style: isProtected ? "color: #f00" : ""
            };
          });
          const form_ = apiobj.params.form;
          form_.append({
            type: "header",
            label: window.wgULS("待删除页面", "待刪除頁面")
          });
          form_.append({
            type: "button",
            label: window.wgULS("全选", "全選"),
            event: () => {
              $(result).find("input[name=pages]:not(:checked)").each((_, e) => {
                e.click();
              });
              $body.find('input[name="pages.subpages"]').prop("checked", true);
            }
          });
          form_.append({
            type: "button",
            label: window.wgULS("全不选", "全不選"),
            event: () => {
              $(result).find("input[name=pages]:checked").each((_, e) => {
                e.click();
              });
            }
          });
          form_.append({
            type: "checkbox",
            name: "pages",
            id: "tw-dbatch-pages",
            shiftClickSupport: true,
            list: Object.values(Twinkle.batchdelete.pages).map((e) => {
              return e;
            })
          });
          form_.append({
            type: "submit"
          });
          const result = form_.render();
          apiobj.params.Window.setContent(result);
          var _iterator56 = _createForOfIteratorHelper(Morebits.quickForm.getElements(result, "pages")), _step56;
          try {
            for (_iterator56.s(); !(_step56 = _iterator56.n()).done; ) {
              const checkbox = _step56.value;
              generateArrowLinks(checkbox);
            }
          } catch (err) {
            _iterator56.e(err);
          } finally {
            _iterator56.f();
          }
        }, statelem);
        qiuwen_api.params = {
          form,
          Window
        };
        qiuwen_api.post();
      };
      const generateArrowLinks = (checkbox) => {
        const link = Morebits.htmlNode("a", " >");
        link.setAttribute("class", "tw-dbatch-page-link");
        link.setAttribute("href", mw.util.getUrl(checkbox.value));
        link.setAttribute("target", "_blank");
        link.setAttribute("rel", "noopener noreferrer");
        checkbox.nextElementSibling.append(link);
      };
      Twinkle.batchdelete.generateNewPageList = (form) => {
        const elements = form.elements.pages;
        if (elements instanceof NodeList) {
          var _iterator57 = _createForOfIteratorHelper(elements), _step57;
          try {
            for (_iterator57.s(); !(_step57 = _iterator57.n()).done; ) {
              const element = _step57.value;
              Twinkle.batchdelete.pages[element.value].checked = element.checked;
            }
          } catch (err) {
            _iterator57.e(err);
          } finally {
            _iterator57.f();
          }
        } else if (elements instanceof HTMLInputElement) {
          Twinkle.batchdelete.pages[elements.value].checked = elements.checked;
        }
        return new Morebits.quickForm.element({
          type: "checkbox",
          name: "pages",
          id: "tw-dbatch-pages",
          shiftClickSupport: true,
          list: Object.values(Twinkle.batchdelete.pages).map((e) => {
            return e;
          })
        }).render();
      };
      Twinkle.batchdelete.deletereasonlist = [{
        label: window.wgULS("请选择", "請選擇"),
        value: ""
      }, {
        label: window.wgULS("G6：原作者提请删除或清空页面，且页面原作者仅有一人", "G6：原作者提請刪除或清空頁面，且頁面原作者僅有一人"),
        value: window.wgULS("[[QW:CSD#G6|G6]]：原作者提请删除或清空页面，且页面原作者仅有一人", "[[QW:CSD#G6|G6]]：原作者提請刪除或清空頁面，且頁面原作者僅有一人")
      }, {
        label: window.wgULS("G9：孤立页面，比如没有主页面的讨论页、指向空页面的重定向等", "G9：孤立頁面，比如沒有主頁面的討論頁、指向空頁面的重新導向等"),
        value: window.wgULS("[[QW:CSD#G9|G9]]：孤立页面", "[[QW:CSD#G9|G9]]：孤立頁面")
      }, {
        label: window.wgULS("R1：不能发挥实际作用的重定向。", "R1：不能發揮實際作用的重定向。"),
        value: window.wgULS("[[QW:CSD#R1|R1]]：不能发挥实际作用的重定向。", "[[QW:CSD#R1|R1]]：不能發揮實際作用的重定向。")
      }, {
        label: window.wgULS("R2：名称与导向目标代表事物不一致或不完全一致的重定向。", "R2：名稱與導向目標代表事物不一致或不完全一致的重定向。"),
        value: window.wgULS("[[QW:CSD#R2|R2]]：名称与导向目标代表事物不一致或不完全一致的重定向。", "[[QW:CSD#R2|R2]]：名稱與導向目標代表事物不一致或不完全一致的重定向。")
      }, {
        label: window.wgULS("F4：可被替代的合理使用文件", "F4：可被替代的合理使用檔案"),
        value: window.wgULS("[[QW:CSD#F4|F4]]：可被替代的合理使用文件", "[[QW:CSD#F4|F4]]：可被替代的合理使用檔案")
      }, {
        label: window.wgULS("F5：没有被条目使用的非自由著作权文件、没有填写任何合理使用依据的非自由著作权文件", "F5：沒有被條目使用的非自由版權檔案、沒有填寫任何合理使用依據的非自由版權檔案"),
        value: window.wgULS("[[QW:CSD#F5|F5]]：没有被条目使用的非自由著作权文件、没有填写任何合理使用依据的非自由著作权文件", "[[QW:CSD#F5|F5]]：沒有被條目使用的非自由版權檔案、沒有填寫任何合理使用依據的非自由版權檔案")
      }, {
        label: window.wgULS("O1：用户请求删除自己的用户页或其子页面", "O1：使用者請求刪除自己的使用者頁面或其子頁面"),
        value: window.wgULS("[[QW:CSD#O1|O1]]：用户请求删除自己的[[Help:用户页|用户页]]或其子页面。", "[[QW:CSD#O1|O1]]：使用者請求刪除自己的[[Help:用户页|使用者頁面]]或其子頁面。")
      }, {
        label: window.wgULS("O2：空的分类（没有条目也没有子分类）", "O2：空的分類（沒有條目也沒有子分類）"),
        value: window.wgULS("[[QW:CSD#O2|O2]]：空的分类（没有条目也没有子分类）。", "[[QW:CSD#O2|O2]]：空的分類（沒有條目也沒有子分類）。")
      }, {
        label: window.wgULS("O3：废弃草稿", "O3：廢棄草稿"),
        value: window.wgULS("[[QW:CSD#O3|O3]]：废弃草稿。", "[[QW:CSD#O3|O3]]：廢棄草稿。")
      }];
      Twinkle.batchdelete.callback.change_common_reason = (e) => {
        if (e.target.form.reason.value !== "") {
          e.target.form.reason.value = Morebits.string.appendPunctuation(e.target.form.reason.value);
        }
        e.target.form.reason.value += e.target.value;
        e.target.value = "";
      };
      Twinkle.batchdelete.callback.toggleSubpages = (e) => {
        const {
          form
        } = e.target;
        let newPageList;
        if (e.target.checked) {
          form.delete_subpage_redirects.checked = form.delete_redirects.checked;
          form.delete_subpage_talks.checked = form.delete_talk.checked;
          form.unlink_subpages.checked = form.unlink_page.checked;
          if (subpagesLoaded) {
            var _iterator58 = _createForOfIteratorHelper(Twinkle.batchdelete.pages), _step58;
            try {
              for (_iterator58.s(); !(_step58 = _iterator58.n()).done; ) {
                const el = _step58.value;
                if (el.subgroup === null && el.subgroup_) {
                  el.subgroup = el.subgroup_;
                }
              }
            } catch (err) {
              _iterator58.e(err);
            } finally {
              _iterator58.f();
            }
            newPageList = Twinkle.batchdelete.generateNewPageList(form);
            $body.find("#tw-dbatch-pages").replaceWith(newPageList);
            var _iterator59 = _createForOfIteratorHelper(Morebits.quickForm.getElements(newPageList, "pages")), _step59;
            try {
              for (_iterator59.s(); !(_step59 = _iterator59.n()).done; ) {
                const checkbox = _step59.value;
                generateArrowLinks(checkbox);
              }
            } catch (err) {
              _iterator59.e(err);
            } finally {
              _iterator59.f();
            }
            var _iterator60 = _createForOfIteratorHelper(Morebits.quickForm.getElements(newPageList, "pages.subpages")), _step60;
            try {
              for (_iterator60.s(); !(_step60 = _iterator60.n()).done; ) {
                const checkbox = _step60.value;
                generateArrowLinks(checkbox);
              }
            } catch (err) {
              _iterator60.e(err);
            } finally {
              _iterator60.f();
            }
            return;
          }
          const loadingText = '<strong id="dbatch-subpage-loading">'.concat(window.wgULS("加载中...", "載入中..."), "</strong>");
          $(e.target).after(loadingText);
          const pages = $(form.pages).map((_i, el) => {
            return el.value;
          }).get();
          const subpageLister = new Morebits.batchOperation();
          subpageLister.setOption("chunkSize", Twinkle.getPref("batchChunks"));
          subpageLister.setPageList(pages);
          subpageLister.run((pageName) => {
            const pageTitle = mw.Title.newFromText(pageName);
            if ([0, 6, 8].includes(pageTitle.namespace)) {
              subpageLister.workerSuccess();
              return;
            }
            const qiuwen_api = new Morebits.wiki.api(window.wgULS("正在获取 ", "正在取得 ") + pageName + window.wgULS(" 的子页面", " 的子頁面"), {
              action: "query",
              prop: "revisions|info|imageinfo",
              generator: "allpages",
              rvprop: "size",
              inprop: "protection",
              gapprefix: "".concat(pageTitle.title, "/"),
              gapnamespace: pageTitle.namespace,
              gaplimit: "max",
              pageNameFull: pageName
              // Not used by API, but added for access in onSuccess()
            }, (apiobj) => {
              const xml = apiobj.responseXML;
              const $pages = $(xml).find("page");
              const subpageList = [];
              $pages.each((_index, page) => {
                const $page = $(page);
                const ns = $page.attr("ns");
                const title = $page.attr("title");
                const isRedir = $page.attr("redirect") === "";
                const $editprot = $page.find('pr[type="edit"][level="sysop"]');
                const isProtected = $editprot.length > 0;
                const size = $page.find("rev").attr("size");
                const metadata = [];
                if (isRedir) {
                  metadata[metadata.length] = "redirect";
                }
                if (isProtected) {
                  metadata[metadata.length] = window.wgULS("全保护，", "全保護，") + ($editprot.attr("expiry") === "infinity" ? window.wgULS("无限期", "無限期") : "".concat(new Morebits.date($editprot.attr("expiry")).calendar("utc"), " (UTC)")) + window.wgULS("过期", "過期");
                }
                if (ns === "6") {
                  metadata[metadata.length] = (window.wgULS("上传者：", "上傳者：") + $page.find("ii").attr("user"), window.wgULS("最后编辑：", "最後編輯：") + $page.find("rev").attr("user"));
                } else {
                  metadata[metadata.length] = mw.language.convertNumber(size) + window.wgULS("字节", "位元組");
                }
                subpageList[subpageList.length] = {
                  label: title + (metadata.length ? " (".concat(metadata.join("; "), ")") : ""),
                  value: title,
                  checked: true,
                  style: isProtected ? "color: #f00" : ""
                };
              });
              if (subpageList.length) {
                const pageName_ = apiobj.query.pageNameFull;
                Twinkle.batchdelete.pages[pageName_].subgroup = {
                  type: "checkbox",
                  name: "subpages",
                  className: "dbatch-subpages",
                  shiftClickSupport: true,
                  list: subpageList
                };
              }
              subpageLister.workerSuccess();
            }, null, () => {
              subpageLister.workerFailure();
            });
            qiuwen_api.post();
          }, () => {
            newPageList = Twinkle.batchdelete.generateNewPageList(form);
            $body.find("#tw-dbatch-pages").replaceWith(newPageList);
            var _iterator61 = _createForOfIteratorHelper(Morebits.quickForm.getElements(newPageList, "pages")), _step61;
            try {
              for (_iterator61.s(); !(_step61 = _iterator61.n()).done; ) {
                const checkbox = _step61.value;
                generateArrowLinks(checkbox);
              }
            } catch (err) {
              _iterator61.e(err);
            } finally {
              _iterator61.f();
            }
            var _iterator62 = _createForOfIteratorHelper(Morebits.quickForm.getElements(newPageList, "pages.subpages")), _step62;
            try {
              for (_iterator62.s(); !(_step62 = _iterator62.n()).done; ) {
                const checkbox = _step62.value;
                generateArrowLinks(checkbox);
              }
            } catch (err) {
              _iterator62.e(err);
            } finally {
              _iterator62.f();
            }
            subpagesLoaded = true;
            $body.find("#dbatch-subpage-loading").remove();
          });
        } else if (!e.target.checked) {
          var _iterator63 = _createForOfIteratorHelper(Twinkle.batchdelete.pages), _step63;
          try {
            for (_iterator63.s(); !(_step63 = _iterator63.n()).done; ) {
              const el = _step63.value;
              if (el.subgroup) {
                el.subgroup_ = el.subgroup;
                el.subgroup = null;
              }
            }
          } catch (err) {
            _iterator63.e(err);
          } finally {
            _iterator63.f();
          }
          newPageList = Twinkle.batchdelete.generateNewPageList(form);
          $body.find("#tw-dbatch-pages").replaceWith(newPageList);
          var _iterator64 = _createForOfIteratorHelper(Morebits.quickForm.getElements(newPageList, "pages")), _step64;
          try {
            for (_iterator64.s(); !(_step64 = _iterator64.n()).done; ) {
              const checkbox = _step64.value;
              generateArrowLinks(checkbox);
            }
          } catch (err) {
            _iterator64.e(err);
          } finally {
            _iterator64.f();
          }
        }
      };
      Twinkle.batchdelete.callback.evaluate = (event) => {
        Morebits.wiki.actionCompleted.notice = window.wgULS("批量删除已完成", "批次刪除已完成");
        const form = event.target;
        const numProtected = $(Morebits.quickForm.getElements(form, "pages")).filter((_index, element) => {
          return element.checked && element.nextElementSibling.style.color === "red";
        }).length;
        if (numProtected > 0 && !confirm(window.wgULS("您正要删除 ", "您正要刪除 ") + mw.language.convertNumber(numProtected) + window.wgULS(" 个全保护页面，您确定吗？", " 個全保護頁面，您確定嗎？"))) {
          return;
        }
        const pages = form.getChecked("pages");
        const subpages = form.getChecked("pages.subpages");
        const reason = form.reason.value;
        const delete_page = form.delete_page.checked;
        let delete_talk;
        let delete_redirects;
        let delete_subpages;
        let delete_subpage_redirects;
        let delete_subpage_talks;
        let unlink_subpages;
        if (delete_page) {
          delete_talk = form.delete_talk.checked;
          delete_redirects = form.delete_redirects.checked;
          delete_subpages = form.delete_subpages.checked;
          if (delete_subpages) {
            delete_subpage_redirects = form.delete_subpage_redirects.checked;
            delete_subpage_talks = form.delete_subpage_talks.checked;
            unlink_subpages = form.unlink_subpages.checked;
          }
        }
        const unlink_page = form.unlink_page.checked;
        const unlink_file = form.unlink_file.checked;
        if (!reason) {
          void mw.notify(window.wgULS("您需要给出一个理由", "您需要給出一個理由"), {
            type: "warn",
            tag: "twinklebatchdelete"
          });
          return;
        }
        Morebits.simpleWindow.setButtonsEnabled(false);
        Morebits.status.init(form);
        if (!pages) {
          Morebits.status.error(window.wgULS("错误", "錯誤"), window.wgULS("没有要删除的内容，中止", "沒有要刪除的內容，中止"));
          return;
        }
        const pageDeleter = new Morebits.batchOperation(delete_page ? window.wgULS("正在删除页面", "正在刪除頁面") : window.wgULS("正在启动要求的任务", "正在啟動要求的任務"));
        pageDeleter.setOption("chunkSize", Twinkle.getPref("batchChunks"));
        pageDeleter.setOption("preserveIndividualStatusLines", delete_page);
        pageDeleter.setPageList(pages);
        pageDeleter.run((pageName) => {
          const params = {
            page: pageName,
            delete_page,
            delete_talk,
            delete_redirects,
            unlink_page,
            unlink_file: unlink_file && new RegExp("^".concat(Morebits.namespaceRegex(6), ":"), "i").test(pageName),
            reason,
            pageDeleter
          };
          const qiuwen_page = new Morebits.wiki.page(pageName, window.wgULS("正在删除页面 ", "正在刪除頁面 ") + pageName);
          qiuwen_page.setCallbackParameters(params);
          if (delete_page) {
            qiuwen_page.setEditSummary("".concat(reason, "（批量）"));
            qiuwen_page.setChangeTags(Twinkle.changeTags);
            qiuwen_page.suppressProtectWarning();
            qiuwen_page.deletePage(Twinkle.batchdelete.callbacks.doExtras, pageDeleter.workerFailure);
          } else {
            Twinkle.batchdelete.callbacks.doExtras(qiuwen_page);
          }
        }, () => {
          if (delete_subpages) {
            const subpageDeleter = new Morebits.batchOperation(window.wgULS("正在删除子页面", "正在刪除子頁面"));
            subpageDeleter.setOption("chunkSize", Twinkle.getPref("batchChunks"));
            subpageDeleter.setOption("preserveIndividualStatusLines", true);
            subpageDeleter.setPageList(subpages);
            subpageDeleter.run((pageName) => {
              const params = {
                page: pageName,
                delete_page: true,
                delete_talk: delete_subpage_talks,
                delete_redirects: delete_subpage_redirects,
                unlink_page: unlink_subpages,
                unlink_file: false,
                reason,
                pageDeleter: subpageDeleter
              };
              const qiuwen_page = new Morebits.wiki.page(pageName, window.wgULS("正在删除子页面 ", "正在刪除子頁面 ") + pageName);
              qiuwen_page.setCallbackParameters(params);
              qiuwen_page.setEditSummary("".concat(reason, "（批量）"));
              qiuwen_page.setChangeTags(Twinkle.changeTags);
              qiuwen_page.suppressProtectWarning();
              qiuwen_page.deletePage(Twinkle.batchdelete.callbacks.doExtras, pageDeleter.workerFailure);
            });
          }
        });
      };
      Twinkle.batchdelete.callbacks = {
        // this stupid parameter name is a temporary thing until I implement an overhaul
        // of Morebits.wiki.* callback parameters
        doExtras: (thingWithParameters) => {
          const params = thingWithParameters.parent ? thingWithParameters.parent.getCallbackParameters() : thingWithParameters.getCallbackParameters();
          params.pageDeleter.workerSuccess(thingWithParameters);
          let query;
          let qiuwen_api;
          if (params.unlink_page) {
            Twinkle.batchdelete.unlinkCache = {};
            query = {
              action: "query",
              list: "backlinks",
              blfilterredir: "nonredirects",
              blnamespace: [0],
              bltitle: params.page,
              bllimit: "max"
              // 500 is max for normal users, 5000 for bots and sysops
            };
            qiuwen_api = new Morebits.wiki.api(window.wgULS("正在获取链入", "正在取得連入"), query, Twinkle.batchdelete.callbacks.unlinkBacklinksMain);
            qiuwen_api.params = params;
            qiuwen_api.post();
          }
          if (params.unlink_file) {
            query = {
              action: "query",
              list: "imageusage",
              iutitle: params.page,
              iulimit: "max"
              // 500 is max for normal users, 5000 for bots and sysops
            };
            qiuwen_api = new Morebits.wiki.api(window.wgULS("正在获取文件链入", "正在取得檔案連入"), query, Twinkle.batchdelete.callbacks.unlinkImageInstancesMain);
            qiuwen_api.params = params;
            qiuwen_api.post();
          }
          if (params.delete_page) {
            if (params.delete_redirects) {
              query = {
                action: "query",
                titles: params.page,
                prop: "redirects",
                rdlimit: "max"
                // 500 is max for normal users, 5000 for bots and sysops
              };
              qiuwen_api = new Morebits.wiki.api(window.wgULS("正在获取重定向", "正在取得重新導向"), query, Twinkle.batchdelete.callbacks.deleteRedirectsMain);
              qiuwen_api.params = params;
              qiuwen_api.post();
            }
            if (params.delete_talk) {
              const pageTitle = mw.Title.newFromText(params.page);
              if (pageTitle && pageTitle.namespace % 2 === 0 && pageTitle.namespace !== 2) {
                pageTitle.namespace++;
                query = {
                  action: "query",
                  titles: pageTitle.toText()
                };
                qiuwen_api = new Morebits.wiki.api(window.wgULS("正在检查讨论页面是否存在", "正在檢查討論頁面是否存在"), query, Twinkle.batchdelete.callbacks.deleteTalk);
                qiuwen_api.params = params;
                qiuwen_api.params.talkPage = pageTitle.toText();
                qiuwen_api.post();
              }
            }
          }
        },
        deleteRedirectsMain: (apiobj) => {
          const xml = apiobj.responseXML;
          const pages = $(xml).find("rd").map((_index, element) => {
            return $(element).attr("title");
          }).get();
          if (!pages.length) {
            return;
          }
          const redirectDeleter = new Morebits.batchOperation(window.wgULS("正在删除到 ", "正在刪除到 ") + apiobj.params.page + window.wgULS(" 的重定向", " 的重新導向"));
          redirectDeleter.setOption("chunkSize", Twinkle.getPref("batchChunks"));
          redirectDeleter.setPageList(pages);
          redirectDeleter.run((pageName) => {
            const qiuwen_page = new Morebits.wiki.page(pageName, window.wgULS("正在删除 ", "正在刪除 ") + pageName);
            qiuwen_page.setEditSummary("[[QW:CSD#G9|G9]]: ".concat(window.wgULS("指向已删页面“", "指向已刪頁面「")).concat(apiobj.params.page).concat(window.wgULS("”的重定向", "」的重新導向")));
            qiuwen_page.setChangeTags(Twinkle.changeTags);
            qiuwen_page.deletePage(redirectDeleter.workerSuccess, redirectDeleter.workerFailure);
          });
        },
        deleteTalk: (apiobj) => {
          const xml = apiobj.responseXML;
          const exists = $(xml).find("page:not([missing])").length > 0;
          if (!exists) {
            return;
          }
          const page = new Morebits.wiki.page(apiobj.params.talkPage, window.wgULS("正在删除页面 ", "正在刪除頁面 ") + apiobj.params.page + window.wgULS(" 的讨论页", " 的討論頁"));
          page.setEditSummary("[[QW:CSD#G9|G9]]: ".concat(window.wgULS("已删页面“", "已刪頁面「")).concat(apiobj.params.page).concat(window.wgULS("”的[[Help:讨论页|讨论页]]", "」的[[Help:討論頁|討論頁]]")));
          page.setChangeTags(Twinkle.changeTags);
          page.deletePage();
        },
        unlinkBacklinksMain: (apiobj) => {
          const xml = apiobj.responseXML;
          const pages = $(xml).find("bl").map((_index, element) => {
            return $(element).attr("title");
          }).get();
          if (!pages.length) {
            return;
          }
          const unlinker = new Morebits.batchOperation("正在取消到 ".concat(apiobj.params.page).concat(window.wgULS(" 的链入", " 的連入")));
          unlinker.setOption("chunkSize", Twinkle.getPref("batchChunks"));
          unlinker.setPageList(pages);
          unlinker.run((pageName) => {
            const qiuwen_page = new Morebits.wiki.page(pageName, "正在取消 ".concat(pageName).concat(window.wgULS(" 上的链入", " 上的連入")));
            const params = {
              ...apiobj.params
            };
            params.title = pageName;
            params.unlinker = unlinker;
            qiuwen_page.setCallbackParameters(params);
            qiuwen_page.load(Twinkle.batchdelete.callbacks.unlinkBacklinks);
          });
        },
        unlinkBacklinks: (pageobj) => {
          const params = pageobj.getCallbackParameters();
          if (!pageobj.exists()) {
            params.unlinker.workerSuccess(pageobj);
            return;
          }
          let text;
          if (params.title in Twinkle.batchdelete.unlinkCache) {
            text = Twinkle.batchdelete.unlinkCache[params.title];
          } else {
            text = pageobj.getPageText();
          }
          const old_text = text;
          const qiuwen_page = new Morebits.wikitext.page(text);
          text = qiuwen_page.removeLink(params.page).getText();
          Twinkle.batchdelete.unlinkCache[params.title] = text;
          if (text === old_text) {
            params.unlinker.workerSuccess(pageobj);
            return;
          }
          pageobj.setEditSummary(window.wgULS("取消到已删页面", "取消到已刪頁面") + params.page + window.wgULS("的链入", "的連入"));
          pageobj.setChangeTags(Twinkle.changeTags);
          pageobj.setPageText(text);
          pageobj.setCreateOption("nocreate");
          pageobj.setMaxConflictRetries(10);
          pageobj.save(params.unlinker.workerSuccess, params.unlinker.workerFailure);
        },
        unlinkImageInstancesMain: (apiobj) => {
          const xml = apiobj.responseXML;
          const pages = $(xml).find("iu").map((_index, element) => {
            return $(element).attr("title");
          }).get();
          if (!pages.length) {
            return;
          }
          const unlinker = new Morebits.batchOperation("正在取消到 ".concat(apiobj.params.page).concat(window.wgULS(" 的链入", " 的連入")));
          unlinker.setOption("chunkSize", Twinkle.getPref("batchChunks"));
          unlinker.setPageList(pages);
          unlinker.run((pageName) => {
            const qiuwen_page = new Morebits.wiki.page(pageName, "取消 ".concat(pageName).concat(window.wgULS(" 的文件使用", " 的檔案使用")));
            const params = {
              ...apiobj.params
            };
            params.title = pageName;
            params.unlinker = unlinker;
            qiuwen_page.setCallbackParameters(params);
            qiuwen_page.load(Twinkle.batchdelete.callbacks.unlinkImageInstances);
          });
        },
        unlinkImageInstances: (pageobj) => {
          const params = pageobj.getCallbackParameters();
          if (!pageobj.exists()) {
            params.unlinker.workerSuccess(pageobj);
            return;
          }
          const image = params.page.replace(new RegExp("^".concat(Morebits.namespaceRegex(6), ":")), "");
          let text;
          if (params.title in Twinkle.batchdelete.unlinkCache) {
            text = Twinkle.batchdelete.unlinkCache[params.title];
          } else {
            text = pageobj.getPageText();
          }
          const old_text = text;
          const qiuwen_page = new Morebits.wikitext.page(text);
          text = qiuwen_page.commentOutImage(image, window.wgULS("因文件已删，故注解", "因檔案已刪，故註解")).getText();
          Twinkle.batchdelete.unlinkCache[params.title] = text;
          if (text === old_text) {
            pageobj.getStatusElement().error("在 ".concat(pageobj.getPageName(), " 上取消 ").concat(image).concat(window.wgULS(" 的文件使用失败", " 的檔案使用失敗")));
            params.unlinker.workerFailure(pageobj);
            return;
          }
          pageobj.setEditSummary(window.wgULS("取消使用已被删除文件", "取消使用已被刪除檔案") + image + window.wgULS("，因为：", "，因為：") + params.reason);
          pageobj.setChangeTags(Twinkle.changeTags);
          pageobj.setPageText(text);
          pageobj.setCreateOption("nocreate");
          pageobj.setMaxConflictRetries(10);
          pageobj.save(params.unlinker.workerSuccess, params.unlinker.workerFailure);
        }
      };
      Twinkle.addInitCallback(Twinkle.batchdelete, "batchdelete");
    })(jQuery);
  }
});
//! src/Twinkle/modules/twinklebatchundelete.js
var twinklebatchundelete_exports = {};
var init_twinklebatchundelete = __esm({
  "src/Twinkle/modules/twinklebatchundelete.js"() {
    "use strict";
    /*! Twinkle.js - twinklebatchundelete.js */
    (function twinklebatchundelete($) {
      Twinkle.batchundelete = () => {
        if (!Morebits.userIsSysop || !mw.config.get("wgArticleId") || mw.config.get("wgNamespaceNumber") !== mw.config.get("wgNamespaceIds").user && mw.config.get("wgNamespaceNumber") !== mw.config.get("wgNamespaceIds").project) {
          return;
        }
        Twinkle.addPortletLink(Twinkle.batchundelete.callback, window.wgULS("批复", "批復"), "tw-batch-undel", window.wgULS("反删除页面", "反刪除頁面"));
      };
      Twinkle.batchundelete.callback = () => {
        const Window = new Morebits.simpleWindow(600, 400);
        Window.setScriptName("Twinkle");
        Window.setTitle(window.wgULS("批量反删除", "批次反刪除"));
        Window.addFooterLink(window.wgULS("Twinkle帮助", "Twinkle說明"), "H:TW/DOC#batchundelete");
        const form = new Morebits.quickForm(Twinkle.batchundelete.callback.evaluate);
        form.append({
          type: "checkbox",
          list: [{
            label: window.wgULS("若存在已删除的讨论页，也恢复", "若存在已刪除的討論頁，也恢復"),
            name: "undel_talk",
            value: "undel_talk",
            checked: true
          }]
        });
        form.append({
          type: "input",
          name: "reason",
          label: "理由：",
          size: 60
        });
        const statusdiv = document.createElement("div");
        statusdiv.style.padding = "15px";
        Window.setContent(statusdiv);
        Morebits.status.init(statusdiv);
        Window.display();
        const query = {
          action: "query",
          generator: "links",
          prop: "info",
          inprop: "protection",
          titles: mw.config.get("wgPageName"),
          gpllimit: Twinkle.getPref("batchMax")
        };
        const statelem = new Morebits.status(window.wgULS("抓取页面列表", "抓取頁面列表"));
        const qiuwen_api = new Morebits.wiki.api(window.wgULS("加载中…", "載入中…"), query, (apiobj) => {
          const xml = apiobj.responseXML;
          const $pages = $(xml).find("page[missing]");
          const list = [];
          $pages.each((_index, page) => {
            const $page = $(page);
            const title = $page.attr("title");
            const $editprot = $page.find('pr[type="create"][level="sysop"]');
            const isProtected = $editprot.length > 0;
            list[list.length] = {
              label: title + (isProtected ? "（".concat(window.wgULS("全保护，", "全保護，")).concat($editprot.attr("expiry") === "infinity" ? window.wgULS("无限期", "無限期") : "".concat(new Morebits.date($editprot.attr("expiry")).calendar("utc"), " (UTC)").concat(window.wgULS("过期", "過期")), "）") : ""),
              value: title,
              checked: true,
              style: isProtected ? "color: #f00" : ""
            };
          });
          apiobj.params.form.append({
            type: "header",
            label: window.wgULS("待恢复页面", "待恢復頁面")
          });
          apiobj.params.form.append({
            type: "button",
            label: window.wgULS("全选", "全選"),
            event: (e) => {
              $(Morebits.quickForm.getElements(e.target.form, "pages")).prop("checked", true);
            }
          });
          apiobj.params.form.append({
            type: "button",
            label: window.wgULS("全不选", "全不選"),
            event: (e) => {
              $(Morebits.quickForm.getElements(e.target.form, "pages")).prop("checked", false);
            }
          });
          apiobj.params.form.append({
            type: "checkbox",
            name: "pages",
            shiftClickSupport: true,
            list
          });
          apiobj.params.form.append({
            type: "submit"
          });
          const result = apiobj.params.form.render();
          apiobj.params.Window.setContent(result);
        }, statelem);
        qiuwen_api.params = {
          form,
          Window
        };
        qiuwen_api.post();
      };
      Twinkle.batchundelete.callback.evaluate = (event) => {
        Morebits.wiki.actionCompleted.notice = window.wgULS("反删除已完成", "反刪除已完成");
        const numProtected = $(Morebits.quickForm.getElements(event.target, "pages")).filter((_index, element) => {
          return element.checked && element.nextElementSibling.style.color === "red";
        }).length;
        if (numProtected > 0 && !confirm(window.wgULS("您正要反删除 ", "您正要反刪除 ") + numProtected + window.wgULS(" 个全保护页面，您确定吗？", " 個全保護頁面，您確定嗎？"))) {
          return;
        }
        const pages = event.target.getChecked("pages");
        const reason = event.target.reason.value;
        const undel_talk = event.target.reason.value;
        if (!reason) {
          void mw.notify("您需要指定理由。", {
            type: "warn",
            tag: "twinklebatchundelete"
          });
          return;
        }
        Morebits.simpleWindow.setButtonsEnabled(false);
        Morebits.status.init(event.target);
        if (!pages) {
          Morebits.status.error(window.wgULS("错误", "錯誤"), window.wgULS("没什么要反删除的，取消操作", "沒什麼要反刪除的，取消操作"));
          return;
        }
        const pageUndeleter = new Morebits.batchOperation(window.wgULS("反删除页面", "反刪除頁面"));
        pageUndeleter.setOption("chunkSize", Twinkle.getPref("batchChunks"));
        pageUndeleter.setOption("preserveIndividualStatusLines", true);
        pageUndeleter.setPageList(pages);
        pageUndeleter.run((pageName) => {
          const params = {
            page: pageName,
            undel_talk,
            reason,
            pageUndeleter
          };
          const qiuwen_page = new Morebits.wiki.page(pageName, window.wgULS("反删除页面", "反刪除頁面") + pageName);
          qiuwen_page.setCallbackParameters(params);
          qiuwen_page.setEditSummary("".concat(reason, " (批量)"));
          qiuwen_page.setChangeTags(Twinkle.changeTags);
          qiuwen_page.suppressProtectWarning();
          qiuwen_page.setMaxRetries(3);
          qiuwen_page.undeletePage(Twinkle.batchundelete.callbacks.doExtras, pageUndeleter.workerFailure);
        });
      };
      Twinkle.batchundelete.callbacks = {
        // this stupid parameter name is a temporary thing until I implement an overhaul
        // of Morebits.wiki.* callback parameters
        doExtras: (thingWithParameters) => {
          const params = thingWithParameters.parent ? thingWithParameters.parent.getCallbackParameters() : thingWithParameters.getCallbackParameters();
          params.pageUndeleter.workerSuccess(thingWithParameters);
          let query;
          let qiuwen_api;
          if (params.undel_talk) {
            const talkpagename = new mw.Title(params.page).getTalkPage().getPrefixedText();
            if (talkpagename !== params.page) {
              query = {
                action: "query",
                prop: "deletedrevisions",
                drvprop: "ids",
                drvlimit: 1,
                titles: talkpagename
              };
              qiuwen_api = new Morebits.wiki.api(window.wgULS("检查讨论页的已删版本", "檢查討論頁的已刪版本"), query, Twinkle.batchundelete.callbacks.undeleteTalk);
              qiuwen_api.params = params;
              qiuwen_api.params.talkPage = talkpagename;
              qiuwen_api.post();
            }
          }
        },
        undeleteTalk: (apiobj) => {
          const xml = apiobj.responseXML;
          const exists = $(xml).find("page:not([missing])").length > 0;
          const delrevs = $(xml).find("rev").attr("revid");
          if (exists || !delrevs) {
            return;
          }
          const page = new Morebits.wiki.page(apiobj.params.talkPage, window.wgULS("正在反删除", "正在反刪除") + apiobj.params.page + window.wgULS("的讨论页", "的討論頁"));
          page.setEditSummary(window.wgULS("反删除“", "反刪除「") + apiobj.params.page + window.wgULS("”的[[Help:讨论页|讨论页]]", "」的[[Help:討論頁|討論頁]]"));
          page.setChangeTags(Twinkle.changeTags);
          page.undeletePage();
        }
      };
      Twinkle.addInitCallback(Twinkle.batchundelete, "batchundelete");
    })(jQuery);
  }
});
//! src/Twinkle/modules/twinklebatchprotect.js
var twinklebatchprotect_exports = {};
var init_twinklebatchprotect = __esm({
  "src/Twinkle/modules/twinklebatchprotect.js"() {
    "use strict";
    /*! Twinkle.js - twinklebatchprotect.js */
    (function twinklebatchprotect($) {
      Twinkle.batchprotect = () => {
        if (Morebits.userIsSysop && (mw.config.get("wgArticleId") > 0 && [2, 4].includes(mw.config.get("wgNamespaceNumber")) || mw.config.get("wgNamespaceNumber") === 14 || mw.config.get("wgCanonicalSpecialPageName") === "Prefixindex")) {
          Twinkle.addPortletLink(Twinkle.batchprotect.callback, "批保", "tw-pbatch", "批量保护链出页面");
        }
      };
      Twinkle.batchprotect.unlinkCache = {};
      Twinkle.batchprotect.callback = () => {
        const Window = new Morebits.simpleWindow(600, 400);
        Window.setTitle("批保");
        Window.setScriptName("Twinkle");
        Window.addFooterLink("保护方针", "QW:PROT");
        Window.addFooterLink(window.wgULS("帮助文档", "幫助文檔"), "H:TW/DOC#保护");
        Window.addFooterLink(window.wgULS("问题反馈", "問題反饋"), "HT:TW");
        const form = new Morebits.quickForm(Twinkle.batchprotect.callback.evaluate);
        form.append({
          type: "checkbox",
          event: Twinkle.protect.formevents.editmodify,
          list: [{
            label: "修改编辑保护",
            value: "editmodify",
            name: "editmodify",
            tooltip: "仅限现有页面。",
            checked: true
          }]
        });
        form.append({
          type: "select",
          name: "editlevel",
          label: "编辑权限：",
          event: Twinkle.protect.formevents.editlevel,
          list: Twinkle.protect.protectionLevels
        });
        form.append({
          type: "select",
          name: "editexpiry",
          label: "终止时间：",
          event: (event) => {
            if (event.target.value === "custom") {
              Twinkle.protect.doCustomExpiry(event.target);
            }
          },
          list: Twinkle.protect.protectionLengths
          // Default (2 days) set after render
        });
        form.append({
          type: "checkbox",
          event: Twinkle.protect.formevents.movemodify,
          list: [{
            label: "修改移动保护",
            value: "movemodify",
            name: "movemodify",
            tooltip: "仅限现有页面。",
            checked: true
          }]
        });
        form.append({
          type: "select",
          name: "movelevel",
          label: "移动权限：",
          event: Twinkle.protect.formevents.movelevel,
          list: Twinkle.protect.protectionLevels.filter(
            // Autoconfirmed is required for a move, redundant
            (protLevel) => {
              return protLevel.value !== "autoconfirmed";
            }
          )
        });
        form.append({
          type: "select",
          name: "moveexpiry",
          label: "终止时间：",
          event: (event) => {
            if (event.target.value === "custom") {
              Twinkle.protect.doCustomExpiry(event.target);
            }
          },
          list: Twinkle.protect.protectionLengths
          // Default (2 days) set after render
        });
        form.append({
          type: "checkbox",
          event: (event) => {
            event.target.form.createlevel.disabled = !event.target.checked;
            event.target.form.createexpiry.disabled = !event.target.checked || event.target.form.createlevel.value === "all";
            event.target.form.createlevel.style.color = event.target.checked ? "" : "transparent";
            event.target.form.createexpiry.style.color = event.target.checked ? "" : "transparent";
          },
          list: [{
            label: "修改创建保护",
            value: "createmodify",
            name: "createmodify",
            tooltip: "仅限不存在的页面。",
            checked: true
          }]
        });
        form.append({
          type: "select",
          name: "createlevel",
          label: "创建权限：",
          event: Twinkle.protect.formevents.createlevel,
          list: Twinkle.protect.protectionLevels
        });
        form.append({
          type: "select",
          name: "createexpiry",
          label: "终止时间：",
          event: (event) => {
            if (event.target.value === "custom") {
              Twinkle.protect.doCustomExpiry(event.target);
            }
          },
          list: Twinkle.protect.protectionLengths
          // Default (indefinite) set after render
        });
        form.append({
          type: "header",
          label: ""
          // horizontal rule
        });
        form.append({
          type: "input",
          name: "reason",
          label: "理由（保护日志）",
          size: 60
        });
        const query = {
          action: "query",
          prop: "revisions|info|imageinfo",
          rvprop: "size|user",
          inprop: "protection",
          format: "json"
        };
        if (mw.config.get("wgNamespaceNumber") === 14) {
          query.generator = "categorymembers";
          query.gcmtitle = mw.config.get("wgPageName");
          query.gcmlimit = Twinkle.getPref("batchMax");
        } else if (mw.config.get("wgCanonicalSpecialPageName") === "Prefixindex") {
          query.generator = "allpages";
          query.gapnamespace = mw.util.getParamValue("namespace") || document.querySelectorAll("select[name=namespace]")[0].value;
          query.gapprefix = mw.util.getParamValue("prefix") || document.querySelectorAll("input[name=prefix]")[0].value;
          query.gaplimit = Twinkle.getPref("batchMax");
        } else {
          query.generator = "links";
          query.titles = mw.config.get("wgPageName");
          query.gpllimit = Twinkle.getPref("batchMax");
        }
        const statusdiv = document.createElement("div");
        statusdiv.style.padding = "15px";
        Window.setContent(statusdiv);
        Morebits.status.init(statusdiv);
        Window.display();
        const statelem = new Morebits.status("抓取页面列表");
        const qiuwen_api = new Morebits.wiki.api("加载中……", query, (apiobj) => {
          const response = apiobj.getResponse();
          const pages = response.query && response.query.pages || [];
          const list = [];
          pages.sort(Twinkle.sortByNamespace);
          var _iterator65 = _createForOfIteratorHelper(pages), _step65;
          try {
            for (_iterator65.s(); !(_step65 = _iterator65.n()).done; ) {
              const page = _step65.value;
              const metadata = [];
              const missing = !!page.missing;
              let editProt;
              if (missing) {
                metadata[metadata.length] = "页面不存在";
                editProt = page.protection.findLast((protection) => {
                  return protection.type === "create" && protection.level === "sysop";
                });
              } else {
                if (page.redirect) {
                  metadata[metadata.length] = "重定向";
                }
                if (page.ns === 6) {
                  metadata[metadata.length] = ("上传者：".concat(page.imageinfo[0].user), "最后编辑者：".concat(page.revisions[0].user));
                } else {
                  metadata[metadata.length] = "".concat(mw.language.convertNumber(page.revisions[0].size), "字节");
                }
                editProt = page.protection.findLast((protection) => {
                  return protection.type === "edit" && protection.level === "sysop";
                });
              }
              if (editProt) {
                metadata[metadata.length] = "".concat(missing ? "白纸" : "", "全保护").concat(editProt.expiry === "infinity" ? "（永久）" : "（".concat(new Morebits.date(editProt.expiry).calendar("utc"), " (UTC)过期）"));
              }
              const {
                title
              } = page;
              list[list.length] = {
                label: title + (metadata.length > 0 ? " (".concat(metadata.join("; "), ")") : ""),
                value: title,
                checked: true,
                style: editProt ? "color: #f00" : ""
              };
            }
          } catch (err) {
            _iterator65.e(err);
          } finally {
            _iterator65.f();
          }
          form.append({
            type: "header",
            label: "待保护页面"
          });
          form.append({
            type: "button",
            label: "全选",
            event: (event) => {
              $(Morebits.quickForm.getElements(event.target.form, "pages")).prop("checked", true);
            }
          });
          form.append({
            type: "button",
            label: "全不选",
            event: (event) => {
              $(Morebits.quickForm.getElements(event.target.form, "pages")).prop("checked", false);
            }
          });
          form.append({
            type: "checkbox",
            name: "pages",
            shiftClickSupport: true,
            list
          });
          form.append({
            type: "submit"
          });
          const result = form.render();
          Window.setContent(result);
          result.editexpiry.value = "2 days";
          result.moveexpiry.value = "2 days";
          result.createexpiry.value = "infinity";
          var _iterator66 = _createForOfIteratorHelper(Morebits.quickForm.getElements(result, "个页面")), _step66;
          try {
            for (_iterator66.s(); !(_step66 = _iterator66.n()).done; ) {
              const links = _step66.value;
              Twinkle.generateArrowLinks(links);
            }
          } catch (err) {
            _iterator66.e(err);
          } finally {
            _iterator66.f();
          }
        }, statelem);
        qiuwen_api.post();
      };
      Twinkle.batchprotect.currentProtectCounter = 0;
      Twinkle.batchprotect.currentprotector = 0;
      Twinkle.batchprotect.callback.evaluate = (event) => {
        Morebits.wiki.actionCompleted.notice = "批量保护完成";
        const form = event.target;
        const numProtected = $(Morebits.quickForm.getElements(form, "个页面")).filter((_index, element) => {
          return element.checked && element.nextElementSibling.style.color === "#f00";
        }).length;
        if (numProtected > 0 && !confirm("您即将对".concat(mw.language.convertNumber(numProtected), "个全保护页面进行操作。您确定吗？"))) {
          return;
        }
        const input = Morebits.quickForm.getInputData(form);
        if (!input.reason) {
          void mw.notify("您必须给出一个理由。", {
            type: "warn",
            tag: "twinklebatchprotect"
          });
          return;
        }
        Morebits.simpleWindow.setButtonsEnabled(false);
        Morebits.status.init(form);
        if (input.pages.length === 0) {
          Morebits.status.error("Error", "待保护页面不存在，程序终止");
          return;
        }
        const batchOperation = new Morebits.batchOperation("应用保护设置");
        batchOperation.setOption("chunkSize", Twinkle.getPref("batchChunks"));
        batchOperation.setOption("preserveIndividualStatusLines", true);
        batchOperation.setPageList(input.pages);
        batchOperation.run((pageName) => {
          const query = {
            action: "query",
            titles: pageName,
            format: "json"
          };
          const qiuwen_api = new Morebits.wiki.api("正在检查页面“".concat(pageName, "”是否存在"), query, Twinkle.batchprotect.callbacks.main, null, batchOperation.workerFailure);
          qiuwen_api.params = {
            page: pageName,
            batchOperation,
            ...input
          };
          qiuwen_api.post();
        });
      };
      Twinkle.batchprotect.callbacks = {
        main: (apiobj) => {
          const response = apiobj.getResponse();
          if (response.query.normalized) {
            apiobj.params.page = response.query.normalized[0].to;
          }
          const exists = !response.query.pages[0].missing;
          const page = new Morebits.wiki.page(apiobj.params.page, "正在保护".concat(apiobj.params.page));
          let takenAction = false;
          if (exists && apiobj.params.editmodify) {
            page.setEditProtection(apiobj.params.editlevel, apiobj.params.editexpiry);
            takenAction = true;
          }
          if (exists && apiobj.params.movemodify) {
            page.setMoveProtection(apiobj.params.movelevel, apiobj.params.moveexpiry);
            takenAction = true;
          }
          if (!exists && apiobj.params.createmodify) {
            page.setCreateProtection(apiobj.params.createlevel, apiobj.params.createexpiry);
            takenAction = true;
          }
          if (!takenAction) {
            Morebits.status.warn("正在保护“".concat(apiobj.params.page), "”页面".concat(exists ? "存在" : "不存在", "；无事可做，跳过"));
            apiobj.params.batchOperation.workerFailure(apiobj);
            return;
          }
          page.setEditSummary(apiobj.params.reason);
          page.setChangeTags(Twinkle.changeTags);
          page.protect(apiobj.params.batchOperation.workerSuccess, apiobj.params.batchOperation.workerFailure);
        }
      };
      Twinkle.addInitCallback(Twinkle.batchprotect, "batchprotect");
    })(jQuery);
  }
});
//! src/Twinkle/modules/twinkleclose.js
var twinkleclose_exports = {};
var init_twinkleclose = __esm({
  "src/Twinkle/modules/twinkleclose.js"() {
    "use strict";
    /*! Twinkle.js - twinkleclose.js */
    (function twinkleclose($) {
      const $body = $("body");
      Twinkle.close = () => {
        if (Twinkle.getPref("XfdClose") === "hide" || !/^Qiuwen([_ ]talk)?:存废讨论\/记录(?:\/\d+){3}$/.test(mw.config.get("wgPageName"))) {
          return;
        }
        mw.hook("wikipage.content").add((item) => {
          if (item.attr("id") === "mw-content-text") {
            Twinkle.close.addLinks();
          }
        });
      };
      Twinkle.close.addLinks = () => {
        const spanTag = (color, content) => {
          const span = document.createElement("span");
          span.style.color = color;
          span.appendChild(document.createTextNode(content));
          return span;
        };
        $body.find("h1:has(.mw-headline),h2:has(.mw-headline),h3:has(.mw-headline),h4:has(.mw-headline),h5:has(.mw-headline),h6:has(.mw-headline)", "#bodyContent").each((index, element) => {
          element.dataset.section = index + 1;
        });
        const selector = ":has(.mw-headline a:only-of-type):not(:has(+ div.NavFrame))";
        const titles = $body.find("#bodyContent").find("h2".concat(selector, ":not(:has(+ p + h3)), h3").concat(selector));
        const delNode = document.createElement("strong");
        const delLink = document.createElement("a");
        delLink.appendChild(spanTag("Black", "["));
        delLink.appendChild(spanTag("Red", window.wgULS("关闭讨论", "關閉討論")));
        delLink.appendChild(spanTag("Black", "]"));
        delNode.appendChild(delLink);
        var _iterator67 = _createForOfIteratorHelper(titles), _step67;
        try {
          for (_iterator67.s(); !(_step67 = _iterator67.n()).done; ) {
            const current = _step67.value;
            const headlinehref = $(current).find(".mw-headline a:not(.ext-discussiontools-init-section-subscribe-link)").attr("href");
            if (headlinehref !== void 0) {
              let title = null;
              if (headlinehref.includes("redlink=1")) {
                title = headlinehref.slice(19, -22);
              } else {
                const m = headlinehref.match(/\/wiki\/([^?]+)/, "$1");
                if (m !== null) {
                  [, title] = m;
                }
              }
              if (title !== null) {
                title = decodeURIComponent(title);
                title = title.replace(/_/g, " ");
                const pagenotexist = $(current).find(".mw-headline a").hasClass("new");
                const {
                  section
                } = current.dataset;
                const [node] = current.querySelectorAll(".mw-headline");
                node.appendChild(document.createTextNode(" "));
                const tmpNode = delNode.cloneNode(true);
                tmpNode.firstChild.href = "#".concat(section);
                $(tmpNode.firstChild).on("click", () => {
                  Twinkle.close.callback(title, section, pagenotexist);
                  return false;
                });
                node.appendChild(tmpNode);
              }
            }
          }
        } catch (err) {
          _iterator67.e(err);
        } finally {
          _iterator67.f();
        }
      };
      Twinkle.close.codes = [{
        key: window.wgULS("请求无效", "請求無效"),
        value: {
          ir: {
            label: window.wgULS("请求无效", "請求無效"),
            action: "keep"
          },
          rep: {
            label: window.wgULS("重复提出，无效", "重複提出，無效"),
            action: "keep"
          },
          ne: {
            label: window.wgULS("目标页面或文件不存在，无效", "目標頁面或檔案不存在，無效"),
            action: "keep"
          },
          nq: {
            label: window.wgULS("提删者未获取提删资格，无效", "提刪者未取得提刪資格，無效"),
            action: "keep"
          }
        }
      }, {
        key: "保留",
        value: {
          k: {
            label: "保留",
            action: "keep",
            adminonly: true
          },
          sk: {
            label: "快速保留",
            action: "keep"
          },
          tk: {
            label: window.wgULS("暂时保留，改挂维护模板（关注度等）", "暫時保留，改掛維護模板（關注度等）"),
            value: window.wgULS("暂时保留", "暫時保留"),
            action: "keep"
          },
          rr: {
            label: window.wgULS("请求理由消失", "請求理由消失"),
            action: "keep",
            selected: Twinkle.getPref("XfdClose") === "nonadminonly"
          },
          dan: {
            label: window.wgULS("删后重建", "刪後重建"),
            action: "keep",
            adminonly: true
          }
        }
      }, {
        key: window.wgULS("删除", "刪除"),
        value: {
          d: {
            label: window.wgULS("删除", "刪除"),
            action: "del",
            adminonly: true,
            selected: Twinkle.getPref("XfdClose") === "all"
          },
          ic: {
            label: window.wgULS("图像因侵权被删", "圖像因侵權被刪"),
            action: "del",
            adminonly: true
          }
        }
      }, {
        key: window.wgULS("快速删除", "快速刪除"),
        value: {
          sd: {
            label: window.wgULS("快速删除", "快速刪除"),
            action: "del"
          },
          lssd: {
            label: window.wgULS("无来源或著作权信息，快速删除", "無來源或版權資訊，快速刪除"),
            action: "del"
          },
          svg: {
            label: window.wgULS("已改用SVG图形，快速删除", "已改用SVG圖形，快速刪除"),
            action: "del"
          },
          drep: {
            label: window.wgULS("多次被删除，条目锁定", "多次被刪除，條目鎖定"),
            action: "del",
            adminonly: true
          }
        }
      }, {
        key: window.wgULS("其他处理方法", "其他處理方法"),
        value: {
          c: {
            label: window.wgULS("转交侵权", "轉交侵權"),
            action: "noop"
          },
          r: {
            label: "重定向",
            action: "keep",
            adminonly: true
          },
          cr: {
            label: window.wgULS("分类重定向", "分類重定向"),
            action: "keep",
            adminonly: true
          },
          m: {
            label: window.wgULS("移动", "移動"),
            action: "keep",
            adminonly: true
          },
          merge: {
            label: window.wgULS("并入", "併入"),
            action: "keep",
            adminonly: true
          },
          mergeapproved: {
            label: window.wgULS("允许并入", "允許併入"),
            action: "keep",
            adminonly: true
          },
          nc: {
            label: window.wgULS("无共识暂时保留", "無共識暫時保留"),
            value: window.wgULS("无共识", "無共識"),
            action: "keep"
          }
        }
      }];
      Twinkle.close.callback = (title, section, noop) => {
        const Window = new Morebits.simpleWindow(410, 200);
        Window.setTitle("关闭存废讨论 · ".concat(title));
        Window.setScriptName("Twinkle");
        Window.addFooterLink("存废讨论设置", "H:TW/PREF#关闭存废讨论");
        Window.addFooterLink("Twinkle帮助", "H:TW/DOC#关闭存废讨论");
        const form = new Morebits.quickForm(Twinkle.close.callback.evaluate);
        form.append({
          type: "select",
          label: "处理结果：",
          name: "sub_group",
          event: Twinkle.close.callback.change_code
        });
        form.append({
          type: "input",
          name: "sdreason",
          label: "速删理由：",
          tooltip: "用于删除日志，使用{{delete}}的参数格式，例如 A1 或 A1|G1",
          hidden: true
        });
        form.append({
          type: "input",
          name: "remark",
          label: "补充说明："
        });
        form.append({
          type: "checkbox",
          list: [{
            label: "只关闭讨论，不进行其他操作",
            value: "noop",
            name: "noop",
            event: Twinkle.close.callback.change_operation,
            checked: noop
          }]
        });
        if (new mw.Title(title).namespace % 2 === 0 && new mw.Title(title).namespace !== 2) {
          form.append({
            type: "checkbox",
            list: [{
              label: "删除关联的讨论页",
              value: "talkpage",
              name: "talkpage",
              tooltip: "删除时附带删除此页面的讨论页。",
              checked: true,
              event: (e) => {
                e.stopPropagation();
              }
            }]
          });
        }
        form.append({
          type: "checkbox",
          list: [{
            label: "删除重定向页",
            value: "redirects",
            name: "redirects",
            tooltip: "删除到此页的重定向。",
            checked: true,
            event: (e) => {
              e.stopPropagation();
            }
          }]
        });
        form.append({
          type: "submit"
        });
        const result = form.render();
        Window.setContent(result);
        Window.display();
        const [sub_group] = result.querySelectorAll("select");
        const resultData = {
          title,
          section: Number.parseInt(section, 10),
          noop
        };
        $(result).data("resultData", resultData);
        const createEntries = (contents, container) => {
          for (var _i16 = 0, _Object$entries9 = Object.entries(contents); _i16 < _Object$entries9.length; _i16++) {
            const [itemKey, itemProperties] = _Object$entries9[_i16];
            const key = typeof itemKey === "string" ? itemKey : itemProperties.value;
            const elem = new Morebits.quickForm.element({
              type: "option",
              label: "".concat(key, "：").concat(itemProperties.label),
              value: key,
              selected: itemProperties.selected,
              disabled: Twinkle.getPref("XfdClose") !== "all" && itemProperties.adminonly || itemProperties.disabled
            });
            const elemRendered = container.appendChild(elem.render());
            $(elemRendered).data("messageData", itemProperties);
          }
        };
        var _iterator68 = _createForOfIteratorHelper(Twinkle.close.codes), _step68;
        try {
          for (_iterator68.s(); !(_step68 = _iterator68.n()).done; ) {
            const group = _step68.value;
            let optgroup = new Morebits.quickForm.element({
              type: "optgroup",
              label: group.key
            });
            optgroup = optgroup.render();
            sub_group.appendChild(optgroup);
            createEntries(group.value, optgroup);
          }
        } catch (err) {
          _iterator68.e(err);
        } finally {
          _iterator68.f();
        }
        const event = document.createEvent("Event");
        event.initEvent("change", true, true);
        result.sub_group.dispatchEvent(event);
      };
      Twinkle.close.callback.change_operation = (e) => {
        const noop = e.target.checked;
        const code = e.target.form.sub_group.value;
        const messageData = $(e.target.form.sub_group).find('option[value="'.concat(code, '"]')).data("messageData");
        const {
          talkpage
        } = e.target.form;
        const {
          redirects
        } = e.target.form;
        if (noop || messageData.action === "keep") {
          if (talkpage) {
            talkpage.checked = false;
            talkpage.disabled = true;
          }
          redirects.checked = false;
          redirects.disabled = true;
        } else {
          if (talkpage) {
            talkpage.checked = true;
            talkpage.disabled = false;
          }
          redirects.checked = true;
          redirects.disabled = false;
        }
      };
      Twinkle.close.callback.change_code = (e) => {
        const resultData = $(e.target.form).data("resultData");
        const messageData = $(e.target).find('option[value="'.concat(e.target.value, '"]')).data("messageData");
        const {
          noop
        } = e.target.form;
        const {
          talkpage
        } = e.target.form;
        const {
          redirects
        } = e.target.form;
        if (resultData.noop || messageData.action === "noop") {
          noop.checked = true;
          noop.disabled = true;
          if (talkpage) {
            talkpage.checked = false;
            talkpage.disabled = true;
          }
          redirects.checked = false;
          redirects.disabled = true;
        } else {
          noop.checked = false;
          noop.disabled = false;
          if (messageData.action === "keep") {
            if (talkpage) {
              talkpage.checked = false;
              talkpage.disabled = true;
            }
            redirects.checked = false;
            redirects.disabled = true;
          } else {
            if (talkpage) {
              talkpage.checked = true;
              talkpage.disabled = false;
            }
            redirects.checked = true;
            redirects.disabled = false;
          }
          if (e.target.value === "sd") {
            e.target.form.sdreason.parentElement.removeAttribute("hidden");
          } else {
            e.target.form.sdreason.parentElement.setAttribute("hidden", "");
          }
        }
      };
      Twinkle.close.callback.evaluate = (e) => {
        const code = e.target.sub_group.value;
        const resultData = $(e.target).data("resultData");
        const messageData = $(e.target.sub_group).find('option[value="'.concat(code, '"]')).data("messageData");
        const noop = e.target.noop.checked;
        const talkpage = e.target.talkpage && e.target.talkpage.checked;
        const redirects = e.target.redirects.checked;
        const params = {
          title: resultData.title,
          code,
          remark: e.target.remark.value,
          sdreason: e.target.sdreason.value,
          section: resultData.section,
          parentSection: resultData.parentSection,
          messageData,
          talkpage,
          redirects
        };
        Morebits.simpleWindow.setButtonsEnabled(false);
        Morebits.status.init(e.target);
        Morebits.wiki.actionCompleted.notice = "操作完成";
        if (noop || messageData.action === "noop") {
          Twinkle.close.callbacks.talkend(params);
        } else {
          switch (messageData.action) {
            case "del":
              Twinkle.close.callbacks.del(params);
              break;
            case "keep": {
              const qiuwen_page = new Morebits.wiki.page(params.title, "移除存废讨论模板");
              qiuwen_page.setCallbackParameters(params);
              qiuwen_page.load(Twinkle.close.callbacks.keep);
              break;
            }
            default:
              void mw.notify("关闭存废讨论：未定义 ".concat(code), {
                type: "warn",
                tag: "twinkleclose"
              });
          }
        }
      };
      Twinkle.close.callbacks = {
        del: (params) => {
          let query;
          let qiuwen_api;
          Morebits.wiki.addCheckpoint();
          const page = new Morebits.wiki.page(params.title, "删除页面");
          if (params.code === "sd") {
            Twinkle.speedy.callbacks.parseWikitext(params.title, "{{delete|".concat(params.sdreason, "}}"), (reason) => {
              reason = prompt("输入删除理由，或点击确定以接受自动生成的：", reason);
              if (reason === null) {
                page.getStatusElement().warn("没有执行删除");
                Twinkle.close.callbacks.talkend(params);
              } else {
                page.setEditSummary(reason);
                page.setChangeTags(Twinkle.changeTags);
                page.deletePage(() => {
                  page.getStatusElement().info("完成");
                  Twinkle.close.callbacks.talkend(params);
                });
              }
            });
          } else {
            page.setEditSummary("存废讨论通过：[[".concat(mw.config.get("wgPageName"), "#").concat(params.title, "]]"));
            page.setChangeTags(Twinkle.changeTags);
            page.deletePage(() => {
              page.getStatusElement().info("完成");
              Twinkle.close.callbacks.talkend(params);
            });
          }
          if (params.redirects) {
            query = {
              action: "query",
              titles: params.title,
              prop: "redirects",
              rdlimit: "max"
              // 500 is max for normal users, 5000 for bots and sysops
            };
            qiuwen_api = new Morebits.wiki.api("正在获取重定向", query, Twinkle.close.callbacks.deleteRedirectsMain);
            qiuwen_api.params = params;
            qiuwen_api.post();
          }
          if (params.talkPage) {
            const pageTitle = mw.Title.newFromText(params.title);
            if (pageTitle && pageTitle.namespace % 2 === 0 && pageTitle.namespace !== 2) {
              pageTitle.namespace++;
              query = {
                action: "query",
                titles: pageTitle.toText()
              };
              qiuwen_api = new Morebits.wiki.api("正在检查讨论页面是否存在", query, Twinkle.close.callbacks.deleteTalk);
              qiuwen_api.params = params;
              qiuwen_api.apiobj.params.talkPage = pageTitle.toText();
              qiuwen_api.post();
            }
          }
          Morebits.wiki.removeCheckpoint();
        },
        deleteRedirectsMain: (apiobj) => {
          const xml = apiobj.responseXML;
          const pages = $(xml).find("rd").map((_index, element) => {
            return $(element).attr("title");
          }).get();
          if (pages.length === 0) {
            return;
          }
          const redirectDeleter = new Morebits.batchOperation(window.wgULS("正在删除到 ", "正在刪除到 ") + apiobj.params.title + window.wgULS(" 的重定向", " 的重新導向"));
          redirectDeleter.setOption("chunkSize", Twinkle.getPref("batchdeleteChunks"));
          redirectDeleter.setPageList(pages);
          redirectDeleter.run((pageName) => {
            const qiuwen_page = new Morebits.wiki.page(pageName, window.wgULS("正在删除 ", "正在刪除 ") + pageName);
            qiuwen_page.setEditSummary("[[QW:CSD#G5|G5]]：".concat(window.wgULS("指向已删页面“", "指向已刪頁面「")).concat(apiobj.params.title).concat(window.wgULS("”的重定向", "」的重新導向")));
            qiuwen_page.setChangeTags(Twinkle.changeTags);
            qiuwen_page.deletePage(redirectDeleter.workerSuccess, redirectDeleter.workerFailure);
          });
        },
        deleteTalk: (apiobj) => {
          const xml = apiobj.responseXML;
          const exists = $(xml).find("page:not([missing])").length > 0;
          if (!exists) {
            return;
          }
          const page = new Morebits.wiki.page(apiobj.params.talkPage, window.wgULS("正在删除页面 ", "正在刪除頁面 ") + apiobj.params.title + window.wgULS(" 的讨论页", " 的討論頁"));
          page.setEditSummary("[[QW:CSD#G5|G5]]：".concat(window.wgULS("已删页面“", "已刪頁面「")).concat(apiobj.params.title).concat(window.wgULS("”的[[Help:讨论页|讨论页]]", "」的[[Help:討論頁|討論頁]]")));
          page.setChangeTags(Twinkle.changeTags);
          page.deletePage();
        },
        keep: (pageobj) => {
          const statelem = pageobj.getStatusElement();
          if (!pageobj.exists()) {
            statelem.error("页面不存在，可能已被删除");
            return;
          }
          const text = pageobj.getPageText();
          const params = pageobj.getCallbackParameters();
          const pagetitle = mw.Title.newFromText(params.title);
          if (pagetitle.getNamespaceId() % 2 === 0) {
            const talkpagetitle = new mw.Title(pagetitle.getMainText(), pagetitle.getNamespaceId() + 1);
            const talkpage = new Morebits.wiki.page(talkpagetitle.toString(), window.wgULS("标记讨论页", "標記討論頁"));
            const reason = params.messageData.value || params.messageData.label;
            const vfdkept = "{{Old vfd multi|".concat(mw.config.get("wgPageName").split("/").slice(2).join("/"), "|").concat(reason, "}}\n");
            talkpage.setPrependText(vfdkept);
            talkpage.setEditSummary("[[".concat(mw.config.get("wgPageName"), "#").concat(params.title, "]]：").concat(reason));
            talkpage.setChangeTags(Twinkle.changeTags);
            talkpage.setCreateOption("recreate");
            talkpage.prepend();
          }
          let newtext = text.replace(/<noinclude>\s*\{\{([rsaiftcmv]fd)(\|(?:\{\{[^{}]*\}\}|[^{}])*)?\}\}\s*<\/noinclude>\s*/gi, "");
          newtext = newtext.replace(/\{\{([rsaiftcmv]fd)(\|(?:\{\{[^{}]*\}\}|[^{}])*)?\}\}\s*/gi, "");
          if (params.code !== "tk") {
            newtext = newtext.replace(/{{(notability|fame|mair|知名度|重要性|显著性|顯著性|知名度不足|人物重要性|重要性不足|notable|关注度|关注度不足|關注度|關注度不足|重要|重要度)(\|(?:{{[^{}]*}}|[^{}])*)?}}\n*/gi, "");
            newtext = newtext.replace(/{{(substub|小小作品|cod|小小條目|小小条目)(\|(?:{{[^{}]*}}|[^{}])*)?}}\n*/gi, "");
          }
          if (params.code === "mergeapproved") {
            const tag = "{{".concat("subst:").concat("Merge approved/auto|discuss=".concat(mw.config.get("wgPageName"), "#").concat(params.title, "}}\n"));
            const qiuwen_page = new Morebits.wikitext.page(newtext);
            newtext = qiuwen_page.insertAfterTemplates(tag, Twinkle.hatnoteRegex).getText();
          }
          if (newtext === text) {
            statelem.warn("未找到存废讨论模板，可能已被移除");
            Twinkle.close.callbacks.talkend(params);
            return;
          }
          const editsummary = "存废讨论关闭：[[".concat(mw.config.get("wgPageName"), "#").concat(params.title, "]]");
          pageobj.setPageText(newtext);
          pageobj.setEditSummary(editsummary);
          pageobj.setChangeTags(Twinkle.changeTags);
          pageobj.setCreateOption("nocreate");
          pageobj.save(Twinkle.close.callbacks.keepComplete);
        },
        keepComplete: (pageobj) => {
          const params = pageobj.getCallbackParameters();
          Twinkle.close.callbacks.talkend(params);
        },
        talkend: (params) => {
          const qiuwen_page = new Morebits.wiki.page(mw.config.get("wgPageName"), "关闭讨论");
          qiuwen_page.setCallbackParameters(params);
          qiuwen_page.setPageSection(params.section);
          qiuwen_page.load(Twinkle.close.callbacks.saveTalk);
        },
        saveTalk: (pageobj) => {
          const statelem = pageobj.getStatusElement();
          let text = pageobj.getPageText();
          const params = pageobj.getCallbackParameters();
          if (text.includes("{{delh")) {
            statelem.error("讨论已被关闭");
            return;
          }
          const sbegin = text.includes("<section begin=backlog />");
          const send = text.includes("<section end=backlog />");
          text = text.replace("\n<section begin=backlog />", "");
          text = text.replace("\n<section end=backlog />", "");
          const bar = text.split("\n----\n");
          const split = bar[0].split("\n");
          text = "".concat(split[0], "\n{{delh|").concat(params.code, "}}\n");
          text += split.slice(1).join("\n");
          const reason = params.messageData.value || params.messageData.label;
          text += "\n<hr>\n: ".concat(reason);
          if (params.remark) {
            text += "：".concat(Morebits.string.appendPunctuation(params.remark));
          } else {
            text += "。";
          }
          if (!Morebits.userIsSysop) {
            text += "{{".concat("subst:").concat("NAC}}");
          }
          text += "--~~".concat("~~", "\n{{delf}}");
          if (bar[1]) {
            text += "\n----\n".concat(bar.slice(1).join("\n----\n"));
          }
          if (send) {
            text += "\n<section end=backlog />";
          }
          if (sbegin) {
            text += "\n<section begin=backlog />";
          }
          pageobj.setPageText(text);
          pageobj.setEditSummary("/* ".concat(params.title, " */ ").concat(reason));
          pageobj.setChangeTags(Twinkle.changeTags);
          pageobj.setCreateOption("nocreate");
          pageobj.save(Twinkle.close.callbacks.disableLink);
        },
        disableLink: (pageobj) => {
          const params = pageobj.getCallbackParameters();
          $("strong a[href=#".concat(params.section, "] span")).css("color", "#808080");
        }
      };
      Twinkle.addInitCallback(Twinkle.close, "close");
    })(jQuery);
  }
});
//! src/Twinkle/modules/twinkleconfig.js
var twinkleconfig_exports = {};
var init_twinkleconfig = __esm({
  "src/Twinkle/modules/twinkleconfig.js"() {
    "use strict";
    /*! Twinkle.js - twinkleconfig.js */
    (function twinkleconfig($) {
      const $body = $("body");
      Twinkle.config = {};
      Twinkle.config.watchlistEnums = {
        yes: window.wgULS("永久加入到监视列表", "永久加入到監視清單"),
        no: window.wgULS("不加入到监视列表", "不加入到監視清單"),
        default: window.wgULS("遵守站点设置", "遵守站點設定"),
        "1 week": window.wgULS("加入到监视列表1周", "加入到監視清單1週"),
        "1 month": window.wgULS("加入到监视列表1个月", "加入到監視清單1個月"),
        "3 months": window.wgULS("加入到监视列表3个月", "加入到監視清單3個月"),
        "6 months": window.wgULS("加入到监视列表6个月", "加入到監視清單6個月")
      };
      Twinkle.config.commonSets = {
        csdCriteria: {
          db: window.wgULS("自定义理由", "自訂理由"),
          g1: "G1",
          g2: "G2",
          g3: "G3",
          g4: "G4",
          g5: "G5",
          g6: "G6",
          g7: "G7",
          g8: "G8",
          g9: "G9",
          a1: "A1",
          a2: "A2",
          a3: "A3",
          o1: "O1",
          o2: "O2",
          o3: "O3",
          f1: "F1",
          f2: "F2",
          f3: "F3",
          f4: "F4",
          f5: "F5",
          r1: "R1",
          r2: "R2"
        },
        csdCriteriaDisplayOrder: ["db", "g1", "g2", "g3", "g4", "g5", "g6", "g7", "g8", "g9", "a1", "a2", "a3", "o1", "o2", "o3", "f1", "f2", "f3", "f4", "f5", "r1", "r2"],
        csdCriteriaNotification: {
          db: window.wgULS("自定义理由", "自訂理由"),
          g1: "G1",
          g2: "G2",
          g3: "G3",
          g4: "G4",
          g5: "G5",
          g6: "G6",
          g7: "G7",
          g8: "G8",
          g9: "G9",
          a1: "A1",
          a2: "A2",
          a3: "A3",
          o1: "O1",
          o2: "O2",
          o3: "O3",
          f1: "F1",
          f2: "F2",
          f3: "F3",
          f4: "F4",
          f5: "F5",
          r1: "R1",
          r2: "R2"
        },
        csdCriteriaNotificationDisplayOrder: ["db", "g1", "g2", "g3", "g4", "g5", "g6", "g7", "g8", "g9", "a1", "a2", "a3", "o1", "o2", "o3", "f1", "f2", "f3", "f4", "f5", "r1", "r2"],
        csdAndDICriteria: {
          db: window.wgULS("自定义理由", "自訂理由"),
          g1: "G1",
          g2: "G2",
          g3: "G3",
          g4: "G4",
          g5: "G5",
          g6: "G6",
          g7: "G7",
          g8: "G8",
          g9: "G9",
          a1: "A1",
          a2: "A2",
          a3: "A3",
          o1: "O1",
          o2: "O2",
          o3: "O3",
          f1: "F1",
          f2: "F2",
          f3: "F3",
          f4: "F4",
          f5: "F5",
          r1: "R1",
          r2: "R2"
        },
        csdAndDICriteriaDisplayOrder: ["db", "g1", "g2", "g3", "g4", "g5", "g6", "g7", "g8", "g9", "a1", "a2", "a3", "o1", "o2", "o3", "f1", "f2", "f3", "f4", "f5", "r1", "r2"],
        xfdCriteria: {
          delete: window.wgULS("删除", "刪除"),
          merge: window.wgULS("合并", "合併"),
          fwdcsd: window.wgULS("转交自快速删除候选", "轉交自快速刪除候選"),
          fame: window.wgULS("批量关注度提删", "批次關注度提刪"),
          substub: window.wgULS("批量小小作品提删", "批次小小作品提刪"),
          batch: window.wgULS("批量其他提删", "批次其他提刪")
        },
        xfdCriteriaDisplayOrder: ["delete", "merge", "fwdcsd", "fame", "substub", "batch"],
        namespacesNoSpecial: {
          0: window.wgULS("（条目）", "（條目）"),
          1: "Talk",
          2: "User",
          3: "User talk",
          4: "Qiuwen",
          5: "Qiuwen talk",
          6: "File",
          7: "File talk",
          8: "MediaWiki",
          9: "MediaWiki talk",
          10: "Template",
          11: "Template talk",
          12: "Help",
          13: "Help talk",
          14: "Category",
          15: "Category talk",
          118: "Draft",
          119: "Draft talk",
          204: "NEA",
          205: "NEA talk",
          206: "Addendum",
          207: "Addendum talk",
          828: "Module",
          829: "Module talk"
        }
      };
      Twinkle.config.sections = [{
        title: window.wgULS("常规", "常規"),
        module: "general",
        preferences: [
          // TwinkleConfig.userTalkPageMode may take arguments:
          // 'window': open a new window, remember the opened window
          // 'tab': opens in a new tab, if possible.
          // 'blank': force open in a new window, even if such a window exists
          {
            name: "userTalkPageMode",
            label: window.wgULS("当要打开用户讨论页时", "當要打開使用者討論頁時"),
            type: "enum",
            enumValues: {
              window: window.wgULS("在窗口中，替换成其它用户对话页", "在當前分頁，替換成其它用戶討論頁"),
              tab: window.wgULS("在新标签页中", "在新分頁中"),
              blank: window.wgULS("在全新的窗口中", "在新視窗中")
            }
          },
          // TwinkleConfig.dialogLargeFont (boolean)
          {
            name: "dialogLargeFont",
            label: window.wgULS("在Twinkle对话框中使用大号字体", "在Twinkle對話方塊中使用大號字型"),
            type: "boolean"
          },
          // Twinkle.config.disabledModules (array)
          {
            name: "disabledModules",
            label: window.wgULS("关闭指定的Twinkle模块", "關閉指定的Twinkle模組"),
            helptip: window.wgULS("您在此选择的功能将无法使用，取消选择以重新启用功能。", "您在此選擇的功能將無法使用，取消選擇以重新啟用功能。"),
            type: "set",
            setValues: {
              arv: window.wgULS("告状", "告狀"),
              warn: "警告",
              block: window.wgULS("封禁", "封鎖"),
              talkback: "通告",
              speedy: window.wgULS("速删", "速刪"),
              copyvio: window.wgULS("侵权", "侵權"),
              xfd: window.wgULS("提删", "提刪"),
              image: window.wgULS("图权", "圖權"),
              protect: window.wgULS("保护", "保護"),
              tag: window.wgULS("标记", "標記"),
              stub: "小作品",
              diff: window.wgULS("差异", "差異"),
              unlink: window.wgULS("链入", "連入"),
              fluff: "回退"
            }
          },
          // Twinkle.config.disabledSysopModules (array)
          {
            name: "disabledSysopModules",
            label: window.wgULS("关闭指定的Twinkle管理员模块", "關閉指定的Twinkle管理員模組"),
            helptip: window.wgULS("您在此选择的功能将无法使用，取消选择以重新启用功能。", "您在此選擇的功能將無法使用，取消選擇以重新啟用功能。"),
            adminOnly: true,
            type: "set",
            setValues: {
              batchdelete: window.wgULS("批删", "批刪"),
              batchundelete: window.wgULS("批复", "批復")
            }
          }
        ]
      }, {
        title: window.wgULS("告状", "告狀"),
        module: "arv",
        preferences: [{
          name: "spiWatchReport",
          label: window.wgULS("发起傀儡调查时加入到监视列表", "發起傀儡調查時加入到監視清單"),
          type: "enum",
          enumValues: Twinkle.config.watchlistEnums
        }]
      }, {
        title: window.wgULS("封禁用户", "封鎖使用者"),
        module: "block",
        adminOnly: true,
        preferences: [
          // TwinkleConfig.defaultToBlock64 (boolean)
          // Whether to default to just blocking the /64 on or off
          {
            name: "defaultToBlock64",
            label: window.wgULS("对于IPv6地址，默认选择封禁/64段", "對於IPv6地址，預設選擇封鎖/64段"),
            type: "boolean"
          },
          // TwinkleConfig.defaultToPartialBlocks (boolean)
          // Whether to default partial blocks on or off
          {
            name: "defaultToPartialBlocks",
            label: window.wgULS("打开封禁菜单时默认选择部分封禁", "打開封鎖選單時預設選擇部分封鎖"),
            type: "boolean"
          },
          // TwinkleConfig.watchBlockNotices (string)
          // Watchlist setting for the page which has been dispatched an warning or notice
          {
            name: "watchBlockNotices",
            label: window.wgULS("发送封禁模板时加入用户讨论页到监视列表", "發送封鎖模板時加入使用者討論頁到監視清單"),
            type: "enum",
            enumValues: Twinkle.config.watchlistEnums
          },
          {
            name: "customBlockReasonList",
            label: window.wgULS("自定义封禁理由", "自訂封鎖理由"),
            helptip: window.wgULS("您可以加入常用的封禁理由。自定义的封禁理由会出现在一般的封禁理由下方。", "您可以加入常用的封鎖理由。自訂的封鎖理由會出現在一般的封鎖理由下方。"),
            type: "customList",
            customListValueTitle: window.wgULS("使用封禁模板（默认为 uw-block1）", "使用封鎖模板（預設為 uw-block1）"),
            customListLabelTitle: window.wgULS("“由于…您已被封禁”及封禁日志理由", "「由於…您已被封鎖」及封鎖日誌理由")
          }
        ]
      }, {
        title: window.wgULS("图片删除", "圖片刪除"),
        module: "image",
        preferences: [
          // TwinkleConfig.notifyUserOnDeli (boolean)
          // If the user should be notified after placing a file deletion tag
          {
            name: "notifyUserOnDeli",
            label: window.wgULS("默认勾选“通知创建者”", "預設勾選「通知建立者」"),
            type: "boolean"
          },
          // TwinkleConfig.deliWatchPage (string)
          // The watchlist setting of the page tagged for deletion.
          {
            name: "deliWatchPage",
            label: window.wgULS("标记图片时加入到监视列表", "標記圖片時加入到監視清單"),
            type: "enum",
            enumValues: Twinkle.config.watchlistEnums
          },
          // TwinkleConfig.deliWatchUser (string)
          // The watchlist setting of the user talk page if a notification is placed.
          {
            name: "deliWatchUser",
            label: window.wgULS("标记图片时加入创建者讨论页到监视列表", "標記圖片時加入建立者討論頁到監視清單"),
            type: "enum",
            enumValues: Twinkle.config.watchlistEnums
          }
        ]
      }, {
        title: window.wgULS("保护", "保護"),
        module: "protect",
        preferences: [{
          name: "watchRequestedPages",
          label: window.wgULS("请求保护页面时加入到监视列表", "請求保護頁面時加入到監視清單"),
          type: "enum",
          enumValues: Twinkle.config.watchlistEnums
        }, {
          name: "watchPPTaggedPages",
          label: window.wgULS("标记保护模板时加入到监视列表", "標記保護模板時加入到監視清單"),
          type: "enum",
          enumValues: Twinkle.config.watchlistEnums
        }, {
          name: "watchProtectedPages",
          label: window.wgULS("保护时加入到监视列表", "保護時加入到監視清單"),
          helptip: window.wgULS("若在保护后也标记页面，则使用标记页面的参数设置。", "若在保護後也標記頁面，則使用標記頁面的偏好設定。"),
          adminOnly: true,
          type: "enum",
          enumValues: Twinkle.config.watchlistEnums
        }]
      }, {
        title: "回退",
        // twinklefluff module
        module: "fluff",
        preferences: [
          // TwinkleConfig.autoMenuAfterRollback (bool)
          // Option to automatically open the warning menu if the user talk page is opened post-reversion
          {
            name: "autoMenuAfterRollback",
            label: window.wgULS("在Twinkle回退后自动打开用户讨论页上的Twinkle警告菜单", "在Twinkle回退後自動打開使用者討論頁上的Twinkle警告選單"),
            helptip: window.wgULS("仅在选取下方对应框时才执行", "僅在選取下方對應框時才執行"),
            type: "boolean"
          },
          // TwinkleConfig.openTalkPage (array)
          // What types of actions that should result in opening of talk page
          {
            name: "openTalkPage",
            label: window.wgULS("在这些类型的回退后打开用户讨论页", "在這些類別的回退後打開使用者討論頁"),
            type: "set",
            setValues: {
              norm: window.wgULS("常规回退", "常規回退"),
              vand: window.wgULS("破坏回退", "破壞回退")
            }
          },
          // TwinkleConfig.openTalkPageOnAutoRevert (bool)
          // Defines if talk page should be opened when calling revert from contribs or recent changes pages. If set to true, openTalkPage defines then if talk page will be opened.
          {
            name: "openTalkPageOnAutoRevert",
            label: window.wgULS("在从用户贡献及最近更改中发起回退时打开用户讨论页", "在從使用者貢獻及近期變更中發起回退時打開使用者討論頁"),
            helptip: window.wgULS("当它打开时，依赖上一个设置。", "當它打開時，依賴上一個設定。"),
            type: "boolean"
          },
          // TwinkleConfig.rollbackInPlace (bool)
          //
          {
            name: "rollbackInPlace",
            label: window.wgULS("在从用户贡献及最近更改中发起回退时不刷新页面", "在從使用者貢獻及近期變更中發起回退時不重新整理頁面"),
            helptip: window.wgULS("当它打开时，Twinkle将不会在从用户贡献及最近更改中发起回退时刷新页面，允许您一次性回退多个编辑。", "當它打開時，Twinkle將不會在從使用者貢獻及近期變更中發起回退時重新整理頁面，允許您一次性回退多個編輯。"),
            type: "boolean"
          },
          // TwinkleConfig.markRevertedPagesAsMinor (array)
          // What types of actions that should result in marking edit as minor
          {
            name: "markRevertedPagesAsMinor",
            label: window.wgULS("将这些类型的回退标记为小修改", "將這些類別的回退標記為小修改"),
            type: "set",
            setValues: {
              norm: window.wgULS("常规回退", "常規回退"),
              vand: window.wgULS("破坏回退", "破壞回退"),
              torev: window.wgULS("“恢复此版本”", "「恢復此版本」")
            }
          },
          // TwinkleConfig.watchRevertedPages (array)
          // What types of actions that should result in forced addition to watchlist
          {
            name: "watchRevertedPages",
            label: window.wgULS("把这些类型的回退加入到监视列表", "把這些類別的回退加入到監視清單"),
            type: "set",
            setValues: {
              norm: window.wgULS("常规回退", "常規回退"),
              vand: window.wgULS("破坏回退", "破壞回退"),
              torev: window.wgULS("“恢复此版本”", "「恢復此版本」")
            }
          },
          // TwinkleConfig.watchRevertedExpiry
          // If any of the above items are selected, whether to expire the watch
          {
            name: "watchRevertedExpiry",
            label: window.wgULS("当回退页面时，加入到监视列表的期限", "當回退頁面時，加入到監視清單的期限"),
            type: "enum",
            enumValues: Twinkle.config.watchlistEnums
          },
          // TwinkleConfig.offerReasonOnNormalRevert (boolean)
          // If to offer a prompt for extra summary reason for normal reverts, default to true
          {
            name: "offerReasonOnNormalRevert",
            label: window.wgULS("常规回退时询问理由", "常規回退時詢問理由"),
            helptip: window.wgULS("“常规”回退是中间的那个[回退]链接。", "「常規」回退是中間的那個[回退]連結。"),
            type: "boolean"
          },
          {
            name: "confirmOnFluff",
            label: window.wgULS("回退前要求确认（所有设备）", "回退前要求確認（所有裝置）"),
            helptip: window.wgULS("对于使用移动设备的用户，或者意志不坚定的。", "對於使用行動裝置的使用者，或者意志不堅定的。"),
            type: "boolean"
          },
          // TwinkleConfig.showRollbackLinks (array)
          // Where Twinkle should show rollback links:
          // diff, others, mine, contribs, history, recent
          // Note from TTO: |contribs| seems to be equal to |others| + |mine|, i.e. redundant, so I left it out heres
          {
            name: "showRollbackLinks",
            label: window.wgULS("在这些页面上显示回退链接", "在這些頁面上顯示回退連結"),
            type: "set",
            setValues: {
              diff: window.wgULS("差异", "差異"),
              history: window.wgULS("历史记录", "歷史記錄"),
              others: window.wgULS("其它用户的贡献", "其它使用者的貢獻"),
              mine: window.wgULS("我的贡献", "我的貢獻"),
              recentchanges: window.wgULS("最近更改", "近期變更"),
              recentchangeslinked: window.wgULS("相关更改", "相關變更")
            }
          },
          {
            name: "customRevertSummary",
            label: "回退理由",
            helptip: window.wgULS("在查看差异时可选，仅善意回退、常规回退、恢复此版本", "在檢視差異時可選，僅善意回退、常規回退、恢復此版本"),
            type: "customList",
            customListValueTitle: "理由",
            customListLabelTitle: window.wgULS("显示的文字", "顯示的文字")
          }
        ]
      }, {
        title: window.wgULS("快速删除", "快速刪除"),
        module: "speedy",
        preferences: [
          {
            name: "speedySelectionStyle",
            label: window.wgULS("什么时候执行标记或删除", "什麼時候執行標記或刪除"),
            type: "enum",
            enumValues: {
              buttonClick: window.wgULS("当我点“提交”时", "當我點「提交」時"),
              radioClick: window.wgULS("当我点一个选项时", "當我點一個選項時")
            }
          },
          // TwinkleConfig.watchSpeedyPages (array)
          // Whether to add speedy tagged pages to watchlist
          {
            name: "watchSpeedyPages",
            label: window.wgULS("将以下理由加入到监视列表", "將以下理由加入到監視清單"),
            type: "set",
            setValues: Twinkle.config.commonSets.csdCriteria,
            setDisplayOrder: Twinkle.config.commonSets.csdCriteriaDisplayOrder
          },
          // TwinkleConfig.watchSpeedyExpiry
          // If any of the above items are selected, whether to expire the watch
          {
            name: "watchSpeedyExpiry",
            label: window.wgULS("当标记页面时，加入到监视列表的期限", "當標記頁面時，加入到監視清單的期限"),
            type: "enum",
            enumValues: Twinkle.config.watchlistEnums
          },
          // TwinkleConfig.markSpeedyPagesAsPatrolled (boolean)
          // If, when applying speedy template to page, to mark the page as patrolled (if the page was reached from NewPages)
          {
            name: "markSpeedyPagesAsPatrolled",
            label: window.wgULS("标记时标记页面为已巡查（如可能）", "標記時標記頁面為已巡查（如可能）"),
            type: "boolean"
          },
          // TwinkleConfig.notifyUserOnSpeedyDeletionNomination (array)
          // What types of actions should result that the author of the page being notified of nomination
          {
            name: "notifyUserOnSpeedyDeletionNomination",
            label: window.wgULS("仅在使用以下理由时通知页面创建者", "僅在使用以下理由時通知頁面建立者"),
            helptip: window.wgULS("尽管您在对话框中选择通知，通知仍只会在使用这些理由时发出。", "儘管您在對話方塊中選擇通知，通知仍只會在使用這些理由時發出。"),
            type: "set",
            setValues: Twinkle.config.commonSets.csdCriteriaNotification,
            setDisplayOrder: Twinkle.config.commonSets.csdCriteriaNotificationDisplayOrder
          },
          // TwinkleConfig.promptForSpeedyDeletionSummary (array of strings)
          {
            name: "promptForSpeedyDeletionSummary",
            label: window.wgULS("使用以下理由删除时允许编辑删除理由", "使用以下理由刪除時允許編輯刪除理由"),
            adminOnly: true,
            type: "set",
            setValues: Twinkle.config.commonSets.csdAndDICriteria,
            setDisplayOrder: Twinkle.config.commonSets.csdAndDICriteriaDisplayOrder
          },
          // TwinkleConfig.openUserTalkPageOnSpeedyDelete (array of strings)
          // What types of actions that should result user talk page to be opened when speedily deleting (admin only)
          {
            name: "openUserTalkPageOnSpeedyDelete",
            label: window.wgULS("使用以下理由时打开用户讨论页", "使用以下理由時打開使用者討論頁"),
            adminOnly: true,
            type: "set",
            setValues: Twinkle.config.commonSets.csdAndDICriteria,
            setDisplayOrder: Twinkle.config.commonSets.csdAndDICriteriaDisplayOrder
          },
          // TwinkleConfig.deleteTalkPageOnDelete (boolean)
          // If talk page if exists should also be deleted (CSD G8) when spedying a page (admin only)
          {
            name: "deleteTalkPageOnDelete",
            label: window.wgULS("默认勾选“删除讨论页”", "預設勾選「刪除討論頁」"),
            adminOnly: true,
            type: "boolean"
          },
          {
            name: "deleteRedirectsOnDelete",
            label: window.wgULS("默认勾选“删除重定向”", "預設勾選「刪除重新導向」"),
            adminOnly: true,
            type: "boolean"
          },
          // TwinkleConfig.deleteSysopDefaultToDelete (boolean)
          // Make the CSD screen default to "delete" instead of "tag" (admin only)
          {
            name: "deleteSysopDefaultToDelete",
            label: window.wgULS("默认为直接删除而不是标记", "預設為直接刪除而不是標記"),
            helptip: window.wgULS("若已放置快速删除标记，则永远默认为删除模式。", "若已放置快速刪除標記，則永遠預設為刪除模式。"),
            adminOnly: true,
            type: "boolean"
          },
          // TwinkleConfig.speedyWindowWidth (integer)
          // Defines the width of the Twinkle SD window in pixels
          {
            name: "speedyWindowWidth",
            label: window.wgULS("快速删除对话框宽度（像素）", "快速刪除對話方塊寬度（像素）"),
            type: "integer"
          },
          // TwinkleConfig.speedyWindowWidth (integer)
          // Defines the width of the Twinkle SD window in pixels
          {
            name: "speedyWindowHeight",
            label: window.wgULS("快速删除对话框高度（像素）", "快速刪除對話方塊高度（像素）"),
            helptip: window.wgULS("若您有一台很大的显示器，您可以将此调高。", "若您有一台很大的顯示器，您可以將此調高。"),
            type: "integer"
          },
          {
            name: "logSpeedyNominations",
            label: window.wgULS("在用户空间中记录所有快速删除提名", "在使用者空間中記錄所有快速刪除提名"),
            helptip: window.wgULS("非管理员无法访问到已删除的贡献，用户空间日志提供了一个很好的方法来记录这些历史。", "非管理員無法存取到已刪除的貢獻，使用者空間日誌提供了一個很好的方法來記錄這些歷史。"),
            type: "boolean"
          },
          {
            name: "speedyLogPageName",
            label: window.wgULS("在此页保留日志", "在此頁保留日誌"),
            helptip: window.wgULS("在此框中输入子页面名称，您将在User:<i>用户名</i>/<i>子页面</i>找到CSD日志。仅在启用日志时工作。", "在此框中輸入子頁面名稱，您將在User:<i>使用者名稱</i>/<i>子頁面</i>找到CSD日誌。僅在啟用日誌時工作。"),
            type: "string"
          },
          {
            name: "noLogOnSpeedyNomination",
            label: window.wgULS("在使用以下理由时不做记录", "在使用以下理由時不做記錄"),
            type: "set",
            setValues: Twinkle.config.commonSets.csdAndDICriteria,
            setDisplayOrder: Twinkle.config.commonSets.csdAndDICriteriaDisplayOrder
          },
          {
            name: "enlargeG7Input",
            label: window.wgULS("扩大CSD G7的按钮", "擴大CSD G7的按鈕"),
            helptip: window.wgULS("扩为默认的两倍大。", "擴為預設的兩倍大。"),
            type: "boolean"
          }
        ]
      }, {
        title: window.wgULS("标记", "標記"),
        module: "tag",
        preferences: [{
          name: "watchTaggedPages",
          label: window.wgULS("标记时加入到监视列表", "標記時加入到監視清單"),
          type: "enum",
          enumValues: Twinkle.config.watchlistEnums
        }, {
          name: "watchMergeDiscussions",
          label: window.wgULS("加入合并讨论时监视讨论页", "加入合併討論時監視討論頁"),
          type: "enum",
          enumValues: Twinkle.config.watchlistEnums
        }, {
          name: "markTaggedPagesAsMinor",
          label: window.wgULS("将标记标记为小修改", "將標記標記為小修改"),
          type: "boolean"
        }, {
          name: "markTaggedPagesAsPatrolled",
          label: window.wgULS("默认勾选“标记页面为已巡查”框", "預設勾選「標記頁面為已巡查」框"),
          type: "boolean"
        }, {
          name: "groupByDefault",
          label: window.wgULS("默认勾选“合并到{{multiple issues}}”复选框", "預設勾選「合併到{{multiple issues}}」核取方塊"),
          type: "boolean"
        }, {
          name: "tagArticleSortOrder",
          label: window.wgULS("条目标记的默认查看方式", "條目標記的預設檢視方式"),
          type: "enum",
          enumValues: {
            cat: window.wgULS("按类型", "按類別"),
            alpha: "按字母"
          }
        }, {
          name: "customTagList",
          label: window.wgULS("自定义条目维护标记", "自訂條目維護標記"),
          helptip: window.wgULS("这些会出现在列表的末尾。", "這些會出現在列表的末尾。"),
          type: "customList",
          customListValueTitle: window.wgULS("模板名（不含大括号）", "模板名（不含大括號）"),
          customListLabelTitle: window.wgULS("显示的文字", "顯示的文字")
        }, {
          name: "customFileTagList",
          label: window.wgULS("自定义文件维护标记", "自訂檔案維護標記"),
          helptip: window.wgULS("这些会出现在列表的末尾。", "這些會出現在列表的末尾。"),
          type: "customList",
          customListValueTitle: window.wgULS("模板名（不含大括号）", "模板名（不含大括號）"),
          customListLabelTitle: window.wgULS("显示的文字", "顯示的文字")
        }, {
          name: "customRedirectTagList",
          label: window.wgULS("自定义重定向维护标记", "自訂重新導向維護標記"),
          helptip: window.wgULS("这些会出现在列表的末尾。", "這些會出現在列表的末尾。"),
          type: "customList",
          customListValueTitle: window.wgULS("模板名（不含大括号）", "模板名（不含大括號）"),
          customListLabelTitle: window.wgULS("显示的文字", "顯示的文字")
        }]
      }, {
        title: "小作品",
        module: "stub",
        preferences: [{
          name: "watchStubbedPages",
          label: window.wgULS("标记时加入到监视列表", "標記時加入到監視清單"),
          type: "boolean"
        }, {
          name: "markStubbedPagesAsMinor",
          label: window.wgULS("将小作品标记为小修改", "將小作品標記為小修改"),
          type: "boolean"
        }, {
          name: "markStubbedPagesAsPatrolled",
          label: window.wgULS("默认勾选“标记页面为已巡查”框", "預設勾選「標記頁面為已巡查」框"),
          type: "boolean"
        }, {
          name: "stubArticleSortOrder",
          label: window.wgULS("条目小作品的默认查看方式", "條目小作品的預設檢視方式"),
          type: "enum",
          enumValues: {
            cat: window.wgULS("按类型", "按類別"),
            alpha: "按字母"
          }
        }, {
          name: "customStubList",
          label: window.wgULS("自定义条目小作品标记", "自訂條目小作品標記"),
          helptip: window.wgULS("这些会出现在列表的末尾。", "這些會出現在列表的末尾。"),
          type: "customList",
          customListValueTitle: window.wgULS("模板名（不含大括号）", "模板名（不含大括號）"),
          customListLabelTitle: window.wgULS("显示的文字", "顯示的文字")
        }]
      }, {
        title: "通告",
        module: "talkback",
        preferences: [{
          name: "markTalkbackAsMinor",
          label: window.wgULS("将通告标记为小修改", "將通告標記為小修改"),
          type: "boolean"
        }, {
          name: "insertTalkbackSignature",
          label: window.wgULS("通告时加入签名", "通告時加入簽名"),
          type: "boolean"
        }, {
          name: "talkbackHeading",
          label: window.wgULS("通告所用的小节标题", "通告所用的小節標題"),
          type: "string"
        }, {
          name: "mailHeading",
          label: window.wgULS("“有新邮件”所用的小节标题", "「有新郵件」所用的小節標題"),
          type: "string"
        }]
      }, {
        title: window.wgULS("取消链入", "取消連入"),
        module: "unlink",
        preferences: [
          // TwinkleConfig.unlinkNamespaces (array)
          // In what namespaces unlink should happen, default in 0 (article) and 100 (portal)
          {
            name: "unlinkNamespaces",
            label: window.wgULS("取消以下命名空间中的反向链接", "取消以下命名空間中的反向連結"),
            helptip: window.wgULS("请避免选择讨论页，因这样会导致Twinkle试图修改讨论存档。", "請避免選擇討論頁，因這樣會導致Twinkle試圖修改討論存檔。"),
            type: "set",
            setValues: Twinkle.config.commonSets.namespacesNoSpecial
          }
        ]
      }, {
        title: window.wgULS("警告用户", "警告使用者"),
        module: "warn",
        preferences: [
          // TwinkleConfig.defaultWarningGroup (int)
          // if true, watch the page which has been dispatched an warning or notice, if false, default applies
          {
            name: "defaultWarningGroup",
            label: window.wgULS("默认警告级别", "預設警告級別"),
            type: "enum",
            enumValues: {
              1: "1：注意",
              2: "2：警告",
              3: window.wgULS("单层级提醒", "單層級提醒"),
              4: window.wgULS("单层级警告", "單層級警告"),
              5: window.wgULS("自定义提醒或警告", "自訂提醒或警告"),
              6: "所有警告模板",
              7: window.wgULS("自动选择层级", "自動選擇層級")
              // 8 was used for block templates before #260
              // 9 was deprecated
              // 10 was deprecated
              // 11 was deprecated
            }
          },
          // TwinkleConfig.combinedSingletMenus (boolean)
          // if true, show one menu with both single-issue notices and warnings instead of two separately
          {
            name: "combinedSingletMenus",
            label: window.wgULS("将两个单层级菜单合并成一个", "將兩個單層級選單合併成一個"),
            helptip: window.wgULS("当启用此选项时，无论默认警告级别选择单层级通知或单层级警告皆属于此项。", "當啟用此選項時，無論預設警告級別選擇單層級通知或單層級警告皆屬於此項。"),
            type: "boolean"
          },
          // TwinkleConfig.watchWarnings (string)
          // Watchlist setting for the page which has been dispatched an warning or notice
          {
            name: "watchWarnings",
            label: window.wgULS("警告时加入用户讨论页到监视列表", "警告時加入使用者討論頁到監視清單"),
            type: "enum",
            enumValues: Twinkle.config.watchlistEnums
          },
          // TwinkleConfig.oldSelect (boolean)
          // if true, use the native select menu rather the jquery chosen-based one
          {
            name: "oldSelect",
            label: window.wgULS("使用不可搜索的经典菜单", "使用不可搜尋的經典選單"),
            type: "boolean"
          },
          {
            name: "customWarningList",
            label: window.wgULS("自定义警告模板", "自訂警告模板"),
            helptip: window.wgULS("您可以加入模板或用户子页面。自定义警告会出现在警告对话框中“自定义警告”一节。", "您可以加入模板或使用者子頁面。自訂警告會出現在警告對話方塊中「自訂警告」一節。"),
            type: "customList",
            customListValueTitle: window.wgULS("模板名（不含大括号）", "模板名（不含大括號）"),
            customListLabelTitle: window.wgULS("显示的文字（和编辑摘要）", "顯示的文字（和編輯摘要）")
          }
        ]
      }, {
        title: window.wgULS("存废讨论", "存廢討論"),
        module: "xfd",
        preferences: [
          {
            name: "logXfdNominations",
            label: window.wgULS("在用户空间中记录所有存废讨论提名", "在使用者空間中記錄所有存廢討論提名"),
            helptip: window.wgULS("该日志供您追踪所有通过Twinkle提交的存废讨论", "該日誌供您追蹤所有透過Twinkle提交的存廢討論"),
            type: "boolean"
          },
          {
            name: "xfdLogPageName",
            label: window.wgULS("在此页保留日志", "在此頁保留日誌"),
            helptip: window.wgULS("在此框中输入子页面名称，您将在User:<i>用户名</i>/<i>子页面</i>找到XFD日志。仅在启用日志时工作。", "在此框中輸入子頁面名稱，您將在User:<i>使用者名稱</i>/<i>子頁面</i>找到XFD日誌。僅在啟用日誌時工作。"),
            type: "string"
          },
          {
            name: "noLogOnXfdNomination",
            label: window.wgULS("在使用以下理由时不做记录", "在使用以下理由時不做記錄"),
            type: "set",
            setValues: Twinkle.config.commonSets.xfdCriteria,
            setDisplayOrder: Twinkle.config.commonSets.xfdCriteriaDisplayOrder
          },
          // TwinkleConfig.xfdWatchPage (string)
          // The watchlist setting of the page being nominated for XfD.
          {
            name: "xfdWatchPage",
            label: window.wgULS("加入提名的页面到监视列表", "加入提名的頁面到監視清單"),
            type: "enum",
            enumValues: Twinkle.config.watchlistEnums
          },
          // TwinkleConfig.xfdWatchDiscussion (string)
          // The watchlist setting of the newly created XfD page (for those processes that create discussion pages for each nomination),
          // or the list page for the other processes.
          {
            name: "xfdWatchDiscussion",
            label: window.wgULS("加入存废讨论页到监视列表", "加入存廢討論頁到監視清單"),
            helptip: window.wgULS("当日的页面。", "當日的頁面。"),
            type: "enum",
            enumValues: Twinkle.config.watchlistEnums
          },
          // TwinkleConfig.xfdWatchUser (string)
          // The watchlist setting of the user talk page if they receive a notification.
          {
            name: "xfdWatchUser",
            label: window.wgULS("加入创建者讨论页到监视列表（在通知时）", "加入建立者討論頁到監視清單（在通知時）"),
            type: "enum",
            enumValues: Twinkle.config.watchlistEnums
          },
          {
            name: "markXfdPagesAsPatrolled",
            label: window.wgULS("标记时标记页面为已巡查（如可能）", "標記時標記頁面為已巡查（如可能）"),
            helptip: window.wgULS("基于技术原因，页面仅会在由Special:NewPages到达时被标记为已巡查。", "基於技術原因，頁面僅會在由Special:NewPages到達時被標記為已巡查。"),
            type: "boolean"
          },
          {
            name: "FwdCsdToXfd",
            label: window.wgULS("提删类型增加转交自快速删除候选", "提刪類別增加轉交自快速刪除候選"),
            helptip: window.wgULS("请确保您充分了解[[Qiuwen:快速删除方针]]才开启此功能。", "請確保您充分了解[[Qiuwen:快速刪除方針]]才開啟此功能。"),
            type: "boolean"
          },
          {
            name: "afdDefaultCategory",
            label: window.wgULS("默认提删类型", "預設提刪類別"),
            helptip: window.wgULS("若选择“相同于上次选择”将使用localStorage来记忆。", "若選擇「相同於上次選擇」將使用localStorage來記憶。"),
            type: "enum",
            enumValues: {
              delete: window.wgULS("删除", "刪除"),
              same: window.wgULS("相同于上次选择", "相同於上次選擇")
            }
          },
          {
            name: "afdFameDefaultReason",
            label: window.wgULS("默认关注度提删理由", "預設關注度提刪理由"),
            helptip: window.wgULS("用于批量提删。", "用於批次提刪。"),
            type: "string"
          },
          {
            name: "afdSubstubDefaultReason",
            label: window.wgULS("默认小小作品提删理由", "預設小小作品提刪理由"),
            helptip: window.wgULS("用于批量提删。", "用於批次提刪。"),
            type: "string"
          }
        ]
      }, {
        title: window.wgULS("关闭存废讨论", "關閉存廢討論"),
        module: "close",
        preferences: [{
          name: "XfdClose",
          label: window.wgULS("在存废讨论显示关闭讨论按钮", "在存廢討論顯示關閉討論按鈕"),
          helptip: window.wgULS("请确保您充分了解[[Qiuwen:删除方针]]才开启此功能。", "請確保您充分了解[[Qiuwen:刪除方針]]才開啟此功能。"),
          type: "enum",
          enumValues: {
            hide: window.wgULS("不显示", "不顯示"),
            nonadminonly: window.wgULS("只包含非管理员可使用选项", "只包含非管理員可使用選項"),
            all: window.wgULS("显示所有选项", "顯示所有選項")
          }
        }]
      }, {
        title: window.wgULS("侵犯著作权", "侵犯著作權"),
        module: "copyvio",
        preferences: [
          // TwinkleConfig.copyvioWatchPage (string)
          // The watchlist setting of the page being nominated for XfD.
          {
            name: "copyvioWatchPage",
            label: window.wgULS("加入提报的页面到监视列表", "加入提報的頁面到監視清單"),
            type: "enum",
            enumValues: Twinkle.config.watchlistEnums
          },
          // TwinkleConfig.copyvioWatchUser (string)
          // The watchlist setting of the user if he receives a notification.
          {
            name: "copyvioWatchUser",
            label: window.wgULS("加入创建者讨论页到监视列表（在通知时）", "加入建立者討論頁到監視清單（在通知時）"),
            type: "enum",
            enumValues: Twinkle.config.watchlistEnums
          },
          // TwinkleConfig.markCopyvioPagesAsPatrolled (boolean)
          // If, when applying copyvio template to page, to mark the page as patrolled (if the page was reached from NewPages)
          {
            name: "markCopyvioPagesAsPatrolled",
            label: window.wgULS("标记时标记页面为已巡查（如可能）", "標記時標記頁面為已巡查（如可能）"),
            helptip: window.wgULS("基于技术原因，页面仅会在由Special:NewPages到达时被标记为已巡查。", "基於技術原因，頁面僅會在由Special:NewPages到達時被標記為已巡查。"),
            type: "boolean"
          }
        ]
      }, {
        title: window.wgULS("隐藏", "隱藏"),
        hidden: true,
        preferences: [
          // twinkle.js: portlet setup
          {
            name: "portletArea",
            type: "string"
          },
          {
            name: "portletId",
            type: "string"
          },
          {
            name: "portletName",
            type: "string"
          },
          {
            name: "portletType",
            type: "string"
          },
          {
            name: "portletNext",
            type: "string"
          },
          // twinklefluff.js: defines how many revision to query maximum, maximum possible is 50, default is 50
          {
            name: "revertMaxRevisions",
            type: "integer"
          },
          // twinklebatchdelete.js: How many pages should be processed maximum
          {
            name: "batchMax",
            type: "integer",
            adminOnly: true
          },
          // How many pages should be processed at a time by deprod and batchdelete/protect/undelete
          {
            name: "batchChunks",
            type: "integer",
            adminOnly: true
          }
        ]
      }];
      Twinkle.config.init = () => {
        if (mw.config.get("wgPageName") === Twinkle.getPref("configPage") && mw.config.get("wgAction") === "view") {
          if (!document.querySelector("#twinkle-config")) {
            return;
          }
          const contentdiv = document.querySelector("#twinkle-config-content");
          contentdiv.textContent = "";
          const toctable = document.createElement("div");
          toctable.className = "toc";
          toctable.style.marginLeft = "0.4em";
          const toctitle = document.createElement("div");
          toctitle.id = "toctitle";
          const toch2 = document.createElement("h2");
          toch2.textContent = window.wgULS("目录 ", "目錄 ");
          toctitle.appendChild(toch2);
          const toctoggle = document.createElement("span");
          toctoggle.className = "toctoggle";
          toctoggle.appendChild(document.createTextNode("["));
          const toctogglelink = document.createElement("a");
          toctogglelink.className = "internal";
          toctogglelink.setAttribute("href", "#tw-tocshowhide");
          toctogglelink.textContent = window.wgULS("隐藏", "隱藏");
          toctoggle.appendChild(toctogglelink);
          toctoggle.appendChild(document.createTextNode("]"));
          toctitle.appendChild(toctoggle);
          toctable.appendChild(toctitle);
          const tocul = document.createElement("ul");
          toctogglelink.addEventListener("click", () => {
            const $tocul = $(tocul);
            $tocul.toggle();
            if ($tocul.find(":visible").length) {
              toctogglelink.textContent = window.wgULS("隐藏", "隱藏");
            } else {
              toctogglelink.textContent = window.wgULS("显示", "顯示");
            }
          }, false);
          toctable.appendChild(tocul);
          contentdiv.appendChild(toctable);
          const contentform = document.createElement("form");
          contentform.setAttribute("action", "javascript:void(0)");
          contentform.addEventListener("submit", Twinkle.config.save, true);
          contentdiv.appendChild(contentform);
          const container = document.createElement("table");
          container.style.width = "100%";
          contentform.appendChild(container);
          $(Twinkle.config.sections).each((sectionkey, section) => {
            if (section.hidden || section.adminOnly && !Morebits.userIsSysop) {
              return true;
            }
            const tocli = document.createElement("li");
            tocli.className = "toclevel-1";
            const toca = document.createElement("a");
            toca.setAttribute("href", "#".concat(section.module));
            toca.appendChild(document.createTextNode(section.title));
            tocli.appendChild(toca);
            tocul.appendChild(tocli);
            let row = document.createElement("tr");
            let cell = document.createElement("td");
            cell.setAttribute("colspan", "3");
            const heading = document.createElement("h4");
            heading.style.borderBottom = "1px solid #808080";
            heading.style.marginTop = "0.2em";
            heading.id = section.module;
            heading.appendChild(document.createTextNode(section.title));
            cell.appendChild(heading);
            row.appendChild(cell);
            container.appendChild(row);
            let rowcount = 1;
            $(section.preferences).each((prefkey, pref) => {
              if (pref.adminOnly && !Morebits.userIsSysop) {
                return true;
              }
              row = document.createElement("tr");
              row.style.marginBottom = "0.2em";
              if (rowcount++ % 2 === 0) {
                row.style.backgroundColor = "rgb(128 128 128/.1)";
              }
              cell = document.createElement("td");
              let label;
              let input;
              const gotPref = Twinkle.getPref(pref.name);
              switch (pref.type) {
                case "boolean":
                  cell.setAttribute("colspan", "2");
                  label = document.createElement("label");
                  input = document.createElement("input");
                  input.setAttribute("type", "checkbox");
                  input.setAttribute("id", pref.name);
                  input.setAttribute("name", pref.name);
                  if (gotPref === true) {
                    input.checked = true;
                  }
                  label.appendChild(input);
                  label.appendChild(document.createTextNode(pref.label));
                  cell.appendChild(label);
                  break;
                case "string":
                // create an input box
                case "integer":
                  cell.style.textAlign = "right";
                  cell.style.paddingRight = "0.5em";
                  label = document.createElement("label");
                  label.setAttribute("for", pref.name);
                  label.appendChild(document.createTextNode("".concat(pref.label, "：")));
                  cell.appendChild(label);
                  row.appendChild(cell);
                  cell = document.createElement("td");
                  cell.style.paddingRight = "1em";
                  input = document.createElement("input");
                  input.setAttribute("type", "text");
                  input.setAttribute("id", pref.name);
                  input.setAttribute("name", pref.name);
                  if (pref.type === "integer") {
                    input.setAttribute("size", 6);
                    input.setAttribute("type", "number");
                    input.setAttribute("step", "1");
                  }
                  if (gotPref) {
                    input.setAttribute("value", gotPref);
                  }
                  cell.appendChild(input);
                  break;
                case "enum": {
                  cell.style.textAlign = "right";
                  cell.style.paddingRight = "0.5em";
                  label = document.createElement("label");
                  label.setAttribute("for", pref.name);
                  label.appendChild(document.createTextNode("".concat(pref.label, "：")));
                  cell.appendChild(label);
                  row.appendChild(cell);
                  cell = document.createElement("td");
                  cell.style.paddingRight = "1em";
                  input = document.createElement("select");
                  input.setAttribute("id", pref.name);
                  input.setAttribute("name", pref.name);
                  let optionExists = false;
                  for (var _i17 = 0, _Object$entries10 = Object.entries(pref.enumValues); _i17 < _Object$entries10.length; _i17++) {
                    const [enumvalue, enumdisplay] = _Object$entries10[_i17];
                    const option = document.createElement("option");
                    option.setAttribute("value", enumvalue);
                    if (gotPref === enumvalue || // Hack to convert old boolean watchlist prefs
                    // to corresponding enums (added in v2.1)
                    typeof gotPref === "boolean" && (gotPref && enumvalue === "yes" || !gotPref && enumvalue === "no")) {
                      option.setAttribute("selected", "selected");
                      optionExists = true;
                    }
                    option.appendChild(document.createTextNode(enumdisplay));
                    input.appendChild(option);
                  }
                  if (!optionExists) {
                    const option = document.createElement("option");
                    option.setAttribute("value", gotPref);
                    option.setAttribute("selected", "selected");
                    option.appendChild(document.createTextNode(gotPref));
                    input.appendChild(option);
                  }
                  cell.appendChild(input);
                  break;
                }
                case "set": {
                  cell.setAttribute("colspan", "2");
                  label = document.createElement("label");
                  label.appendChild(document.createTextNode("".concat(pref.label, "：")));
                  cell.appendChild(label);
                  const checkdiv = document.createElement("div");
                  checkdiv.style.paddingLeft = "1em";
                  const worker = (itemkey, itemvalue) => {
                    const checklabel = document.createElement("label");
                    checklabel.style.marginRight = "0.7em";
                    checklabel.style.display = "inline-block";
                    const check = document.createElement("input");
                    check.setAttribute("type", "checkbox");
                    check.setAttribute("id", "".concat(pref.name, "_").concat(itemkey));
                    check.setAttribute("name", "".concat(pref.name, "_").concat(itemkey));
                    if (gotPref && gotPref.includes(itemkey)) {
                      check.checked = true;
                    }
                    if (pref.name === "unlinkNamespaces" && gotPref && gotPref.includes(Number.parseInt(itemkey, 10))) {
                      check.checked = true;
                    }
                    checklabel.appendChild(check);
                    checklabel.appendChild(document.createTextNode(itemvalue));
                    checkdiv.appendChild(checklabel);
                  };
                  if (pref.setDisplayOrder) {
                    var _iterator69 = _createForOfIteratorHelper(pref.setDisplayOrder), _step69;
                    try {
                      for (_iterator69.s(); !(_step69 = _iterator69.n()).done; ) {
                        const item = _step69.value;
                        worker(item, pref.setValues[item]);
                      }
                    } catch (err) {
                      _iterator69.e(err);
                    } finally {
                      _iterator69.f();
                    }
                  } else {
                    for (var _i18 = 0, _Object$entries11 = Object.entries(pref.setValues); _i18 < _Object$entries11.length; _i18++) {
                      const [itemkey, itemvalue] = _Object$entries11[_i18];
                      worker(itemkey, itemvalue);
                    }
                  }
                  cell.appendChild(checkdiv);
                  break;
                }
                case "customList": {
                  cell.style.textAlign = "right";
                  cell.style.paddingRight = "0.5em";
                  label = document.createElement("label");
                  label.setAttribute("for", pref.name);
                  label.appendChild(document.createTextNode("".concat(pref.label, "：")));
                  cell.appendChild(label);
                  row.appendChild(cell);
                  cell = document.createElement("td");
                  cell.style.paddingRight = "1em";
                  const customListButton = document.createElement("button");
                  customListButton.setAttribute("id", pref.name);
                  customListButton.setAttribute("name", pref.name);
                  customListButton.setAttribute("type", "button");
                  customListButton.addEventListener("click", Twinkle.config.listDialog.display, false);
                  $(customListButton).data({
                    value: gotPref,
                    pref
                  });
                  customListButton.appendChild(document.createTextNode(window.wgULS("编辑项目", "編輯項目")));
                  cell.appendChild(customListButton);
                  break;
                }
                default:
                  void mw.notify("twinkleconfig: 未知类型的属性 ".concat(pref.name), {
                    type: "warn",
                    tag: "twinkleconfig"
                  });
                  break;
              }
              row.appendChild(cell);
              cell = document.createElement("td");
              cell.style.fontSize = "90%";
              cell.style.color = "gray";
              if (pref.helptip) {
                cell.innerHTML = pref.helptip.replace(/{{(.+?)}}/g, '{{<a href="'.concat(mw.util.getUrl("Template:"), '$1" rel="noopener" target="_blank">$1</a>}}')).replace(/\[\[(.+?)]]/g, '<a href="'.concat(mw.util.getUrl(""), '$1" rel="noopener" target="_blank">$1</a>'));
              }
              if (pref.type !== "customList") {
                const resetlink = document.createElement("a");
                resetlink.setAttribute("href", "#tw-reset");
                resetlink.setAttribute("id", "twinkle-config-reset-".concat(pref.name));
                resetlink.addEventListener("click", Twinkle.config.resetPrefLink, false);
                resetlink.style.cssFloat = "right";
                resetlink.style.margin = "0 0.6em";
                resetlink.appendChild(document.createTextNode(window.wgULS("复位", "復位")));
                cell.appendChild(resetlink);
              }
              row.appendChild(cell);
              container.appendChild(row);
              return true;
            });
            return true;
          });
          const footerbox = document.createElement("div");
          footerbox.setAttribute("id", "twinkle-config-buttonpane");
          footerbox.style.backgroundColor = "#BCCADF";
          footerbox.style.padding = "0.5em";
          const submitButton = document.createElement("button");
          submitButton.setAttribute("id", "twinkle-config-submit");
          submitButton.setAttribute("type", "submit");
          submitButton.appendChild(document.createTextNode(window.wgULS("保存修改", "儲存修改")));
          footerbox.appendChild(submitButton);
          const footerspan = document.createElement("span");
          footerspan.className = "plainlinks";
          footerspan.style.marginLeft = "2.4em";
          footerspan.style.fontSize = "90%";
          const footera = document.createElement("a");
          footera.setAttribute("href", "#tw-reset-all");
          footera.setAttribute("id", "twinkle-config-resetall");
          footera.addEventListener("click", Twinkle.config.resetAllPrefs, false);
          footera.appendChild(document.createTextNode(window.wgULS("恢复默认", "恢復預設")));
          footerspan.appendChild(footera);
          footerbox.appendChild(footerspan);
          contentform.appendChild(footerbox);
          if (window.location.hash) {
            const loc = window.location.hash;
            window.location.hash = "";
            window.location.hash = loc;
          }
        } else if (mw.config.get("wgNamespaceNumber") === mw.config.get("wgNamespaceIds").user && mw.config.get("wgTitle").indexOf(mw.config.get("wgUserName")) === 0 && mw.config.get("wgPageName").slice(-3) === ".js") {
          const box = document.createElement("div");
          box.setAttribute("id", "twinkle-config-headerbox");
          let link;
          const scriptPageName = mw.config.get("wgPageName").slice(mw.config.get("wgPageName").lastIndexOf("/") + 1, mw.config.get("wgPageName").lastIndexOf(".js"));
          if (scriptPageName === "twinkleoptions") {
            box.setAttribute("class", "config-twopt-box");
            if (mw.config.get("wgArticleId") > 0) {
              box.appendChild(document.createTextNode(window.wgULS("这页包含您的Twinkle参数设置，您可使用", "這頁包含您的Twinkle偏好設定，您可使用")));
            } else {
              box.appendChild(document.createTextNode(window.wgULS("您可配置您的Twinkle，通过使用", "您可配置您的Twinkle，通過使用")));
            }
            link = document.createElement("a");
            link.setAttribute("href", mw.util.getUrl(Twinkle.getPref("configPage")));
            link.appendChild(document.createTextNode(window.wgULS("Twinkle参数设置面板", "Twinkle偏好設定面板")));
            box.appendChild(link);
            box.appendChild(document.createTextNode(window.wgULS("，或直接编辑本页。", "，或直接編輯本頁。")));
            $(box).insertAfter($body.find("#contentSub"));
          } else if (["vector", "vector-2022", "gongbi", "citizen", "common"].includes(scriptPageName)) {
            box.setAttribute("class", "config-userskin-box");
            box.appendChild(document.createTextNode(window.wgULS("若您想配置您的Twinkle，请使用", "若您想配置您的Twinkle，請使用")));
            link = document.createElement("a");
            link.setAttribute("href", mw.util.getUrl(Twinkle.getPref("configPage")));
            link.appendChild(document.createTextNode(window.wgULS("Twinkle参数设置面板", "Twinkle偏好設定面板")));
            box.appendChild(link);
            box.appendChild(document.createTextNode("。"));
            $(box).insertAfter($body.find("#contentSub"));
          }
        }
      };
      Twinkle.config.listDialog = {};
      Twinkle.config.listDialog.addRow = (dlgtable, value, label) => {
        const contenttr = document.createElement("tr");
        let contenttd = document.createElement("td");
        const removeButton = document.createElement("button");
        removeButton.setAttribute("type", "button");
        removeButton.addEventListener("click", () => {
          $(contenttr).remove();
        }, false);
        removeButton.textContent = "移除";
        contenttd.appendChild(removeButton);
        contenttr.appendChild(contenttd);
        contenttd = document.createElement("td");
        let input = document.createElement("input");
        input.setAttribute("type", "text");
        input.className = "twinkle-config-customlist-value";
        input.style.width = "97%";
        if (value) {
          input.setAttribute("value", value);
        }
        contenttd.appendChild(input);
        contenttr.appendChild(contenttd);
        contenttd = document.createElement("td");
        input = document.createElement("input");
        input.setAttribute("type", "text");
        input.className = "twinkle-config-customlist-label";
        input.style.width = "98%";
        if (label) {
          input.setAttribute("value", label);
        }
        contenttd.appendChild(input);
        contenttr.appendChild(contenttd);
        dlgtable.appendChild(contenttr);
      };
      Twinkle.config.listDialog.display = (e) => {
        var _curpref$customListVa, _curpref$customListLa;
        const $prefbutton = $(e.target);
        const curvalue = $prefbutton.data("value");
        const curpref = $prefbutton.data("pref");
        const dialog = new Morebits.simpleWindow(720, 400);
        dialog.setTitle(curpref.label);
        dialog.setScriptName(window.wgULS("Twinkle参数设置", "Twinkle偏好設定"));
        const dialogcontent = document.createElement("div");
        const dlgtable = document.createElement("table");
        dlgtable.className = "wikitable";
        dlgtable.style.margin = "1.4em 1em";
        dlgtable.style.width = "97%";
        const dlgtbody = document.createElement("tbody");
        let dlgtr = document.createElement("tr");
        let dlgth = document.createElement("th");
        dlgth.style.width = "5%";
        dlgtr.appendChild(dlgth);
        dlgth = document.createElement("th");
        dlgth.style.width = "35%";
        dlgth.textContent = (_curpref$customListVa = curpref.customListValueTitle) !== null && _curpref$customListVa !== void 0 ? _curpref$customListVa : window.wgULS("数值", "數值");
        dlgtr.appendChild(dlgth);
        dlgth = document.createElement("th");
        dlgth.style.width = "60%";
        dlgth.textContent = (_curpref$customListLa = curpref.customListLabelTitle) !== null && _curpref$customListLa !== void 0 ? _curpref$customListLa : window.wgULS("标签", "標籤");
        dlgtr.appendChild(dlgth);
        dlgtbody.appendChild(dlgtr);
        let gotRow = false;
        var _iterator70 = _createForOfIteratorHelper(curvalue), _step70;
        try {
          for (_iterator70.s(); !(_step70 = _iterator70.n()).done; ) {
            const v = _step70.value;
            gotRow = true;
            Twinkle.config.listDialog.addRow(dlgtbody, v.value, v.label);
          }
        } catch (err) {
          _iterator70.e(err);
        } finally {
          _iterator70.f();
        }
        if (!gotRow) {
          Twinkle.config.listDialog.addRow(dlgtbody);
        }
        const dlgtfoot = document.createElement("tfoot");
        dlgtr = document.createElement("tr");
        const dlgtd = document.createElement("td");
        dlgtd.setAttribute("colspan", "3");
        const addButton = document.createElement("button");
        addButton.style.minWidth = "8em";
        addButton.setAttribute("type", "button");
        addButton.addEventListener("click", () => {
          Twinkle.config.listDialog.addRow(dlgtbody);
        }, false);
        addButton.textContent = "添加";
        dlgtd.appendChild(addButton);
        dlgtr.appendChild(dlgtd);
        dlgtfoot.appendChild(dlgtr);
        dlgtable.appendChild(dlgtbody);
        dlgtable.appendChild(dlgtfoot);
        dialogcontent.appendChild(dlgtable);
        let button = document.createElement("button");
        button.setAttribute("type", "submit");
        button.addEventListener("click", () => {
          Twinkle.config.listDialog.save($prefbutton, dlgtbody);
          dialog.close();
        }, false);
        button.textContent = window.wgULS("保存修改", "儲存修改");
        dialogcontent.appendChild(button);
        button = document.createElement("button");
        button.setAttribute("type", "submit");
        button.addEventListener("click", () => {
          Twinkle.config.listDialog.reset($prefbutton, dlgtbody);
        }, false);
        button.textContent = window.wgULS("复位", "復位");
        dialogcontent.appendChild(button);
        button = document.createElement("button");
        button.setAttribute("type", "submit");
        button.addEventListener("click", () => {
          dialog.close();
        }, false);
        button.textContent = "取消";
        dialogcontent.appendChild(button);
        dialog.setContent(dialogcontent);
        dialog.display();
      };
      Twinkle.config.listDialog.reset = (button, tbody) => {
        const $button = $(button);
        const curpref = $button.data("pref");
        const oldvalue = $button.data("value");
        Twinkle.config.resetPref(curpref);
        const $tbody = $(tbody);
        $tbody.find("tr").slice(1).remove();
        const curvalue = $button.data("value");
        var _iterator71 = _createForOfIteratorHelper(curvalue), _step71;
        try {
          for (_iterator71.s(); !(_step71 = _iterator71.n()).done; ) {
            const v = _step71.value;
            Twinkle.config.listDialog.addRow(tbody, v.value, v.label);
          }
        } catch (err) {
          _iterator71.e(err);
        } finally {
          _iterator71.f();
        }
        $button.data("value", oldvalue);
      };
      Twinkle.config.listDialog.save = (button, tbody) => {
        const result = [];
        let current = {};
        $(tbody).find('input[type="text"]').each((inputkey, input) => {
          if ($(input).hasClass("twinkle-config-customlist-value")) {
            current = {
              value: input.value
            };
          } else {
            current.label = input.value;
            if (current.value || current.label) {
              result[result.length] = current;
            }
          }
        });
        $(button).data("value", result);
      };
      Twinkle.config.resetPrefLink = (e) => {
        const wantedpref = e.target.id.slice(21);
        $(Twinkle.config.sections).each((sectionkey, section) => {
          if (section.hidden || section.adminOnly && !Morebits.userIsSysop) {
            return true;
          }
          let foundit = false;
          $(section.preferences).each((prefkey, pref) => {
            if (pref.name !== wantedpref) {
              return true;
            }
            Twinkle.config.resetPref(pref);
            foundit = true;
            return false;
          });
          if (foundit) {
            return false;
          }
        });
        return false;
      };
      Twinkle.config.resetPref = (pref) => {
        switch (pref.type) {
          case "boolean":
            document.querySelector("#".concat(pref.name)).checked = Twinkle.defaultConfig[pref.name];
            break;
          case "string":
          case "integer":
          case "enum":
            document.querySelector("#".concat(pref.name)).value = Twinkle.defaultConfig[pref.name];
            break;
          case "set":
            for (var _i19 = 0, _Object$entries12 = Object.entries(pref.setValues); _i19 < _Object$entries12.length; _i19++) {
              const [itemkey] = _Object$entries12[_i19];
              if (document.querySelector("#".concat(pref.name, "_").concat(itemkey))) {
                document.querySelector("#".concat(pref.name, "_").concat(itemkey)).checked = Twinkle.defaultConfig[pref.name].includes(itemkey);
              }
            }
            break;
          case "customList":
            $(document.querySelector("#".concat(pref.name))).data("value", Twinkle.defaultConfig[pref.name]);
            break;
          default:
            void mw.notify("twinkleconfig: unknown data type for preference ".concat(pref.name), {
              type: "warn",
              tag: "twinkleconfig"
            });
            break;
        }
      };
      Twinkle.config.resetAllPrefs = () => {
        $(Twinkle.config.sections).each((sectionkey, section) => {
          if (section.hidden || section.adminOnly && !Morebits.userIsSysop) {
            return true;
          }
          $(section.preferences).each((prefkey, pref) => {
            if (!pref.adminOnly || Morebits.userIsSysop) {
              Twinkle.config.resetPref(pref);
            }
          });
          return true;
        });
        return false;
      };
      Twinkle.config.save = (e) => {
        Morebits.status.init(document.querySelector("#twinkle-config-content"));
        const userjs = "".concat(mw.config.get("wgFormattedNamespaces")[mw.config.get("wgNamespaceIds").user], ":").concat(mw.config.get("wgUserName"), "/twinkleoptions.js");
        const qiuwen_page = new Morebits.wiki.page(userjs, window.wgULS("保存参数设置到 ", "儲存偏好設定到 ") + userjs);
        qiuwen_page.setCallbackParameters(e.target);
        qiuwen_page.load(Twinkle.config.writePrefs);
        return false;
      };
      Twinkle.config.writePrefs = (pageobj) => {
        const form = pageobj.getCallbackParameters();
        const newConfig = {
          optionsVersion: 2.1
        };
        const compare = (a, b) => {
          if (Array.isArray(a)) {
            if (a.length !== b.length) {
              return false;
            }
            a.sort();
            b.sort();
            var _iterator72 = _createForOfIteratorHelper(a.entries()), _step72;
            try {
              for (_iterator72.s(); !(_step72 = _iterator72.n()).done; ) {
                const [i, element] = _step72.value;
                if (typeof element === "object" && (element.label !== b[i].label || element.value !== b[i].value)) {
                  return false;
                } else if (element.toString() !== b[i].toString()) {
                  return false;
                }
              }
            } catch (err) {
              _iterator72.e(err);
            } finally {
              _iterator72.f();
            }
            return true;
          }
          return a === b;
        };
        $(Twinkle.config.sections).each((sectionkey, section) => {
          if (section.adminOnly && !Morebits.userIsSysop) {
            return;
          }
          $(section.preferences).each((prefkey, pref) => {
            let userValue;
            if (!pref.adminOnly || Morebits.userIsSysop) {
              if (!section.hidden) {
                switch (pref.type) {
                  case "boolean":
                    userValue = form[pref.name].checked;
                    break;
                  case "string":
                  // read from the input box or combo box
                  case "enum":
                    userValue = form[pref.name].value;
                    break;
                  case "integer":
                    userValue = Number.parseInt(form[pref.name].value, 10);
                    if (Number.isNaN(userValue)) {
                      Morebits.status.warn(window.wgULS("保存", "儲存"), "".concat(window.wgULS("您为 ", "您為 ") + pref.name, " 指定的值（").concat(pref.value).concat(window.wgULS("）不合法，会继续保存操作，但此值将会跳过。", "）不合法，會繼續儲存操作，但此值將會跳過。")));
                      userValue = null;
                    }
                    break;
                  case "set":
                    userValue = [];
                    if (pref.setDisplayOrder) {
                      var _iterator73 = _createForOfIteratorHelper(pref.setDisplayOrder), _step73;
                      try {
                        for (_iterator73.s(); !(_step73 = _iterator73.n()).done; ) {
                          const item = _step73.value;
                          if (form["".concat(pref.name, "_").concat(item)].checked) {
                            userValue[userValue.length] = item;
                          }
                        }
                      } catch (err) {
                        _iterator73.e(err);
                      } finally {
                        _iterator73.f();
                      }
                    } else {
                      for (var _i20 = 0, _Object$entries13 = Object.entries(pref.setValues); _i20 < _Object$entries13.length; _i20++) {
                        const [itemkey] = _Object$entries13[_i20];
                        if (form["".concat(pref.name, "_").concat(itemkey)].checked) {
                          userValue[userValue.length] = itemkey;
                        }
                      }
                    }
                    break;
                  case "customList":
                    userValue = $(form[pref.name]).data("value");
                    break;
                  default:
                    void mw.notify("twinkleconfig: 未知数据类型，属性 ".concat(pref.name), {
                      type: "warn",
                      tag: "twinkleconfig"
                    });
                    break;
                }
              } else if (Twinkle.prefs) {
                userValue = Twinkle.prefs[pref.name];
              }
            }
            if (userValue !== void 0 && !compare(userValue, Twinkle.defaultConfig[pref.name])) {
              newConfig[pref.name] = userValue;
            }
          });
        });
        const nowiki = "nowiki";
        let text = "// <".concat(nowiki, ">\n").concat(window.wgULS("// twinkleoptions.js：用户Twinkle参数设置文件\n//\n// 注：修改您的参数设置最简单的办法是使用\n// Twinkle参数设置面板，在[[".concat(Morebits.pageNameNorm, "]]。\n//\n// 这个文件是自动生成的，您所做的任何修改（除了\n// 以一种合法的JavaScript的方式来修改这些属性值）会\n// 在下一次您点击“保存”时被覆盖。\n// 修改此文件时，请记得使用合法的JavaScript。\n"), "// twinkleoptions.js：使用者Twinkle參數設定檔案\n//\n// 註：修改您的參數設定最簡單的辦法是使用\n// Twinkle參數設定面板，在[[".concat(Morebits.pageNameNorm, "]]。\n//\n// 這個檔案是自動產生的，您所做的任何修改（除了\n// 以一種合法的JavaScript的方式來修改這些屬性值）會\n// 在下一次您點擊「儲存」時被覆蓋。\n// 修改此檔案時，請記得使用合法的JavaScript。\n")));
        text += "\nwindow.Twinkle = window.Twinkle || {};\nwindow.Twinkle.prefs = window.Twinkle.prefs || {};\nwindow.Twinkle.prefs = ";
        text += JSON.stringify(newConfig, null, 2);
        text += ";\n\n".concat(window.wgULS("// twinkleoptions.js到此为止\n", "// twinkleoptions.js到此為止\n"), "// </").concat(nowiki, ">");
        pageobj.setPageText(text);
        pageobj.setEditSummary(window.wgULS("保存Twinkle参数设置：来自[[", "儲存Twinkle偏好設定：來自[[") + Morebits.pageNameNorm + window.wgULS("]]的自动编辑", "]]的自動編輯"));
        pageobj.setChangeTags(Twinkle.changeTags);
        pageobj.setCreateOption("recreate");
        pageobj.save(Twinkle.config.saveSuccess);
      };
      Twinkle.config.saveSuccess = (pageobj) => {
        pageobj.getStatusElement().info("成功");
        const noticebox = document.createElement("div");
        noticebox.className = "mw-message-box mw-message-box-success";
        noticebox.style.fontSize = "100%";
        noticebox.style.marginTop = "2em";
        noticebox.innerHTML = "<p><b>".concat(window.wgULS("您的Twinkle参数设置已被保存。", "您的Twinkle偏好設定已被儲存。"), "</b></p><p>").concat(window.wgULS("要看到这些更改，您可能需要", "要看到這些更改，您可能需要"), '<a href="').concat(mw.util.getUrl("QW:BYPASS"), '" title="QW:BYPASS"><b>').concat(window.wgULS("绕过浏览器缓存", "繞過瀏覽器快取"), "</b></a>。</p>");
        Morebits.status.root.appendChild(noticebox);
        const noticeclear = document.createElement("br");
        noticeclear.style.clear = "both";
        Morebits.status.root.appendChild(noticeclear);
      };
      Twinkle.addInitCallback(Twinkle.config.init);
    })(jQuery);
  }
});
//! src/Twinkle/Twinkle.js
(function() {
  var _twinkleLoad = _asyncToGenerator(function* () {
    yield Promise.resolve().then(() => (init_twinkle(), twinkle_exports));
    yield Promise.resolve().then(() => (init_twinklearv(), twinklearv_exports));
    yield Promise.resolve().then(() => (init_twinklewarn(), twinklewarn_exports));
    yield Promise.resolve().then(() => (init_twinkleblock(), twinkleblock_exports));
    yield Promise.resolve().then(() => (init_friendlytalkback(), friendlytalkback_exports));
    yield Promise.resolve().then(() => (init_twinklespeedy(), twinklespeedy_exports));
    yield Promise.resolve().then(() => (init_twinklecopyvio(), twinklecopyvio_exports));
    yield Promise.resolve().then(() => (init_twinklexfd(), twinklexfd_exports));
    yield Promise.resolve().then(() => (init_twinkleimage(), twinkleimage_exports));
    yield Promise.resolve().then(() => (init_twinkleprotect(), twinkleprotect_exports));
    yield Promise.resolve().then(() => (init_friendlytag(), friendlytag_exports));
    yield Promise.resolve().then(() => (init_twinklestub(), twinklestub_exports));
    yield Promise.resolve().then(() => (init_twinklediff(), twinklediff_exports));
    yield Promise.resolve().then(() => (init_twinkleunlink(), twinkleunlink_exports));
    yield Promise.resolve().then(() => (init_twinklefluff(), twinklefluff_exports));
    yield Promise.resolve().then(() => (init_twinklebatchdelete(), twinklebatchdelete_exports));
    yield Promise.resolve().then(() => (init_twinklebatchundelete(), twinklebatchundelete_exports));
    yield Promise.resolve().then(() => (init_twinklebatchprotect(), twinklebatchprotect_exports));
    yield Promise.resolve().then(() => (init_twinkleclose(), twinkleclose_exports));
    yield Promise.resolve().then(() => (init_twinkleconfig(), twinkleconfig_exports));
  });
  function twinkleLoad() {
    return _twinkleLoad.apply(this, arguments);
  }
  return twinkleLoad;
})()();

})();

/* </nowiki> */

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsic3JjL1R3aW5rbGUvbW9kdWxlcy9hcGkudHMiLCAic3JjL1R3aW5rbGUvbW9kdWxlcy90d2lua2xlLmpzIiwgInNyYy9Ud2lua2xlL21vZHVsZXMvdHdpbmtsZWFydi5qcyIsICJzcmMvVHdpbmtsZS9tb2R1bGVzL3R3aW5rbGV3YXJuLmpzIiwgInNyYy9Ud2lua2xlL21vZHVsZXMvdHdpbmtsZWJsb2NrLmpzIiwgInNyYy9Ud2lua2xlL21vZHVsZXMvZnJpZW5kbHl0YWxrYmFjay5qcyIsICJzcmMvVHdpbmtsZS9tb2R1bGVzL3R3aW5rbGVzcGVlZHkuanMiLCAic3JjL1R3aW5rbGUvbW9kdWxlcy90d2lua2xlY29weXZpby5qcyIsICJzcmMvVHdpbmtsZS9tb2R1bGVzL3R3aW5rbGV4ZmQuanMiLCAic3JjL1R3aW5rbGUvbW9kdWxlcy90d2lua2xlaW1hZ2UuanMiLCAic3JjL1R3aW5rbGUvbW9kdWxlcy90d2lua2xlcHJvdGVjdC5qcyIsICJzcmMvVHdpbmtsZS9tb2R1bGVzL2ZyaWVuZGx5dGFnLmpzIiwgInNyYy9Ud2lua2xlL21vZHVsZXMvdHdpbmtsZXN0dWIuanMiLCAic3JjL1R3aW5rbGUvbW9kdWxlcy90d2lua2xlZGlmZi5qcyIsICJzcmMvVHdpbmtsZS9tb2R1bGVzL3R3aW5rbGV1bmxpbmsuanMiLCAic3JjL1R3aW5rbGUvbW9kdWxlcy90d2lua2xlZmx1ZmYuanMiLCAic3JjL1R3aW5rbGUvbW9kdWxlcy90d2lua2xlYmF0Y2hkZWxldGUuanMiLCAic3JjL1R3aW5rbGUvbW9kdWxlcy90d2lua2xlYmF0Y2h1bmRlbGV0ZS5qcyIsICJzcmMvVHdpbmtsZS9tb2R1bGVzL3R3aW5rbGViYXRjaHByb3RlY3QuanMiLCAic3JjL1R3aW5rbGUvbW9kdWxlcy90d2lua2xlY2xvc2UuanMiLCAic3JjL1R3aW5rbGUvbW9kdWxlcy90d2lua2xlY29uZmlnLmpzIiwgInNyYy9Ud2lua2xlL1R3aW5rbGUuanMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImltcG9ydCB7aW5pdE13QXBpfSBmcm9tICdleHQuZ2FkZ2V0LlV0aWwnO1xuXG5jb25zdCBhcGk6IG13LkFwaSA9IGluaXRNd0FwaSgnbW9yZWJpdHMuanM7IFR3aW5rbGUvMS4xJyk7XG5cbmV4cG9ydCB7YXBpfTtcbiIsICIvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10cy1jb21tZW50XG4vLyBAdHMtbm9jaGVja1xuaW1wb3J0IHthcGl9IGZyb20gJy4vYXBpJztcbi8qISBUd2lua2xlLmpzIC0gdHdpbmtsZS5qcyAqL1xuKGZ1bmN0aW9uIHR3aW5rbGUoJCkge1xuXHRjb25zdCAkYm9keSA9ICQoJ2JvZHknKTtcblx0Y29uc3QgVHdpbmtsZSA9IHt9O1xuXHR3aW5kb3cuVHdpbmtsZSB8fD0gVHdpbmtsZTsgLy8gYWxsb3cgZ2xvYmFsIGFjY2Vzc1xuXHQvLyBXcmFwIHdpdGggYW5vbnltb3VzIGZ1bmN0aW9uXG5cdC8vIENoZWNrIGlmIGFjY291bnQgaXMgZXhwZXJpZW5jZWQgZW5vdWdoIHRvIHVzZSBUd2lua2xlXG5cdGlmICghTW9yZWJpdHMudXNlcklzSW5Hcm91cCgnYXV0b2NvbmZpcm1lZCcpICYmICFNb3JlYml0cy51c2VySXNJbkdyb3VwKCdjb25maXJtZWQnKSkge1xuXHRcdGNvbnNvbGUud2FybignW1R3aW5rbGVdIOmdnuehruiupOeUqOaIt+aIluiHquWKqOehruiupOeUqOaIt++8jFR3aW5rbGXkuI3kvJrov5DooYzjgIInKTtcblx0XHRyZXR1cm47XG5cdH1cblx0LyoqXG5cdCAqIFR3aW5rbGUtc3BlY2lmaWMgZGF0YSBzaGFyZWQgYnkgbXVsdGlwbGUgbW9kdWxlc1xuXHQgKiBMaWtlbHkgY3VzdG9taXplZCBwZXIgaW5zdGFsbGF0aW9uXG5cdCAqL1xuXHQvLyBDdXN0b20gY2hhbmdlIHRhZyhzKSB0byBiZSBhcHBsaWVkIHRvIGFsbCBUd2lua2xlIGFjdGlvbnMsIGNyZWF0ZSBhdCBTcGVjaWFsOlRhZ3Ncblx0VHdpbmtsZS5jaGFuZ2VUYWdzID0gJ1R3aW5rbGUnO1xuXHQvLyBBdmFpbGFibGUgZm9yIGFjdGlvbnMgdGhhdCBkb24ndCAoeWV0KSBzdXBwb3J0IHRhZ3Ncblx0VHdpbmtsZS5zdW1tYXJ5QWQgPSAn77yIW1tIOlRXfFR3aW5rbGVdXe+8iSc7XG5cdC8vIFZhcmlvdXMgaGF0bm90ZSB0ZW1wbGF0ZXMsIHVzZWQgd2hlbiB0YWdnaW5nIChjc2QveGZkL3RhZy9wcm9kL3Byb3RlY3QpIHRvIGVuc3VyZSBvcmRlclxuXHRUd2lua2xlLmhhdG5vdGVSZWdleCA9XG5cdFx0Jyg/OlNob3J0WyBfXWRlc2NyaXB0aW9uKXwoPzpSZWxsaW5rfEhhdG5vdGV8SEFUKXwoPzpNYWlufFvnu4bntLBdW+iKguevgF18TWFpblsgX11hcnRpY2xlc3zkuLtb5p2h5qKdXeebrnxIdXJyaWNhbmVbIF9dbWFpbnxb5p2h5qKdXeebrnzkuLt8W+mggemhtV3pnaJ85Li7W+mggemhtV3pnaJ85Li7W+mggemhtV185Li7W+mhjOmimF3nm658TWFpblsgX11hcnRpY2xlfEFQKXwoPzpXcm9uZ3RpdGxlfENvcnJlY3RbIF9ddGl0bGUpfCg/OuS4u+adoeebrua2iOatp+S5iXzkuLvmop3nm67mtojmrafnvql85raI5q2n5LmJ6ZO+5o6lfOa2iOatp+e+qemPiOaOpXzmtojmrafnvqnpgKPntZB85raI6L+efOa2iOmAo3zmtojmrafkuYnov57nu5N8RGlzYW1iTGlua3xOb3RlcmVmfERhYmxpbmspfCg/OkRpc3Rpbmd1aXNofOS4jeaYr3xOb3R85o+Q56S6fOa3t+a3hnzliIbliKV85YiG5YirfOWNgOWIpXzljLrliKt85pys5p2h55uu55qE5Li76aKY5LiN5pivfOacrOaineebrueahOS4u+mhjOS4jeaYr3zmnKzmnaHnm67kuLvpopjkuI3mmK985pys5qKd55uu5Li76aGM5LiN5pivfOadoeebruS4u+mimOS4jeaYr3zmop3nm67kuLvpoYzkuI3mmK985Li76aKY5LiN5pivfOS4u+mhjOS4jeaYr3xDb25mdXNlZHzljLrliIZ85Y2A5YiGfENvbmZ1c2lvbnxDb25mdXNlfFJlZGlyZWN0Tk9UfE1pc3NwZWxsaW5nKXwoPzpEaXN0aW5ndWlzaDJ8U2VsZkRpc3Rpbmd1aXNofE5vdDJ85LiN5pivMil8KD86Rm9yKXwoPzpEZXRhaWxzfEZ1cnRoZXJ8U2VlfOWPpuingXzlj6bopot8TW9yZXznm7jpl5zmop3nm65855u45YWz5p2h55uufERldGFpbHzop4F86KaLfOabtOWkmui1hOaWmXzmm7TlpJros4fmlpl8RnVydGhlclsgX11pbmZvcm1hdGlvbnzmm7TlpJrotYTorq985pu05aSa6LOH6KiKfE1vcmVbIF9daW5mb3JtYXRpb2585pu05aSa5L+h5oGvKXwoPzpTZWxmcmVmKXwoPzpBYm91dHxPdGhlcnVzZXM0fOWFs+S6jnzpl5zmlrwpfCg/Ok90aGVyWyBfXXVzZXN8T3RoZXJ1c2V85p2h55uu5raI5q2n5LmJfOaineebrua2iOatp+e+qXzku5bnlKh8T3RoZXJ1c2VzKXwoPzpPdGhlclsgX111c2VzIGxpc3R8T3RoZXJ1c2VsaXN0fOS4u+aineebrua2iOatp+e+qeWIl+ihqHzkuLvmnaHnm67mtojmrafkuYnliJfooah8T3RoZXJ1c2VzbGlzdHxBYm91dGxpc3R8QWJvdXRbIF9dbGlzdHxPdGhlcnVzZXNbIF9dbGlzdCl8KD86UmVkaXJlY3R86YeN5a6a5ZCR6Iez5q2kfFJlZGlyZWN0c1sgX11oZXJlfFJlZGlyZWN0WyBfXXRvKXwoPzpSZWRpcmVjdDJ85Li75qKd55uu5raI5q2n576pMnzkuLvmnaHnm67mtojmrafkuYkyfFJlZGlyfOmHjeWumuWQkeiHs+atpDIpfCg/OlJlZGlyZWN0Myl8KD86UmVkaXJlY3Q0KXwoPzpSZWRpcmVjdC1kaXN0aW5ndWlzaCl8KD86UmVkaXJlY3Qtc3lub255bSl8KD86UmVkaXJlY3QtbXVsdGkpfCg/OlNlZVsgX11XaWt0aW9uYXJ5fFNlZXdpa3QpfCg/OlNlZWFsc2985Y+C55yLfOWPg+eci3xTZWVbIF9dYWxzb3zlj4Lop4F85Y+D6KaLfEFsc28pfCg/OlNlZVsgX11hbHNvMnxTZWVhbHNvMnzkuI3ovYnmj5vlj4Popot85LiN6L2s5o2i5Y+C6KeBKXwoPzpPdGhlclsgX11wbGFjZXMpfCg/OkNvbnRyYXN0fOWwjeavlHzlr7nmr5QpJztcblx0VHdpbmtsZS5pbml0Q2FsbGJhY2tzID0gW107XG5cdC8qKlxuXHQgKiBBZGRzIGEgY2FsbGJhY2sgdG8gZXhlY3V0ZSB3aGVuIFR3aW5rbGUgaGFzIGxvYWRlZC5cblx0ICpcblx0ICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuY1xuXHQgKiBAcGFyYW0ge3N0cmluZ30gW25hbWVdIC0gbmFtZSBvZiBtb2R1bGUgdXNlZCB0byBjaGVjayBpZiBpcyBkaXNhYmxlZC5cblx0ICogSWYgbmFtZSBpcyBub3QgZ2l2ZW4sIG1vZHVsZSBpcyBsb2FkZWQgdW5jb25kaXRpb25hbGx5LlxuXHQgKi9cblx0VHdpbmtsZS5hZGRJbml0Q2FsbGJhY2sgPSAoZnVuYywgbmFtZSkgPT4ge1xuXHRcdFR3aW5rbGUuaW5pdENhbGxiYWNrc1tUd2lua2xlLmluaXRDYWxsYmFja3MubGVuZ3RoXSA9IHtcblx0XHRcdGZ1bmMsXG5cdFx0XHRuYW1lLFxuXHRcdH07XG5cdH07XG5cdFR3aW5rbGUuZGVmYXVsdENvbmZpZyA9IHt9O1xuXHQvKipcblx0ICogVGhpcyBob2xkcyB0aGUgZGVmYXVsdCBzZXQgb2YgcHJlZmVyZW5jZXMgdXNlZCBieSBUd2lua2xlLlxuXHQgKiBJdCBpcyBpbXBvcnRhbnQgdGhhdCBhbGwgbmV3IHByZWZlcmVuY2VzIGFkZGVkIGhlcmUsIGVzcGVjaWFsbHkgYWRtaW4tb25seSBvbmVzLCBhcmUgYWxzbyBhZGRlZCB0b1xuXHQgKiB8VHdpbmtsZS5jb25maWcuc2VjdGlvbnN8IGluIHR3aW5rbGVjb25maWcuanMsIHNvIHRoZXkgYXJlIGNvbmZpZ3VyYWJsZSB2aWEgdGhlIFR3aW5rbGUgcHJlZmVyZW5jZXMgcGFuZWwuXG5cdCAqIEZvciBoZWxwIG9uIHRoZSBhY3R1YWwgcHJlZmVyZW5jZXMsIHNlZSB0aGUgY29tbWVudHMgaW4gdHdpbmtsZWNvbmZpZy5qcy5cblx0ICpcblx0ICogRm9ybWVybHkgVHdpbmtsZS5kZWZhdWx0Q29uZmlnLnR3aW5rbGVcblx0ICovXG5cdFR3aW5rbGUuZGVmYXVsdENvbmZpZyA9IHtcblx0XHQvLyBHZW5lcmFsXG5cdFx0dXNlclRhbGtQYWdlTW9kZTogJ3RhYicsXG5cdFx0ZGlhbG9nTGFyZ2VGb250OiBmYWxzZSxcblx0XHRkaXNhYmxlZE1vZHVsZXM6IE1vcmViaXRzLnVzZXJJc1N5c29wID8gW10gOiBbJ2Jsb2NrJ10sXG5cdFx0Ly8gZGVmYXVsdCB0byBkaXNhYmxlIGJsb2NrIGZvciBub24tc3lzb3AsIGlmIGVuYWJsZSBtYW51YWxseSwgdGhleSBjYW4gb25seSB1c2UgaXQgdG8gdGFnIHVzZXJwYWdlXG5cdFx0ZGlzYWJsZWRTeXNvcE1vZHVsZXM6IFtdLFxuXHRcdC8vIEFSVlxuXHRcdHNwaVdhdGNoUmVwb3J0OiAneWVzJyxcblx0XHQvLyBCbG9ja1xuXHRcdGRlZmF1bHRUb0Jsb2NrNjQ6IGZhbHNlLFxuXHRcdGRlZmF1bHRUb1BhcnRpYWxCbG9ja3M6IGZhbHNlLFxuXHRcdGJsYW5rVGFsa3BhZ2VPbkluZGVmQmxvY2s6IGZhbHNlLFxuXHRcdHdhdGNoQmxvY2tOb3RpY2VzOiAneWVzJyxcblx0XHRjdXN0b21CbG9ja1JlYXNvbkxpc3Q6IFtdLFxuXHRcdC8vIEZsdWZmIChyZXZlcnQgYW5kIHJvbGxiYWNrKVxuXHRcdG9wZW5UYWxrUGFnZTogW10sXG5cdFx0b3BlblRhbGtQYWdlT25BdXRvUmV2ZXJ0OiBmYWxzZSxcblx0XHRyb2xsYmFja0luUGxhY2U6IGZhbHNlLFxuXHRcdG1hcmtSZXZlcnRlZFBhZ2VzQXNNaW5vcjogWyd2YW5kJ10sXG5cdFx0d2F0Y2hSZXZlcnRlZFBhZ2VzOiBbJ25vcm0nLCAndmFuZCcsICd0b3JldiddLFxuXHRcdHdhdGNoUmV2ZXJ0ZWRFeHBpcnk6ICd5ZXMnLFxuXHRcdG9mZmVyUmVhc29uT25Ob3JtYWxSZXZlcnQ6IHRydWUsXG5cdFx0Y29uZmlybU9uRmx1ZmY6IGZhbHNlLFxuXHRcdHNob3dSb2xsYmFja0xpbmtzOiBbJ2RpZmYnLCAnb3RoZXJzJ10sXG5cdFx0Y3VzdG9tUmV2ZXJ0U3VtbWFyeTogW10sXG5cdFx0Ly8gREkgKHR3aW5rbGVpbWFnZSlcblx0XHRub3RpZnlVc2VyT25EZWxpOiB0cnVlLFxuXHRcdGRlbGlXYXRjaFBhZ2U6ICdkZWZhdWx0Jyxcblx0XHRkZWxpV2F0Y2hVc2VyOiAnZGVmYXVsdCcsXG5cdFx0Ly8gUHJvdGVjdFxuXHRcdHdhdGNoUmVxdWVzdGVkUGFnZXM6ICd5ZXMnLFxuXHRcdHdhdGNoUFBUYWdnZWRQYWdlczogJ2RlZmF1bHQnLFxuXHRcdHdhdGNoUHJvdGVjdGVkUGFnZXM6ICdkZWZhdWx0Jyxcblx0XHQvLyBDU0Rcblx0XHRzcGVlZHlTZWxlY3Rpb25TdHlsZTogJ2J1dHRvbkNsaWNrJyxcblx0XHR3YXRjaFNwZWVkeVBhZ2VzOiBbJ2cxJywgJ2czJywgJ2c0JywgJ2c3JywgJ2c4J10sXG5cdFx0d2F0Y2hTcGVlZHlFeHBpcnk6ICd5ZXMnLFxuXHRcdG1hcmtTcGVlZHlQYWdlc0FzUGF0cm9sbGVkOiBmYWxzZSxcblx0XHR3YXRjaFNwZWVkeVVzZXI6ICcxIG1vbnRoJyxcblx0XHQvLyB0aGVzZSBuZXh0IHR3byBzaG91bGQgcHJvYmFibHkgYmUgaWRlbnRpY2FsIGJ5IGRlZmF1bHRcblx0XHRub3RpZnlVc2VyT25TcGVlZHlEZWxldGlvbk5vbWluYXRpb246IFtcblx0XHRcdCdkYicsXG5cdFx0XHQnZzEnLFxuXHRcdFx0J2cyJyxcblx0XHRcdCdnMycsXG5cdFx0XHQnZzQnLFxuXHRcdFx0J2c1Jyxcblx0XHRcdCdnNicsXG5cdFx0XHQnZzcnLFxuXHRcdFx0J2c4Jyxcblx0XHRcdCdnOScsXG5cdFx0XHQnYTEnLFxuXHRcdFx0J2EyJyxcblx0XHRcdCdhMycsXG5cdFx0XHQncjEnLFxuXHRcdFx0J3IyJyxcblx0XHRcdCdmMScsXG5cdFx0XHQnZjInLFxuXHRcdFx0J2YzJyxcblx0XHRcdCdmNCcsXG5cdFx0XHQnZjUnLFxuXHRcdFx0J28xJyxcblx0XHRcdCdvMicsXG5cdFx0XHQnbzMnLFxuXHRcdF0sXG5cdFx0d2FyblVzZXJPblNwZWVkeURlbGV0ZTogW1xuXHRcdFx0J2RiJyxcblx0XHRcdCdnMScsXG5cdFx0XHQnZzInLFxuXHRcdFx0J2czJyxcblx0XHRcdCdnNCcsXG5cdFx0XHQnZzUnLFxuXHRcdFx0J2c2Jyxcblx0XHRcdCdnNycsXG5cdFx0XHQnZzgnLFxuXHRcdFx0J2c5Jyxcblx0XHRcdCdhMScsXG5cdFx0XHQnYTInLFxuXHRcdFx0J2EzJyxcblx0XHRcdCdyMScsXG5cdFx0XHQncjInLFxuXHRcdFx0J2YxJyxcblx0XHRcdCdmMicsXG5cdFx0XHQnZjMnLFxuXHRcdFx0J2Y0Jyxcblx0XHRcdCdmNScsXG5cdFx0XHQnbzEnLFxuXHRcdFx0J28yJyxcblx0XHRcdCdvMycsXG5cdFx0XSxcblx0XHRwcm9tcHRGb3JTcGVlZHlEZWxldGlvblN1bW1hcnk6IFtdLFxuXHRcdG9wZW5Vc2VyVGFsa1BhZ2VPblNwZWVkeURlbGV0ZTogW10sXG5cdFx0ZGVsZXRlVGFsa1BhZ2VPbkRlbGV0ZTogdHJ1ZSxcblx0XHRkZWxldGVSZWRpcmVjdHNPbkRlbGV0ZTogdHJ1ZSxcblx0XHRkZWxldGVTeXNvcERlZmF1bHRUb0RlbGV0ZTogZmFsc2UsXG5cdFx0c3BlZWR5V2luZG93SGVpZ2h0OiA1MDAsXG5cdFx0c3BlZWR5V2luZG93V2lkdGg6IDgwMCxcblx0XHRsb2dTcGVlZHlOb21pbmF0aW9uczogdHJ1ZSxcblx0XHRzcGVlZHlMb2dQYWdlTmFtZTogJ0NTROaXpeW/lycsXG5cdFx0bm9Mb2dPblNwZWVkeU5vbWluYXRpb246IFsnbzEnXSxcblx0XHRlbmxhcmdlRzdJbnB1dDogZmFsc2UsXG5cdFx0Ly8gVW5saW5rXG5cdFx0dW5saW5rTmFtZXNwYWNlczogWycwJywgJzYnLCAnMTAnLCAnMTE4J10sXG5cdFx0Ly8gV2FyblxuXHRcdGRlZmF1bHRXYXJuaW5nR3JvdXA6ICcxJyxcblx0XHRjb21iaW5lZFNpbmdsZXRNZW51czogZmFsc2UsXG5cdFx0d2F0Y2hXYXJuaW5nczogJ3llcycsXG5cdFx0b2xkU2VsZWN0OiBmYWxzZSxcblx0XHRjdXN0b21XYXJuaW5nTGlzdDogW10sXG5cdFx0YXV0b01lbnVBZnRlclJvbGxiYWNrOiBmYWxzZSxcblx0XHQvLyBYZkRcblx0XHRsb2dYZmROb21pbmF0aW9uczogdHJ1ZSxcblx0XHR4ZmRMb2dQYWdlTmFtZTogJ1hmROaXpeW/lycsXG5cdFx0bm9Mb2dPblhmZE5vbWluYXRpb246IFtdLFxuXHRcdHhmZFdhdGNoRGlzY3Vzc2lvbjogJ2RlZmF1bHQnLFxuXHRcdHhmZFdhdGNoUGFnZTogJ2RlZmF1bHQnLFxuXHRcdHhmZFdhdGNoVXNlcjogJ2RlZmF1bHQnLFxuXHRcdG1hcmtYZmRQYWdlc0FzUGF0cm9sbGVkOiB0cnVlLFxuXHRcdEZ3ZENzZFRvWGZkOiBNb3JlYml0cy51c2VySXNTeXNvcCxcblx0XHRhZmREZWZhdWx0Q2F0ZWdvcnk6ICdkZWxldGUnLFxuXHRcdGFmZEZhbWVEZWZhdWx0UmVhc29uOiAn5rKh5pyJ6Laz5aSf55qE5Y+v6Z2g5p2l5rqQ6K+B5piO5q2k5p2h55uu56ym5ZCIW1tRaXV3ZW465pS25b2V5qCH5YeGfOaUtuW9leagh+WHhl1dJyxcblx0XHRhZmRTdWJzdHViRGVmYXVsdFJlYXNvbjogJ+i/h+acn+Wwj+Wwj+S9nOWTgScsXG5cdFx0WGZkQ2xvc2U6IE1vcmViaXRzLnVzZXJJc1N5c29wID8gJ2FsbCcgOiAnaGlkZScsXG5cdFx0Ly8gQ29weXZpb1xuXHRcdGNvcHl2aW9XYXRjaFBhZ2U6ICd5ZXMnLFxuXHRcdGNvcHl2aW9XYXRjaFVzZXI6ICd5ZXMnLFxuXHRcdG1hcmtDb3B5dmlvUGFnZXNBc1BhdHJvbGxlZDogdHJ1ZSxcblx0XHQvLyBIaWRkZW4gcHJlZmVyZW5jZXNcblx0XHRhdXRvbGV2ZWxTdGFsZURheXM6IDMsXG5cdFx0cmV2ZXJ0TWF4UmV2aXNpb25zOiA1MCxcblx0XHQvLyBpbnRlbnRpb25hbGx5IGxpbWl0ZWRcblx0XHRiYXRjaE1heDogNTAwMCxcblx0XHRiYXRjaENodW5rczogNTAsXG5cdFx0Y29uZmlnUGFnZTogJ0hlbHA6VHdpbmtsZS/lj4LmlbDorr7nva4nLFxuXHRcdHByb2plY3ROYW1lc3BhY2VOYW1lOiBtdy5jb25maWcuZ2V0KCd3Z0Zvcm1hdHRlZE5hbWVzcGFjZXMnKVs0XSxcblx0XHRzYW5kYm94UGFnZTogJ1FpdXdlbjrmspnnm5InLFxuXHRcdC8vIERlcHJlY2F0ZWQgb3B0aW9ucywgYXMgYSBmYWxsYmFjayBmb3IgYWRkLW9uIHNjcmlwdHMvbW9kdWxlc1xuXHRcdHN1bW1hcnlBZDogJ++8iFtbSDpUV3xUd2lua2xlXV3vvIknLFxuXHRcdGRlbGV0aW9uU3VtbWFyeUFkOiAn77yIW1tIOlRXfFR3aW5rbGVdXe+8iScsXG5cdFx0cHJvdGVjdGlvblN1bW1hcnlBZDogJ++8iFtbSDpUV3xUd2lua2xlXV3vvIknLFxuXHRcdGJsb2NrU3VtbWFyeUFkOiAn77yIW1tIOlRXfFR3aW5rbGVdXe+8iScsXG5cdFx0Ly8gVGFnXG5cdFx0Z3JvdXBCeURlZmF1bHQ6IHRydWUsXG5cdFx0d2F0Y2hUYWdnZWRQYWdlczogJ3llcycsXG5cdFx0d2F0Y2hNZXJnZURpc2N1c3Npb25zOiAneWVzJyxcblx0XHRtYXJrVGFnZ2VkUGFnZXNBc01pbm9yOiBmYWxzZSxcblx0XHRtYXJrVGFnZ2VkUGFnZXNBc1BhdHJvbGxlZDogdHJ1ZSxcblx0XHR0YWdBcnRpY2xlU29ydE9yZGVyOiAnY2F0Jyxcblx0XHRjdXN0b21UYWdMaXN0OiBbXSxcblx0XHRjdXN0b21GaWxlVGFnTGlzdDogW10sXG5cdFx0Y3VzdG9tUmVkaXJlY3RUYWdMaXN0OiBbXSxcblx0XHQvLyBTdHViXG5cdFx0d2F0Y2hTdHViYmVkUGFnZXM6IGZhbHNlLFxuXHRcdG1hcmtTdHViYmVkUGFnZXNBc01pbm9yOiBmYWxzZSxcblx0XHRtYXJrU3R1YmJlZFBhZ2VzQXNQYXRyb2xsZWQ6IHRydWUsXG5cdFx0c3R1YkFydGljbGVTb3J0T3JkZXI6ICdjYXQnLFxuXHRcdGN1c3RvbVN0dWJMaXN0OiBbXSxcblx0XHQvLyBUYWxrYmFja1xuXHRcdG1hcmtUYWxrYmFja0FzTWlub3I6IHRydWUsXG5cdFx0aW5zZXJ0VGFsa2JhY2tTaWduYXR1cmU6IHRydWUsXG5cdFx0Ly8gYWx3YXlzIHNpZ24gdGFsa2JhY2sgdGVtcGxhdGVzXG5cdFx0dGFsa2JhY2tIZWFkaW5nOiB3aW5kb3cud2dVTFMoJ+WbnuWkjemAmuWRiicsICflm57opobpgJrlkYonKSxcblx0XHRtYWlsSGVhZGluZzogd2luZG93LndnVUxTKCfmgqjmnInmlrDpgq7ku7bvvIEnLCAn5oKo5pyJ5paw6YO15Lu277yBJyksXG5cdH07XG5cdC8vIG5vdyBzb21lIHNraW4gZGVwZW5kZW50IGNvbmZpZy5cblx0c3dpdGNoIChtdy5jb25maWcuZ2V0KCdza2luJykpIHtcblx0XHRjYXNlICd2ZWN0b3InOlxuXHRcdGNhc2UgJ3ZlY3Rvci0yMDIyJzpcblx0XHRcdFR3aW5rbGUuZGVmYXVsdENvbmZpZy5wb3J0bGV0QXJlYSA9ICdyaWdodC1uYXZpZ2F0aW9uJztcblx0XHRcdFR3aW5rbGUuZGVmYXVsdENvbmZpZy5wb3J0bGV0SWQgPSAncC10d2lua2xlJztcblx0XHRcdFR3aW5rbGUuZGVmYXVsdENvbmZpZy5wb3J0bGV0TmFtZSA9ICdUVyc7XG5cdFx0XHRUd2lua2xlLmRlZmF1bHRDb25maWcucG9ydGxldFR5cGUgPSAnbWVudSc7XG5cdFx0XHRUd2lua2xlLmRlZmF1bHRDb25maWcucG9ydGxldE5leHQgPSAncC1zZWFyY2gnO1xuXHRcdFx0YnJlYWs7XG5cdFx0Y2FzZSAnZ29uZ2JpJzpcblx0XHRcdFR3aW5rbGUuZGVmYXVsdENvbmZpZy5wb3J0bGV0QXJlYSA9XG5cdFx0XHRcdCRib2R5LmZpbmQoJyNwYWdlLXRvb2xzIC5zaWRlYmFyLWlubmVyJykubGVuZ3RoID4gMFxuXHRcdFx0XHRcdD8gJyNwYWdlLXRvb2xzIC5zaWRlYmFyLWlubmVyJ1xuXHRcdFx0XHRcdDogJyNwYWdlLW1vcmUgLnNpZGViYXItaW5uZXInO1xuXHRcdFx0VHdpbmtsZS5kZWZhdWx0Q29uZmlnLnBvcnRsZXRJZCA9ICdwLXR3aW5rbGUnO1xuXHRcdFx0VHdpbmtsZS5kZWZhdWx0Q29uZmlnLnBvcnRsZXROYW1lID0gJ1R3aW5rbGUnO1xuXHRcdFx0VHdpbmtsZS5kZWZhdWx0Q29uZmlnLnBvcnRsZXRUeXBlID0gbnVsbDtcblx0XHRcdFR3aW5rbGUuZGVmYXVsdENvbmZpZy5wb3J0bGV0TmV4dCA9XG5cdFx0XHRcdCRib2R5LmZpbmQoJyNwYWdlLXRvb2xzIC5zaWRlYmFyLWlubmVyJykubGVuZ3RoID4gMCA/ICdwYWdlLW1vcmUnIDogbnVsbDtcblx0XHRcdGJyZWFrO1xuXHRcdGNhc2UgJ2NpdGl6ZW4nOlxuXHRcdFx0VHdpbmtsZS5kZWZhdWx0Q29uZmlnLnBvcnRsZXRBcmVhID0gJyNwYWdlLWFjdGlvbnMtbW9yZV9fY2FyZCc7XG5cdFx0XHRUd2lua2xlLmRlZmF1bHRDb25maWcucG9ydGxldElkID0gJ3AtdHdpbmtsZSc7XG5cdFx0XHRUd2lua2xlLmRlZmF1bHRDb25maWcucG9ydGxldE5hbWUgPSAnVHdpbmtsZSc7XG5cdFx0XHRUd2lua2xlLmRlZmF1bHRDb25maWcucG9ydGxldFR5cGUgPSAnbmF2Jztcblx0XHRcdFR3aW5rbGUuZGVmYXVsdENvbmZpZy5wb3J0bGV0TmV4dCA9ICdwLXRiJztcblx0XHRcdGJyZWFrO1xuXHRcdGRlZmF1bHQ6XG5cdFx0XHRUd2lua2xlLmRlZmF1bHRDb25maWcucG9ydGxldEFyZWEgPSBudWxsO1xuXHRcdFx0VHdpbmtsZS5kZWZhdWx0Q29uZmlnLnBvcnRsZXRJZCA9ICdwLWNhY3Rpb25zJztcblx0XHRcdFR3aW5rbGUuZGVmYXVsdENvbmZpZy5wb3J0bGV0TmFtZSA9IG51bGw7XG5cdFx0XHRUd2lua2xlLmRlZmF1bHRDb25maWcucG9ydGxldFR5cGUgPSBudWxsO1xuXHRcdFx0VHdpbmtsZS5kZWZhdWx0Q29uZmlnLnBvcnRsZXROZXh0ID0gbnVsbDtcblx0fVxuXHRUd2lua2xlLmdldFByZWYgPSAobmFtZSkgPT4ge1xuXHRcdGlmICh0eXBlb2YgVHdpbmtsZS5wcmVmcyA9PT0gJ29iamVjdCcgJiYgVHdpbmtsZS5wcmVmc1tuYW1lXSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRyZXR1cm4gVHdpbmtsZS5wcmVmc1tuYW1lXTtcblx0XHR9XG5cdFx0Ly8gT2xkIHByZWZlcmVuY2VzIGZvcm1hdCwgdXNlZCBiZWZvcmUgdHdpbmtsZW9wdGlvbnMuanMgd2FzIGEgdGhpbmdcblx0XHRpZiAodHlwZW9mIHdpbmRvdy5Ud2lua2xlQ29uZmlnID09PSAnb2JqZWN0JyAmJiB3aW5kb3cuVHdpbmtsZUNvbmZpZ1tuYW1lXSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRyZXR1cm4gd2luZG93LlR3aW5rbGVDb25maWdbbmFtZV07XG5cdFx0fVxuXHRcdHJldHVybiBUd2lua2xlLmRlZmF1bHRDb25maWdbbmFtZV07XG5cdH07XG5cdC8qKlxuXHQgKiAqKioqKioqKioqKioqKioqIFR3aW5rbGUuYWRkUG9ydGxldCgpICoqKioqKioqKioqKioqKipcblx0ICpcblx0ICogQWRkcyBhIHBvcnRsZXQgbWVudSB0byBvbmUgb2YgdGhlIG5hdmlnYXRpb24gYXJlYXMgb24gdGhlIHBhZ2UuXG5cdCAqIFRoaXMgaXMgbmVjZXNzYXJpbHkgcXVpdGUgYSBoYWNrIHNpbmNlIHNraW5zLCBuYXZpZ2F0aW9uIGFyZWFzLCBhbmRcblx0ICogcG9ydGxldCBtZW51IHR5cGVzIGFsbCB3b3JrIHNsaWdodGx5IGRpZmZlcmVudC5cblx0ICpcblx0ICogQXZhaWxhYmxlIG5hdmlnYXRpb24gYXJlYXMgZGVwZW5kIG9uIHRoZSBza2luIHVzZWQuXG5cdCAqIFZlY3Rvcjpcblx0ICogLSBGb3IgZWFjaCBvcHRpb24sIHRoZSBvdXRlciBuYXYgY2xhc3MgY29udGFpbnMgXCJ2ZWN0b3ItbWVudVwiLCB0aGUgaW5uZXIgZGl2IGNsYXNzIGlzIFwidmVjdG9yLW1lbnUtY29udGVudFwiLCBhbmQgdGhlIHVsIGlzIFwidmVjdG9yLW1lbnUtY29udGVudC1saXN0XCJcblx0ICogLSBcIm13LXBhbmVsXCIsIG91dGVyIG5hdiBjbGFzcyBjb250YWlucyBcInZlY3Rvci1tZW51LXBvcnRhbFwiLiBFeGlzdGluZyBwb3J0bGV0cy9lbGVtZW50czogXCJwLWxvZ29cIiwgXCJwLW5hdmlnYXRpb25cIiwgXCJwLWludGVyYWN0aW9uXCIsIFwicC10YlwiLCBcInAtY29sbC1wcmludF9leHBvcnRcIlxuXHQgKiAtIFwibGVmdC1uYXZpZ2F0aW9uXCIsIG91dGVyIG5hdiBjbGFzcyBjb250YWlucyBcInZlY3Rvci1tZW51LXRhYnNcIiBvciBcInZlY3Rvci1tZW51LWRyb3Bkb3duXCIuIEV4aXN0aW5nIHBvcnRsZXRzOiBcInAtbmFtZXNwYWNlc1wiLCBcInAtdmFyaWFudHNcIiAobWVudSlcblx0ICogLSBcInJpZ2h0LW5hdmlnYXRpb25cIiwgb3V0ZXIgbmF2IGNsYXNzIGNvbnRhaW5zIFwidmVjdG9yLW1lbnUtdGFic1wiIG9yIFwidmVjdG9yLW1lbnUtZHJvcGRvd25cIi4gRXhpc3RpbmcgcG9ydGxldHM6IFwicC12aWV3c1wiLCBcInAtY2FjdGlvbnNcIiAobWVudSksIFwicC1zZWFyY2hcIlxuXHQgKiAtIFNwZWNpYWwgbGF5b3V0IG9mIHAtcGVyc29uYWwgcG9ydGxldCAocGFydCBvZiBcImhlYWRcIikgdGhyb3VnaCBzcGVjaWFsaXplZCBzdHlsZXMuXG5cdCAqXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSBuYXZpZ2F0aW9uIC0tIGlkIG9mIHRoZSB0YXJnZXQgbmF2aWdhdGlvbiBhcmVhIChza2luIGRlcGVuZGFudCwgb24gdmVjdG9yIGVpdGhlciBvZiBcImxlZnQtbmF2aWdhdGlvblwiLCBcInJpZ2h0LW5hdmlnYXRpb25cIiwgb3IgXCJtdy1wYW5lbFwiKVxuXHQgKiBAcGFyYW0ge3N0cmluZ30gaWQgLS0gaWQgb2YgdGhlIHBvcnRsZXQgbWVudSB0byBjcmVhdGUsIHByZWZlcmFibHkgc3RhcnQgd2l0aCBcInAtXCIuXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0IC0tIG5hbWUgb2YgdGhlIHBvcnRsZXQgbWVudSB0byBjcmVhdGUuIFZpc2liaWxpdHkgZGVwZW5kcyBvbiB0aGUgY2xhc3MgdXNlZC5cblx0ICogQHBhcmFtIHtzdHJpbmd9IHR5cGUgLS0gdHlwZSBvZiBwb3J0bGV0LiBDdXJyZW50bHkgb25seSB1c2VkIGZvciB0aGUgdmVjdG9yIG5vbi1zaWRlYmFyIHBvcnRsZXRzLCBwYXNzIFwibWVudVwiIHRvIG1ha2UgdGhpcyBwb3J0bGV0IGEgZHJvcCBkb3duIG1lbnUuXG5cdCAqIEBwYXJhbSB7Tm9kZX0gbmV4dG5vZGVpZCAtLSB0aGUgaWQgb2YgdGhlIG5vZGUgYmVmb3JlIHdoaWNoIHRoZSBuZXcgaXRlbSBzaG91bGQgYmUgYWRkZWQsIHNob3VsZCBiZSBhbm90aGVyIGl0ZW0gaW4gdGhlIHNhbWUgbGlzdCwgb3IgdW5kZWZpbmVkIHRvIHBsYWNlIGl0IGF0IHRoZSBlbmQuXG5cdCAqXG5cdCAqIEByZXR1cm4ge05vZGV9IC0tIHRoZSBET00gbm9kZSBvZiB0aGUgbmV3IGl0ZW0gKGEgRElWIGVsZW1lbnQpIG9yIG51bGxcblx0ICovXG5cdFR3aW5rbGUuYWRkUG9ydGxldCA9IChuYXZpZ2F0aW9uLCBpZCwgdGV4dCwgdHlwZSwgbmV4dG5vZGVpZCkgPT4ge1xuXHRcdC8vIHNhbml0eSBjaGVja3MsIGFuZCBnZXQgcmVxdWlyZWQgRE9NIG5vZGVzXG5cdFx0Y29uc3Qgcm9vdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoL14oPzojfFxcLikvLnRlc3QobmF2aWdhdGlvbikgPyBuYXZpZ2F0aW9uIDogYCMke25hdmlnYXRpb259YCk7XG5cdFx0aWYgKCFyb290KSB7XG5cdFx0XHRyZXR1cm4gbnVsbDtcblx0XHR9XG5cdFx0Y29uc3QgaXRlbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lkfWApO1xuXHRcdGlmIChpdGVtKSB7XG5cdFx0XHRpZiAoaXRlbS5wYXJlbnROb2RlICYmIGl0ZW0ucGFyZW50Tm9kZSA9PT0gcm9vdCkge1xuXHRcdFx0XHRyZXR1cm4gaXRlbTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBudWxsO1xuXHRcdH1cblx0XHRsZXQgbmV4dG5vZGU7XG5cdFx0aWYgKG5leHRub2RlaWQpIHtcblx0XHRcdG5leHRub2RlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgIyR7bmV4dG5vZGVpZH1gKTtcblx0XHR9XG5cdFx0Ly8gdmVyaWZ5L25vcm1hbGl6ZSBpbnB1dFxuXHRcdGNvbnN0IHNraW4gPSBtdy5jb25maWcuZ2V0KCdza2luJyk7XG5cdFx0aWYgKFxuXHRcdFx0KHNraW4gIT09ICd2ZWN0b3InICYmIHNraW4gIT09ICd2ZWN0b3ItMjAyMicpIHx8XG5cdFx0XHQobmF2aWdhdGlvbiAhPT0gJ2xlZnQtbmF2aWdhdGlvbicgJiYgbmF2aWdhdGlvbiAhPT0gJ3JpZ2h0LW5hdmlnYXRpb24nKVxuXHRcdCkge1xuXHRcdFx0dHlwZSA9IG51bGw7IC8vIG1lbnUgc3VwcG9ydGVkIG9ubHkgaW4gdmVjdG9yJ3MgI2xlZnQtbmF2aWdhdGlvbiAmICNyaWdodC1uYXZpZ2F0aW9uXG5cdFx0fVxuXHRcdGxldCBvdXRlck5hdkNsYXNzO1xuXHRcdGxldCBpbm5lckRpdkNsYXNzO1xuXHRcdGxldCB1bENsYXNzTmFtZTtcblx0XHRzd2l0Y2ggKHNraW4pIHtcblx0XHRcdGNhc2UgJ3ZlY3Rvcic6XG5cdFx0XHRjYXNlICd2ZWN0b3ItMjAyMic6XG5cdFx0XHRcdC8vIFhYWDogcG9ydGFsIGRvZXNuJ3Qgd29ya1xuXHRcdFx0XHRpZiAobmF2aWdhdGlvbiAhPT0gJ3BvcnRhbCcgJiYgbmF2aWdhdGlvbiAhPT0gJ2xlZnQtbmF2aWdhdGlvbicgJiYgbmF2aWdhdGlvbiAhPT0gJ3JpZ2h0LW5hdmlnYXRpb24nKSB7XG5cdFx0XHRcdFx0bmF2aWdhdGlvbiA9ICdtdy1wYW5lbCc7XG5cdFx0XHRcdH1cblx0XHRcdFx0b3V0ZXJOYXZDbGFzcyA9ICdtdy1wb3J0bGV0IHZlY3Rvci1tZW51Jztcblx0XHRcdFx0aWYgKG5hdmlnYXRpb24gPT09ICdtdy1wYW5lbCcpIHtcblx0XHRcdFx0XHRvdXRlck5hdkNsYXNzICs9ICcgdmVjdG9yLW1lbnUtcG9ydGFsJztcblx0XHRcdFx0fSBlbHNlIGlmICh0eXBlID09PSAnbWVudScpIHtcblx0XHRcdFx0XHRvdXRlck5hdkNsYXNzICs9ICcgdmVjdG9yLW1lbnUtZHJvcGRvd24gdmVjdG9yLWRyb3Bkb3duIHZlY3Rvci1tZW51LWRyb3Bkb3duLW5vaWNvbic7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0b3V0ZXJOYXZDbGFzcyArPSAnIHZlY3Rvci1tZW51LXRhYnMnO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlubmVyRGl2Q2xhc3MgPSAndmVjdG9yLW1lbnUtY29udGVudCB2ZWN0b3ItZHJvcGRvd24tY29udGVudCc7XG5cdFx0XHRcdHVsQ2xhc3NOYW1lID0gJ3ZlY3Rvci1tZW51LWNvbnRlbnQtbGlzdCc7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnZ29uZ2JpJzpcblx0XHRcdFx0b3V0ZXJOYXZDbGFzcyA9ICdtdy1wb3J0bGV0Jztcblx0XHRcdFx0aW5uZXJEaXZDbGFzcyA9ICdtdy1wb3J0bGV0LWJvZHknO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ2NpdGl6ZW4nOlxuXHRcdFx0XHRvdXRlck5hdkNsYXNzID0gJ2NpdGl6ZW4tbWVudSBtdy1wb3J0bGV0Jztcblx0XHRcdFx0aW5uZXJEaXZDbGFzcyA9ICdjaXRpemVuLW1lbnVfX2NvbnRlbnQgbXctcG9ydGxldC10d2lua2xlJztcblx0XHRcdFx0dWxDbGFzc05hbWUgPSAnY2l0aXplbi1tZW51X19jb250ZW50LWxpc3QnO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdG5hdmlnYXRpb24gPSAnY29sdW1uLW9uZSc7XG5cdFx0XHRcdG91dGVyTmF2Q2xhc3MgPSAncG9ydGxldCc7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdH1cblx0XHQvLyBCdWlsZCB0aGUgRE9NIGVsZW1lbnRzLlxuXHRcdGxldCBvdXRlck5hdjtcblx0XHRsZXQgaGVhZGluZztcblx0XHRpZiAoc2tpbiA9PT0gJ3ZlY3Rvci0yMDIyJykge1xuXHRcdFx0b3V0ZXJOYXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblx0XHRcdGhlYWRpbmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRvdXRlck5hdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ25hdicpO1xuXHRcdFx0aGVhZGluZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gzJyk7XG5cdFx0fVxuXHRcdG91dGVyTmF2LnNldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbGxlZGJ5JywgYCR7aWR9LWxhYmVsYCk7XG5cdFx0Ly8gVGhlIGZvbGxvd2luZyBjbGFzc2VzIGFyZSB1c2VkIGhlcmUgKG91dGVyTmF2Q2xhc3MpOlxuXHRcdC8vICogbXctcG9ydGxldCB2ZWN0b3ItbWVudSB2ZWN0b3ItbWVudS0qXG5cdFx0Ly8gKiBtdy1wb3J0bGV0XG5cdFx0Ly8gKiBjb2x1bW4tb25lXG5cdFx0Ly8gVmVjdG9yIGdldHRpbmcgdmVjdG9yLW1lbnUtZW1wdHkgRklYTUUgVE9ET1xuXHRcdG91dGVyTmF2LmNsYXNzTmFtZSA9IGAke291dGVyTmF2Q2xhc3N9IGVtcHR5UG9ydGxldGA7XG5cdFx0b3V0ZXJOYXYuaWQgPSBpZDtcblx0XHRpZiAobmV4dG5vZGUgJiYgbmV4dG5vZGUucGFyZW50Tm9kZSA9PT0gcm9vdCkge1xuXHRcdFx0cm9vdC5pbnNlcnRCZWZvcmUob3V0ZXJOYXYsIG5leHRub2RlKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cm9vdC5hcHBlbmRDaGlsZChvdXRlck5hdik7XG5cdFx0fVxuXHRcdGhlYWRpbmcuaWQgPSBgJHtpZH0tbGFiZWxgO1xuXHRcdGNvbnN0IHVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcblx0XHRpZiAoc2tpbiA9PT0gJ3ZlY3RvcicgfHwgc2tpbiA9PT0gJ3ZlY3Rvci0yMDIyJykge1xuXHRcdFx0aGVhZGluZy5zZXRBdHRyaWJ1dGUoJ2ZvcicsIGAke2lkfS1kcm9wZG93bi1jaGVja2JveGApO1xuXHRcdFx0dWwuY2xhc3NOYW1lID0gJ3ZlY3Rvci1tZW51LWNvbnRlbnQtbGlzdCc7XG5cdFx0XHRoZWFkaW5nLmNsYXNzTmFtZSA9ICd2ZWN0b3ItbWVudS1oZWFkaW5nIHZlY3Rvci1kcm9wZG93bi1sYWJlbCc7XG5cdFx0XHQvLyBhZGQgaW52aXNpYmxlIGNoZWNrYm94IHRvIGtlZXAgbWVudSBvcGVuIHdoZW4gY2xpY2tlZFxuXHRcdFx0Ly8gc2ltaWxhciB0byB0aGUgcC1jYWN0aW9ucyAoXCJNb3JlXCIpIG1lbnVcblx0XHRcdGlmIChvdXRlck5hdkNsYXNzLmluY2x1ZGVzKCd2ZWN0b3ItbWVudS1kcm9wZG93bicpKSB7XG5cdFx0XHRcdGNvbnN0IGNoa2JveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG5cdFx0XHRcdGNoa2JveC5pZCA9IGAke2lkfS1kcm9wZG93bi1jaGVja2JveGA7XG5cdFx0XHRcdGNoa2JveC5jbGFzc05hbWUgPSAndmVjdG9yLW1lbnUtY2hlY2tib3ggdmVjdG9yLWRyb3Bkb3duLWNoZWNrYm94Jztcblx0XHRcdFx0Y2hrYm94LnNldEF0dHJpYnV0ZSgndHlwZScsICdjaGVja2JveCcpO1xuXHRcdFx0XHRjaGtib3guc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsbGVkYnknLCBgJHtpZH0tbGFiZWxgKTtcblx0XHRcdFx0b3V0ZXJOYXYuYXBwZW5kQ2hpbGQoY2hrYm94KTtcblx0XHRcdFx0Ly8gVmVjdG9yIGdldHMgaXRzIHRpdGxlIGluIGEgc3BhbjsgYWxsIG90aGVycyBleGNlcHRcblx0XHRcdFx0Ly8gZ29uZ2JpIGhhdmUgbm8gdGl0bGUsIGFuZCBpdCBoYXMgbm8gc3BhblxuXHRcdFx0XHRjb25zdCBzcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuXHRcdFx0XHRzcGFuLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHRleHQpKTtcblx0XHRcdFx0aGVhZGluZy5hcHBlbmRDaGlsZChzcGFuKTtcblx0XHRcdFx0Y29uc3QgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcblx0XHRcdFx0YS5ocmVmID0gJyMnO1xuXHRcdFx0XHQkKGEpLm9uKCdjbGljaycsIChlKSA9PiB7XG5cdFx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHR9KTtcblx0XHRcdFx0aGVhZGluZy5hcHBlbmRDaGlsZChhKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gQmFzaWNhbGx5IGp1c3QgR29uZ2JpXG5cdFx0XHRpZiAodWxDbGFzc05hbWUpIHtcblx0XHRcdFx0dWwuY2xhc3NOYW1lID0gdWxDbGFzc05hbWU7XG5cdFx0XHR9XG5cdFx0XHRoZWFkaW5nLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHRleHQpKTtcblx0XHR9XG5cdFx0b3V0ZXJOYXYuYXBwZW5kQ2hpbGQoaGVhZGluZyk7XG5cdFx0aWYgKGlubmVyRGl2Q2xhc3MpIHtcblx0XHRcdGNvbnN0IGlubmVyRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cdFx0XHQvLyBUaGUgZm9sbG93aW5nIGNsYXNzZXMgYXJlIHVzZWQgaGVyZSAoaW5uZXJEaXZDbGFzcyk6XG5cdFx0XHQvLyAqIHZlY3Rvci1tZW51LWNvbnRlbnRcblx0XHRcdC8vICogbXctcG9ydGxldC1ib2R5XG5cdFx0XHQvLyAqIG13LXBvcnRsZXQtdHdpbmtsZVxuXHRcdFx0Ly8gKiBwb3J0bGV0XG5cdFx0XHRpbm5lckRpdi5jbGFzc05hbWUgPSBpbm5lckRpdkNsYXNzO1xuXHRcdFx0aW5uZXJEaXYuYXBwZW5kQ2hpbGQodWwpO1xuXHRcdFx0b3V0ZXJOYXYuYXBwZW5kQ2hpbGQoaW5uZXJEaXYpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRvdXRlck5hdi5hcHBlbmRDaGlsZCh1bCk7XG5cdFx0fVxuXHRcdHJldHVybiBvdXRlck5hdjtcblx0fTtcblx0LyoqXG5cdCAqICoqKioqKioqKioqKioqKiogVHdpbmtsZS5hZGRQb3J0bGV0TGluaygpICoqKioqKioqKioqKioqKipcblx0ICogQnVpbGRzIGEgcG9ydGxldCBtZW51IGlmIGl0IGRvZXNuJ3QgZXhpc3QgeWV0LCBhbmQgYWRkIHRoZSBwb3J0bGV0IGxpbmsuXG5cdCAqXG5cdCAqIEBwYXJhbSB7c3RyaW5nfEZ1bmN0aW9ufSB0YXNrIC0tIEVpdGhlciBhIFVSTCBmb3IgdGhlIHBvcnRsZXQgbGluayBvciBhIGZ1bmN0aW9uIHRvIGV4ZWN1dGUuXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0XG5cdCAqIEBwYXJhbSB7c3RyaW5nfSBpZFxuXHQgKiBAcGFyYW0ge3N0cmluZ30gdG9vbHRpcFxuXHQgKiBAcmV0dXJuIHtPYmplY3R9IGxpbmtcblx0ICovXG5cdFR3aW5rbGUuYWRkUG9ydGxldExpbmsgPSAodGFzaywgdGV4dCwgaWQsIHRvb2x0aXApID0+IHtcblx0XHRpZiAoVHdpbmtsZS5nZXRQcmVmKCdwb3J0bGV0QXJlYScpICE9PSBudWxsKSB7XG5cdFx0XHRUd2lua2xlLmFkZFBvcnRsZXQoXG5cdFx0XHRcdFR3aW5rbGUuZ2V0UHJlZigncG9ydGxldEFyZWEnKSxcblx0XHRcdFx0VHdpbmtsZS5nZXRQcmVmKCdwb3J0bGV0SWQnKSxcblx0XHRcdFx0VHdpbmtsZS5nZXRQcmVmKCdwb3J0bGV0TmFtZScpLFxuXHRcdFx0XHRUd2lua2xlLmdldFByZWYoJ3BvcnRsZXRUeXBlJyksXG5cdFx0XHRcdFR3aW5rbGUuZ2V0UHJlZigncG9ydGxldE5leHQnKVxuXHRcdFx0KTtcblx0XHR9XG5cdFx0Y29uc3QgbGluayA9IG13LnV0aWwuYWRkUG9ydGxldExpbmsoXG5cdFx0XHRUd2lua2xlLmdldFByZWYoJ3BvcnRsZXRJZCcpLFxuXHRcdFx0dHlwZW9mIHRhc2sgPT09ICdzdHJpbmcnID8gdGFzayA6ICcjJyxcblx0XHRcdHRleHQsXG5cdFx0XHRpZCxcblx0XHRcdHRvb2x0aXBcblx0XHQpO1xuXHRcdCRib2R5LmZpbmQoJy5jbGllbnQtanMgLnNraW4tdmVjdG9yICNwLWNhY3Rpb25zJykuY3NzKCdtYXJnaW4tcmlnaHQnLCAnaW5pdGlhbCcpO1xuXHRcdGlmICh0eXBlb2YgdGFzayA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0JChsaW5rKVxuXHRcdFx0XHQuZmluZCgnYScpXG5cdFx0XHRcdC5vbignY2xpY2snLCAoZXYpID0+IHtcblx0XHRcdFx0XHR0YXNrKCk7XG5cdFx0XHRcdFx0ZXYucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0fSk7XG5cdFx0fVxuXHRcdGlmICgkLmNvbGxhcHNpYmxlVGFicykge1xuXHRcdFx0JC5jb2xsYXBzaWJsZVRhYnMuaGFuZGxlUmVzaXplKCk7XG5cdFx0fVxuXHRcdHJldHVybiBsaW5rO1xuXHR9O1xuXHQvKipcblx0ICogKioqKioqKioqKioqKioqKiBHZW5lcmFsIGluaXRpYWxpemF0aW9uIGNvZGUgKioqKioqKioqKioqKioqKlxuXHQgKi9cblx0Ly8gUmV0cmlldmUgdGhlIHVzZXIncyBUd2lua2xlIHByZWZlcmVuY2VzICh3aW5kb3cuVHdpbmtsZS5wcmVmcylcblx0VHdpbmtsZS5wcmVmcyB8fD0ge307XG5cdHZvaWQgYXBpXG5cdFx0LmdldCh7XG5cdFx0XHRhY3Rpb246ICdxdWVyeScsXG5cdFx0XHRwcm9wOiBbJ3JldmlzaW9ucyddLFxuXHRcdFx0cnZwcm9wOiAnY29udGVudCcsXG5cdFx0XHRmb3JtYXQ6ICdqc29uJyxcblx0XHRcdGZvcm1hdHZlcnNpb246ICcyJyxcblx0XHRcdHRpdGxlczogYFVzZXI6JHttdy5jb25maWcuZ2V0KCd3Z1VzZXJOYW1lJyl9L3R3aW5rbGVvcHRpb25zLmpzYCxcblx0XHRcdHJ2bGltaXQ6ICcxJyxcblx0XHRcdHJ2c2xvdHM6ICdtYWluJyxcblx0XHR9KVxuXHRcdC50aGVuKChyZXNwb25zZSkgPT4ge1xuXHRcdFx0aWYgKCFyZXNwb25zZVsncXVlcnknXS5wYWdlc1swXS5taXNzaW5nKSB7XG5cdFx0XHRcdGNvbnN0IGNvbnRlbnQgPSByZXNwb25zZVsncXVlcnknXS5wYWdlc1swXS5yZXZpc2lvbnNbMF0uc2xvdHMubWFpbi5jb250ZW50ID8/ICcnO1xuXHRcdFx0XHRpZiAoY29udGVudCAhPT0gJycpIHtcblx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWV2YWxcblx0XHRcdFx0XHRcdHdpbmRvdy5ldmFsKGNvbnRlbnQpO1xuXHRcdFx0XHRcdH0gY2F0Y2gge1xuXHRcdFx0XHRcdFx0dm9pZCBtdy5ub3RpZnkod2luZG93LndnVUxTKCfmnKrog73liqDovb3mgqjnmoRUd2lua2xl5Y+C5pWw6K6+572uJywgJ+acquiDvei8ieWFpeaCqOeahFR3aW5rbGXlgY/lpb3oqK3lrponKSwge1xuXHRcdFx0XHRcdFx0XHR0eXBlOiAnZXJyb3InLFxuXHRcdFx0XHRcdFx0XHR0YWc6ICd0d2lua2xlJyxcblx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0pXG5cdFx0LmZhaWwoKCkgPT4ge1xuXHRcdFx0dm9pZCBtdy5ub3RpZnkod2luZG93LndnVUxTKCfmnKrog73liqDovb3mgqjnmoRUd2lua2xl5Y+C5pWw6K6+572uJywgJ+acquiDvei8ieWFpeaCqOeahFR3aW5rbGXlgY/lpb3oqK3lrponKSwge1xuXHRcdFx0XHR0eXBlOiAnZXJyb3InLFxuXHRcdFx0XHR0YWc6ICd0d2lua2xlJyxcblx0XHRcdH0pO1xuXHRcdH0pXG5cdFx0LmFsd2F5cygoKSA9PiB7XG5cdFx0XHQkKFR3aW5rbGUubG9hZCk7XG5cdFx0fSk7XG5cdC8vIERldmVsb3BlcnM6IHlvdSBjYW4gaW1wb3J0IGN1c3RvbSBUd2lua2xlIG1vZHVsZXMgaGVyZVxuXHQvLyBGb3IgZXhhbXBsZSwgbXcubG9hZGVyLmxvYWQoc2NyaXB0cGF0aGJlZm9yZSArIFwiVXNlcjpVbmNsZURvdWdnaWUvbW9yZWJpdHMtdGVzdC5qc1wiICsgc2NyaXB0cGF0aGFmdGVyKTtcblx0VHdpbmtsZS5sb2FkID0gKCkgPT4ge1xuXHRcdC8vIERvbid0IGFjdGl2YXRlIG9uIHNwZWNpYWwgcGFnZXMgb3RoZXIgdGhhbiB0aG9zZSBsaXN0ZWQgaGVyZSwgc29cblx0XHQvLyB0aGF0IG90aGVycyBsb2FkIGZhc3RlciwgZXNwZWNpYWxseSB0aGUgd2F0Y2hsaXN0LlxuXHRcdGxldCBhY3RpdmVTcGVjaWFsUGFnZUxpc3QgPSBbJ0Jsb2NrJywgJ0NvbnRyaWJ1dGlvbnMnLCAnQWJ1c2VMb2cnLCAnUmVjZW50Y2hhbmdlcycsICdSZWNlbnRjaGFuZ2VzbGlua2VkJ107IC8vIHdnUmVsZXZhbnRVc2VyTmFtZSBkZWZpbmVkIGZvciBub24tc3lzb3BzIG9uIFNwZWNpYWw6QmxvY2tcblx0XHRpZiAoTW9yZWJpdHMudXNlcklzU3lzb3ApIHtcblx0XHRcdGFjdGl2ZVNwZWNpYWxQYWdlTGlzdCA9IFtcblx0XHRcdFx0Li4uYWN0aXZlU3BlY2lhbFBhZ2VMaXN0LFxuXHRcdFx0XHQnRGVsZXRlZENvbnRyaWJ1dGlvbnMnLFxuXHRcdFx0XHQnUHJlZml4aW5kZXgnLFxuXHRcdFx0XHQnQnJva2VuUmVkaXJlY3RzJyxcblx0XHRcdF07XG5cdFx0fVxuXHRcdGlmIChcblx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlTnVtYmVyJykgPT09IC0xICYmXG5cdFx0XHQhYWN0aXZlU3BlY2lhbFBhZ2VMaXN0LmluY2x1ZGVzKG13LmNvbmZpZy5nZXQoJ3dnQ2Fub25pY2FsU3BlY2lhbFBhZ2VOYW1lJykpXG5cdFx0KSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdC8vIFByZXZlbnQgY2xpY2tqYWNraW5nXG5cdFx0aWYgKHdpbmRvdy50b3AgIT09IHdpbmRvdy5zZWxmKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdC8vIFNldCBjdXN0b20gQXBpLVVzZXItQWdlbnQgaGVhZGVyLCBmb3Igc2VydmVyLXNpZGUgbG9nZ2luZyBwdXJwb3Nlc1xuXHRcdFR3aW5rbGUudXNlckFnZW50ID0gJ1R3aW5rbGUvMS4xJztcblx0XHRNb3JlYml0cy53aWtpLmFwaS5zZXRBcGlVc2VyQWdlbnQoVHdpbmtsZS51c2VyQWdlbnQpO1xuXHRcdFR3aW5rbGUuZGlzYWJsZWRNb2R1bGVzID0gWy4uLlR3aW5rbGUuZ2V0UHJlZignZGlzYWJsZWRNb2R1bGVzJyksIC4uLlR3aW5rbGUuZ2V0UHJlZignZGlzYWJsZWRTeXNvcE1vZHVsZXMnKV07XG5cdFx0Ly8gUmVkZWZpbmUgYWRkSW5pdENhbGxiYWNrIHNvIHRoYXQgYW55IG1vZHVsZXMgYmVpbmcgbG9hZGVkIG5vdyBvbiBhcmUgZGlyZWN0bHlcblx0XHQvLyBpbml0aWFsaXNlZCByYXRoZXIgdGhhbiBhZGRlZCB0byBpbml0Q2FsbGJhY2tzIGFycmF5XG5cdFx0VHdpbmtsZS5hZGRJbml0Q2FsbGJhY2sgPSAoZnVuYywgbmFtZSkgPT4ge1xuXHRcdFx0aWYgKCFuYW1lIHx8ICFUd2lua2xlLmRpc2FibGVkTW9kdWxlcy5pbmNsdWRlcyhuYW1lKSkge1xuXHRcdFx0XHRmdW5jKCk7XG5cdFx0XHR9XG5cdFx0fTtcblx0XHQvLyBJbml0aWFsaXNlIG1vZHVsZXMgdGhhdCB3ZXJlIHNhdmVkIGluIGluaXRDYWxsYmFja3MgYXJyYXlcblx0XHRmb3IgKGNvbnN0IG1vZHVsZSBvZiBUd2lua2xlLmluaXRDYWxsYmFja3MpIHtcblx0XHRcdFR3aW5rbGUuYWRkSW5pdENhbGxiYWNrKG1vZHVsZS5mdW5jLCBtb2R1bGUubmFtZSk7XG5cdFx0fVxuXHRcdC8vIEluY3JlYXNlcyB0ZXh0IHNpemUgaW4gVHdpbmtsZSBkaWFsb2dzLCBpZiBzbyBjb25maWd1cmVkXG5cdFx0aWYgKFR3aW5rbGUuZ2V0UHJlZignZGlhbG9nTGFyZ2VGb250JykpIHtcblx0XHRcdG13LnV0aWwuYWRkQ1NTKFxuXHRcdFx0XHQnLm1vcmViaXRzLWRpYWxvZy1jb250ZW50LC5tb3JlYml0cy1kaWFsb2ctZm9vdGVybGlua3N7Zm9udC1zaXplOjEwMCUhaW1wb3J0YW50fS5tb3JlYml0cy1kaWFsb2cgaW5wdXQsLm1vcmViaXRzLWRpYWxvZyBzZWxlY3QsLm1vcmViaXRzLWRpYWxvZy1jb250ZW50IGJ1dHRvbntmb250LXNpemU6aW5oZXJpdCAhaW1wb3J0YW50fSdcblx0XHRcdCk7XG5cdFx0fVxuXHRcdC8vIEhpZGUgdGhlIGxpbmdlcmluZyBzcGFjZSBpZiB0aGUgVFcgbWVudSBpcyBlbXB0eVxuXHRcdGNvbnN0IGlzVmVjdG9yID0gWyd2ZWN0b3InLCAndmVjdG9yLTIwMjInXS5pbmNsdWRlcyhtdy5jb25maWcuZ2V0KCdza2luJykpO1xuXHRcdGlmIChpc1ZlY3RvciAmJiBUd2lua2xlLmdldFByZWYoJ3BvcnRsZXRUeXBlJykgPT09ICdtZW51JyAmJiAkYm9keS5maW5kKCcjcC10d2lua2xlJykubGVuZ3RoID09PSAwKSB7XG5cdFx0XHQkYm9keS5maW5kKCcjcC1jYWN0aW9ucycpLmNzcygnbWFyZ2luLXJpZ2h0JywgJ2luaXRpYWwnKTtcblx0XHR9XG5cdH07XG5cdC8qKlxuXHQgKiBUd2lua2xlLXNwZWNpZmljIHV0aWxpdHkgZnVuY3Rpb25zIHNoYXJlZCBieSBtdWx0aXBsZSBtb2R1bGVzXG5cdCAqXG5cdCAqIEBwYXJhbSB7Kn0gZmlyc3Rcblx0ICogQHBhcmFtIHsqfSBzZWNvbmRcblx0ICovXG5cdC8vIFVzZWQgaW4gYmF0Y2gsIHVubGluaywgYW5kIGRlcHJvZCB0byBzb3J0IHBhZ2VzIGJ5IG5hbWVzcGFjZSwgYXNcblx0Ly8ganNvbiBmb3JtYXR2ZXJzaW9uPTIgc29ydHMgYnkgcGFnZWlkIGluc3RlYWQgKCMxMjUxKVxuXHRUd2lua2xlLnNvcnRCeU5hbWVzcGFjZSA9IChmaXJzdCwgc2Vjb25kKSA9PiB7XG5cdFx0cmV0dXJuIGZpcnN0Lm5zIC0gc2Vjb25kLm5zIHx8IChmaXJzdC50aXRsZSA+IHNlY29uZC50aXRsZSA/IDEgOiAtMSk7XG5cdH07XG5cdC8vIFVzZWQgaW4gdW5saW5rIGxpc3RpbmdzIHRvIGxpbmsgdGhlIHBhZ2UgdGl0bGVcblx0VHdpbmtsZS5nZW5lcmF0ZUJhdGNoUGFnZUxpbmtzID0gKGNoZWNrYm94KSA9PiB7XG5cdFx0Y29uc3QgJGNoZWNrYm94ID0gJChjaGVja2JveCk7XG5cdFx0Y29uc3QgbGluayA9IE1vcmViaXRzLmh0bWxOb2RlKCdhJywgJGNoZWNrYm94LnZhbCgpKTtcblx0XHRsaW5rLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAndHctYmF0Y2hwYWdlLWxpbmsnKTtcblx0XHRsaW5rLnNldEF0dHJpYnV0ZSgnaHJlZicsIG13LnV0aWwuZ2V0VXJsKCRjaGVja2JveC52YWwoKSkpO1xuXHRcdGxpbmsuc2V0QXR0cmlidXRlKCd0YXJnZXQnLCAnX2JsYW5rJyk7XG5cdFx0bGluay5zZXRBdHRyaWJ1dGUoJ3JlbCcsICdub29wZW5lciBub3JlZmVycmVyJyk7XG5cdFx0JGNoZWNrYm94Lm5leHQoKS5wcmVwZW5kKFtsaW5rLCAnICddKTtcblx0fTtcbn0pKGpRdWVyeSk7XG5cbmV4cG9ydCB7fTtcbiIsICIvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10cy1jb21tZW50XG4vLyBAdHMtbm9jaGVja1xuXG4vKiEgVHdpbmtsZS5qcyAtIHR3aW5rbGVhcnYuanMgKi9cbihmdW5jdGlvbiB0d2lua2xlYXJ2KCQpIHtcblx0Y29uc3QgJGJvZHkgPSAkKCdib2R5Jyk7XG5cdC8qKlxuXHQgKiB0d2lua2xlYXJ2LmpzOiBBUlYgbW9kdWxlXG5cdCAqIE1vZGUgb2YgaW52b2NhdGlvbjogVGFiIChcIkFSVlwiKVxuXHQgKiBBY3RpdmUgb246IEFueSBwYWdlIHdpdGggcmVsZXZhbnQgdXNlciBuYW1lICh1c2Vyc3BhY2UsIGNvbnRyaWJzLCBldGMuKVxuXHQgKi9cblx0VHdpbmtsZS5hcnYgPSAoKSA9PiB7XG5cdFx0Y29uc3QgdXNlcm5hbWUgPSBtdy5jb25maWcuZ2V0KCd3Z1JlbGV2YW50VXNlck5hbWUnKTtcblx0XHRpZiAoIXVzZXJuYW1lKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdGNvbnN0IGlzSVAgPSBtdy51dGlsLmlzSVBBZGRyZXNzKHVzZXJuYW1lKTtcblx0XHRjb25zdCB0aXRsZSA9IGlzSVBcblx0XHRcdD8gd2luZG93LndnVUxTKCfmiqXlkYpJUOe7meeuoeeQhuWRmCcsICfloLHlkYpJUOe1pueuoeeQhuWToScpXG5cdFx0XHQ6IHdpbmRvdy53Z1VMUygn5oql5ZGK55So5oi357uZ566h55CG5Lq65ZGYJywgJ+WgseWRiuS9v+eUqOiAhee1pueuoeeQhuS6uuWToScpO1xuXHRcdFR3aW5rbGUuYWRkUG9ydGxldExpbmsoXG5cdFx0XHQoKSA9PiB7XG5cdFx0XHRcdFR3aW5rbGUuYXJ2LmNhbGxiYWNrKHVzZXJuYW1lLCBpc0lQKTtcblx0XHRcdH0sXG5cdFx0XHR3aW5kb3cud2dVTFMoJ+WRiueKticsICflkYrni4AnKSxcblx0XHRcdCd0dy1hcnYnLFxuXHRcdFx0dGl0bGVcblx0XHQpO1xuXHR9O1xuXHRUd2lua2xlLmFydi5jYWxsYmFjayA9ICh1aWQsIGlzSVApID0+IHtcblx0XHRpZiAodWlkID09PSBtdy5jb25maWcuZ2V0KCd3Z1VzZXJOYW1lJykpIHtcblx0XHRcdHZvaWQgbXcubm90aWZ5KHdpbmRvdy53Z1VMUygn5L2g5LiN5oOz5oql5ZGK5L2g6Ieq5bex77yM5a+55ZCn77yfJywgJ+S9oOS4jeaDs+WgseWRiuS9oOiHquW3se+8jOWwjeWQp++8nycpLCB7XG5cdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0dGFnOiAndHdpbmtsZWFydicsXG5cdFx0XHR9KTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0Y29uc3QgV2luZG93ID0gbmV3IE1vcmViaXRzLnNpbXBsZVdpbmRvdyg2MDAsIDUwMCk7XG5cdFx0V2luZG93LnNldFRpdGxlKHdpbmRvdy53Z1VMUygn5oql5ZGK55So5oi357uZ566h55CG5Lq65ZGYJywgJ+WgseWRiuS9v+eUqOiAhee1pueuoeeQhuS6uuWToScpKTtcblx0XHRXaW5kb3cuc2V0U2NyaXB0TmFtZSgnVHdpbmtsZScpO1xuXHRcdFdpbmRvdy5hZGRGb290ZXJMaW5rKHdpbmRvdy53Z1VMUygn5ZGK54q26K6+572uJywgJ+WRiueLgOioreWumicpLCAnSDpUVy9QUkVGI2FydicpO1xuXHRcdFdpbmRvdy5hZGRGb290ZXJMaW5rKHdpbmRvdy53Z1VMUygnVHdpbmtsZeW4ruWKqScsICdUd2lua2xl6Kqq5piOJyksICdIOlRXI+WRiueLgCcpO1xuXHRcdGNvbnN0IGZvcm0gPSBuZXcgTW9yZWJpdHMucXVpY2tGb3JtKFR3aW5rbGUuYXJ2LmNhbGxiYWNrLmV2YWx1YXRlKTtcblx0XHRjb25zdCBjYXRlZ29yaWVzID0gZm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ3NlbGVjdCcsXG5cdFx0XHRuYW1lOiAnY2F0ZWdvcnknLFxuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6YCJ5oup5oql5ZGK57G75Z6L77yaJywgJ+mBuOaTh+WgseWRiumhnuWIpe+8micpLFxuXHRcdFx0ZXZlbnQ6IFR3aW5rbGUuYXJ2LmNhbGxiYWNrLmNoYW5nZUNhdGVnb3J5LFxuXHRcdH0pO1xuXHRcdGNhdGVnb3JpZXMuYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdvcHRpb24nLFxuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn56C05Z2P77yIUVc6VklQ77yJJywgJ+egtOWjnu+8iFFXOlZJUO+8iScpLFxuXHRcdFx0dmFsdWU6ICdhaXYnLFxuXHRcdH0pO1xuXHRcdGNhdGVnb3JpZXMuYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdvcHRpb24nLFxuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn57yW6L6R5LqJ6K6u77yIUVc6RVdJUO+8iScsICfnt6jovK/niK3orbDvvIhRVzpFV0lQ77yJJyksXG5cdFx0XHR2YWx1ZTogJ2V3aXAnLFxuXHRcdH0pO1xuXHRcdGNhdGVnb3JpZXMuYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdvcHRpb24nLFxuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn55So5oi35ZCN77yIUVc6VUFB77yJJywgJ+S9v+eUqOiAheWQjeeose+8iFFXOlVBQe+8iScpLFxuXHRcdFx0dmFsdWU6ICd1c2VybmFtZScsXG5cdFx0XHRkaXNhYmxlZDogbXcudXRpbC5pc0lQQWRkcmVzcyh1aWQpLFxuXHRcdH0pO1xuXHRcdGNhdGVnb3JpZXMuYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdvcHRpb24nLFxuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5YKA5YSh6LCD5p+l77yIUVc6U1BJ77yJJywgJ+WCgOWEoeiqv+afpe+8iFFXOlNQSe+8iScpLFxuXHRcdFx0dmFsdWU6ICdzcGknLFxuXHRcdFx0ZGlzYWJsZWQ6IG13LnV0aWwuaXNJUEFkZHJlc3ModWlkKSxcblx0XHR9KTtcblx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnZGl2Jyxcblx0XHRcdGxhYmVsOiAnJyxcblx0XHRcdHN0eWxlOiAnY29sb3I6ICNmMDAnLFxuXHRcdFx0aWQ6ICd0d2lua2xlLWFydi1ibG9ja3dhcm5pbmcnLFxuXHRcdH0pO1xuXHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdmaWVsZCcsXG5cdFx0XHRsYWJlbDogJ1dvcmsgYXJlYScsXG5cdFx0XHRuYW1lOiAnd29ya19hcmVhJyxcblx0XHR9KTtcblx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnc3VibWl0Jyxcblx0XHRcdGxhYmVsOiAn5o+Q5LqkJyxcblx0XHR9KTtcblx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnaGlkZGVuJyxcblx0XHRcdG5hbWU6ICd1aWQnLFxuXHRcdFx0dmFsdWU6IHVpZCxcblx0XHR9KTtcblx0XHRjb25zdCByZXN1bHQgPSBmb3JtLnJlbmRlcigpO1xuXHRcdFdpbmRvdy5zZXRDb250ZW50KHJlc3VsdCk7XG5cdFx0V2luZG93LmRpc3BsYXkoKTtcblx0XHQvLyBDaGVjayBpZiB0aGUgdXNlciBpcyBibG9ja2VkLCB1cGRhdGUgbm90aWNlXG5cdFx0Y29uc3QgcXVlcnkgPSB7XG5cdFx0XHRhY3Rpb246ICdxdWVyeScsXG5cdFx0XHRsaXN0OiAnYmxvY2tzJyxcblx0XHRcdGJrcHJvcDogJ3JhbmdlfGZsYWdzJyxcblx0XHRcdGZvcm1hdDogJ2pzb24nLFxuXHRcdH07XG5cdFx0aWYgKGlzSVApIHtcblx0XHRcdHF1ZXJ5LmJraXAgPSB1aWQ7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHF1ZXJ5LmJrdXNlcnMgPSB1aWQ7XG5cdFx0fVxuXHRcdG5ldyBNb3JlYml0cy53aWtpLmFwaSh3aW5kb3cud2dVTFMoJ+ajgOafpeeUqOaIt+eahOWwgeemgeeKtuaAgScsICfmqqLmn6Xkvb/nlKjogIXnmoTlsIHpjpbni4DmhYsnKSwgcXVlcnksIChhcGlvYmopID0+IHtcblx0XHRcdGNvbnN0IGJsb2NrbGlzdCA9IGFwaW9iai5nZXRSZXNwb25zZSgpLnF1ZXJ5LmJsb2Nrcztcblx0XHRcdGlmIChibG9ja2xpc3QubGVuZ3RoKSB7XG5cdFx0XHRcdGNvbnN0IFtibG9ja10gPSBibG9ja2xpc3Q7XG5cdFx0XHRcdGxldCBtZXNzYWdlID1cblx0XHRcdFx0XHQoaXNJUCA/IHdpbmRvdy53Z1VMUygn5q2kSVDlnLDlnYAnLCAn5q2kSVDkvY3lnYAnKSA6IHdpbmRvdy53Z1VMUygn5q2k6LSm5Y+3JywgJ+atpOizrOiZnycpKSArXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKCflt7Lnu4/ooqsnLCAn5bey57aT6KKrJykgK1xuXHRcdFx0XHRcdChibG9jay5wYXJ0aWFsID8gJ+mDqOWIhicgOiAnJyk7XG5cdFx0XHRcdC8vIFN0YXJ0IGFuZCBlbmQgZGlmZmVyLCByYW5nZSBibG9ja2VkXG5cdFx0XHRcdG1lc3NhZ2UgKz0gYmxvY2sucmFuZ2VzdGFydCA9PT0gKGJsb2NrLnJhbmdlZW5kID8gJ+autScgOiAnJykgKyB3aW5kb3cud2dVTFMoJ+WwgeemgeOAgicsICflsIHpjpbjgIInKTtcblx0XHRcdFx0aWYgKGJsb2NrLnBhcnRpYWwpIHtcblx0XHRcdFx0XHQkYm9keS5maW5kKCcjdHdpbmtsZS1hcnYtYmxvY2t3YXJuaW5nJykuY3NzKCdjb2xvcicsICdibGFjaycpOyAvLyBMZXNzIHNldmVyZVxuXHRcdFx0XHR9XG5cdFx0XHRcdCRib2R5LmZpbmQoJyN0d2lua2xlLWFydi1ibG9ja3dhcm5pbmcnKS50ZXh0KG1lc3NhZ2UpO1xuXHRcdFx0fVxuXHRcdH0pLnBvc3QoKTtcblx0XHQvLyBXZSBtdXN0IGluaXQgdGhlXG5cdFx0Y29uc3QgZXZ0ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50Jyk7XG5cdFx0ZXZ0LmluaXRFdmVudCgnY2hhbmdlJywgdHJ1ZSwgdHJ1ZSk7XG5cdFx0cmVzdWx0LmNhdGVnb3J5LmRpc3BhdGNoRXZlbnQoZXZ0KTtcblx0fTtcblx0VHdpbmtsZS5hcnYubHRhX2xpc3QgPSBbXG5cdFx0e1xuXHRcdFx0dmFsdWU6ICcnLFxuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6K+36YCJ5oupJywgJ+iri+mBuOaThycpLFxuXHRcdH0sXG5cdF07XG5cdFR3aW5rbGUuYXJ2LmNhbGxiYWNrLnNvY2ttYXN0ZXJfY2hhbmdlZCA9IChlKSA9PiB7XG5cdFx0VHdpbmtsZS5hcnYuY2FsbGJhY2suc2V0X3NvY2ttYXN0ZXIoZS50YXJnZXQudmFsdWUpO1xuXHR9O1xuXHRUd2lua2xlLmFydi5jYWxsYmFjay5zZXRfc29ja21hc3RlciA9IChzb2NrbWFzdGVyKSA9PiB7XG5cdFx0JGJvZHkuZmluZCgnY29kZS50dy1hcnYtc29ja21hc3RlcicpLnRleHQoJ3t7Jy5jb25jYXQoJ3N1YnN0OicsIGBTb2Nrc3VzcGVjdG5vdGljZXwxPSR7c29ja21hc3Rlcn19fWApKTtcblx0fTtcblx0VHdpbmtsZS5hcnYuY2FsbGJhY2suY2hhbmdlQ2F0ZWdvcnkgPSAoZSkgPT4ge1xuXHRcdGNvbnN0IHZhbHVlXyA9IGUudGFyZ2V0LnZhbHVlO1xuXHRcdGNvbnN0IHJvb3RfID0gZS50YXJnZXQuZm9ybTtcblx0XHRjb25zdCBbb2xkX2FyZWFdID0gTW9yZWJpdHMucXVpY2tGb3JtLmdldEVsZW1lbnRzKHJvb3RfLCAnd29ya19hcmVhJyk7XG5cdFx0bGV0IHdvcmtfYXJlYSA9IG51bGw7XG5cdFx0Y29uc3QgcHJldmlld2xpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG5cdFx0cHJldmlld2xpbmsuc3R5bGUuY3Vyc29yID0gJ3BvaW50ZXInO1xuXHRcdHByZXZpZXdsaW5rLnRleHRDb250ZW50ID0gd2luZG93LndnVUxTKCfpooTop4gnLCAn6aCQ6Ka9Jyk7XG5cdFx0JChwcmV2aWV3bGluaykub24oJ2NsaWNrJywgKCkgPT4ge1xuXHRcdFx0VHdpbmtsZS5hcnYuY2FsbGJhY2sucHJldmlldyhyb290Xyk7XG5cdFx0fSk7XG5cdFx0c3dpdGNoICh2YWx1ZV8pIHtcblx0XHRcdGNhc2UgJ2V3aXAnOlxuXHRcdFx0XHR3b3JrX2FyZWEgPSBuZXcgTW9yZWJpdHMucXVpY2tGb3JtLmVsZW1lbnQoe1xuXHRcdFx0XHRcdHR5cGU6ICdmaWVsZCcsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5oql5ZGK57yW6L6R5LqJ6K6uJywgJ+WgseWRiue3qOi8r+eIreitsCcpLFxuXHRcdFx0XHRcdG5hbWU6ICd3b3JrX2FyZWEnLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2R5bmlucHV0Jyxcblx0XHRcdFx0XHRuYW1lOiAncGFnZScsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn55u45YWz6aG16Z2i77yaJywgJ+ebuOmXnOmggemdou+8micpLFxuXHRcdFx0XHRcdHN1YmxhYmVsOiB3aW5kb3cud2dVTFMoJ+mhtemdou+8micsICfpoIHpnaLvvJonKSxcblx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoJ+WmguS4jeW4jOacm+iuqeaKpeWRiumTvuaOpeWIsOmhtemdou+8jOivt+eVmeepuicsICflpoLkuI3luIzmnJvorpPloLHlkYrpgKPntZDliLDpoIHpnaLvvIzoq4vnlZnnqbonKSxcblx0XHRcdFx0XHRtaW46IDEsXG5cdFx0XHRcdFx0bWF4OiAxMCxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICd0ZXh0YXJlYScsXG5cdFx0XHRcdFx0bmFtZTogJ3JlYXNvbicsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6K+E6K6677yaJywgJ+ipleirlu+8micpLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2RpdicsXG5cdFx0XHRcdFx0aWQ6ICdhcnZwcmV2aWV3Jyxcblx0XHRcdFx0XHRsYWJlbDogW3ByZXZpZXdsaW5rXSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0XHRcdGlkOiAndHdpbmtsZWFydi1wcmV2aWV3Ym94Jyxcblx0XHRcdFx0XHRzdHlsZTogJ2Rpc3BsYXk6IG5vbmUnLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0d29ya19hcmVhID0gd29ya19hcmVhLnJlbmRlcigpO1xuXHRcdFx0XHRvbGRfYXJlYS5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZCh3b3JrX2FyZWEsIG9sZF9hcmVhKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlICd1c2VybmFtZSc6XG5cdFx0XHRcdHdvcmtfYXJlYSA9IG5ldyBNb3JlYml0cy5xdWlja0Zvcm0uZWxlbWVudCh7XG5cdFx0XHRcdFx0dHlwZTogJ2ZpZWxkJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmiqXlkYrkuI3lvZPnlKjmiLflkI0nLCAn5aCx5ZGK5LiN55W25L2/55So6ICF5ZCN56ixJyksXG5cdFx0XHRcdFx0bmFtZTogJ3dvcmtfYXJlYScsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHR3b3JrX2FyZWEuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnaGVhZGVyJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfkuI3lvZPnlKjmiLflkI3nsbvlnosnLCAn5LiN55W25L2/55So6ICF5ZCN56ix6aGe5YilJyksXG5cdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+axgumXu+eZvuenkeS4jeWFgeiuuOS9v+eUqOW4puacieivr+WvvOaAp+OAgeWuo+S8oOaAp+OAgeS+rui+seaAp+aIluegtOWdj+aAp+eahOeUqOaIt+WQjeOAguatpOWklu+8jOS9v+eUqOWfn+WQjeWPiumCrueuseWcsOWdgOeahOeUqOaIt+WQjeS6puiiq+emgeatouOAgui/meS6m+WHhuWImeS/seW6lOW6lOeUqOiHs+eUqOaIt+WQjeWPiuetvuWQjeOAguWcqOWFtuS7luivreiogOS4reS4jeW9k+eahOeUqOaIt+WQjeaIlumAmui/h+mUmeaLvOOAgeabv+S7o+OAgeaal+ekuuOAgeaLhuWtl+aIluS7u+S9lemXtOaOpeaWueazlei+vuaIkOeahOmdnuWmpeW9k+eUqOaIt+WQjeWQjOagt+inhuS4uui/neinhOOAgicsXG5cdFx0XHRcdFx0XHQn5rGC6IGe55m+56eR5LiN5YWB6Kix5L2/55So5bi25pyJ6Kqk5bCO5oCn44CB5a6j5YKz5oCn44CB5L6u6L6x5oCn5oiW56C05aOe5oCn55qE5L2/55So6ICF5ZCN56ix44CC5q2k5aSW77yM5L2/55So5Z+f5ZCN5Y+K6Zu75a2Q5L+h566x5L2N5Z2A55qE5L2/55So6ICF5ZCN56ix5Lqm6KKr56aB5q2i44CC6YCZ5Lqb5rqW5YmH5L+x5oeJ5oeJ55So6Iez5L2/55So6ICF5ZCN56ix5Y+K57C95ZCN44CC5Zyo5YW25LuW6Kqe6KiA5Lit5LiN55W255qE5L2/55So6ICF5ZCN56ix5oiW6YCa6YGO6Yyv5ou844CB5pu/5Luj44CB5pqX56S644CB5ouG5a2X5oiW5Lu75L2V6ZaT5o6l5pa55rOV6YGU5oiQ55qE6Z2e5aal55W25L2/55So6ICF5ZCN56ix5ZCM5qij6KaW54K66YGV6KaP44CCJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHR3b3JrX2FyZWEuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnY2hlY2tib3gnLFxuXHRcdFx0XHRcdG5hbWU6ICdhcnZ0eXBlJyxcblx0XHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+ivr+WvvOaAp+eUqOaIt+WQjScsICfoqqTlsI7mgKfkvb/nlKjogIXlkI3nqLEnKSxcblx0XHRcdFx0XHRcdFx0dmFsdWU6IHdpbmRvdy53Z1VMUygn6K+v5a+85oCnJywgJ+iqpOWwjuaApycpLFxuXHRcdFx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+ivr+WvvOaAp+eUqOaIt+WQjemakOWQq+edgOS4jui0oeeMruiAheebuOWFs+aIluivr+WvvOS7luS6uueahOS6i+aDheOAguS+i+Wmgu+4sOS4jeWunuingueCueOAgeaal+ekuui0puWPt+aLpeacieeJueWumuadg+mZkOaIluaal+ekuuivpei0puWPt+W5tumdnueUseS4gOS6uuaLpeacieiAjOaYr+eUseS4gOS4que7hOe+pOOAgeS4gOS4qumhueebruaIluS4gOS4qumbhuS9k+i/kOS9nOOAgicsXG5cdFx0XHRcdFx0XHRcdFx0J+iqpOWwjuaAp+S9v+eUqOiAheWQjeeosemaseWQq+iRl+iIh+iyoueNu+iAheebuOmXnOaIluiqpOWwjuS7luS6uueahOS6i+aDheOAguS+i+Wmgu+4sOS4jeWvpuingOm7nuOAgeaal+ekuuizrOiZn+aTgeacieeJueWumuasiumZkOaIluaal+ekuuipsuizrOiZn+S4pumdnueUseS4gOS6uuaTgeacieiAjOaYr+eUseS4gOWAi+e+pOe1hOOAgeS4gOWAi+ioiOeVq+aIluS4gOWAi+mbhumrlOmBi+S9nOOAgidcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+Wuo+S8oOaAp+eUqOaIt+WQjScsICflrqPlgrPmgKfkvb/nlKjogIXlkI3nqLEnKSxcblx0XHRcdFx0XHRcdFx0dmFsdWU6IHdpbmRvdy53Z1VMUygn5a6j5Lyg5oCnJywgJ+Wuo+WCs+aApycpLFxuXHRcdFx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+Wuo+S8oOaAp+eUqOaIt+WQjeS8muS6juaxgumXu+eZvuenkeS4iui1t+aOqOmUgOS4gOS4que7hOe+pOaIluS4gOmXtOWFrOWPuOeahOS9nOeUqOOAgicsXG5cdFx0XHRcdFx0XHRcdFx0J+Wuo+WCs+aAp+S9v+eUqOiAheWQjeeoseacg+aWvOaxguiBnueZvuenkeS4iui1t+aOqOmKt+S4gOWAi+e+pOe1hOaIluS4gOmWk+WFrOWPuOeahOS9nOeUqOOAgidcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+aal+ekuuW5tumdnueUseS4gOS6uuaLpeaciScsICfmmpfnpLrkuKbpnZ7nlLHkuIDkurrmk4HmnIknKSxcblx0XHRcdFx0XHRcdFx0dmFsdWU6ICdzaGFyZWQnLFxuXHRcdFx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+avj+S4qui0puWPt+WPquWPr+S7peS7o+ihqOS4quS6uu+8iOWuueiuuOS4gOS6m+S+i+WkluaDheWGte+8ie+8jOaJgOacieS4juS7luS6uuWIhuS6q+i0puWPt+eahOihjOS4uu+8iOWMheaLrOWIhuS6q+i0puWPt+Wvhuegge+8ieWdh+iiq+emgeatouOAgicsXG5cdFx0XHRcdFx0XHRcdFx0J+avj+WAi+izrOiZn+WPquWPr+S7peS7o+ihqOWAi+S6uu+8iOWuueioseS4gOS6m+S+i+WkluaDheazge+8ie+8jOaJgOacieiIh+S7luS6uuWIhuS6q+izrOiZn+eahOihjOeCuu+8iOWMheaLrOWIhuS6q+izrOiZn+WvhueivO+8ieWdh+iiq+emgeatouOAgidcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+S+rui+seaAp+eUqOaIt+WQjScsICfkvq7ovrHmgKfkvb/nlKjogIXlkI3nqLEnKSxcblx0XHRcdFx0XHRcdFx0dmFsdWU6ICfkvq7ovrHmgKcnLFxuXHRcdFx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+S+rui+seaAp+eUqOaIt+WQjeS7pOWNj+iwg+e8lui+keWPmOW+l+WbsOmavu+8jOeUmuiHs+aXoOWPr+iDveOAgicsXG5cdFx0XHRcdFx0XHRcdFx0J+S+rui+seaAp+S9v+eUqOiAheWQjeeoseS7pOWNlOiqv+e3qOi8r+iuiuW+l+WbsOmbo++8jOeUmuiHs+eEoeWPr+iDveOAgidcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+egtOWdj+aAp+eUqOaIt+WQjScsICfnoLTlo57mgKfkvb/nlKjogIXlkI3nqLEnKSxcblx0XHRcdFx0XHRcdFx0dmFsdWU6IHdpbmRvdy53Z1VMUygn56C05Z2P5oCnJywgJ+egtOWjnuaApycpLFxuXHRcdFx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+egtOWdj+aAp+eUqOaIt+WQjeWMheaLrOS6uui6q+aUu+WHu+OAgeS8quWGkuS7luS6uuaIluWFtuS7luS4gOWIh+acieedgOa4heaZsOWPr+ingeeahOegtOWdj+axgumXu+eZvuenkeaEj+WbvueahOeUqOaIt+WQjeOAgicsXG5cdFx0XHRcdFx0XHRcdFx0J+egtOWjnuaAp+S9v+eUqOiAheWQjeeoseWMheaLrOS6uui6q+aUu+aTiuOAgeWBveWGkuS7luS6uuaIluWFtuS7luS4gOWIh+acieiRl+a4heaZsOWPr+imi+eahOegtOWjnuaxguiBnueZvuenkeaEj+WclueahOS9v+eUqOiAheWQjeeoseOAgidcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdFx0bGlzdDogW1xuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCflnKjpobXpnaLkuIrpmpDol4/nlKjmiLflkI3vvIjpnIDnm5HnnaPnmoTnlKjmiLflkI3or7fli7/kuo7nq5nlhoXmiqXlkYrvvIzli77pgInmraTpobnlubbkuI3mnoTmiJDog73lnKjnq5nlhoXmiqXlkYrnmoTnkIbnlLHvvIknLFxuXHRcdFx0XHRcdFx0XHRcdCflnKjpoIHpnaLkuIrpmrHol4/kvb/nlKjogIXlkI3nqLHvvIjpnIDnm6PnnaPnmoTkvb/nlKjogIXlkI3nqLHoq4vli7/mlrznq5nlhafloLHlkYrvvIzli77pgbjmraTpoIXkuKbkuI3mp4vmiJDog73lnKjnq5nlhafloLHlkYrnmoTnkIbnlLHvvIknXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn6Iul55So5oi35ZCN5LiN5b2T6K+35Yu+6YCJ5q2k6aG577yM5rOo5oSP77ya6K+36ICD6JmR56eB5LiL6IGU57O7566h55CG5ZGY5aSE55CG44CCJyxcblx0XHRcdFx0XHRcdFx0XHQn6Iul5L2/55So6ICF5ZCN56ix5LiN55W26KuL5Yu+6YG45q2k6aCF77yM5rOo5oSP77ya6KuL6ICD5oWu56eB5LiL6IGv57Wh566h55CG5ZOh6JmV55CG44CCJ1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0XHRuYW1lOiAnaGlkZW5hbWUnLFxuXHRcdFx0XHRcdFx0XHR2YWx1ZTogJ2hpZGVuYW1lJyxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XSxcblx0XHRcdFx0XHRzdHlsZTogJ2ZvbnQtd2VpZ2h0OiBib2xkOycsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHR3b3JrX2FyZWEuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAndGV4dGFyZWEnLFxuXHRcdFx0XHRcdG5hbWU6ICdyZWFzb24nLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+ivhOiuuu+8micsICfoqZXoq5bvvJonKSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0XHRcdGlkOiAnYXJ2cHJldmlldycsXG5cdFx0XHRcdFx0bGFiZWw6IFtwcmV2aWV3bGlua10sXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHR3b3JrX2FyZWEuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnZGl2Jyxcblx0XHRcdFx0XHRpZDogJ3R3aW5rbGVhcnYtcHJldmlld2JveCcsXG5cdFx0XHRcdFx0c3R5bGU6ICdkaXNwbGF5OiBub25lJyxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHdvcmtfYXJlYSA9IHdvcmtfYXJlYS5yZW5kZXIoKTtcblx0XHRcdFx0b2xkX2FyZWEucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQod29ya19hcmVhLCBvbGRfYXJlYSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnc3BpJzpcblx0XHRcdFx0d29ya19hcmVhID0gbmV3IE1vcmViaXRzLnF1aWNrRm9ybS5lbGVtZW50KHtcblx0XHRcdFx0XHR0eXBlOiAnZmllbGQnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WPkei1t+WCgOWEoeiwg+afpScsICfnmbzotbflgoDlhKHoqr/mn6UnKSxcblx0XHRcdFx0XHRuYW1lOiAnd29ya19hcmVhJyxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRcdFx0bmFtZTogJ3NvY2ttYXN0ZXInLFxuXHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUygn5Li76LSm5Y+355qE55So5oi35ZCN77yI5LiN5ZCrVXNlcjrliY3nvIDvvIknLCAn5Li76LOs6Jmf55qE5L2/55So6ICF5ZCN56ix77yI5LiN5ZCrVXNlcjrlrZfpppbvvIknKSxcblx0XHRcdFx0XHR2YWx1ZTogcm9vdF8udWlkLnZhbHVlLFxuXHRcdFx0XHRcdGV2ZW50OiBUd2lua2xlLmFydi5jYWxsYmFjay5zb2NrbWFzdGVyX2NoYW5nZWQsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHR3b3JrX2FyZWEuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnZGl2Jyxcblx0XHRcdFx0XHRpZDogJ3R3aW5rbGVhcnYtc3Bpbm90aWNlYm94Jyxcblx0XHRcdFx0XHRzdHlsZTogJ2Rpc3BsYXk6IG5vbmUnLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2R5bmlucHV0Jyxcblx0XHRcdFx0XHRuYW1lOiAnc29ja3B1cHBldCcsXG5cdFx0XHRcdFx0bGFiZWw6ICflgoDlhKEnLFxuXHRcdFx0XHRcdHN1YmxhYmVsOiAn5YKA5YSh77yaJyxcblx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoJ+WCgOWEoeeahOeUqOaIt+WQje+8iOS4jeWQq1VzZXI65YmN57yA77yJJywgJ+WCgOWEoeeahOS9v+eUqOiAheWQjeeose+8iOS4jeWQq1VzZXI65a2X6aaW77yJJyksXG5cdFx0XHRcdFx0bWluOiAyLFxuXHRcdFx0XHRcdG1heDogOSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICd0ZXh0YXJlYScsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6K+B5o2u77yaJywgJ+itieaTmu+8micpLFxuXHRcdFx0XHRcdG5hbWU6ICdyZWFzb24nLFxuXHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfovpPlhaXog73lpJ/nlKjmnaXkvZPnjrDov5nkupvnlKjmiLflj6/og73mu6XnlKjlpJrph43otKblj7fnmoTor4Hmja7vvIzov5npgJrluLjljIXmi6zojLbppoblj5HoqIDjgIHpobXpnaLljoblj7LmiJblhbbku5bmnInlhbPnmoTkv6Hmga/jgILor7fpgb/lhY3lnKjmraTlpITmj5DkvpvpnZ7kuI7lgoDlhKHmiJbmu6XnlKjlpJrph43otKblj7fnm7jlhbPnmoTlhbbku5borqjorrrjgIInLFxuXHRcdFx0XHRcdFx0J+i8uOWFpeiDveWkoOeUqOS+humrlOePvumAmeS6m+S9v+eUqOiAheWPr+iDvea/q+eUqOWkmumHjeizrOiZn+eahOitieaTmu+8jOmAmemAmuW4uOWMheaLrOiMtumkqOeZvOiogOOAgemggemdouatt+WPsuaIluWFtuS7luaciemXnOeahOizh+ioiuOAguiri+mBv+WFjeWcqOatpOiZleaPkOS+m+mdnuiIh+WCgOWEoeaIlua/q+eUqOWkmumHjeizrOiZn+ebuOmXnOeahOWFtuS7luiojuirluOAgidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+ivt+axgueUqOaIt+afpeaguCcsICfoq4vmsYLkvb/nlKjogIXmn6XmoLgnKSxcblx0XHRcdFx0XHRcdFx0bmFtZTogJ2NoZWNrdXNlcicsXG5cdFx0XHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn55So5oi35p+l5qC45piv5LiA56eN55So5LqO6I635Y+W5YKA5YSh5oyH5o6n55u45YWz5oqA5pyv6K+B5o2u55qE5bel5YW377yM6Iul5rKh5pyJ5q2j5b2T55CG55Sx5YiZ5LiN5Lya5L2/55So77yM5oKo5b+F6aG75Zyo6K+B5o2u5a2X5q615YWF5YiG6Kej6YeK5Li65LuA5LmI6ZyA6KaB5L2/55So6K+l5bel5YW344CC55So5oi35p+l5qC45LiN5Lya55So5LqO5YWs5byA6L+e5o6l55So5oi36LSm5Y+35L2/55So55qESVDlnLDlnYDjgIInLFxuXHRcdFx0XHRcdFx0XHRcdCfkvb/nlKjogIXmn6XmoLjmmK/kuIDnqK7nlKjmlrznjbLlj5blgoDlhKHmjIfmjqfnm7jpl5zmioDooZPorYnmk5rnmoTlt6XlhbfvvIzoi6XmspLmnInmraPnlbbnkIbnlLHliYfkuI3mnIPkvb/nlKjvvIzmgqjlv4XpoIjlnKjorYnmk5rmrITkvY3lhYXliIbop6Pph4vngrrku4DpurzpnIDopoHkvb/nlKjoqbLlt6XlhbfjgILkvb/nlKjogIXmn6XmoLjkuI3mnIPnlKjmlrzlhazplovpgKPmjqXkvb/nlKjogIXos6zomZ/kvb/nlKjnmoRJUOS9jeWdgOOAgidcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0XHRcdGlkOiAnYXJ2cHJldmlldycsXG5cdFx0XHRcdFx0bGFiZWw6IFtwcmV2aWV3bGlua10sXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHR3b3JrX2FyZWEuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnZGl2Jyxcblx0XHRcdFx0XHRpZDogJ3R3aW5rbGVhcnYtcHJldmlld2JveCcsXG5cdFx0XHRcdFx0c3R5bGU6ICdkaXNwbGF5OiBub25lJyxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0XHRcdGxhYmVsOiBbXG5cdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+ivt+S9v+eUqOW4uOivhuWGs+WumuaYr+WQpuS7pScsICfoq4vkvb/nlKjluLjorZjmsbrlrprmmK/lkKbku6UnKSxcblx0XHRcdFx0XHRcdCQoJzxjb2RlPicpLmFkZENsYXNzKCd0dy1hcnYtc29ja21hc3RlcicpLmNzcygnbWFyZ2luJywgJzJweDsnKVswXSxcblx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0J+mAmuefpeeUqOaIt+OAgui/meS4jeaYr+W/hemhu+eahO+8jOWvueS6jua2ieWPiuaWsOeUqOaIt+eahOaKpeWRiuiAjOiogO+8jOmAmuefpeS7luS7rOiDveiuqeaKpeWRiuaYvuW+l+abtOWFrOW5s++8jOS9huaYr+iuuOWkmuaDheWGteS4i++8iOWmgumVv+acn+egtOWdj+iAhe+8iemAmuefpeabtOWPr+iDvemAguW+l+WFtuWPjeOAgicsXG5cdFx0XHRcdFx0XHRcdCfpgJrnn6Xkvb/nlKjogIXjgILpgJnkuI3mmK/lv4XpoIjnmoTvvIzlsI3mlrzmtonlj4rmlrDkvb/nlKjogIXnmoTloLHlkYrogIzoqIDvvIzpgJrnn6Xku5blgJHog73orpPloLHlkYrpoa/lvpfmm7TlhazlubPvvIzkvYbmmK/oqLHlpJrmg4Xms4HkuIvvvIjlpoLplbfmnJ/noLTlo57ogIXvvInpgJrnn6Xmm7Tlj6/og73pganlvpflhbblj43jgIInXG5cdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdF0sXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHR3b3JrX2FyZWEgPSB3b3JrX2FyZWEucmVuZGVyKCk7XG5cdFx0XHRcdCQoJ2lucHV0OnRleHRbbmFtZT1zb2NrcHVwcGV0XScsIHdvcmtfYXJlYSkuZmlyc3QoKS52YWwocm9vdF8udWlkLnZhbHVlKTtcblx0XHRcdFx0b2xkX2FyZWEucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQod29ya19hcmVhLCBvbGRfYXJlYSk7XG5cdFx0XHRcdHJvb3RfLnNwaW5vdGljZXByZXZpZXdlciA9IG5ldyBNb3JlYml0cy53aWtpLnByZXZpZXcoXG5cdFx0XHRcdFx0JCh3b3JrX2FyZWEpLmZpbmQoJyN0d2lua2xlYXJ2LXNwaW5vdGljZWJveCcpLmxhc3QoKVswXVxuXHRcdFx0XHQpO1xuXHRcdFx0XHRUd2lua2xlLmFydi5jYWxsYmFjay5zZXRfc29ja21hc3Rlcihyb290Xy51aWQudmFsdWUpO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0LyogY2FzZSAnYWl2JzogKi9cblx0XHRcdC8qIGZhbGxzIHRocm91Z2ggKi9cblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdHdvcmtfYXJlYSA9IG5ldyBNb3JlYml0cy5xdWlja0Zvcm0uZWxlbWVudCh7XG5cdFx0XHRcdFx0dHlwZTogJ2ZpZWxkJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmiqXlkYrnlKjmiLfnoLTlnY8nLCAn5aCx5ZGK5L2/55So6ICF56C05aOeJyksXG5cdFx0XHRcdFx0bmFtZTogJ3dvcmtfYXJlYScsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHR3b3JrX2FyZWEuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnZGl2Jyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+aPkOaKpeWCgOWEoeW6lOS8mOWFiOWPkemAgeiHs+WCgOWEoeiwg+afpe+8jOmZpOmdnuebuOWFs+eahOi0puWPt+aciemrmOmikeeOh+OAgea2ieWPiuWkmuS4qumhtemdouetiee0p+aApeS4pemHjeeahOegtOWdj+ihjOS4uuOAgicsXG5cdFx0XHRcdFx0XHQn5o+Q5aCx5YKA5YSh5oeJ5YSq5YWI55m86YCB6Iez5YKA5YSh6Kq/5p+l77yM6Zmk6Z2e55u46Zec55qE6LOs6Jmf5pyJ6auY6aC7546H44CB5raJ5Y+K5aSa5YCL6aCB6Z2i562J57eK5oCl5Zq06YeN55qE56C05aOe6KGM54K644CCJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHR3b3JrX2FyZWEuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnaW5wdXQnLFxuXHRcdFx0XHRcdG5hbWU6ICdwYWdlJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfnm7jlhbPpobXpnaLvvJonLCAn55u46Zec6aCB6Z2i77yaJyksXG5cdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKCflpoLkuI3luIzmnJvorqnmiqXlkYrpk77mjqXliLDpobXpnaLvvIzor7fnlZnnqbonLCAn5aaC5LiN5biM5pyb6K6T5aCx5ZGK6YCj57WQ5Yiw6aCB6Z2i77yM6KuL55WZ56m6JyksXG5cdFx0XHRcdFx0dmFsdWU6IG13LnV0aWwuZ2V0UGFyYW1WYWx1ZSgndmFuYXJ0aWNsZScpIHx8ICcnLFxuXHRcdFx0XHRcdGV2ZW50OiAoZXZlbnQpID0+IHtcblx0XHRcdFx0XHRcdGNvbnN0IHt2YWx1ZX0gPSBldmVudC50YXJnZXQ7XG5cdFx0XHRcdFx0XHRjb25zdCByb290ID0gZXZlbnQudGFyZ2V0LmZvcm07XG5cdFx0XHRcdFx0XHRpZiAodmFsdWUgPT09ICcnKSB7XG5cdFx0XHRcdFx0XHRcdHJvb3QuYmFkaWQuZGlzYWJsZWQgPSB0cnVlO1xuXHRcdFx0XHRcdFx0XHRyb290Lmdvb2RpZC5kaXNhYmxlZCA9IHRydWU7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRyb290LmJhZGlkLmRpc2FibGVkID0gZmFsc2U7XG5cdFx0XHRcdFx0XHRcdHJvb3QuZ29vZGlkLmRpc2FibGVkID0gcm9vdC5iYWRpZC52YWx1ZSA9PT0gJyc7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRcdFx0bmFtZTogJ2JhZGlkJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflj5fliLDnoLTlnY/nmoTkv67orqLniYjmnKzvvJonLCAn5Y+X5Yiw56C05aOe55qE5L+u6KiC54mI5pys77yaJyksXG5cdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKCfnlZnnqbrku6XnlaXov4flt67lvIInLCAn55WZ56m65Lul55Wl6YGO5beu55WwJyksXG5cdFx0XHRcdFx0dmFsdWU6IG13LnV0aWwuZ2V0UGFyYW1WYWx1ZSgndmFuYXJ0aWNsZXJldmlkJykgfHwgJycsXG5cdFx0XHRcdFx0ZGlzYWJsZWQ6ICFtdy51dGlsLmdldFBhcmFtVmFsdWUoJ3ZhbmFydGljbGUnKSxcblx0XHRcdFx0XHRldmVudDogKGV2ZW50KSA9PiB7XG5cdFx0XHRcdFx0XHRjb25zdCB7dmFsdWV9ID0gZXZlbnQudGFyZ2V0O1xuXHRcdFx0XHRcdFx0Y29uc3Qgcm9vdCA9IGV2ZW50LnRhcmdldC5mb3JtO1xuXHRcdFx0XHRcdFx0cm9vdC5nb29kaWQuZGlzYWJsZWQgPSB2YWx1ZSA9PT0gJyc7XG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRcdFx0bmFtZTogJ2dvb2RpZCcsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn56C05Z2P5YmN55qE5L+u6K6i54mI5pys77yaJywgJ+egtOWjnuWJjeeahOS/ruiogueJiOacrO+8micpLFxuXHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUygn55WZ56m65Lul55Wl6L+H5beu5byC55qE6L6D5pep54mI5pysJywgJ+eVmeepuuS7peeVpemBjuW3rueVsOeahOi8g+aXqeeJiOacrCcpLFxuXHRcdFx0XHRcdHZhbHVlOiBtdy51dGlsLmdldFBhcmFtVmFsdWUoJ3ZhbmFydGljbGVnb29kcmV2aWQnKSB8fCAnJyxcblx0XHRcdFx0XHRkaXNhYmxlZDogIW13LnV0aWwuZ2V0UGFyYW1WYWx1ZSgndmFuYXJ0aWNsZScpIHx8IG13LnV0aWwuZ2V0UGFyYW1WYWx1ZSgndmFuYXJ0aWNsZXJldmlkJyksXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHR3b3JrX2FyZWEuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnY2hlY2tib3gnLFxuXHRcdFx0XHRcdG5hbWU6ICdhcnZ0eXBlJyxcblx0XHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+W3suWPkeWHuuacgOWQjuitpuWRiicsICflt7Lnmbzlh7rmnIDlvozorablkYonKSxcblx0XHRcdFx0XHRcdFx0dmFsdWU6ICdmaW5hbCcsXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflsIHnpoHov4fmnJ/lkI7pmo/ljbPnoLTlnY8nLCAn5bCB6Y6W6YGO5pyf5b6M6Zqo5Y2z56C05aOeJyksXG5cdFx0XHRcdFx0XHRcdHZhbHVlOiAncG9zdGJsb2NrJyxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+aYvuiAjOaYk+ingeeahOe6r+egtOWdj+eUqOaItycsICfpoa/ogIzmmJPopovnmoTntJTnoLTlo57kvb/nlKjogIUnKSxcblx0XHRcdFx0XHRcdFx0dmFsdWU6ICd2YW5kYWxvbmx5Jyxcblx0XHRcdFx0XHRcdFx0ZGlzYWJsZWQ6IG13LnV0aWwuaXNJUEFkZHJlc3Mocm9vdF8udWlkLnZhbHVlKSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+aYvuiAjOaYk+ingeeahHNwYW1ib3TmiJblpLHnqoPotKblj7cnLCAn6aGv6ICM5piT6KaL55qEc3BhbWJvdOaIluWkseeriuizrOiZnycpLFxuXHRcdFx0XHRcdFx0XHR2YWx1ZTogJ3NwYW1ib3QnLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5LuF55So5p2l5pWj5Y+R5bm/5ZGK5a6j5Lyg55qE55So5oi3JywgJ+WDheeUqOS+huaVo+eZvOW7o+WRiuWuo+WCs+eahOS9v+eUqOiAhScpLFxuXHRcdFx0XHRcdFx0XHR2YWx1ZTogJ3Byb21vb25seScsXG5cdFx0XHRcdFx0XHRcdGRpc2FibGVkOiBtdy51dGlsLmlzSVBBZGRyZXNzKHJvb3RfLnVpZC52YWx1ZSksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdF0sXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRpZiAoIW13LnV0aWwuaXNJUEFkZHJlc3MobXcuY29uZmlnLmdldCgnd2dSZWxldmFudFVzZXJOYW1lJykpKSB7XG5cdFx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0XHR0eXBlOiAnY2hlY2tib3gnLFxuXHRcdFx0XHRcdFx0bGlzdDogW1xuXHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Zyo6aG16Z2i5LiK5Y+K57yW6L6R5pGY6KaB6ZqQ6JeP55So5oi35ZCNJywgJ+WcqOmggemdouS4iuWPiue3qOi8r+aRmOimgemaseiXj+S9v+eUqOiAheWQjeeosScpLFxuXHRcdFx0XHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHRcdCfoi6XnlKjmiLflkI3kuI3lvZPor7fli77pgInmraTpobnvvIzms6jmhI/vvJror7fogIPomZHnp4HkuIvogZTns7vnrqHnkIblkZjlpITnkIbjgIInLFxuXHRcdFx0XHRcdFx0XHRcdFx0J+iLpeS9v+eUqOiAheWQjeeoseS4jeeVtuiri+WLvumBuOatpOmghe+8jOazqOaEj++8muiri+iAg+aFruengeS4i+iBr+e1oeeuoeeQhuWToeiZleeQhuOAgidcblx0XHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0XHRcdG5hbWU6ICdoaWRlbmFtZScsXG5cdFx0XHRcdFx0XHRcdFx0dmFsdWU6ICdoaWRlbmFtZScsXG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRdLFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICd0ZXh0YXJlYScsXG5cdFx0XHRcdFx0bmFtZTogJ3JlYXNvbicsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6K+E6K6677yaJywgJ+ipleirlu+8micpLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2RpdicsXG5cdFx0XHRcdFx0aWQ6ICdhcnZwcmV2aWV3Jyxcblx0XHRcdFx0XHRsYWJlbDogW3ByZXZpZXdsaW5rXSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0XHRcdGlkOiAndHdpbmtsZWFydi1wcmV2aWV3Ym94Jyxcblx0XHRcdFx0XHRzdHlsZTogJ2Rpc3BsYXk6IG5vbmUnLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0d29ya19hcmVhID0gd29ya19hcmVhLnJlbmRlcigpO1xuXHRcdFx0XHRvbGRfYXJlYS5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZCh3b3JrX2FyZWEsIG9sZF9hcmVhKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0fVxuXHRcdHJvb3RfLnByZXZpZXdlciA9IG5ldyBNb3JlYml0cy53aWtpLnByZXZpZXcoJCh3b3JrX2FyZWEpLmZpbmQoJyN0d2lua2xlYXJ2LXByZXZpZXdib3gnKS5sYXN0KClbMF0pO1xuXHR9O1xuXHRUd2lua2xlLmFydi5jYWxsYmFjay5wcmV2aWV3ID0gKGZvcm0pID0+IHtcblx0XHRjb25zdCByZWFzb24gPSBUd2lua2xlLmFydi5jYWxsYmFjay5nZXRSZXBvcnRXaWtpdGV4dChmb3JtKTtcblx0XHRpZiAocmVhc29uID09PSB1bmRlZmluZWQpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0Y29uc3QgaW5wdXQgPSBNb3JlYml0cy5xdWlja0Zvcm0uZ2V0SW5wdXREYXRhKGZvcm0pO1xuXHRcdGxldCB0aXRsZTtcblx0XHRzd2l0Y2ggKGlucHV0LmNhdGVnb3J5KSB7XG5cdFx0XHRjYXNlICd2aXAnOlxuXHRcdFx0XHR0aXRsZSA9ICdRaXV3ZW5fdGFsazrmiqXlkYrlvZPliY3noLTlnY8nO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ2V3aXAnOlxuXHRcdFx0XHR0aXRsZSA9ICdRaXV3ZW5fdGFsazrnrqHnkIblkZjlkYrnpLrmnb8nO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ3VzZXJuYW1lJzpcblx0XHRcdFx0dGl0bGUgPSAnUWl1d2VuX3RhbGs6566h55CG5ZGY5ZGK56S65p2/Jztcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlICdzcGknOlxuXHRcdFx0XHR0aXRsZSA9ICdRaXV3ZW5fdGFsazrnrqHnkIblkZjlkYrnpLrmnb8nO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdHRpdGxlID0gbXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpO1xuXHRcdFx0XHRicmVhaztcblx0XHR9XG5cdFx0Zm9ybS5wcmV2aWV3ZXIuYmVnaW5SZW5kZXIoYF9fTk9UT0NfXyR7cmVhc29uWzBdfWAsIHRpdGxlKTtcblx0fTtcblx0VHdpbmtsZS5hcnYuY2FsbGJhY2suZ2V0UmVwb3J0V2lraXRleHQgPSAoZm9ybSkgPT4ge1xuXHRcdGNvbnN0IGlucHV0ID0gTW9yZWJpdHMucXVpY2tGb3JtLmdldElucHV0RGF0YShmb3JtKTtcblx0XHRsZXQgcmVhc29uID0gJyc7XG5cdFx0bGV0IGNvbW1lbnQgPSAnJztcblx0XHRjb25zdCB7dWlkfSA9IGlucHV0O1xuXHRcdGNvbnN0IGNoZWNrVGl0bGUgPSAodGl0bGUsIHJldmlkKSA9PiB7XG5cdFx0XHRpZiAoL2h0dHBzPzpcXC9cXC8vLnRlc3QodGl0bGUpKSB7XG5cdFx0XHRcdHZvaWQgbXcubm90aWZ5KHdpbmRvdy53Z1VMUygn6aG16Z2i5ZCN56ew5LiN6IO95L2/55So572R5Z2A44CCJywgJ+mggemdouWQjeeoseS4jeiDveS9v+eUqOe2suWdgOOAgicpLCB7XG5cdFx0XHRcdFx0dHlwZTogJ3dhcm4nLFxuXHRcdFx0XHRcdHRhZzogJ3R3aW5rbGVhcnYnLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXHRcdFx0bGV0IHBhZ2VfO1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0cGFnZV8gPSBuZXcgbXcuVGl0bGUodGl0bGUpO1xuXHRcdFx0fSBjYXRjaCB7XG5cdFx0XHRcdHZvaWQgbXcubm90aWZ5KFxuXHRcdFx0XHRcdGAke1xuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfigJwnLCAn44CMJykgK1xuXHRcdFx0XHRcdFx0dGl0bGUgK1xuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHQn4oCd5LiN5piv5LiA5Liq5pyJ5pWI55qE6aG16Z2i5ZCN56ew77yM5aaC6KaB5L2/55So5beu5byC6ZO+5o6l6K+35pS+5Zyo4oCc6K+E6K664oCdJyxcblx0XHRcdFx0XHRcdFx0J+OAjeS4jeaYr+S4gOWAi+acieaViOeahOmggemdouWQjeeose+8jOWmguimgeS9v+eUqOW3rueVsOmAo+e1kOiri+aUvuWcqOOAjOipleirluOAjSdcblx0XHRcdFx0XHRcdCkgK1xuXHRcdFx0XHRcdFx0KHJldmlkID8gd2luZG93LndnVUxTKCfvvIzmiJbmraPnoa7ovpPlhaXigJzkv67orqLniYjmnKzigJ0nLCAn77yM5oiW5q2j56K66Ly45YWl44CM5L+u6KiC54mI5pys44CNJykgOiAnJylcblx0XHRcdFx0XHR944CCYCxcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHR0eXBlOiAnd2FybicsXG5cdFx0XHRcdFx0XHR0YWc6ICd0d2lua2xlYXJ2Jyxcblx0XHRcdFx0XHR9XG5cdFx0XHRcdCk7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH1cblx0XHRcdGlmIChwYWdlXy5uYW1lc3BhY2UgPT09IC0xKSB7XG5cdFx0XHRcdHZvaWQgbXcubm90aWZ5KFxuXHRcdFx0XHRcdGAke1xuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfigJwnLCAn44CMJykgK1xuXHRcdFx0XHRcdFx0dGl0bGUgK1xuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHQn4oCd5bGe5LqO54m55q6K6aG16Z2i77yM5aaC6KaB5L2/55So5beu5byC6ZO+5o6l6K+35pS+5Zyo4oCc6K+E6K664oCdJyxcblx0XHRcdFx0XHRcdFx0J+OAjeWxrOaWvOeJueauiumggemdou+8jOWmguimgeS9v+eUqOW3rueVsOmAo+e1kOiri+aUvuWcqOOAjOipleirluOAjSdcblx0XHRcdFx0XHRcdCkgK1xuXHRcdFx0XHRcdFx0KHJldmlkID8gd2luZG93LndnVUxTKCfvvIzmiJbmraPnoa7ovpPlhaXigJzkv67orqLniYjmnKzigJ0nLCAn77yM5oiW5q2j56K66Ly45YWl44CM5L+u6KiC54mI5pys44CNJykgOiAnJylcblx0XHRcdFx0XHR944CCYCxcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHR0eXBlOiAnd2FybicsXG5cdFx0XHRcdFx0XHR0YWc6ICd0d2lua2xlYXJ2Jyxcblx0XHRcdFx0XHR9XG5cdFx0XHRcdCk7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBwYWdlXztcblx0XHR9O1xuXHRcdGxldCBwYWdlO1xuXHRcdHN3aXRjaCAoaW5wdXQuY2F0ZWdvcnkpIHtcblx0XHRcdC8vIFJlcG9ydCAzUlJcblx0XHRcdGNhc2UgJ2V3aXAnOiB7XG5cdFx0XHRcdGlmIChpbnB1dC5yZWFzb24gPT09ICcnKSB7XG5cdFx0XHRcdFx0dm9pZCBtdy5ub3RpZnkod2luZG93LndnVUxTKCfmgqjlv4XpobvmjIflrprnkIbnlLEnLCAn5oKo5b+F6aCI5oyH5a6a55CG55SxJyksIHtcblx0XHRcdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0XHRcdHRhZzogJ3R3aW5rbGVhcnYnLFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZWFzb24gKz0gYD09IOe8lui+keaImOS4vuaKpe+8iCR7dWlkfe+8iSA9PVxcbmA7XG5cdFx0XHRcdHJlYXNvbiArPSBgKiAnJyd7e3ZhbmRhbHwkey9bPV0vLnRlc3QodWlkKSA/ICcxPScgOiAnJ30ke3VpZH19fScnJ1xcbmA7XG5cdFx0XHRcdGNvbnN0IHBhZ2VzID0gJCgnaW5wdXQ6dGV4dFtuYW1lPXBhZ2VdJywgZm9ybSkubWFwKChvLCBlKSA9PiB7XG5cdFx0XHRcdFx0cmV0dXJuICQoZSkudmFsKCkgfHwgbnVsbDtcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGZvciAoY29uc3QgcGFnZV8gb2YgcGFnZXMpIHtcblx0XHRcdFx0XHRwYWdlID0gY2hlY2tUaXRsZShwYWdlXywgZmFsc2UpO1xuXHRcdFx0XHRcdGlmICghcGFnZSkge1xuXHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRjb21tZW50ICs9IGAqIHt7cGFnZWxpbmtzfCR7XG5cdFx0XHRcdFx0XHRwYWdlLmdldFByZWZpeGVkVGV4dCgpLmluY2x1ZGVzKCc9JykgPyAnMT0nIDogJydcblx0XHRcdFx0XHR9JHtwYWdlLmdldFByZWZpeGVkVGV4dCgpfX19XFxuYDtcblx0XHRcdFx0fVxuXHRcdFx0XHRpbnB1dC5yZWFzb24gPSBpbnB1dC5yZWFzb24ucmVwbGFjZSgvXFxuXFxuKy9nLCAnXFxuJyk7XG5cdFx0XHRcdGlucHV0LnJlYXNvbiA9IGlucHV0LnJlYXNvbi5yZXBsYWNlKC9cXHI/XFxuL2csICdcXG4qOicpOyAvLyBpbmRlbnQgbmV3bGluZXNcblx0XHRcdFx0Y29tbWVudCArPSBgKiAke2lucHV0LnJlYXNvbn1cXG5gO1xuXHRcdFx0XHRjb21tZW50ID0gY29tbWVudC50cmltKCk7XG5cdFx0XHRcdGNvbW1lbnQgPSBNb3JlYml0cy5zdHJpbmcuYXBwZW5kUHVuY3R1YXRpb24oY29tbWVudCk7XG5cdFx0XHRcdHJlYXNvbiArPSBgJHtjb21tZW50fVxcbiog5o+Q5oql5Lq677yafn5gLmNvbmNhdCgnfn5cXG4qIOWkhOeQhu+8micpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdC8vIFJlcG9ydCBpbmFwcHJvcHJpYXRlIHVzZXJuYW1lXG5cdFx0XHRjYXNlICd1c2VybmFtZSc6IHtcblx0XHRcdFx0bGV0IHR5cGVzID0gaW5wdXQuYXJ2dHlwZS5tYXAoTW9yZWJpdHMuc3RyaW5nLnRvTG93ZXJDYXNlRmlyc3RDaGFyKTtcblx0XHRcdFx0Y29uc3QgaGFzU2hhcmVkID0gdHlwZXMuaW5jbHVkZXMoJ3NoYXJlZCcpO1xuXHRcdFx0XHRpZiAoaGFzU2hhcmVkKSB7XG5cdFx0XHRcdFx0dHlwZXMuc3BsaWNlKHR5cGVzLmluZGV4T2YoJ3NoYXJlZCcpLCAxKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoXG5cdFx0XHRcdFx0dHlwZXMuaW5jbHVkZXMoJ+S+rui+seaApycpICYmXG5cdFx0XHRcdFx0IWNvbmZpcm0oXG5cdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdCforablkYrvvJrkuKXph43nmoTkvq7ovrHmgKfnlKjmiLflkI3lkozpkojlr7nnibnlrprkuKrkurrnmoTkvq7ovrHmgKfnlKjmiLflkI3kuI3lupTlnKjlhazlvIDpobXpnaLmiqXlkYrvvIzogIzmmK/lupTlvZPnp4HkuIvogZTns7vnm5HnnaPlkZjlpITnkIbjgILmmK/lkKbnu6fnu63vvJ8nLFxuXHRcdFx0XHRcdFx0XHQn6K2m5ZGK77ya5Zq06YeN55qE5L6u6L6x5oCn5L2/55So6ICF5ZCN56ix5ZKM6Yed5bCN54m55a6a5YCL5Lq655qE5L6u6L6x5oCn5L2/55So6ICF5ZCN56ix5LiN5oeJ5Zyo5YWs6ZaL6aCB6Z2i5aCx5ZGK77yM6ICM5piv5oeJ55W256eB5LiL6IGv57Wh55uj552j5ZOh6JmV55CG44CC5piv5ZCm57m857qM77yfJ1xuXHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICh0eXBlcy5sZW5ndGggPD0gMikge1xuXHRcdFx0XHRcdHR5cGVzID0gdHlwZXMuam9pbign5ZKMJyk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dHlwZXMgPSBbdHlwZXMuc2xpY2UoMCwgLTEpLmpvaW4oJ+OAgScpLCB0eXBlcy5zbGljZSgtMSldLmpvaW4oJ+WSjCcpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGNvbW1lbnQgKz0gYCp7e3VzZXItdWFhfDE9JHt1aWR9YDtcblx0XHRcdFx0aWYgKGlucHV0LmhpZGVuYW1lKSB7XG5cdFx0XHRcdFx0Y29tbWVudCArPSAnfGhpZGVuYW1lPTEnO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGNvbW1lbnQgKz0gJ319ICZuZGFzaDsgJztcblx0XHRcdFx0aWYgKHR5cGVzLmxlbmd0aCkge1xuXHRcdFx0XHRcdGNvbW1lbnQgKz0gdHlwZXMgKyB3aW5kb3cud2dVTFMoJ+eUqOaIt+WQjScsICfkvb/nlKjogIXlkI3nqLEnKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAodHlwZXMubGVuZ3RoICYmIGhhc1NoYXJlZCkge1xuXHRcdFx0XHRcdGNvbW1lbnQgKz0gJ++8jCc7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKGhhc1NoYXJlZCkge1xuXHRcdFx0XHRcdGNvbW1lbnQgKz0gd2luZG93LndnVUxTKCfmmpfnpLror6XotKblj7flubbpnZ7nlLHkuIDkurrmi6XmnIknLCAn5pqX56S66Kmy6LOs6Jmf5Lim6Z2e55Sx5LiA5Lq65pOB5pyJJyk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHR5cGVzLmxlbmd0aCB8fCBoYXNTaGFyZWQpIHtcblx0XHRcdFx0XHRjb21tZW50ICs9ICfjgIInO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChpbnB1dC5yZWFzb24pIHtcblx0XHRcdFx0XHRjb21tZW50ICs9IE1vcmViaXRzLnN0cmluZy50b1VwcGVyQ2FzZUZpcnN0Q2hhcihpbnB1dC5yZWFzb24pO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGNvbW1lbnQgPSBNb3JlYml0cy5zdHJpbmcuYXBwZW5kUHVuY3R1YXRpb24oY29tbWVudCk7XG5cdFx0XHRcdGNvbW1lbnQgKz0gJy0tfn4nLmNvbmNhdCgnfn4nKTtcblx0XHRcdFx0Y29tbWVudCA9IGNvbW1lbnQucmVwbGFjZSgvXFxyP1xcbi9nLCAnXFxuKjonKTsgLy8gaW5kZW50IG5ld2xpbmVzXG5cdFx0XHRcdHJlYXNvbiA9IGA9PSDkuI3lvZPnlKjmiLflkI3miqXlkYrvvIgke1xuXHRcdFx0XHRcdGlucHV0LmhpZGVuYW1lID8gd2luZG93LndnVUxTKCflt7LpmpDol4/nlKjmiLflkI0nLCAn5bey6Zqx6JeP5L2/55So6ICF5ZCN56ixJykgOiB1aWRcblx0XHRcdFx0fe+8iSA9PVxcbmA7XG5cdFx0XHRcdHJlYXNvbiArPSBjb21tZW50O1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdC8vIFFXOlNQSVxuXHRcdFx0Y2FzZSAnc3BpJzoge1xuXHRcdFx0XHRpZiAoIWlucHV0LnJlYXNvbikge1xuXHRcdFx0XHRcdHZvaWQgbXcubm90aWZ5KHdpbmRvdy53Z1VMUygn6K+36L6T5YWl6K+B5o2u44CCJywgJ+iri+i8uOWFpeitieaTmuOAgicpLCB7XG5cdFx0XHRcdFx0XHR0eXBlOiAnd2FybicsXG5cdFx0XHRcdFx0XHR0YWc6ICd0d2lua2xlYXJ2Jyxcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0Y29uc3Qgc29ja3B1cHBldHMgPSBNb3JlYml0cy5hcnJheS51bmlxKFxuXHRcdFx0XHRcdFsuLi4kKCdpbnB1dDp0ZXh0W25hbWU9c29ja3B1cHBldF0nLCBmb3JtKV0ubWFwKChvKSA9PiB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gJChvKS52YWwoKS50cmltKCkgfHwgbnVsbDtcblx0XHRcdFx0XHR9KVxuXHRcdFx0XHQpO1xuXHRcdFx0XHRpZiAoIXNvY2twdXBwZXRzWzBdKSB7XG5cdFx0XHRcdFx0dm9pZCBtdy5ub3RpZnkod2luZG93LndnVUxTKCfmgqjmsqHmnInmjIflrprku7vkvZXlgoDlhKHjgIInLCAn5oKo5rKS5pyJ5oyH5a6a5Lu75L2V5YKA5YSh44CCJyksIHtcblx0XHRcdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0XHRcdHRhZzogJ3R3aW5rbGVhcnYnLFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHRjb21tZW50ICs9ICd7eycuY29uY2F0KCdzdWJzdDonLCAnU1BJIHJlcG9ydHwnKTtcblx0XHRcdFx0aWYgKCFzb2NrcHVwcGV0cy5pbmNsdWRlcyhpbnB1dC5zb2NrbWFzdGVyKSkge1xuXHRcdFx0XHRcdGNvbW1lbnQgKz0gJzE9e3snLmNvbmNhdChcblx0XHRcdFx0XHRcdCdzdWJzdDonLFxuXHRcdFx0XHRcdFx0JyNpZmV4aXN0Ont7Jyxcblx0XHRcdFx0XHRcdCdzdWJzdDonLFxuXHRcdFx0XHRcdFx0YEZVTExQQUdFTkFNRX19fHwke2lucHV0LnNvY2ttYXN0ZXJ9fX18YFxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0Y29tbWVudCArPSBgJHtzb2NrcHVwcGV0c1xuXHRcdFx0XHRcdC5tYXAoKHNvY2ssIGluZGV4KSA9PiB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gYCR7aW5kZXggKyAyfT0ke3NvY2t9YDtcblx0XHRcdFx0XHR9KVxuXHRcdFx0XHRcdC5qb2luKCd8Jyl9XFxufGV2aWRlbmNlPSR7TW9yZWJpdHMuc3RyaW5nLmFwcGVuZFB1bmN0dWF0aW9uKGlucHV0LnJlYXNvbil9XFxuYDtcblx0XHRcdFx0aWYgKGlucHV0LmNoZWNrdXNlcikge1xuXHRcdFx0XHRcdGNvbW1lbnQgKz0gJ3xjaGVja3VzZXI9eWVzJztcblx0XHRcdFx0fVxuXHRcdFx0XHRjb21tZW50ICs9ICd9fSc7XG5cdFx0XHRcdHJlYXNvbiA9IGNvbW1lbnQ7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBSZXBvcnQgdXNlciBmb3IgdmFuZGFsaXNtXG5cdFx0XHQvKiBjYXNlICdhaXYnOiAqL1xuXHRcdFx0LyogZmFsbHMgdGhyb3VnaCAqL1xuXHRcdFx0ZGVmYXVsdDoge1xuXHRcdFx0XHRpZiAoIWlucHV0LmFydnR5cGUubGVuZ3RoICYmIGlucHV0LnJlYXNvbiA9PT0gJycpIHtcblx0XHRcdFx0XHR2b2lkIG13Lm5vdGlmeSh3aW5kb3cud2dVTFMoJ+aCqOW/hemhu+aMh+WumueQhueUsScsICfmgqjlv4XpoIjmjIflrprnkIbnlLEnKSwge1xuXHRcdFx0XHRcdFx0dHlwZTogJ3dhcm4nLFxuXHRcdFx0XHRcdFx0dGFnOiAndHdpbmtsZWFydicsXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJlYXNvbiArPSBgPT0gJHtpbnB1dC5oaWRlbmFtZSA/IHdpbmRvdy53Z1VMUygn5bey6ZqQ6JeP55So5oi35ZCNJywgJ+W3sumaseiXj+S9v+eUqOiAheWQjeeosScpIDogdWlkfSA9PVxcbmA7XG5cdFx0XHRcdHJlYXNvbiArPSBgKiAnJyd7e3ZhbmRhbHwkey9bPV0vLnRlc3QodWlkKSA/ICcxPScgOiAnJ30ke3VpZH1gO1xuXHRcdFx0XHRpZiAoaW5wdXQuaGlkZW5hbWUpIHtcblx0XHRcdFx0XHRyZWFzb24gKz0gJ3xoaWRlbmFtZT0xJztcblx0XHRcdFx0fVxuXHRcdFx0XHRyZWFzb24gKz0gXCJ9fScnJ1xcblwiO1xuXHRcdFx0XHRjb25zdCB0eXBlcyA9IGlucHV0LmFydnR5cGVcblx0XHRcdFx0XHQubWFwKCh2KSA9PiB7XG5cdFx0XHRcdFx0XHRzd2l0Y2ggKHYpIHtcblx0XHRcdFx0XHRcdFx0Y2FzZSAnZmluYWwnOlxuXHRcdFx0XHRcdFx0XHRcdHJldHVybiAn5bey5Y+R5Ye65pyA5ZCO6K2m5ZGKJztcblx0XHRcdFx0XHRcdFx0Y2FzZSAncG9zdGJsb2NrJzpcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gJ+Wwgeemgei/h+acn+WQjumaj+WNs+egtOWdjyc7XG5cdFx0XHRcdFx0XHRcdGNhc2UgJ3NwYW1ib3QnOlxuXHRcdFx0XHRcdFx0XHRcdHJldHVybiAn5pi+6ICM5piT6KeB55qEc3BhbWJvdOaIluWkseeqg+i0puWPtyc7XG5cdFx0XHRcdFx0XHRcdGNhc2UgJ3ZhbmRhbG9ubHknOlxuXHRcdFx0XHRcdFx0XHRcdHJldHVybiAn5pi+6ICM5piT6KeB55qE57qv56C05Z2P55So5oi3Jztcblx0XHRcdFx0XHRcdFx0Y2FzZSAncHJvbW9vbmx5Jzpcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gJ+S7heeUqOadpeaVo+WPkeW5v+WRiuWuo+S8oOeahOeUqOaItyc7XG5cdFx0XHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuICfmnKrnn6XnkIbnlLEnO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pXG5cdFx0XHRcdFx0LmpvaW4oJ++8jCcpO1xuXHRcdFx0XHRpZiAoaW5wdXQucGFnZSAhPT0gJycpIHtcblx0XHRcdFx0XHRwYWdlID0gY2hlY2tUaXRsZShpbnB1dC5wYWdlLCB0cnVlKTtcblx0XHRcdFx0XHRpZiAoIXBhZ2UpIHtcblx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Y29tbWVudCArPSBgKiB7e3BhZ2VsaW5rc3wke1xuXHRcdFx0XHRcdFx0cGFnZS5nZXRQcmVmaXhlZFRleHQoKS5pbmNsdWRlcygnPScpID8gJzE9JyA6ICcnXG5cdFx0XHRcdFx0fSR7cGFnZS5nZXRQcmVmaXhlZFRleHQoKX19fWA7XG5cdFx0XHRcdFx0aWYgKGlucHV0LmJhZGlkKSB7XG5cdFx0XHRcdFx0XHRjb21tZW50ICs9IGDvvIh7e2RpZmZ8JHtwYWdlLmdldFByZWZpeGVkVGV4dCgpfXwke2lucHV0LmJhZGlkfXwke2lucHV0Lmdvb2RpZCA/PyAnJ318ZGlmZn1977yJYDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Y29tbWVudCArPSAnXFxuJztcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAodHlwZXMpIHtcblx0XHRcdFx0XHRjb21tZW50ICs9IGAqICR7dHlwZXN9YDtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoaW5wdXQucmVhc29uICE9PSAnJykge1xuXHRcdFx0XHRcdGlucHV0LnJlYXNvbiA9IGlucHV0LnJlYXNvbi5yZXBsYWNlKC9cXG5cXG4rL2csICdcXG4nKTtcblx0XHRcdFx0XHRpbnB1dC5yZWFzb24gPSBpbnB1dC5yZWFzb24ucmVwbGFjZSgvXFxyP1xcbi9nLCAnXFxuKjonKTsgLy8gaW5kZW50IG5ld2xpbmVzXG5cdFx0XHRcdFx0Y29tbWVudCArPSAodHlwZXMgPyAn44CCJyA6ICcqICcpICsgaW5wdXQucmVhc29uO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGNvbW1lbnQgPSBjb21tZW50LnRyaW0oKTtcblx0XHRcdFx0Y29tbWVudCA9IE1vcmViaXRzLnN0cmluZy5hcHBlbmRQdW5jdHVhdGlvbihjb21tZW50KTtcblx0XHRcdFx0cmVhc29uICs9IGAke2NvbW1lbnR9XFxuKiDlj5HnjrDkurrvvJp+fmAuY29uY2F0KCd+flxcbiog5aSE55CG77yaJyk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gW3JlYXNvbiwgY29tbWVudF07XG5cdH07XG5cdFR3aW5rbGUuYXJ2LmNhbGxiYWNrLmV2YWx1YXRlID0gKGUpID0+IHtcblx0XHRjb25zdCBmb3JtID0gZS50YXJnZXQ7XG5cdFx0Y29uc3QgaW5wdXQgPSBNb3JlYml0cy5xdWlja0Zvcm0uZ2V0SW5wdXREYXRhKGZvcm0pO1xuXHRcdGNvbnN0IHt1aWR9ID0gaW5wdXQ7XG5cdFx0bGV0IHJlYXNvbjtcblx0XHRsZXQgc3VtbWFyeTtcblx0XHRzd2l0Y2ggKGlucHV0LmNhdGVnb3J5KSB7XG5cdFx0XHQvLyBSZXBvcnQgM1JSXG5cdFx0XHRjYXNlICdld2lwJzoge1xuXHRcdFx0XHRyZWFzb24gPSBUd2lua2xlLmFydi5jYWxsYmFjay5nZXRSZXBvcnRXaWtpdGV4dChmb3JtKTtcblx0XHRcdFx0aWYgKHJlYXNvbiA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHN1bW1hcnkgPSBgJHt3aW5kb3cud2dVTFMoJ+aKpeWRiicsICfloLHlkYonKX1bW1NwZWNpYWw6Q29udHJpYnMvJHt1aWR9fCR7dWlkfV1dYDtcblx0XHRcdFx0TW9yZWJpdHMuc2ltcGxlV2luZG93LnNldEJ1dHRvbnNFbmFibGVkKGZhbHNlKTtcblx0XHRcdFx0TW9yZWJpdHMuc3RhdHVzLmluaXQoZm9ybSk7XG5cdFx0XHRcdE1vcmViaXRzLndpa2kuYWN0aW9uQ29tcGxldGVkLnJlZGlyZWN0ID0gJ1FpdXdlbl90YWxrOueuoeeQhuWRmOWRiuekuuadvyc7XG5cdFx0XHRcdE1vcmViaXRzLndpa2kuYWN0aW9uQ29tcGxldGVkLm5vdGljZSA9IHdpbmRvdy53Z1VMUygn5oql5ZGK5a6M5oiQJywgJ+WgseWRiuWujOaIkCcpO1xuXHRcdFx0XHRjb25zdCBld2lwUGFnZSA9IG5ldyBNb3JlYml0cy53aWtpLnBhZ2UoXG5cdFx0XHRcdFx0J1FpdXdlbl90YWxrOueuoeeQhuWRmOWRiuekuuadvycsXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKCflpITnkIZFV0lQ6K+35rGCJywgJ+iZleeQhkVXSVDoq4vmsYInKVxuXHRcdFx0XHQpO1xuXHRcdFx0XHRld2lwUGFnZS5zZXRGb2xsb3dSZWRpcmVjdCh0cnVlKTtcblx0XHRcdFx0ZXdpcFBhZ2UubG9hZCgoKSA9PiB7XG5cdFx0XHRcdFx0Y29uc3QgdGV4dCA9IGV3aXBQYWdlLmdldFBhZ2VUZXh0KCk7XG5cdFx0XHRcdFx0Y29uc3QgJGV3aXBMaW5rID0gJzxhIHJlbD1cIm5vb3BlbmVyXCIgdGFyZ2V0PVwiX2JsYW5rXCIgaHJlZj1cIi93aWtpL1FXOkVXSVBcIj5RVzpFV0lQPC9hPic7XG5cdFx0XHRcdFx0Ly8gY2hlY2sgaWYgdXNlciBoYXMgYWxyZWFkeSBiZWVuIHJlcG9ydGVkXG5cdFx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdFx0bmV3IFJlZ0V4cChcblx0XHRcdFx0XHRcdFx0YD09PVxcXFxzKlxcXFx7XFxcXHtcXFxccyooPzpbVnZdYW5kYWwpXFxcXHMqXFxcXHxcXFxccyooPzoxPSk/XFxcXHMqJHtNb3JlYml0cy5zdHJpbmcuZXNjYXBlUmVnRXhwKFxuXHRcdFx0XHRcdFx0XHRcdHVpZFxuXHRcdFx0XHRcdFx0XHQpfVxcXFxzKlxcXFx9XFxcXH1cXFxccyo9PT1gXG5cdFx0XHRcdFx0XHQpLnRlc3QodGV4dClcblx0XHRcdFx0XHQpIHtcblx0XHRcdFx0XHRcdGV3aXBQYWdlXG5cdFx0XHRcdFx0XHRcdC5nZXRTdGF0dXNFbGVtZW50KClcblx0XHRcdFx0XHRcdFx0LmVycm9yKHdpbmRvdy53Z1VMUygn5oql5ZGK5bey5a2Y5Zyo77yM5bCG5LiN5Lya5Yqg5YWl5paw55qEJywgJ+WgseWRiuW3suWtmOWcqO+8jOWwh+S4jeacg+WKoOWFpeaWsOeahCcpKTtcblx0XHRcdFx0XHRcdE1vcmViaXRzLnN0YXR1cy5wcmludFVzZXJUZXh0KFxuXHRcdFx0XHRcdFx0XHRyZWFzb25bMV0sXG5cdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn5oKo6L6T5YWl55qE6K+E6K665bey5Zyo5LiL5pa55o+Q5L6b77yM5oKo5Y+v5Lul5bCG5YW25Yqg5YWl5YiwJyxcblx0XHRcdFx0XHRcdFx0XHQn5oKo6Ly45YWl55qE6KmV6KuW5bey5Zyo5LiL5pa55o+Q5L6b77yM5oKo5Y+v5Lul5bCH5YW25Yqg5YWl5YiwJ1xuXHRcdFx0XHRcdFx0XHQpICtcblx0XHRcdFx0XHRcdFx0XHQkZXdpcExpbmsgK1xuXHRcdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5bey5a2Y5Zyo55qE5bCP6IqC5Lit77yaJywgJ+W3suWtmOWcqOeahOWwj+evgOS4re+8micpXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRld2lwUGFnZS5zZXRQYWdlU2VjdGlvbigwKTtcblx0XHRcdFx0XHRld2lwUGFnZS5nZXRTdGF0dXNFbGVtZW50KCkuc3RhdHVzKHdpbmRvdy53Z1VMUygn5Yqg5YWl5paw5oql5ZGK4oCmJywgJ+WKoOWFpeaWsOWgseWRiuKApicpKTtcblx0XHRcdFx0XHRld2lwUGFnZS5zZXRFZGl0U3VtbWFyeShzdW1tYXJ5KTtcblx0XHRcdFx0XHRld2lwUGFnZS5zZXRDaGFuZ2VUYWdzKFR3aW5rbGUuY2hhbmdlVGFncyk7XG5cdFx0XHRcdFx0ZXdpcFBhZ2Uuc2V0QXBwZW5kVGV4dChgXFxuJHtyZWFzb25bMF19YCk7XG5cdFx0XHRcdFx0ZXdpcFBhZ2UuYXBwZW5kKCk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdC8vIFJlcG9ydCBpbmFwcHJvcHJpYXRlIHVzZXJuYW1lXG5cdFx0XHRjYXNlICd1c2VybmFtZSc6IHtcblx0XHRcdFx0cmVhc29uID0gVHdpbmtsZS5hcnYuY2FsbGJhY2suZ2V0UmVwb3J0V2lraXRleHQoZm9ybSk7XG5cdFx0XHRcdE1vcmViaXRzLnNpbXBsZVdpbmRvdy5zZXRCdXR0b25zRW5hYmxlZChmYWxzZSk7XG5cdFx0XHRcdE1vcmViaXRzLnN0YXR1cy5pbml0KGZvcm0pO1xuXHRcdFx0XHRNb3JlYml0cy53aWtpLmFjdGlvbkNvbXBsZXRlZC5yZWRpcmVjdCA9ICdRaXV3ZW5fdGFsazrnrqHnkIblkZjlkYrnpLrmnb8nO1xuXHRcdFx0XHRNb3JlYml0cy53aWtpLmFjdGlvbkNvbXBsZXRlZC5ub3RpY2UgPSB3aW5kb3cud2dVTFMoJ+aKpeWRiuWujOaIkCcsICfloLHlkYrlrozmiJAnKTtcblx0XHRcdFx0Y29uc3QgdWFhUGFnZSA9IG5ldyBNb3JlYml0cy53aWtpLnBhZ2UoXG5cdFx0XHRcdFx0J1FpdXdlbl90YWxrOueuoeeQhuWRmOWRiuekuuadvycsXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKCflpITnkIZVQUHor7fmsYInLCAn6JmV55CGVUFB6KuL5rGCJylcblx0XHRcdFx0KTtcblx0XHRcdFx0dWFhUGFnZS5zZXRGb2xsb3dSZWRpcmVjdCh0cnVlKTtcblx0XHRcdFx0dWFhUGFnZS5sb2FkKCgpID0+IHtcblx0XHRcdFx0XHRjb25zdCB0ZXh0ID0gdWFhUGFnZS5nZXRQYWdlVGV4dCgpO1xuXHRcdFx0XHRcdC8vIGNoZWNrIGlmIHVzZXIgaGFzIGFscmVhZHkgYmVlbiByZXBvcnRlZFxuXHRcdFx0XHRcdGlmIChcblx0XHRcdFx0XHRcdG5ldyBSZWdFeHAoXG5cdFx0XHRcdFx0XHRcdGBcXFxce1xcXFx7XFxcXHMqdXNlci11YWFcXFxccypcXFxcfFxcXFxzKigxXFxcXHMqPVxcXFxzKik/JHtNb3JlYml0cy5zdHJpbmcuZXNjYXBlUmVnRXhwKFxuXHRcdFx0XHRcdFx0XHRcdHVpZFxuXHRcdFx0XHRcdFx0XHQpfVxcXFxzKihcXFxcfHxcXFxcfSlgXG5cdFx0XHRcdFx0XHQpLnRlc3QodGV4dClcblx0XHRcdFx0XHQpIHtcblx0XHRcdFx0XHRcdHVhYVBhZ2UuZ2V0U3RhdHVzRWxlbWVudCgpLmVycm9yKHdpbmRvdy53Z1VMUygn55So5oi35bey6KKr5YiX5YWl44CCJywgJ+S9v+eUqOiAheW3suiiq+WIl+WFpeOAgicpKTtcblx0XHRcdFx0XHRcdGNvbnN0ICR1YWFMaW5rID0gJzxhIHJlbD1cIm5vb3BlbmVyXCIgdGFyZ2V0PVwiX2JsYW5rXCIgaHJlZj1cIi93aWtpL1FXOlVBQVwiPlFXOlVBQTwvYT4nO1xuXHRcdFx0XHRcdFx0TW9yZWJpdHMuc3RhdHVzLnByaW50VXNlclRleHQoXG5cdFx0XHRcdFx0XHRcdHJlYXNvblsxXSxcblx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCfmgqjovpPlhaXnmoTor4Torrrlt7LlnKjkuIvmlrnmj5DkvpvvvIzmgqjlj6/ku6XlsIblhbbmiYvlt6XliqDlhaUnLFxuXHRcdFx0XHRcdFx0XHRcdCfmgqjovLjlhaXnmoToqZXoq5blt7LlnKjkuIvmlrnmj5DkvpvvvIzmgqjlj6/ku6XlsIflhbbmiYvlt6XliqDlhaUnXG5cdFx0XHRcdFx0XHRcdCkgK1xuXHRcdFx0XHRcdFx0XHRcdCR1YWFMaW5rICtcblx0XHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+S4iuivpeeUqOaIt+eahOaKpeWRiuS4re+8micsICfkuIroqbLkvb/nlKjogIXnmoTloLHlkYrkuK3vvJonKVxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0dWFhUGFnZS5nZXRTdGF0dXNFbGVtZW50KCkuc3RhdHVzKHdpbmRvdy53Z1VMUygn5Yqg5YWl5paw5oql5ZGK4oCmJywgJ+WKoOWFpeaWsOWgseWRiuKApicpKTtcblx0XHRcdFx0XHR1YWFQYWdlLnNldEVkaXRTdW1tYXJ5KHdpbmRvdy53Z1VMUygn5paw5o+Q5oqlJywgJ+aWsOaPkOWgsScpKTtcblx0XHRcdFx0XHR1YWFQYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdFx0XHR1YWFQYWdlLnNldEFwcGVuZFRleHQoYFxcblxcbiR7cmVhc29uWzBdfWApO1xuXHRcdFx0XHRcdHVhYVBhZ2UuYXBwZW5kKCk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdC8vIFFXOlNQSVxuXHRcdFx0Y2FzZSAnc3BpJzoge1xuXHRcdFx0XHRyZWFzb24gPSBUd2lua2xlLmFydi5jYWxsYmFjay5nZXRSZXBvcnRXaWtpdGV4dChmb3JtKTtcblx0XHRcdFx0TW9yZWJpdHMuc2ltcGxlV2luZG93LnNldEJ1dHRvbnNFbmFibGVkKGZhbHNlKTtcblx0XHRcdFx0TW9yZWJpdHMuc3RhdHVzLmluaXQoZm9ybSk7XG5cdFx0XHRcdGNvbnN0IHJlcG9ydHBhZ2UgPSAnUWl1d2VuX3RhbGs6566h55CG5ZGY5ZGK56S65p2/Jztcblx0XHRcdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQucmVkaXJlY3QgPSByZXBvcnRwYWdlO1xuXHRcdFx0XHRNb3JlYml0cy53aWtpLmFjdGlvbkNvbXBsZXRlZC5ub3RpY2UgPSB3aW5kb3cud2dVTFMoJ+aKpeWRiuWujOaIkCcsICfloLHlkYrlrozmiJAnKTtcblx0XHRcdFx0Y29uc3Qgc3BpUGFnZSA9IG5ldyBNb3JlYml0cy53aWtpLnBhZ2UocmVwb3J0cGFnZSwgd2luZG93LndnVUxTKCfmipPlj5borqjorrrpobXpnaInLCAn5oqT5Y+W6KiO6KuW6aCB6Z2iJykpO1xuXHRcdFx0XHRzcGlQYWdlLnNldEZvbGxvd1JlZGlyZWN0KHRydWUpO1xuXHRcdFx0XHRzcGlQYWdlLnNldEVkaXRTdW1tYXJ5KHdpbmRvdy53Z1VMUygn5Yqg5YWl5paw5o+Q5oqlJywgJ+WKoOWFpeaWsOaPkOWgsScpKTtcblx0XHRcdFx0c3BpUGFnZS5zZXRDaGFuZ2VUYWdzKFR3aW5rbGUuY2hhbmdlVGFncyk7XG5cdFx0XHRcdHNwaVBhZ2Uuc2V0QXBwZW5kVGV4dChyZWFzb25bMF0pO1xuXHRcdFx0XHRzcGlQYWdlLnNldFdhdGNobGlzdChUd2lua2xlLmdldFByZWYoJ3NwaVdhdGNoUmVwb3J0JykpO1xuXHRcdFx0XHRzcGlQYWdlLmFwcGVuZCgpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmVwb3J0IHVzZXIgZm9yIHZhbmRhbGlzbVxuXHRcdFx0LyogY2FzZSAnYWl2JzogKi9cblx0XHRcdC8qIGZhbGxzIHRocm91Z2ggKi9cblx0XHRcdGRlZmF1bHQ6IHtcblx0XHRcdFx0cmVhc29uID0gVHdpbmtsZS5hcnYuY2FsbGJhY2suZ2V0UmVwb3J0V2lraXRleHQoZm9ybSk7XG5cdFx0XHRcdGlmIChyZWFzb24gPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHRzdW1tYXJ5ID0gYCR7d2luZG93LndnVUxTKCfmiqXlkYonLCAn5aCx5ZGKJyl9W1tTcGVjaWFsOkNvbnRyaWJzLyR7dWlkfXwke3VpZH1dXWA7XG5cdFx0XHRcdGlmIChpbnB1dC5oaWRlbmFtZSkge1xuXHRcdFx0XHRcdHN1bW1hcnkgPSB3aW5kb3cud2dVTFMoJ+aKpeWRiuS4gOWQjeeUqOaItycsICfloLHlkYrkuIDlkI3kvb/nlKjogIUnKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRNb3JlYml0cy5zaW1wbGVXaW5kb3cuc2V0QnV0dG9uc0VuYWJsZWQoZmFsc2UpO1xuXHRcdFx0XHRNb3JlYml0cy5zdGF0dXMuaW5pdChmb3JtKTtcblx0XHRcdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQucmVkaXJlY3QgPSAnUWl1d2VuX3RhbGs65oql5ZGK5b2T5YmN56C05Z2PJztcblx0XHRcdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQubm90aWNlID0gd2luZG93LndnVUxTKCfmiqXlkYrlrozmiJAnLCAn5aCx5ZGK5a6M5oiQJyk7XG5cdFx0XHRcdGNvbnN0IGFpdlBhZ2UgPSBuZXcgTW9yZWJpdHMud2lraS5wYWdlKFxuXHRcdFx0XHRcdCdRaXV3ZW5fdGFsazrmiqXlkYrlvZPliY3noLTlnY8nLFxuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5aSE55CGVklQ6K+35rGCJywgJ+iZleeQhlZJUOiri+axgicpXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGFpdlBhZ2Uuc2V0Rm9sbG93UmVkaXJlY3QodHJ1ZSk7XG5cdFx0XHRcdGFpdlBhZ2UubG9hZCgoKSA9PiB7XG5cdFx0XHRcdFx0Y29uc3QgdGV4dCA9IGFpdlBhZ2UuZ2V0UGFnZVRleHQoKTtcblx0XHRcdFx0XHRjb25zdCAkYWl2TGluayA9ICc8YSByZWw9XCJub29wZW5lclwiIHRhcmdldD1cIl9ibGFua1wiIGhyZWY9XCIvd2lraS9RVzpWSVBcIj5RVzpWSVA8L2E+Jztcblx0XHRcdFx0XHQvLyBjaGVjayBpZiB1c2VyIGhhcyBhbHJlYWR5IGJlZW4gcmVwb3J0ZWRcblx0XHRcdFx0XHRpZiAoXG5cdFx0XHRcdFx0XHRuZXcgUmVnRXhwKFxuXHRcdFx0XHRcdFx0XHRgPT09XFxcXHMqXFxcXHtcXFxce1xcXFxzKig/OltWdl1hbmRhbClcXFxccypcXFxcfFxcXFxzKig/OjE9KT9cXFxccyoke01vcmViaXRzLnN0cmluZy5lc2NhcGVSZWdFeHAoXG5cdFx0XHRcdFx0XHRcdFx0dWlkXG5cdFx0XHRcdFx0XHRcdCl9XFxcXHMqXFxcXH1cXFxcfVxcXFxzKj09PWBcblx0XHRcdFx0XHRcdCkudGVzdCh0ZXh0KVxuXHRcdFx0XHRcdCkge1xuXHRcdFx0XHRcdFx0YWl2UGFnZVxuXHRcdFx0XHRcdFx0XHQuZ2V0U3RhdHVzRWxlbWVudCgpXG5cdFx0XHRcdFx0XHRcdC5lcnJvcih3aW5kb3cud2dVTFMoJ+aKpeWRiuW3suWtmOWcqO+8jOWwhuS4jeS8muWKoOWFpeaWsOeahCcsICfloLHlkYrlt7LlrZjlnKjvvIzlsIfkuI3mnIPliqDlhaXmlrDnmoQnKSk7XG5cdFx0XHRcdFx0XHRNb3JlYml0cy5zdGF0dXMucHJpbnRVc2VyVGV4dChcblx0XHRcdFx0XHRcdFx0cmVhc29uWzFdLFxuXHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+aCqOi+k+WFpeeahOivhOiuuuW3suWcqOS4i+aWueaPkOS+m++8jOaCqOWPr+S7peWwhuWFtuWKoOWFpeWIsCcsXG5cdFx0XHRcdFx0XHRcdFx0J+aCqOi8uOWFpeeahOipleirluW3suWcqOS4i+aWueaPkOS+m++8jOaCqOWPr+S7peWwh+WFtuWKoOWFpeWIsCdcblx0XHRcdFx0XHRcdFx0KSArXG5cdFx0XHRcdFx0XHRcdFx0JGFpdkxpbmsgK1xuXHRcdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5bey5a2Y5Zyo55qE5bCP6IqC5Lit77yaJywgJ+W3suWtmOWcqOeahOWwj+evgOS4re+8micpXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRhaXZQYWdlLnNldFBhZ2VTZWN0aW9uKDApO1xuXHRcdFx0XHRcdGFpdlBhZ2UuZ2V0U3RhdHVzRWxlbWVudCgpLnN0YXR1cyh3aW5kb3cud2dVTFMoJ+WKoOWFpeaWsOaKpeWRiuKApicsICfliqDlhaXmlrDloLHlkYrigKYnKSk7XG5cdFx0XHRcdFx0YWl2UGFnZS5zZXRFZGl0U3VtbWFyeShzdW1tYXJ5KTtcblx0XHRcdFx0XHRhaXZQYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdFx0XHRhaXZQYWdlLnNldEFwcGVuZFRleHQoYFxcbiR7cmVhc29uWzBdfWApO1xuXHRcdFx0XHRcdGFpdlBhZ2UuYXBwZW5kKCk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdFR3aW5rbGUuYWRkSW5pdENhbGxiYWNrKFR3aW5rbGUuYXJ2LCAnYXJ2Jyk7XG59KShqUXVlcnkpO1xuXG5leHBvcnQge307XG4iLCAiLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHMtY29tbWVudFxuLy8gQHRzLW5vY2hlY2tcblxuLyohIFR3aW5rbGUuanMgLSB0d2lua2xld2Fybi5qcyAqL1xuKGZ1bmN0aW9uIHR3aW5rbGV3YXJuKCQpIHtcblx0Y29uc3QgJGJvZHkgPSAkKCdib2R5Jyk7XG5cdC8qKlxuXHQgKiB0d2lua2xld2Fybi5qczogV2FybiBtb2R1bGVcblx0ICogTW9kZSBvZiBpbnZvY2F0aW9uOiBUYWIgKFwiV2FyblwiKVxuXHQgKiBBY3RpdmUgb246IEFueSBwYWdlIHdpdGggcmVsZXZhbnQgdXNlciBuYW1lICh1c2Vyc3BhY2UsIGNvbnRyaWJzLFxuXHQgKiBldGMuKSwgYXMgd2VsbCBhcyB0aGUgcm9sbGJhY2sgc3VjY2VzcyBwYWdlXG5cdCAqL1xuXHRjb25zdCByZWxldmFudFVzZXJOYW1lID0gbXcuY29uZmlnLmdldCgnd2dSZWxldmFudFVzZXJOYW1lJyk7XG5cdFR3aW5rbGUud2FybiA9ICgpID0+IHtcblx0XHRpZiAocmVsZXZhbnRVc2VyTmFtZSkge1xuXHRcdFx0VHdpbmtsZS5hZGRQb3J0bGV0TGluayhcblx0XHRcdFx0VHdpbmtsZS53YXJuLmNhbGxiYWNrLFxuXHRcdFx0XHQn6K2m5ZGKJyxcblx0XHRcdFx0J3R3LXdhcm4nLFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ+itpuWRiuaIluaPkOmGkueUqOaItycsICforablkYrmiJbmj5DphpLkvb/nlKjogIUnKVxuXHRcdFx0KTtcblx0XHRcdGlmIChcblx0XHRcdFx0VHdpbmtsZS5nZXRQcmVmKCdhdXRvTWVudUFmdGVyUm9sbGJhY2snKSAmJlxuXHRcdFx0XHRtdy5jb25maWcuZ2V0KCd3Z05hbWVzcGFjZU51bWJlcicpID09PSAzICYmXG5cdFx0XHRcdG13LnV0aWwuZ2V0UGFyYW1WYWx1ZSgndmFuYXJ0aWNsZScpICYmXG5cdFx0XHRcdCFtdy51dGlsLmdldFBhcmFtVmFsdWUoJ25vYXV0b3dhcm4nKVxuXHRcdFx0KSB7XG5cdFx0XHRcdFR3aW5rbGUud2Fybi5jYWxsYmFjaygpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHQvLyBNb2RpZnkgVVJMIG9mIHRhbGsgcGFnZSBvbiByb2xsYmFjayBzdWNjZXNzIHBhZ2VzLCBtYWtlcyB1c2Ugb2YgYVxuXHRcdC8vIGN1c3RvbSBtZXNzYWdlIGJveCBpbiBbW01lZGlhV2lraTpSb2xsYmFjay1zdWNjZXNzXV1cblx0XHRpZiAobXcuY29uZmlnLmdldCgnd2dBY3Rpb24nKSA9PT0gJ3JvbGxiYWNrJykge1xuXHRcdFx0Y29uc3QgJHZhbmRhbFRhbGtMaW5rID0gJGJvZHkuZmluZCgnI213LXJvbGxiYWNrLXN1Y2Nlc3MnKS5maW5kKCcubXctdXNlcnRvb2xsaW5rcyBhJykuZmlyc3QoKTtcblx0XHRcdGlmICgkdmFuZGFsVGFsa0xpbmsubGVuZ3RoKSB7XG5cdFx0XHRcdFR3aW5rbGUud2Fybi5tYWtlVmFuZGFsVGFsa0xpbmsoJHZhbmRhbFRhbGtMaW5rLCBNb3JlYml0cy5wYWdlTmFtZU5vcm0pO1xuXHRcdFx0XHQkdmFuZGFsVGFsa0xpbmsuY3NzKCdmb250LXdlaWdodCcsICdib2xkJyk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGlmIChcblx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnQ2Fub25pY2FsU3BlY2lhbFBhZ2VOYW1lJykgPT09ICdBYnVzZUxvZycgJiZcblx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnQWJ1c2VGaWx0ZXJWYXJpYWJsZXMnKSAhPT0gbnVsbFxuXHRcdCkge1xuXHRcdFx0Y29uc3QgYWZUYWxrTGluayA9ICRib2R5LmZpbmQoJy5tdy11c2VydG9vbGxpbmtzLXRhbGsnKS5maXJzdCgpO1xuXHRcdFx0aWYgKGFmVGFsa0xpbmsubGVuZ3RoKSB7XG5cdFx0XHRcdFR3aW5rbGUud2Fybi5tYWtlVmFuZGFsVGFsa0xpbmsoYWZUYWxrTGluaywgbXcuY29uZmlnLmdldCgnd2dBYnVzZUZpbHRlclZhcmlhYmxlcycpLnBhZ2VfcHJlZml4ZWR0aXRsZSk7XG5cdFx0XHRcdGFmVGFsa0xpbmsuY3NzKCdmb250LXdlaWdodCcsICdib2xkJyk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRUd2lua2xlLndhcm4ubWFrZVZhbmRhbFRhbGtMaW5rID0gKCR2YW5kYWxUYWxrTGluaywgcGFnZW5hbWUpID0+IHtcblx0XHQkdmFuZGFsVGFsa0xpbmsud3JhcElubmVyKFxuXHRcdFx0JCgnPHNwYW4+JykuYXR0cihcblx0XHRcdFx0J3RpdGxlJyxcblx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdCflpoLmnpzlkIjpgILvvIzmgqjlj6/ku6XnlKhUd2lua2xl5Zyo6K+l55So5oi36K6o6K666aG15LiK5YGa5Ye66K2m5ZGK44CCJyxcblx0XHRcdFx0XHQn5aaC5p6c5ZCI6YGp77yM5oKo5Y+v5Lul55SoVHdpbmtsZeWcqOipsuS9v+eUqOiAheiojuirlumggeS4iuWBmuWHuuitpuWRiuOAgidcblx0XHRcdFx0KVxuXHRcdFx0KVxuXHRcdCk7XG5cdFx0Y29uc3QgZXh0cmFQYXJhbSA9IGB2YW5hcnRpY2xlPSR7bXcudXRpbC5yYXd1cmxlbmNvZGUocGFnZW5hbWUpfWA7XG5cdFx0Y29uc3QgaHJlZiA9ICR2YW5kYWxUYWxrTGluay5hdHRyKCdocmVmJyk7XG5cdFx0aWYgKGhyZWYuaW5jbHVkZXMoJz8nKSkge1xuXHRcdFx0JHZhbmRhbFRhbGtMaW5rLmF0dHIoJ2hyZWYnLCBgJHtocmVmfSYke2V4dHJhUGFyYW19YCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdCR2YW5kYWxUYWxrTGluay5hdHRyKCdocmVmJywgYCR7aHJlZn0/JHtleHRyYVBhcmFtfWApO1xuXHRcdH1cblx0fTtcblx0Ly8gVXNlZCB0byBjbG9zZSB3aW5kb3cgd2hlbiBzd2l0Y2hpbmcgdG8gQVJWIGluIGF1dG9sZXZlbFxuXHRUd2lua2xlLndhcm4uZGlhbG9nID0gbnVsbDtcblx0VHdpbmtsZS53YXJuLmNhbGxiYWNrID0gKCkgPT4ge1xuXHRcdGlmIChcblx0XHRcdHJlbGV2YW50VXNlck5hbWUgPT09IG13LmNvbmZpZy5nZXQoJ3dnVXNlck5hbWUnKSAmJlxuXHRcdFx0IWNvbmZpcm0od2luZG93LndnVUxTKCfmgqjlsIbopoHorablkYroh6rlt7HvvIHmgqjnoa7lrpropoHnu6fnu63lkJfvvJ8nLCAn5oKo5bCH6KaB6K2m5ZGK6Ieq5bex77yB5oKo56K65a6a6KaB57m857qM5ZeO77yfJykpXG5cdFx0KSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdFR3aW5rbGUud2Fybi5kaWFsb2cgPSBuZXcgTW9yZWJpdHMuc2ltcGxlV2luZG93KDYwMCwgNDQwKTtcblx0XHRjb25zdCB7ZGlhbG9nfSA9IFR3aW5rbGUud2Fybjtcblx0XHRkaWFsb2cuc2V0VGl0bGUod2luZG93LndnVUxTKCforablkYrjgIHmj5DphpLnlKjmiLcnLCAn6K2m5ZGK44CB5o+Q6YaS5L2/55So6ICFJykpO1xuXHRcdGRpYWxvZy5zZXRTY3JpcHROYW1lKCdUd2lua2xlJyk7XG5cdFx0ZGlhbG9nLmFkZEZvb3Rlckxpbmsod2luZG93LndnVUxTKCforablkYrorr7nva4nLCAn6K2m5ZGK6Kit5a6aJyksICdIOlRXL1BSRUYjd2FybicpO1xuXHRcdGRpYWxvZy5hZGRGb290ZXJMaW5rKHdpbmRvdy53Z1VMUygnVHdpbmtsZeW4ruWKqScsICdUd2lua2xl6Kqq5piOJyksICdIOlRXL0RPQyN3YXJuJyk7XG5cdFx0Y29uc3QgZm9ybSA9IG5ldyBNb3JlYml0cy5xdWlja0Zvcm0oVHdpbmtsZS53YXJuLmNhbGxiYWNrLmV2YWx1YXRlKTtcblx0XHRjb25zdCBtYWluX3NlbGVjdCA9IGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdmaWVsZCcsXG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfpgInmi6nopoHlj5HpgIHnmoTorablkYrmiJbmj5DphpLnsbvlnosnLCAn6YG45pOH6KaB5YKz6YCB55qE6K2m5ZGK5oiW5o+Q6YaS6aGe5YilJyksXG5cdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoJ+mmluWFiOmAieaLqeS4gOe7hO+8jOWGjemAieaLqeWFt+S9k+eahOitpuWRiuaooeadv+OAgicsICfpppblhYjpgbjmk4fkuIDntYTvvIzlho3pgbjmk4flhbfpq5TnmoTorablkYrmqKHmnb/jgIInKSxcblx0XHR9KTtcblx0XHRjb25zdCBtYWluX2dyb3VwID0gbWFpbl9zZWxlY3QuYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdzZWxlY3QnLFxuXHRcdFx0bmFtZTogJ21haW5fZ3JvdXAnLFxuXHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHQn5oKo5Y+v5ZyoVHdpbmtsZeWPguaVsOiuvue9ruS4reiuvue9rum7mOiupOmAieaLqeeahOmAiemhuScsXG5cdFx0XHRcdCfmgqjlj6/lnKhUd2lua2xl5YGP5aW96Kit5a6a5Lit6Kit5a6a6aCQ6Kit6YG45pOH55qE6YG46aCFJ1xuXHRcdFx0KSxcblx0XHRcdGV2ZW50OiBUd2lua2xlLndhcm4uY2FsbGJhY2suY2hhbmdlX2NhdGVnb3J5LFxuXHRcdH0pO1xuXHRcdGNvbnN0IGRlZmF1bHRHcm91cCA9IE51bWJlci5wYXJzZUludChUd2lua2xlLmdldFByZWYoJ2RlZmF1bHRXYXJuaW5nR3JvdXAnKSwgNik7XG5cdFx0bWFpbl9ncm91cC5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ29wdGlvbicsXG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfoh6rliqjpgInmi6nlsYLnuqcnLCAn6Ieq5YuV6YG45pOH5bGk57SaJyksXG5cdFx0XHR2YWx1ZTogJ2F1dG9sZXZlbCcsXG5cdFx0XHRzZWxlY3RlZDogZGVmYXVsdEdyb3VwID09PSA3LFxuXHRcdH0pO1xuXHRcdG1haW5fZ3JvdXAuYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdvcHRpb24nLFxuXHRcdFx0bGFiZWw6ICcx77ya5o+Q6YaSJyxcblx0XHRcdHZhbHVlOiAnbGV2ZWwxJyxcblx0XHRcdHNlbGVjdGVkOiBkZWZhdWx0R3JvdXAgPT09IDEsXG5cdFx0fSk7XG5cdFx0bWFpbl9ncm91cC5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ29wdGlvbicsXG5cdFx0XHRsYWJlbDogJzLvvJrorablkYonLFxuXHRcdFx0dmFsdWU6ICdsZXZlbDInLFxuXHRcdFx0c2VsZWN0ZWQ6IGRlZmF1bHRHcm91cCA9PT0gMixcblx0XHR9KTtcblx0XHRpZiAoVHdpbmtsZS5nZXRQcmVmKCdjb21iaW5lZFNpbmdsZXRNZW51cycpKSB7XG5cdFx0XHRtYWluX2dyb3VwLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdvcHRpb24nLFxuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfljZXlsYLnuqfmtojmga8nLCAn5Zau5bGk57Sa6KiK5oGvJyksXG5cdFx0XHRcdHZhbHVlOiAnc2luZ2xlY29tYmluZWQnLFxuXHRcdFx0XHRzZWxlY3RlZDogZGVmYXVsdEdyb3VwID09PSAzIHx8IGRlZmF1bHRHcm91cCA9PT0gNCxcblx0XHRcdH0pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRtYWluX2dyb3VwLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdvcHRpb24nLFxuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfljZXlsYLnuqfmj5DphpInLCAn5Zau5bGk57Sa5o+Q6YaSJyksXG5cdFx0XHRcdHZhbHVlOiAnc2luZ2xlbm90aWNlJyxcblx0XHRcdFx0c2VsZWN0ZWQ6IGRlZmF1bHRHcm91cCA9PT0gMyxcblx0XHRcdH0pO1xuXHRcdFx0bWFpbl9ncm91cC5hcHBlbmQoe1xuXHRcdFx0XHR0eXBlOiAnb3B0aW9uJyxcblx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Y2V5bGC57qn6K2m5ZGKJywgJ+WWruWxpOe0muitpuWRiicpLFxuXHRcdFx0XHR2YWx1ZTogJ3NpbmdsZXdhcm4nLFxuXHRcdFx0XHRzZWxlY3RlZDogZGVmYXVsdEdyb3VwID09PSA0LFxuXHRcdFx0fSk7XG5cdFx0fVxuXHRcdGlmIChUd2lua2xlLmdldFByZWYoJ2N1c3RvbVdhcm5pbmdMaXN0JykubGVuZ3RoKSB7XG5cdFx0XHRtYWluX2dyb3VwLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdvcHRpb24nLFxuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfoh6rlrprkuYnorablkYonLCAn6Ieq6KiC6K2m5ZGKJyksXG5cdFx0XHRcdHZhbHVlOiAnY3VzdG9tJyxcblx0XHRcdFx0c2VsZWN0ZWQ6IGRlZmF1bHRHcm91cCA9PT0gNSxcblx0XHRcdH0pO1xuXHRcdH1cblx0XHRtYWluX2dyb3VwLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnb3B0aW9uJyxcblx0XHRcdGxhYmVsOiAn5omA5pyJ6K2m5ZGK5qih5p2/Jyxcblx0XHRcdHZhbHVlOiAna2l0Y2hlbnNpbmsnLFxuXHRcdFx0c2VsZWN0ZWQ6IGRlZmF1bHRHcm91cCA9PT0gNixcblx0XHR9KTtcblx0XHRtYWluX3NlbGVjdC5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ3NlbGVjdCcsXG5cdFx0XHRuYW1lOiAnc3ViX2dyb3VwJyxcblx0XHRcdGV2ZW50OiBUd2lua2xlLndhcm4uY2FsbGJhY2suY2hhbmdlX3N1YmNhdGVnb3J5LFxuXHRcdH0pOyAvLyBXaWxsIGJlIGVtcHR5IHRvIGJlZ2luIHdpdGguXG5cdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ2lucHV0Jyxcblx0XHRcdG5hbWU6ICdhcnRpY2xlJyxcblx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+mhtemdoumTvuaOpScsICfpoIHpnaLpgKPntZAnKSxcblx0XHRcdHZhbHVlOiBtdy51dGlsLmdldFBhcmFtVmFsdWUoJ3ZhbmFydGljbGUnKSB8fCAnJyxcblx0XHRcdHNpemU6IDUwLFxuXHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKCfnu5nmqKHmnb/kuK3liqDlhaXkuIDpobXpnaLpk77mjqXvvIzlj6/nlZnnqbrjgIInLCAn57Wm5qih5p2/5Lit5Yqg5YWl5LiA6aCB6Z2i6YCj57WQ77yM5Y+v55WZ56m644CCJyksXG5cdFx0XHRwbGFjZWhvbGRlcjogd2luZG93LndnVUxTKFxuXHRcdFx0XHQn5LuF6ZmQ5LiA5Liq77yM5Yu/5L2/55So572R5Z2A44CBW1sgXV3vvIzlj6/kvb/nlKhTcGVjaWFsOkRpZmYnLFxuXHRcdFx0XHQn5YOF6ZmQ5LiA5YCL77yM5Yu/5L2/55So57ay5Z2A44CBW1sgXV3vvIzlj6/kvb/nlKhTcGVjaWFsOkRpZmYnXG5cdFx0XHQpLFxuXHRcdH0pO1xuXHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0bGFiZWw6ICcnLFxuXHRcdFx0c3R5bGU6ICdjb2xvcjogI2YwMCcsXG5cdFx0XHRpZDogJ3R3aW5rbGUtd2Fybi13YXJuaW5nLW1lc3NhZ2VzJyxcblx0XHR9KTtcblx0XHRjb25zdCBtb3JlID0gZm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ2ZpZWxkJyxcblx0XHRcdG5hbWU6ICdyZWFzb25Hcm91cCcsXG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCforablkYrkv6Hmga8nLCAn6K2m5ZGK6LOH6KiKJyksXG5cdFx0fSk7XG5cdFx0bW9yZS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ3RleHRhcmVhJyxcblx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WPr+mAieS/oeaBr++8micsICflj6/pgbjos4foqIrvvJonKSxcblx0XHRcdG5hbWU6ICdyZWFzb24nLFxuXHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKCfnkIbnlLHmiJbmmK/pmYTliqDkv6Hmga8nLCAn55CG55Sx5oiW5piv6ZmE5Yqg6LOH6KiKJyksXG5cdFx0fSk7XG5cdFx0Y29uc3QgcHJldmlld2xpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG5cdFx0JChwcmV2aWV3bGluaykub24oJ2NsaWNrJywgKCkgPT4ge1xuXHRcdFx0VHdpbmtsZS53YXJuLmNhbGxiYWNrcy5wcmV2aWV3KHJlc3VsdCk7IC8vIHxyZXN1bHR8IGlzIGRlZmluZWQgYmVsb3dcblx0XHR9KTtcblxuXHRcdHByZXZpZXdsaW5rLnN0eWxlLmN1cnNvciA9ICdwb2ludGVyJztcblx0XHRwcmV2aWV3bGluay50ZXh0Q29udGVudCA9IHdpbmRvdy53Z1VMUygn6aKE6KeIJywgJ+mgkOimvScpO1xuXHRcdG1vcmUuYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0aWQ6ICd3YXJuaW5ncHJldmlldycsXG5cdFx0XHRsYWJlbDogW3ByZXZpZXdsaW5rXSxcblx0XHR9KTtcblx0XHRtb3JlLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnZGl2Jyxcblx0XHRcdGlkOiAndHdpbmtsZXdhcm4tcHJldmlld2JveCcsXG5cdFx0XHRzdHlsZTogJ2Rpc3BsYXk6IG5vbmUnLFxuXHRcdH0pO1xuXHRcdG1vcmUuYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdzdWJtaXQnLFxuXHRcdFx0bGFiZWw6ICfmj5DkuqQnLFxuXHRcdH0pO1xuXHRcdGNvbnN0IHJlc3VsdCA9IGZvcm0ucmVuZGVyKCk7XG5cdFx0ZGlhbG9nLnNldENvbnRlbnQocmVzdWx0KTtcblx0XHRkaWFsb2cuZGlzcGxheSgpO1xuXHRcdHJlc3VsdC5tYWluX2dyb3VwLnJvb3QgPSByZXN1bHQ7XG5cdFx0cmVzdWx0LnByZXZpZXdlciA9IG5ldyBNb3JlYml0cy53aWtpLnByZXZpZXcoJChyZXN1bHQpLmZpbmQoJ2RpdiN0d2lua2xld2Fybi1wcmV2aWV3Ym94JykubGFzdCgpWzBdKTtcblx0XHQvLyBQb3RlbnRpYWwgbm90aWNlcyBmb3Igc3RhbGVuZXNzIGFuZCBtaXNzZWQgcmV2ZXJ0c1xuXHRcdGxldCBtZXNzYWdlID0gJyc7XG5cdFx0bGV0IHF1ZXJ5ID0ge307XG5cdFx0Y29uc3QgdmFucmV2aWQgPSBtdy51dGlsLmdldFBhcmFtVmFsdWUoJ3ZhbmFydGljbGVyZXZpZCcpO1xuXHRcdGlmICh2YW5yZXZpZCkge1xuXHRcdFx0Ly8gSWYgeW91IHRyaWVkIHJldmVydGluZywgY2hlY2sgaWYgKnlvdSogYWN0dWFsbHkgcmV2ZXJ0ZWRcblx0XHRcdGlmICghbXcudXRpbC5nZXRQYXJhbVZhbHVlKCdub2F1dG93YXJuJykgJiYgbXcudXRpbC5nZXRQYXJhbVZhbHVlKCd2YW5hcnRpY2xlJykpIHtcblx0XHRcdFx0Ly8gVmlhIGZsdWZmIGxpbmtcblx0XHRcdFx0cXVlcnkgPSB7XG5cdFx0XHRcdFx0YWN0aW9uOiAncXVlcnknLFxuXHRcdFx0XHRcdHRpdGxlczogbXcudXRpbC5nZXRQYXJhbVZhbHVlKCd2YW5hcnRpY2xlJyksXG5cdFx0XHRcdFx0cHJvcDogJ3JldmlzaW9ucycsXG5cdFx0XHRcdFx0cnZzdGFydGlkOiB2YW5yZXZpZCxcblx0XHRcdFx0XHRydmxpbWl0OiAyLFxuXHRcdFx0XHRcdHJ2ZGlyOiAnbmV3ZXInLFxuXHRcdFx0XHRcdHJ2cHJvcDogJ3VzZXInLFxuXHRcdFx0XHR9O1xuXHRcdFx0XHRuZXcgTW9yZWJpdHMud2lraS5hcGkoXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKCfmo4Dmn6XmgqjmmK/lkKbmiJDlip/lm57pgIDor6XpobXpnaInLCAn5qqi5p+l5oKo5piv5ZCm5oiQ5Yqf5Zue6YCA6Kmy6aCB6Z2iJyksXG5cdFx0XHRcdFx0cXVlcnksXG5cdFx0XHRcdFx0KGFwaW9iaikgPT4ge1xuXHRcdFx0XHRcdFx0Y29uc3QgcmV2ZXJ0VXNlciA9ICQoYXBpb2JqLmdldFJlc3BvbnNlKCkpLmZpbmQoJ3JldmlzaW9ucyByZXYnKVsxXS5nZXRBdHRyaWJ1dGUoJ3VzZXInKTtcblx0XHRcdFx0XHRcdGlmIChyZXZlcnRVc2VyICYmIHJldmVydFVzZXIgIT09IG13LmNvbmZpZy5nZXQoJ3dnVXNlck5hbWUnKSkge1xuXHRcdFx0XHRcdFx0XHRtZXNzYWdlICs9IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn5YW25LuW5Lq65Zue6YCA5LqG6K+l6aG16Z2i77yM5bm25Y+v6IO95bey57uP6K2m5ZGK6K+l55So5oi344CCJyxcblx0XHRcdFx0XHRcdFx0XHQn5YW25LuW5Lq65Zue6YCA5LqG6Kmy6aCB6Z2i77yM5Lim5Y+v6IO95bey57aT6K2m5ZGK6Kmy5L2/55So6ICF44CCJ1xuXHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHQkYm9keS5maW5kKCcjdHdpbmtsZS13YXJuLXdhcm5pbmctbWVzc2FnZXMnKS50ZXh0KGDorablkYrvvJoke21lc3NhZ2V9YCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHQpLnBvc3QoKTtcblx0XHRcdH1cblx0XHRcdC8vIENvbmZpcm0gZWRpdCB3YXNuJ3QgdG9vIG9sZCBmb3IgYSB3YXJuaW5nXG5cdFx0XHRjb25zdCBjaGVja1N0YWxlID0gKHZhbnRpbWVzdGFtcF8pID0+IHtcblx0XHRcdFx0Y29uc3QgcmV2RGF0ZSA9IG5ldyBNb3JlYml0cy5kYXRlKHZhbnRpbWVzdGFtcF8pO1xuXHRcdFx0XHRpZiAodmFudGltZXN0YW1wXyAmJiByZXZEYXRlLmlzVmFsaWQoKSAmJiByZXZEYXRlLmFkZCgyNCwgJ2hvdXJzJykuaXNCZWZvcmUobmV3IERhdGUoKSkpIHtcblx0XHRcdFx0XHRtZXNzYWdlICs9IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfov5nnrJTnvJbovpHmmK/lnKgyNOWwj+aXtuWJjeWBmuWHuueahO+8jOeOsOWcqOitpuWRiuWPr+iDveW3sui/h+aXtuOAgicsXG5cdFx0XHRcdFx0XHQn6YCZ562G57eo6Lyv5piv5ZyoMjTlsI/mmYLliY3lgZrlh7rnmoTvvIznj77lnKjorablkYrlj6/og73lt7LpgY7mmYLjgIInXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0XHQkYm9keS5maW5kKCcjdHdpbmtsZS13YXJuLXdhcm5pbmctbWVzc2FnZXMnKS50ZXh0KGDorablkYrvvJoke21lc3NhZ2V9YCk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cdFx0XHRsZXQgdmFudGltZXN0YW1wID0gbXcudXRpbC5nZXRQYXJhbVZhbHVlKCd2YW50aW1lc3RhbXAnKTtcblx0XHRcdC8vIFByb3ZpZGVkIGZyb20gYSBmbHVmZiBtb2R1bGUtYmFzZWQgcmV2ZXJ0LCBubyBBUEkgbG9va3VwIG5lY2Vzc2FyeVxuXHRcdFx0aWYgKHZhbnRpbWVzdGFtcCkge1xuXHRcdFx0XHRjaGVja1N0YWxlKHZhbnRpbWVzdGFtcCk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRxdWVyeSA9IHtcblx0XHRcdFx0XHRhY3Rpb246ICdxdWVyeScsXG5cdFx0XHRcdFx0cHJvcDogJ3JldmlzaW9ucycsXG5cdFx0XHRcdFx0cnZwcm9wOiAndGltZXN0YW1wJyxcblx0XHRcdFx0XHRyZXZpZHM6IHZhbnJldmlkLFxuXHRcdFx0XHR9O1xuXHRcdFx0XHRuZXcgTW9yZWJpdHMud2lraS5hcGkod2luZG93LndnVUxTKCfojrflj5bniYjmnKzml7bpl7TmiLMnLCAn5Y+W5b6X54mI5pys5pmC6ZaT5oizJyksIHF1ZXJ5LCAoYXBpb2JqKSA9PiB7XG5cdFx0XHRcdFx0dmFudGltZXN0YW1wID0gJChhcGlvYmouZ2V0UmVzcG9uc2UoKSkuZmluZCgncmV2aXNpb25zIHJldicpLmF0dHIoJ3RpbWVzdGFtcCcpO1xuXHRcdFx0XHRcdGNoZWNrU3RhbGUodmFudGltZXN0YW1wKTtcblx0XHRcdFx0fSkucG9zdCgpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRjb25zdCBpbml0ID0gKCkgPT4ge1xuXHRcdFx0Ly8gV2UgbXVzdCBpbml0IHRoZSBmaXJzdCBjaG9pY2UgKEdlbmVyYWwgTm90ZSk7XG5cdFx0XHRjb25zdCBldnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnRXZlbnQnKTtcblx0XHRcdGV2dC5pbml0RXZlbnQoJ2NoYW5nZScsIHRydWUsIHRydWUpO1xuXHRcdFx0cmVzdWx0Lm1haW5fZ3JvdXAuZGlzcGF0Y2hFdmVudChldnQpO1xuXHRcdH07XG5cdFx0aW5pdCgpO1xuXHR9O1xuXHQvLyBUaGlzIGlzIGFsbCB0aGUgbWVzc2FnZXMgdGhhdCBtaWdodCBiZSBkaXNwYXRjaGVkIGJ5IHRoZSBjb2RlXG5cdC8vIEVhY2ggb2YgdGhlIGluZGl2aWR1YWwgdGVtcGxhdGVzIHJlcXVpcmUgdGhlIGZvbGxvd2luZyBpbmZvcm1hdGlvbjpcblx0Ly8gICBsYWJlbCAocmVxdWlyZWQpOiBBIHNob3J0IGRlc2NyaXB0aW9uIGRpc3BsYXllZCBpbiB0aGUgZGlhbG9nXG5cdC8vICAgc3VtbWFyeSAocmVxdWlyZWQpOiBUaGUgZWRpdCBzdW1tYXJ5IHVzZWQuIElmIGFuIGFydGljbGUgbmFtZSBpcyBlbnRlcmVkLCB0aGUgc3VtbWFyeSBpcyBwb3N0Zml4ZWQgd2l0aCBcIm9uIFtbYXJ0aWNsZV1dXCIsIGFuZCBpdCBpcyBhbHdheXMgcG9zdGZpeGVkIHdpdGggXCIuICRzdW1tYXJ5QWRcIlxuXHQvLyAgIHN1cHByZXNzQXJ0aWNsZUluU3VtbWFyeSAob3B0aW9uYWwpOiBTZXQgdG8gdHJ1ZSB0byBzdXBwcmVzcyBzaG93aW5nIHRoZSBhcnRpY2xlIG5hbWUgaW4gdGhlIGVkaXQgc3VtbWFyeS4gVXNlZnVsIGlmIHRoZSB3YXJuaW5nIHJlbGF0ZXMgdG8gYXR0YWNrIHBhZ2VzLCBvciBzb21lIHN1Y2guXG5cdFR3aW5rbGUud2Fybi5tZXNzYWdlcyA9IHtcblx0XHRsZXZlbHM6IFtcblx0XHRcdHtcblx0XHRcdFx0Y2F0ZWdvcnk6IHdpbmRvdy53Z1VMUygn5LiN5ZCM57G75Z6L55qE6Z2e5bu66K6+57yW6L6RJywgJ+S4jeWQjOmhnuWIpeeahOmdnuW7uuioree3qOi8rycpLFxuXHRcdFx0XHRsaXN0OiB7XG5cdFx0XHRcdFx0J3V3LWNvcHlyaWdodCc6IHtcblx0XHRcdFx0XHRcdGxldmVsMToge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfkvrXniq/okZfkvZzmnYMnLCAn5L6154qv54mI5qyKJyksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5rOo5oSP77ya5L6154qv6JGX5L2c5p2DJywgJ+azqOaEj++8muS+teeKr+eJiOasiicpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdGxldmVsMjoge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflpJrmrKHkvrXniq/okZfkvZzmnYMnLCAn5aSa5qyh5L6154qv54mI5qyKJyksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn6K2m5ZGK77ya5aSa5qyh5L6154qv6JGX5L2c5p2DJywgJ+itpuWRiu+8muWkmuasoeS+teeKr+eJiOasiicpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdCd1dy1jcnlzdGFsJzoge1xuXHRcdFx0XHRcdFx0bGV2ZWwxOiB7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WKoOWFpeiHhua1i+aIluacquehruiupOeahOa2iOaBrycsICfliqDlhaXoh4bmuKzmiJbmnKrnorroqo3nmoToqIrmga8nKSxcblx0XHRcdFx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKCfms6jmhI/vvJrliqDlhaXoh4bmtYvmiJbmnKrnoa7orqTnmoTmtojmga8nLCAn5rOo5oSP77ya5Yqg5YWl6IeG5ris5oiW5pyq56K66KqN55qE6KiK5oGvJyksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0bGV2ZWwyOiB7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WkmuasoeWKoOWFpeiHhua1i+aIluacquehruiupOeahOa2iOaBrycsICflpJrmrKHliqDlhaXoh4bmuKzmiJbmnKrnorroqo3nmoToqIrmga8nKSxcblx0XHRcdFx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCforablkYrvvJrlpJrmrKHliqDlhaXoh4bmtYvmiJbmnKrnoa7orqTnmoTmtojmga8nLFxuXHRcdFx0XHRcdFx0XHRcdCforablkYrvvJrlpJrmrKHliqDlhaXoh4bmuKzmiJbmnKrnorroqo3nmoToqIrmga8nXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0J3V3LWRlbGV0ZSc6IHtcblx0XHRcdFx0XHRcdGxldmVsMToge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfkuI3mgbDlvZPlnLDnp7vpmaTpobXpnaLlhoXlrrnjgIHmqKHmnb/miJbotYTmlpknLCAn5LiN5oGw55W25Zyw56e76Zmk6aCB6Z2i5YWn5a6544CB5qih5p2/5oiW6LOH5paZJyksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn5rOo5oSP77ya5LiN5oGw5b2T5Zyw56e76Zmk6aG16Z2i5YaF5a6544CB5qih5p2/5oiW6LWE5paZJyxcblx0XHRcdFx0XHRcdFx0XHQn5rOo5oSP77ya5LiN5oGw55W25Zyw56e76Zmk6aCB6Z2i5YWn5a6544CB5qih5p2/5oiW6LOH5paZJ1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdGxldmVsMjoge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfkuI3mgbDlvZPlnLDnp7vpmaTpobXpnaLlhoXlrrnjgIHmqKHmnb/miJbotYTmlpknLCAn5LiN5oGw55W25Zyw56e76Zmk6aCB6Z2i5YWn5a6544CB5qih5p2/5oiW6LOH5paZJyksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn6K2m5ZGK77ya5LiN5oGw5b2T5Zyw56e76Zmk6aG16Z2i5YaF5a6544CB5qih5p2/5oiW6LWE5paZJyxcblx0XHRcdFx0XHRcdFx0XHQn6K2m5ZGK77ya5LiN5oGw55W25Zyw56e76Zmk6aCB6Z2i5YWn5a6544CB5qih5p2/5oiW6LOH5paZJ1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdCd1dy1pbWFnZSc6IHtcblx0XHRcdFx0XHRcdGxldmVsMToge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflnKjpobXpnaLkuK3liqDlhaXkuI3lvZPlm77niYcnLCAn5Zyo6aCB6Z2i5Lit5Yqg5YWl5LiN55W25ZyW54mHJyksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5rOo5oSP77ya5Zyo6aG16Z2i5Lit5Yqg5YWl5LiN5b2T5Zu+54mHJywgJ+azqOaEj++8muWcqOmggemdouS4reWKoOWFpeS4jeeVtuWclueJhycpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdGxldmVsMjoge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflnKjpobXpnaLkuK3liqDlhaXkuI3lvZPlm77niYcnLCAn5Zyo6aCB6Z2i5Lit5Yqg5YWl5LiN55W25ZyW54mHJyksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn6K2m5ZGK77ya5Zyo6aG16Z2i5Lit5Yqg5YWl5LiN5b2T5Zu+54mHJywgJ+itpuWRiu+8muWcqOmggemdouS4reWKoOWFpeS4jeeVtuWclueJhycpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdCd1dy1uZXdwYWdlJzoge1xuXHRcdFx0XHRcdFx0bGV2ZWwxOiB7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WIm+W7uuS4jeW9k+mhtemdoicsICflu7rnq4vkuI3nlbbpoIHpnaInKSxcblx0XHRcdFx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKCfms6jmhI/vvJrliJvlu7rkuI3lvZPpobXpnaInLCAn5rOo5oSP77ya5bu656uL5LiN55W26aCB6Z2iJyksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0bGV2ZWwyOiB7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WIm+W7uuS4jeW9k+mhtemdoicsICflu7rnq4vkuI3nlbbpoIHpnaInKSxcblx0XHRcdFx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKCforablkYrvvJrliJvlu7rkuI3lvZPpobXpnaInLCAn6K2m5ZGK77ya5bu656uL5LiN55W26aCB6Z2iJyksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0J3V3LW5vcic6IHtcblx0XHRcdFx0XHRcdGxldmVsMToge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflnKjmnaHnm67kuK3liqDlhaXljp/liJvnoJTnqbYnLCAn5Zyo5qKd55uu5Lit5Yqg5YWl5Y6f5Ym156CU56m2JyksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5rOo5oSP77ya5Zyo5p2h55uu5Lit5Yqg5YWl5Y6f5Yib56CU56m2JywgJ+azqOaEj++8muWcqOaineebruS4reWKoOWFpeWOn+WJteeglOepticpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdGxldmVsMjoge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflnKjmnaHnm67kuK3liqDlhaXljp/liJvnoJTnqbYnLCAn5Zyo5qKd55uu5Lit5Yqg5YWl5Y6f5Ym156CU56m2JyksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn6K2m5ZGK77ya5Zyo5p2h55uu5Lit5Yqg5YWl5Y6f5Yib56CU56m2JywgJ+itpuWRiu+8muWcqOaineebruS4reWKoOWFpeWOn+WJteeglOepticpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdCd1dy1vcG92Jzoge1xuXHRcdFx0XHRcdFx0bGV2ZWwxOiB7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+i/neWPjeWuouinguWOn+WImScsICfpgZXlj43lrqLop4Dljp/liYcnKSxcblx0XHRcdFx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKCfms6jmhI/vvJrov53lj43lrqLop4Lljp/liJknLCAn5rOo5oSP77ya6YGV5Y+N5a6i6KeA5Y6f5YmHJyksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0bGV2ZWwyOiB7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+i/neWPjeWuouinguWOn+WImScsICfpgZXlj43lrqLop4Dljp/liYcnKSxcblx0XHRcdFx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKCforablkYrvvJrov53lj43lrqLop4Lljp/liJknLCAn6K2m5ZGK77ya6YGV5Y+N5a6i6KeA5Y6f5YmHJyksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0J3V3LXJlZGlyZWN0Jzoge1xuXHRcdFx0XHRcdFx0bGV2ZWwxOiB7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WIm+W7uuegtOWdj+aAp+eahOmHjeWumuWQkScsICflu7rnq4vnoLTlo57mgKfnmoTph43lrprlkJEnKSxcblx0XHRcdFx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKCfms6jmhI/vvJrliJvlu7rnoLTlnY/mgKfnmoTph43lrprlkJEnLCAn5rOo5oSP77ya5bu656uL56C05aOe5oCn55qE6YeN5a6a5ZCRJyksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0bGV2ZWwyOiB7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WIm+W7uuaBtuaEj+mHjeWumuWQkScsICflu7rnq4vmg6HmhI/ph43lrprlkJEnKSxcblx0XHRcdFx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKCforablkYrvvJrliJvlu7rmgbbmhI/ph43lrprlkJEnLCAn6K2m5ZGK77ya5bu656uL5oOh5oSP6YeN5a6a5ZCRJyksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0J3V3LXVwbG9hZCc6IHtcblx0XHRcdFx0XHRcdGxldmVsMToge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfkuIrkvKDkuI3lvZPlm77lg48nLCAn5LiK5YKz5LiN55W25ZyW5YOPJyksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5rOo5oSP77ya5LiK5Lyg5LiN5b2T5Zu+5YOPJywgJ+azqOaEj++8muS4iuWCs+S4jeeVtuWcluWDjycpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdGxldmVsMjoge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfkuIrkvKDkuI3lvZPlm77lg48nLCAn5LiK5YKz5LiN55W25ZyW5YOPJyksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn6K2m5ZGK77ya5LiK5Lyg5LiN5b2T5Zu+5YOPJywgJ+itpuWRiu+8muS4iuWCs+S4jeeVtuWcluWDjycpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdCd1dy12YW5kYWxpc20nOiB7XG5cdFx0XHRcdFx0XHRsZXZlbDE6IHtcblx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5piO5pi+55qE56C05Z2PJywgJ+aYjumhr+eahOegtOWjnicpLFxuXHRcdFx0XHRcdFx0XHRzdW1tYXJ5OiB3aW5kb3cud2dVTFMoJ+azqOaEj++8muaYjuaYvuegtOWdjycsICfms6jmhI/vvJrmmI7poa/noLTlo54nKSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRsZXZlbDI6IHtcblx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5piO5pi+55qE56C05Z2PJywgJ+aYjumhr+eahOegtOWjnicpLFxuXHRcdFx0XHRcdFx0XHRzdW1tYXJ5OiB3aW5kb3cud2dVTFMoJ+itpuWRiu+8muaYjuaYvuegtOWdjycsICforablkYrvvJrmmI7poa/noLTlo54nKSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHQndXctdGRlbCc6IHtcblx0XHRcdFx0XHRcdGxldmVsMToge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCflnKjpl67popjku43mnKrop6PlhrPnmoTmg4XlhrXkuIvnp7vpmaTnu7TmiqTmgKfmqKHmnb8nLFxuXHRcdFx0XHRcdFx0XHRcdCflnKjllY/poYzku43mnKrop6PmsbrnmoTmg4Xms4HkuIvnp7vpmaTntq3orbfmgKfmqKHmnb8nXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5rOo5oSP77ya56e76Zmk57u05oqk5oCn5qih5p2/JywgJ+azqOaEj++8muenu+mZpOe2reitt+aAp+aooeadvycpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdGxldmVsMjoge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCflnKjpl67popjku43mnKrop6PlhrPnmoTmg4XlhrXkuIvnp7vpmaTnu7TmiqTmgKfmqKHmnb8nLFxuXHRcdFx0XHRcdFx0XHRcdCflnKjllY/poYzku43mnKrop6PmsbrnmoTmg4Xms4HkuIvnp7vpmaTntq3orbfmgKfmqKHmnb8nXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn6K2m5ZGK77ya56e76Zmk57u05oqk5oCn5qih5p2/JywgJ+itpuWRiu+8muenu+mZpOe2reitt+aAp+aooeadvycpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHR9LFxuXHRcdFx0fSxcblx0XHRcdHtcblx0XHRcdFx0Y2F0ZWdvcnk6IHdpbmRvdy53Z1VMUygn5aKe5Yqg5bm/5ZGKJywgJ+WinuWKoOW7o+WRiicpLFxuXHRcdFx0XHRsaXN0OiB7XG5cdFx0XHRcdFx0J3V3LXNwYW0nOiB7XG5cdFx0XHRcdFx0XHRsZXZlbDE6IHtcblx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5aKe5Yqg5LiN5ZCI6YCC55qE5aSW6YOo6ZO+5o6lJywgJ+WinuWKoOS4jeWQiOmBqeeahOWklumDqOmAo+e1kCcpLFxuXHRcdFx0XHRcdFx0XHRzdW1tYXJ5OiB3aW5kb3cud2dVTFMoJ+azqOaEj++8muWinuWKoOS4jeWQiOmAgueahOWklumDqOmTvuaOpScsICfms6jmhI/vvJrlop7liqDkuI3lkIjpgannmoTlpJbpg6jpgKPntZAnKSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRsZXZlbDI6IHtcblx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5aKe5Yqg5Z6D5Zy+6ZO+5o6lJywgJ+WinuWKoOWeg+WcvumAo+e1kCcpLFxuXHRcdFx0XHRcdFx0XHRzdW1tYXJ5OiB3aW5kb3cud2dVTFMoJ+itpuWRiu+8muWinuWKoOWeg+WcvumTvuaOpScsICforablkYrvvJrlop7liqDlnoPlnL7pgKPntZAnKSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHQndXctYWR2ZXJ0Jzoge1xuXHRcdFx0XHRcdFx0bGV2ZWwxOiB7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WIqeeUqOaxgumXu+eZvuenkeadpeWPkeW4g+W5v+WRiuaIluaOqOW5vycsICfliKnnlKjmsYLogZ7nmb7np5HkvobnmbzluIPlu6PlkYrmiJbmjqjlu6MnKSxcblx0XHRcdFx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCfms6jmhI/vvJrliKnnlKjmsYLpl7vnmb7np5HmnaXlj5HluIPlub/lkYrmiJbmjqjlub8nLFxuXHRcdFx0XHRcdFx0XHRcdCfms6jmhI/vvJrliKnnlKjmsYLogZ7nmb7np5HkvobnmbzluIPlu6PlkYrmiJbmjqjlu6MnXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0bGV2ZWwyOiB7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WIqeeUqOaxgumXu+eZvuenkeadpeWPkeW4g+W5v+WRiuaIluaOqOW5vycsICfliKnnlKjmsYLogZ7nmb7np5HkvobnmbzluIPlu6PlkYrmiJbmjqjlu6MnKSxcblx0XHRcdFx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCforablkYrvvJrliKnnlKjmsYLpl7vnmb7np5HmnaXlj5HluIPlub/lkYrmiJbmjqjlub8nLFxuXHRcdFx0XHRcdFx0XHRcdCforablkYrvvJrliKnnlKjmsYLogZ7nmb7np5HkvobnmbzluIPlu6PlkYrmiJbmjqjlu6MnXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdH0sXG5cdFx0XHR9LFxuXHRcdFx0e1xuXHRcdFx0XHRjYXRlZ29yeTogd2luZG93LndnVUxTKCfliqDmj5LkuI3lrp7jgIHor73osKTmloflrZcnLCAn5Yqg5o+S5LiN5a+m44CB6Kq56KyX5paH5a2XJyksXG5cdFx0XHRcdGxpc3Q6IHtcblx0XHRcdFx0XHQndXctYmlvZyc6IHtcblx0XHRcdFx0XHRcdGxldmVsMToge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCflnKjkurrniankvKDorrDkuK3liqDlhaXmsqHmnInlj6/pnaDmnaXmupDkvZDor4HogIzkuJTlj6/og73lvJXlj5Hkuonorq7nmoTlhoXlrrknLFxuXHRcdFx0XHRcdFx0XHRcdCflnKjkurrnianlgrPoqJjkuK3liqDlhaXmspLmnInlj6/pnaDkvobmupDkvZDorYnogIzkuJTlj6/og73lvJXnmbzniK3orbDnmoTlhaflrrknXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn5rOo5oSP77ya5Zyo5Lq654mp5Lyg6K6w5Lit5Yqg5YWl5rKh5pyJ5Y+v6Z2g5p2l5rqQ5L2Q6K+B6ICM5LiU5Y+v6IO95byV5Y+R5LqJ6K6u55qE5YaF5a65Jyxcblx0XHRcdFx0XHRcdFx0XHQn5rOo5oSP77ya5Zyo5Lq654mp5YKz6KiY5Lit5Yqg5YWl5rKS5pyJ5Y+v6Z2g5L6G5rqQ5L2Q6K2J6ICM5LiU5Y+v6IO95byV55m854it6K2w55qE5YWn5a65J1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdGxldmVsMjoge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCflnKjkurrniankvKDorrDkuK3liqDlhaXmsqHmnInlj6/pnaDmnaXmupDkvZDor4HogIzkuJTlj6/og73lvJXlj5Hkuonorq7nmoTlhoXlrrknLFxuXHRcdFx0XHRcdFx0XHRcdCflnKjkurrnianlgrPoqJjkuK3liqDlhaXmspLmnInlj6/pnaDkvobmupDkvZDorYnogIzkuJTlj6/og73lvJXnmbzniK3orbDnmoTlhaflrrknXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn6K2m5ZGK77ya5Zyo5Lq654mp5Lyg6K6w5Lit5Yqg5YWl5rKh5pyJ5Y+v6Z2g5p2l5rqQ5L2Q6K+B6ICM5LiU5Y+v6IO95byV5Y+R5LqJ6K6u55qE5YaF5a65Jyxcblx0XHRcdFx0XHRcdFx0XHQn6K2m5ZGK77ya5Zyo5Lq654mp5YKz6KiY5Lit5Yqg5YWl5rKS5pyJ5Y+v6Z2g5L6G5rqQ5L2Q6K2J6ICM5LiU5Y+v6IO95byV55m854it6K2w55qE5YWn5a65J1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdCd1dy1lcnJvcic6IHtcblx0XHRcdFx0XHRcdGxldmVsMToge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmlYXmhI/liqDlhaXkuI3lrp7lhoXlrrknLCAn5pWF5oSP5Yqg5YWl5LiN5a+m5YWn5a65JyksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5rOo5oSP77ya5pWF5oSP5Yqg5YWl5LiN5a6e5YaF5a65JywgJ+azqOaEj++8muaVheaEj+WKoOWFpeS4jeWvpuWFp+WuuScpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdGxldmVsMjoge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmlYXmhI/liqDlhaXkuI3lrp7lhoXlrrknLCAn5pWF5oSP5Yqg5YWl5LiN5a+m5YWn5a65JyksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn6K2m5ZGK77ya5pWF5oSP5Yqg5YWl5LiN5a6e5YaF5a65JywgJ+itpuWRiu+8muaVheaEj+WKoOWFpeS4jeWvpuWFp+WuuScpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdCd1dy11bnNvdXJjZWQnOiB7XG5cdFx0XHRcdFx0XHRsZXZlbDE6IHtcblx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Yqg5YWl5rKh5pyJ5Y+v6Z2g5p2l5rqQ5L2Q6K+B55qE5YaF5a65JywgJ+WKoOWFpeaykuacieWPr+mdoOS+hua6kOS9kOitieeahOWFp+WuuScpLFxuXHRcdFx0XHRcdFx0XHRzdW1tYXJ5OiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+azqOaEj++8muWKoOWFpeayoeacieWPr+mdoOadpea6kOS9kOivgeeahOWGheWuuScsXG5cdFx0XHRcdFx0XHRcdFx0J+azqOaEj++8muWKoOWFpeaykuacieWPr+mdoOS+hua6kOS9kOitieeahOWFp+WuuSdcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRsZXZlbDI6IHtcblx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Yqg5YWl5rKh5pyJ5Y+v6Z2g5p2l5rqQ5L2Q6K+B55qE5YaF5a65JywgJ+WKoOWFpeaykuacieWPr+mdoOS+hua6kOS9kOitieeahOWFp+WuuScpLFxuXHRcdFx0XHRcdFx0XHRzdW1tYXJ5OiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+itpuWRiu+8muWKoOWFpeayoeacieWPr+mdoOadpea6kOS9kOivgeeahOWGheWuuScsXG5cdFx0XHRcdFx0XHRcdFx0J+itpuWRiu+8muWKoOWFpeaykuacieWPr+mdoOS+hua6kOS9kOitieeahOWFp+WuuSdcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0fSxcblx0XHRcdH0sXG5cdFx0XHR7XG5cdFx0XHRcdGNhdGVnb3J5OiB3aW5kb3cud2dVTFMoJ+e/u+ivkeWTgei0qCcsICfnv7vora/lk4Hos6onKSxcblx0XHRcdFx0bGlzdDoge1xuXHRcdFx0XHRcdCd1dy1yb3VnaHRyYW5zbGF0aW9uJzoge1xuXHRcdFx0XHRcdFx0bGV2ZWwxOiB7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+aCqOe/u+ivkeeahOi0qOmHj+acieW+heaUueWWhCcsICfmgqjnv7vora/nmoTos6rph4/mnInlvoXmlLnlloQnKSxcblx0XHRcdFx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKCfms6jmhI/vvJrmgqjnv7vor5HnmoTotKjph4/mnInlvoXmlLnlloQnLCAn5rOo5oSP77ya5oKo57+76K2v55qE6LOq6YeP5pyJ5b6F5pS55ZaEJyksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0bGV2ZWwyOiB7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+eyl+WKo+e/u+ivkScsICfnspfliqPnv7vora8nKSxcblx0XHRcdFx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKCforablkYrvvJrnspfliqPnv7vor5EnLCAn6K2m5ZGK77ya57KX5Yqj57+76K2vJyksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdH0sXG5cdFx0XHR9LFxuXHRcdFx0e1xuXHRcdFx0XHRjYXRlZ29yeTogd2luZG93LndnVUxTKCfpnZ7og73mjqXlj5fkuJTov53lj43mlrnpkojnmoTljZXmlrnpnaLooYzkuLrmiJbmk43kvZwnLCAn6Z2e6IO95o6l5Y+X5LiU6YGV5Y+N5pa56Yed55qE5Zau5pa56Z2i6KGM54K65oiW5pON5L2cJyksXG5cdFx0XHRcdGxpc3Q6IHtcblx0XHRcdFx0XHQndXctYWZkJzoge1xuXHRcdFx0XHRcdFx0bGV2ZWwxOiB7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+enu+mZpHt7YWZkfX3vvIjpobXpnaLlrZjlup/orqjorrrvvInmqKHmnb8nLCAn56e76Zmke3thZmR9fe+8iOmggemdouWtmOW7ouiojuirlu+8ieaooeadvycpLFxuXHRcdFx0XHRcdFx0XHRzdW1tYXJ5OiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+azqOaEj++8muenu+mZpHt7YWZkfX3vvIjpobXpnaLlrZjlup/orqjorrrvvInmqKHmnb8nLFxuXHRcdFx0XHRcdFx0XHRcdCfms6jmhI/vvJrnp7vpmaR7e2FmZH1977yI6aCB6Z2i5a2Y5bui6KiO6KuW77yJ5qih5p2/J1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdGxldmVsMjoge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfnp7vpmaR7e2FmZH1977yI6aG16Z2i5a2Y5bqf6K6o6K6677yJ5qih5p2/JywgJ+enu+mZpHt7YWZkfX3vvIjpoIHpnaLlrZjlu6LoqI7oq5bvvInmqKHmnb8nKSxcblx0XHRcdFx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCforablkYrvvJrnp7vpmaR7e2FmZH1977yI6aG16Z2i5a2Y5bqf6K6o6K6677yJ5qih5p2/Jyxcblx0XHRcdFx0XHRcdFx0XHQn6K2m5ZGK77ya56e76Zmke3thZmR9fe+8iOmggemdouWtmOW7ouiojuirlu+8ieaooeadvydcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHQndXctbW9zJzoge1xuXHRcdFx0XHRcdFx0bGV2ZWwxOiB7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+S4jeaBsOW9k+eahOadoeebruagvOW8j+OAgeaXpeacn+OAgeivreiogOetiScsICfkuI3mgbDnlbbnmoTmop3nm67moLzlvI/jgIHml6XmnJ/jgIHoqp7oqIDnrYknKSxcblx0XHRcdFx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCfms6jmhI/vvJrkuI3mgbDlvZPnmoTmnaHnm67moLzlvI/jgIHml6XmnJ/jgIHor63oqIDnrYknLFxuXHRcdFx0XHRcdFx0XHRcdCfms6jmhI/vvJrkuI3mgbDnlbbnmoTmop3nm67moLzlvI/jgIHml6XmnJ/jgIHoqp7oqIDnrYknXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0bGV2ZWwyOiB7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+S4jeaBsOW9k+eahOadoeebruagvOW8j+OAgeaXpeacn+OAgeivreiogOetiScsICfkuI3mgbDnlbbnmoTmop3nm67moLzlvI/jgIHml6XmnJ/jgIHoqp7oqIDnrYknKSxcblx0XHRcdFx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCforablkYrvvJrkuI3mgbDlvZPnmoTmnaHnm67moLzlvI/jgIHml6XmnJ/jgIHor63oqIDnrYknLFxuXHRcdFx0XHRcdFx0XHRcdCforablkYrvvJrkuI3mgbDnlbbnmoTmop3nm67moLzlvI/jgIHml6XmnJ/jgIHoqp7oqIDnrYknXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0J3V3LW1vdmUnOiB7XG5cdFx0XHRcdFx0XHRsZXZlbDE6IHtcblx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn5peg5pWF56e75Yqo5p2h55uuL+aWsOWQjeensOS4jeespuWQiOWRveWQjeinhOiMgycsXG5cdFx0XHRcdFx0XHRcdFx0J+eEoeaVheenu+WLleaineebri/mlrDlkI3nqLHkuI3nrKblkIjlkb3lkI3opo/nr4QnXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5rOo5oSP77ya5LiN5oGw5b2T5Zyw56e75Yqo6aG16Z2iJywgJ+azqOaEj++8muS4jeaBsOeVtuWcsOenu+WLlemggemdoicpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdGxldmVsMjoge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCfmiorpobXpnaLnp7vliqjliLDkuI3mgbDlvZPjgIHov53lj43lkb3lkI3luLjop4TmiJbov53lj43lhbHor4bnmoTmoIfpopgnLFxuXHRcdFx0XHRcdFx0XHRcdCfmiorpoIHpnaLnp7vli5XliLDkuI3mgbDnlbbjgIHpgZXlj43lkb3lkI3luLjopo/miJbpgZXlj43lhbHorZjnmoTmqJnpoYwnXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn6K2m5ZGK77ya5LiN5oGw5b2T5Zyw56e75Yqo6aG16Z2iJywgJ+itpuWRiu+8muS4jeaBsOeVtuWcsOenu+WLlemggemdoicpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdCd1dy1zcGVlZHknOiB7XG5cdFx0XHRcdFx0XHRsZXZlbDE6IHtcblx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn56e76Zmke3tkZWxldGV9fe+8iOW/q+mAn+WIoOmZpO+8ieaooeadvycsICfnp7vpmaR7e2RlbGV0ZX1977yI5b+r6YCf5Yiq6Zmk77yJ5qih5p2/JyksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn5rOo5oSP77ya56e76Zmke3tkZWxldGV9fe+8iOW/q+mAn+WIoOmZpO+8ieaooeadvycsXG5cdFx0XHRcdFx0XHRcdFx0J+azqOaEj++8muenu+mZpHt7ZGVsZXRlfX3vvIjlv6vpgJ/liKrpmaTvvInmqKHmnb8nXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0bGV2ZWwyOiB7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+enu+mZpHt7ZGVsZXRlfX3vvIjlv6vpgJ/liKDpmaTvvInmqKHmnb8nLCAn56e76Zmke3tkZWxldGV9fe+8iOW/q+mAn+WIqumZpO+8ieaooeadvycpLFxuXHRcdFx0XHRcdFx0XHRzdW1tYXJ5OiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+itpuWRiu+8muenu+mZpHt7ZGVsZXRlfX3vvIjlv6vpgJ/liKDpmaTvvInmqKHmnb8nLFxuXHRcdFx0XHRcdFx0XHRcdCforablkYrvvJrnp7vpmaR7e2RlbGV0ZX1977yI5b+r6YCf5Yiq6Zmk77yJ5qih5p2/J1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdCd1dy10YWxrcGFnZSc6IHtcblx0XHRcdFx0XHRcdGxldmVsMToge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfov53lj43orqjorrrpobXop4TojIMnLCAn6YGV5Y+N6KiO6KuW6aCB6KaP56+EJyksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5rOo5oSP77ya6L+d5Y+N6K6o6K666aG16KeE6IyDJywgJ+azqOaEj++8mumBleWPjeiojuirlumggeimj+evhCcpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdGxldmVsMjoge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfov53lj43orqjorrrpobXop4TojIMnLCAn6YGV5Y+N6KiO6KuW6aCB6KaP56+EJyksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn6K2m5ZGK77ya6L+d5Y+N6K6o6K666aG16KeE6IyDJywgJ+itpuWRiu+8mumBleWPjeiojuirlumggeimj+evhCcpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdCd1dy10cHYnOiB7XG5cdFx0XHRcdFx0XHRsZXZlbDE6IHtcblx0XHRcdFx0XHRcdFx0bGFiZWw6ICfkv67mlLnku5bkurrnlZnoqIAnLFxuXHRcdFx0XHRcdFx0XHRzdW1tYXJ5OiAn5rOo5oSP77ya5L+u5pS55LuW5Lq655WZ6KiAJyxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRsZXZlbDI6IHtcblx0XHRcdFx0XHRcdFx0bGFiZWw6ICfkv67mlLnku5bkurrnlZnoqIAnLFxuXHRcdFx0XHRcdFx0XHRzdW1tYXJ5OiAn6K2m5ZGK77ya5L+u5pS55LuW5Lq655WZ6KiAJyxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0fSxcblx0XHRcdH0sXG5cdFx0XHR7XG5cdFx0XHRcdGNhdGVnb3J5OiB3aW5kb3cud2dVTFMoJ+WvueWFtuS7lueUqOaIt+WSjOadoeebrueahOaAgeW6picsICflsI3lhbbku5bnlKjmiLblkozmop3nm67nmoTmhYvluqYnKSxcblx0XHRcdFx0bGlzdDoge1xuXHRcdFx0XHRcdCd1dy1pbGxlZ2FsJzoge1xuXHRcdFx0XHRcdFx0bGV2ZWwxOiB7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WKoOWFpeS4jeespuWQiOS4reWbveS7t+WAvOingueahOWGheWuuScsICfliqDlhaXkuI3nrKblkIjkuK3lnIvlg7nlgLzop4DnmoTlhaflrrknKSxcblx0XHRcdFx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCfms6jmhI/vvJrliqDlhaXkuI3nrKblkIjkuK3lm73ku7flgLzop4LnmoTlhoXlrrknLFxuXHRcdFx0XHRcdFx0XHRcdCfms6jmhI/vvJrliqDlhaXkuI3nrKblkIjkuK3lnIvlg7nlgLzop4DnmoTlhaflrrknXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0bGV2ZWwyOiB7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WKoOWFpeS4jeespuWQiOS4reWbveS7t+WAvOingueahOWGheWuuScsICfliqDlhaXkuI3nrKblkIjkuK3lnIvlg7nlgLzop4DnmoTlhaflrrknKSxcblx0XHRcdFx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCforablkYrvvJrliqDlhaXkuI3nrKblkIjkuK3lm73ku7flgLzop4LnmoTlhoXlrrknLFxuXHRcdFx0XHRcdFx0XHRcdCforablkYrvvJrliqDlhaXkuI3nrKblkIjkuK3lnIvlg7nlgLzop4DnmoTlhaflrrknXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0J3V3LW93bic6IHtcblx0XHRcdFx0XHRcdGxldmVsMToge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfkuLvlvKDmnaHnm67miYDmnInmnYMnLCAn5Li75by15qKd55uu5omA5pyJ5qyKJyksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5rOo5oSP77ya5Li75byg5p2h55uu5omA5pyJ5p2DJywgJ+azqOaEj++8muS4u+W8teaineebruaJgOacieasiicpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdGxldmVsMjoge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfkuLvlvKDmnaHnm67nmoTmiYDmnInmnYMnLCAn5Li75by15qKd55uu55qE5omA5pyJ5qyKJyksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn6K2m5ZGK77ya5Li75byg5p2h55uu55qE5omA5pyJ5p2DJywgJ+itpuWRiu+8muS4u+W8teaineebrueahOaJgOacieasiicpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdCd1dy1zb2NpYWxtZWRpYSc6IHtcblx0XHRcdFx0XHRcdGxldmVsMToge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflsIbmsYLpl7vnmb7np5HlvZPkvZznpL7kuqTlqpLkvZPkvb/nlKgnLCAn5bCH5rGC6IGe55m+56eR55W25L2c56S+5Lqk5aqS6auU5L2/55SoJyksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn5rOo5oSP77ya5bCG5rGC6Ze755m+56eR5b2T5L2c56S+5Lqk5aqS5L2T5L2/55SoJyxcblx0XHRcdFx0XHRcdFx0XHQn5rOo5oSP77ya5bCH5rGC6IGe55m+56eR55W25L2c56S+5Lqk5aqS6auU5L2/55SoJ1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdGxldmVsMjoge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflsIbmsYLpl7vnmb7np5HlvZPkvZznpL7kuqTlqpLkvZPkvb/nlKgnLCAn5bCH5rGC6IGe55m+56eR55W25L2c56S+5Lqk5aqS6auU5L2/55SoJyksXG5cdFx0XHRcdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn6K2m5ZGK77ya5bCG5rGC6Ze755m+56eR5b2T5L2c56S+5Lqk5aqS5L2T5L2/55SoJyxcblx0XHRcdFx0XHRcdFx0XHQn6K2m5ZGK77ya5bCH5rGC6IGe55m+56eR55W25L2c56S+5Lqk5aqS6auU5L2/55SoJ1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHR9LFxuXHRcdFx0fSxcblx0XHRdLFxuXHRcdHNpbmdsZW5vdGljZToge1xuXHRcdFx0J3V3LTJyZWRpcmVjdCc6IHtcblx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Zyo56e75Yqo6aG16Z2i5ZCO5bqU6K+l5L+u5aSN5Y+M6YeN6YeN5a6a5ZCRJywgJ+WcqOenu+WLlemggemdouW+jOaHieipsuS/ruW+qembmemHjemHjeWumuWQkScpLFxuXHRcdFx0XHRzdW1tYXJ5OiB3aW5kb3cud2dVTFMoJ+azqOaEj++8muWcqOenu+WKqOmhtemdouWQjuW6lOivpeS/ruWkjeWPjOmHjemHjeWumuWQkScsICfms6jmhI/vvJrlnKjnp7vli5XpoIHpnaLlvozmh4noqbLkv67lvqnpm5nph43ph43lrprlkJEnKSxcblx0XHRcdH0sXG5cdFx0XHQndXctYWl2Jzoge1xuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfkuL7miqXkuovpobnlubbkuI3mmK/noLTlnY/ooYzkuLonLCAn6IiJ5aCx5LqL6aCF5Lim5LiN5piv56C05aOe6KGM5Li6JyksXG5cdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5rOo5oSP77ya5LiN5oGw5b2T5Zyw5Li+5oql56C05Z2PJywgJ+azqOaEj++8muS4jeaBsOeVtuWcsOiIieWgseegtOWjnicpLFxuXHRcdFx0fSxcblx0XHRcdCd1dy1hcnRpY2xlc2lnJzoge1xuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflnKjmnaHnm67kuK3nrb7lkI0nLCAn5Zyo5qKd55uu5Lit57C95ZCNJyksXG5cdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5rOo5oSP77ya5Zyo5p2h55uu5Lit562+5ZCNJywgJ+azqOaEj++8muWcqOaineebruS4reewveWQjScpLFxuXHRcdFx0fSxcblx0XHRcdCd1dy1hdXRvYmlvZ3JhcGh5Jzoge1xuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfliJvlu7roh6rkvKAnLCAn5bu656uL6Ieq5YKzJyksXG5cdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5rOo5oSP77ya5Yib5bu66Ieq5LygJywgJ+azqOaEj++8muW7uueri+iHquWCsycpLFxuXHRcdFx0fSxcblx0XHRcdCd1dy1iYWRjYXQnOiB7XG5cdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WKoOWFpemUmeivr+eahOmhtemdouWIhuexuycsICfliqDlhaXpjK/oqqTnmoTpoIHpnaLliIbpoZ4nKSxcblx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKCfms6jmhI/vvJrliqDlhaXplJnor6/nmoTpobXpnaLliIbnsbsnLCAn5rOo5oSP77ya5Yqg5YWl6Yyv6Kqk55qE6aCB6Z2i5YiG6aGeJyksXG5cdFx0XHR9LFxuXHRcdFx0J3V3LWJpdGUnOiB7XG5cdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+S8pOWus+aWsOaJiycsICflgrflrrPmlrDmiYsnKSxcblx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKCfms6jmhI/vvJrkvKTlrrPmlrDmiYsnLCAn5rOo5oSP77ya5YK35a6z5paw5omLJyksXG5cdFx0XHR9LFxuXHRcdFx0J3V3LWNoaW5lc2UnOiB7XG5cdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+ivt+S9v+eUqOagh+WHhuaxieivreayn+mAmicsICfoq4vkvb/nlKjmqJnmupbmvKLoqp7mup3pgJonKSxcblx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKCfms6jmhI/vvJror7fkvb/nlKjmoIflh4bmsYnor63msp/pgJonLCAn5rOo5oSP77ya6KuL5L2/55So5qiZ5rqW5ryi6Kqe5rqd6YCaJyksXG5cdFx0XHR9LFxuXHRcdFx0J3V3LWNwbW92ZSc6IHtcblx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Ymq6LS056e75YqoJywgJ+WJquiyvOenu+WLlScpLFxuXHRcdFx0XHRzdW1tYXJ5OiB3aW5kb3cud2dVTFMoJ+azqOaEj++8muWJqui0tOenu+WKqCcsICfms6jmhI/vvJrliarosrznp7vli5UnKSxcblx0XHRcdH0sXG5cdFx0XHQndXctZGFiJzoge1xuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmtojmrafkuYnpobXmoLzlvI/plJnor68nLCAn5raI5q2n576p6aCB5qC85byP6Yyv6KqkJyksXG5cdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5rOo5oSP77ya5raI5q2n5LmJ6aG15qC85byP6ZSZ6K+vJywgJ+azqOaEj++8mua2iOatp+e+qemggeagvOW8j+mMr+iqpCcpLFxuXHRcdFx0fSxcblx0XHRcdCd1dy1uZXdwYWdlLWRyYWZ0Jzoge1xuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmnIDov5HliJvlu7rnmoTpobXpnaLooqvnp7vliqjliLDojYnnqL8nLCAn5pyA6L+R5bu656uL55qE6aCB6Z2i6KKr56e75YuV5Yiw6I2J56i/JyksXG5cdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5rOo5oSP77ya5pyA6L+R5Yib5bu655qE6aG16Z2i6KKr56e75Yqo5Yiw6I2J56i/JywgJ+azqOaEj++8muacgOi/keW7uueri+eahOmggemdouiiq+enu+WLleWIsOiNieeovycpLFxuXHRcdFx0fSxcblx0XHRcdCd1dy1zZWxmcmV2ZXJ0Jzoge1xuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdCfmhJ/osKLmgqjoh6rooYzlm57pgIDoh6rlt7HnmoTmtYvor5XvvIzku6XlkI7kuI3opoHlho3ov5nmoLflgZrkuoYnLFxuXHRcdFx0XHRcdCfmhJ/orJ3mgqjoh6rooYzlm57pgIDoh6rlt7HnmoTmuKzoqabvvIzku6XlvozkuI3opoHlho3pgJnmqKPlgZrkuoYnXG5cdFx0XHRcdCksXG5cdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5rOo5oSP77ya5Zue6YCA5Liq5Lq655qE5rWL6K+VJywgJ+azqOaEj++8muWbnumAgOWAi+S6uueahOa4rOippicpLFxuXHRcdFx0fSxcblx0XHRcdCd1dy1zdWJzdHViJzoge1xuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfliJvlu7rlsI/lsI/kvZzlk4EnLCAn5bu656uL5bCP5bCP5L2c5ZOBJyksXG5cdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn6K2m5ZGK77ya5Yib5bu65bCP5bCP5L2c5ZOBJywgJ+itpuWRiu+8muW7uueri+Wwj+Wwj+S9nOWTgScpLFxuXHRcdFx0fSxcblx0XHRcdCd1dy10YWxraW5hcnRpY2xlJzoge1xuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflnKjmnaHnm67pobXkuK3nlZnkuIvmhI/op4EnLCAn5Zyo5qKd55uu6aCB5Lit55WZ5LiL5oSP6KaLJyksXG5cdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5rOo5oSP77ya5Zyo5p2h55uu6aG15Lit55WZ5LiL5oSP6KeBJywgJ+azqOaEj++8muWcqOaineebrumggeS4reeVmeS4i+aEj+imiycpLFxuXHRcdFx0fSxcblx0XHRcdCd1dy11bnNpZ25lZCc6IHtcblx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5rKh5pyJ5Zyo6K6o6K666aG15LiK562+5ZCNJywgJ+aykuacieWcqOiojuirlumggeS4iuewveWQjScpLFxuXHRcdFx0XHRzdW1tYXJ5OiB3aW5kb3cud2dVTFMoJ+azqOaEj++8muayoeacieWcqOiuqOiuuumhteS4iuetvuWQjScsICfms6jmhI/vvJrmspLmnInlnKjoqI7oq5bpoIHkuIrnsL3lkI0nKSxcblx0XHRcdH0sXG5cdFx0XHQndXctd3Jvbmdjc2QnOiB7XG5cdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+W/q+mAn+WIoOmZpOeQhueUseS4jeW9kycsICflv6vpgJ/liKrpmaTnkIbnlLHkuI3nlbYnKSxcblx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKCfms6jmhI/vvJrlv6vpgJ/liKDpmaTnkIbnlLHkuI3lvZMnLCAn5rOo5oSP77ya5b+r6YCf5Yiq6Zmk55CG55Sx5LiN55W2JyksXG5cdFx0XHR9LFxuXHRcdFx0J3V3LXdyb25nc3VtbWFyeSc6IHtcblx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Zyo57yW6L6R5pGY6KaB5Yi26YCg5LiN6YCC5b2T55qE5YaF5a65JywgJ+WcqOe3qOi8r+aRmOimgeijvemAoOS4jemBqeeVtueahOWFp+WuuScpLFxuXHRcdFx0XHRzdW1tYXJ5OiB3aW5kb3cud2dVTFMoJ+itpuWRiu+8muWcqOe8lui+keaRmOimgeWItumAoOS4jemAguW9k+eahOWGheWuuScsICforablkYrvvJrlnKjnt6jovK/mkZjopoHoo73pgKDkuI3pgannlbbnmoTlhaflrrknKSxcblx0XHRcdH0sXG5cdFx0fSxcblx0XHRzaW5nbGV3YXJuOiB7XG5cdFx0XHQndXctM3JyJzoge1xuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfnlKjmiLfmvZzlnKjov53lj43lm57pgIDkuI3ov4fkuInljp/liJnnmoTlj6/og73mgKcnLCAn55So5oi25r2b5Zyo6YGV5Y+N5Zue6YCA5LiN6YGO5LiJ5Y6f5YmH55qE5Y+v6IO95oCnJyksXG5cdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHQn6K2m5ZGK77ya55So5oi35r2c5Zyo6L+d5Y+N5Zue6YCA5LiN6L+H5LiJ5Y6f5YiZ55qE5Y+v6IO95oCnJyxcblx0XHRcdFx0XHQn6K2m5ZGK77ya55So5oi25r2b5Zyo6YGV5Y+N5Zue6YCA5LiN6YGO5LiJ5Y6f5YmH55qE5Y+v6IO95oCnJ1xuXHRcdFx0XHQpLFxuXHRcdFx0fSxcblx0XHRcdCd1dy1hdHRhY2snOiB7XG5cdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+S6uui6q+aUu+WHuycsICfkurrouqvmlLvmk4onKSxcblx0XHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKCforablkYrvvJrkurrouqvmlLvlh7snLCAn6K2m5ZGK77ya5Lq66Lqr5pS75pOKJyksXG5cdFx0XHRcdHN1cHByZXNzQXJ0aWNsZUluU3VtbWFyeTogdHJ1ZSxcblx0XHRcdH0sXG5cdFx0XHQndXctY29pJzoge1xuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfliKnnm4rlhrLnqoEnLCAn5Yip55uK6KGd56qBJyksXG5cdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5rOo5oSP77ya5Yip55uK5Yay56qBJywgJ+azqOaEj++8muWIqeebiuihneeqgScpLFxuXHRcdFx0fSxcblx0XHRcdCd1dy1mYWtlc291cmNlJzoge1xuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfomZrmnoTmlbDmja7mupDmiJblvJXmlocnLCAn6Jmb5qeL6LOH5paZ5L6G5rqQ5oiW5byV5paHJyksXG5cdFx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn6K2m5ZGK77ya6Jma5p6E5pWw5o2u5rqQ5oiW5byV5paHJywgJ+itpuWRiu+8muiZm+ani+izh+aWmeS+hua6kOaIluW8leaWhycpLFxuXHRcdFx0fSxcblx0XHRcdCd1dy1waW5mbyc6IHtcblx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5byg6LS05LuW5Lq66ZqQ56eBJywgJ+W8teiyvOS7luS6uumaseengScpLFxuXHRcdFx0XHRzdW1tYXJ5OiB3aW5kb3cud2dVTFMoJ+itpuWRiu+8muW8oOi0tOS7luS6uumakOengScsICforablkYrvvJrlvLXosrzku5bkurrpmrHnp4EnKSxcblx0XHRcdH0sXG5cdFx0fSxcblx0fTtcblx0Ly8gVXNlZCByZXBlYXRlZGx5IGJlbG93IGFjcm9zcyBtZW51IHJlYnVpbGRzXG5cdFR3aW5rbGUud2Fybi5wcmV2X2FydGljbGUgPSBudWxsO1xuXHRUd2lua2xlLndhcm4ucHJldl9yZWFzb24gPSBudWxsO1xuXHRUd2lua2xlLndhcm4udGFsa3BhZ2VPYmogPSBudWxsO1xuXHRUd2lua2xlLndhcm4uY2FsbGJhY2suY2hhbmdlX2NhdGVnb3J5ID0gZnVuY3Rpb24gY2hhbmdlX2NhdGVnb3J5KGUpIHtcblx0XHRjb25zdCB7dmFsdWV9ID0gZS50YXJnZXQ7XG5cdFx0Y29uc3Qge3N1Yl9ncm91cH0gPSBlLnRhcmdldC5yb290O1xuXHRcdHN1Yl9ncm91cC5tYWluX2dyb3VwID0gdmFsdWU7XG5cdFx0bGV0IG9sZF9zdWJ2YWx1ZSA9IHN1Yl9ncm91cC52YWx1ZTtcblx0XHRsZXQgb2xkX3N1YnZhbHVlX3JlO1xuXHRcdGlmIChvbGRfc3VidmFsdWUpIHtcblx0XHRcdGlmICh2YWx1ZSA9PT0gJ2tpdGNoZW5zaW5rJykge1xuXHRcdFx0XHQvLyBFeGFjdCBtYXRjaCBwb3NzaWJsZSBpbiBraXRjaGVuc2luayBtZW51XG5cdFx0XHRcdG9sZF9zdWJ2YWx1ZV9yZSA9IG5ldyBSZWdFeHAobXcudXRpbC5lc2NhcGVSZWdFeHAob2xkX3N1YnZhbHVlKSk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRvbGRfc3VidmFsdWUgPSBvbGRfc3VidmFsdWUucmVwbGFjZSgvXFxkKihpbSk/JC8sICcnKTtcblx0XHRcdFx0b2xkX3N1YnZhbHVlX3JlID0gbmV3IFJlZ0V4cChgJHttdy51dGlsLmVzY2FwZVJlZ0V4cChvbGRfc3VidmFsdWUpfShcXFxcZCo/KSRgKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0d2hpbGUgKHN1Yl9ncm91cC5oYXNDaGlsZE5vZGVzKCkpIHtcblx0XHRcdHN1Yl9ncm91cC5yZW1vdmVDaGlsZChzdWJfZ3JvdXAuZmlyc3RDaGlsZCk7XG5cdFx0fVxuXHRcdGxldCBzZWxlY3RlZCA9IGZhbHNlO1xuXHRcdC8vIHdvcmtlciBmdW5jdGlvbiB0byBjcmVhdGUgdGhlIGNvbWJvIGJveCBlbnRyaWVzXG5cdFx0Y29uc3QgY3JlYXRlRW50cmllcyA9IChjb250ZW50cywgY29udGFpbmVyLCB3cmFwSW5PcHRncm91cCwgdmFsID0gdmFsdWUpID0+IHtcblx0XHRcdC8vIGxldmVsMi0+Miwgc2luZ2xld2Fybi0+Jyc7IGFsc28gdXNlZCB0byBkaXN0aW5ndWlzaCB0aGVcblx0XHRcdC8vIHNjYWxlZCBsZXZlbHMgZnJvbSBzaW5nbGVub3RpY2UsIHNpbmdsZXdhcm4sIGFuZCBjdXN0b21cblx0XHRcdGNvbnN0IGxldmVsID0gdmFsLnJlcGxhY2UoL15cXEQrL2csICcnKTtcblx0XHRcdC8vIGR1ZSB0byBhbiBhcHBhcmVudCBpT1MgYnVnLCB3ZSBoYXZlIHRvIGFkZCBhbiBvcHRpb24tZ3JvdXAgdG8gcHJldmVudCB0cnVuY2F0aW9uIG9mIHRleHRcblx0XHRcdC8vIChzZWFyY2ggV1Q6VFcgYXJjaGl2ZXMgZm9yIFwiUHJvYmxlbSBzZWxlY3Rpbmcgd2FybmluZ3Mgb24gYW4gaVBob25lXCIpXG5cdFx0XHRpZiAod3JhcEluT3B0Z3JvdXAgJiYgJC5jbGllbnQucHJvZmlsZSgpLnBsYXRmb3JtID09PSAnaXBob25lJykge1xuXHRcdFx0XHRsZXQgd3JhcHBlck9wdGdyb3VwID0gbmV3IE1vcmViaXRzLnF1aWNrRm9ybS5lbGVtZW50KHtcblx0XHRcdFx0XHR0eXBlOiAnb3B0Z3JvdXAnLFxuXHRcdFx0XHRcdGxhYmVsOiAn5Y+v55So5qih5p2/Jyxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHdyYXBwZXJPcHRncm91cCA9IHdyYXBwZXJPcHRncm91cC5yZW5kZXIoKTtcblx0XHRcdFx0Y29udGFpbmVyLmFwcGVuZENoaWxkKHdyYXBwZXJPcHRncm91cCk7XG5cdFx0XHRcdGNvbnRhaW5lciA9IHdyYXBwZXJPcHRncm91cDtcblx0XHRcdH1cblx0XHRcdGZvciAoY29uc3QgW2l0ZW1LZXksIGl0ZW1Qcm9wZXJ0aWVzXSBvZiBPYmplY3QuZW50cmllcyhjb250ZW50cykpIHtcblx0XHRcdFx0Ly8gU2tpcCBpZiB0aGUgY3VycmVudCB0ZW1wbGF0ZSBkb2Vzbid0IGhhdmUgYSB2ZXJzaW9uIGZvciB0aGUgY3VycmVudCBsZXZlbFxuXHRcdFx0XHRpZiAoISFsZXZlbCAmJiAhaXRlbVByb3BlcnRpZXNbdmFsXSkge1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHRjb25zdCBrZXkgPSB0eXBlb2YgaXRlbUtleSA9PT0gJ3N0cmluZycgPyBpdGVtS2V5IDogaXRlbVByb3BlcnRpZXMudmFsdWU7XG5cdFx0XHRcdGNvbnN0IHRlbXBsYXRlID0ga2V5ICsgbGV2ZWw7XG5cdFx0XHRcdGNvbnN0IGVsZW0gPSBuZXcgTW9yZWJpdHMucXVpY2tGb3JtLmVsZW1lbnQoe1xuXHRcdFx0XHRcdHR5cGU6ICdvcHRpb24nLFxuXHRcdFx0XHRcdGxhYmVsOiBge3ske3RlbXBsYXRlfX19OiAke2xldmVsID8gaXRlbVByb3BlcnRpZXNbdmFsXS5sYWJlbCA6IGl0ZW1Qcm9wZXJ0aWVzLmxhYmVsfWAsXG5cdFx0XHRcdFx0dmFsdWU6IHRlbXBsYXRlLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0Ly8gU2VsZWN0IGl0ZW0gYmVzdCBjb3JyZXNwb25kaW5nIHRvIHByZXZpb3VzIHNlbGVjdGlvblxuXHRcdFx0XHRpZiAoIXNlbGVjdGVkICYmIG9sZF9zdWJ2YWx1ZSAmJiBvbGRfc3VidmFsdWVfcmUudGVzdCh0ZW1wbGF0ZSkpIHtcblx0XHRcdFx0XHRlbGVtLmRhdGEuc2VsZWN0ZWQgPSB0cnVlO1xuXHRcdFx0XHRcdHNlbGVjdGVkID0gdHJ1ZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRjb25zdCBlbGVtUmVuZGVyZWQgPSBjb250YWluZXIuYXBwZW5kQ2hpbGQoZWxlbS5yZW5kZXIoKSk7XG5cdFx0XHRcdCQoZWxlbVJlbmRlcmVkKS5kYXRhKCdtZXNzYWdlRGF0YScsIGl0ZW1Qcm9wZXJ0aWVzKTtcblx0XHRcdH1cblx0XHR9O1xuXHRcdHN3aXRjaCAodmFsdWUpIHtcblx0XHRcdGNhc2UgJ3NpbmdsZW5vdGljZSc6XG5cdFx0XHRjYXNlICdzaW5nbGV3YXJuJzpcblx0XHRcdFx0Y3JlYXRlRW50cmllcyhUd2lua2xlLndhcm4ubWVzc2FnZXNbdmFsdWVdLCBzdWJfZ3JvdXAsIHRydWUpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ3NpbmdsZWNvbWJpbmVkJzoge1xuXHRcdFx0XHRjb25zdCB1blNvcnRlZFNpbmdsZXRzID0ge1xuXHRcdFx0XHRcdC4uLlR3aW5rbGUud2Fybi5tZXNzYWdlcy5zaW5nbGVub3RpY2UsXG5cdFx0XHRcdFx0Li4uVHdpbmtsZS53YXJuLm1lc3NhZ2VzLnNpbmdsZXdhcm4sXG5cdFx0XHRcdH07XG5cdFx0XHRcdGNvbnN0IHNvcnRlZFNpbmdsZXRNZXNzYWdlcyA9IHt9O1xuXHRcdFx0XHRmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyh1blNvcnRlZFNpbmdsZXRzKS5zb3J0KCkpIHtcblx0XHRcdFx0XHRzb3J0ZWRTaW5nbGV0TWVzc2FnZXNba2V5XSA9IHVuU29ydGVkU2luZ2xldHNba2V5XTtcblx0XHRcdFx0fVxuXHRcdFx0XHRjcmVhdGVFbnRyaWVzKHNvcnRlZFNpbmdsZXRNZXNzYWdlcywgc3ViX2dyb3VwLCB0cnVlKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRjYXNlICdjdXN0b20nOlxuXHRcdFx0XHRjcmVhdGVFbnRyaWVzKFR3aW5rbGUuZ2V0UHJlZignY3VzdG9tV2FybmluZ0xpc3QnKSwgc3ViX2dyb3VwLCB0cnVlKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlICdraXRjaGVuc2luayc6XG5cdFx0XHRcdGZvciAoY29uc3QgbHZsIG9mIFsnbGV2ZWwxJywgJ2xldmVsMiddKSB7XG5cdFx0XHRcdFx0Zm9yIChjb25zdCBsZXZlbEdyb3VwIG9mIFR3aW5rbGUud2Fybi5tZXNzYWdlcy5sZXZlbHMpIHtcblx0XHRcdFx0XHRcdGNyZWF0ZUVudHJpZXMobGV2ZWxHcm91cC5saXN0LCBzdWJfZ3JvdXAsIHRydWUsIGx2bCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGNyZWF0ZUVudHJpZXMoVHdpbmtsZS53YXJuLm1lc3NhZ2VzLnNpbmdsZW5vdGljZSwgc3ViX2dyb3VwLCB0cnVlKTtcblx0XHRcdFx0Y3JlYXRlRW50cmllcyhUd2lua2xlLndhcm4ubWVzc2FnZXMuc2luZ2xld2Fybiwgc3ViX2dyb3VwLCB0cnVlKTtcblx0XHRcdFx0Y3JlYXRlRW50cmllcyhUd2lua2xlLmdldFByZWYoJ2N1c3RvbVdhcm5pbmdMaXN0JyksIHN1Yl9ncm91cCwgdHJ1ZSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnbGV2ZWwxJzpcblx0XHRcdGNhc2UgJ2xldmVsMic6XG5cdFx0XHRcdC8vIENyZWF0ZXMgc3ViZ3JvdXAgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIHRoZXJlIGlzIGFueXRoaW5nIHRvIHBsYWNlIGluIGl0O1xuXHRcdFx0XHQvLyBsZWF2ZXMgXCJSZW1vdmFsIG9mIGRlbGV0aW9uIHRhZ3NcIiBlbXB0eSBmb3IgbGV2ZWwgMlxuXHRcdFx0XHRmb3IgKGNvbnN0IGxldmVsR3JvdXAgb2YgVHdpbmtsZS53YXJuLm1lc3NhZ2VzLmxldmVscykge1xuXHRcdFx0XHRcdGxldCBvcHRncm91cCA9IG5ldyBNb3JlYml0cy5xdWlja0Zvcm0uZWxlbWVudCh7XG5cdFx0XHRcdFx0XHR0eXBlOiAnb3B0Z3JvdXAnLFxuXHRcdFx0XHRcdFx0bGFiZWw6IGxldmVsR3JvdXAuY2F0ZWdvcnksXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0b3B0Z3JvdXAgPSBvcHRncm91cC5yZW5kZXIoKTtcblx0XHRcdFx0XHRzdWJfZ3JvdXAuYXBwZW5kQ2hpbGQob3B0Z3JvdXApO1xuXHRcdFx0XHRcdC8vIGNyZWF0ZSB0aGUgb3B0aW9uc1xuXHRcdFx0XHRcdGNyZWF0ZUVudHJpZXMobGV2ZWxHcm91cC5saXN0LCBvcHRncm91cCwgZmFsc2UpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnYXV0b2xldmVsJzoge1xuXHRcdFx0XHQvLyBDaGVjayB1c2VyIHBhZ2UgdG8gZGV0ZXJtaW5lIGFwcHJvcHJpYXRlIGxldmVsXG5cdFx0XHRcdGNvbnN0IGF1dG9sZXZlbFByb2MgPSAoKSA9PiB7XG5cdFx0XHRcdFx0Y29uc3Qgd2lraXRleHQgPSBUd2lua2xlLndhcm4udGFsa3BhZ2VPYmouZ2V0UGFnZVRleHQoKTtcblx0XHRcdFx0XHQvLyBoaXN0b3J5IG5vdCBuZWVkZWQgZm9yIGF1dG9sZXZlbFxuXHRcdFx0XHRcdGNvbnN0IFtsYXRlc3RdID0gVHdpbmtsZS53YXJuLmNhbGxiYWNrcy5kYXRlUHJvY2Vzc2luZyh3aWtpdGV4dCk7XG5cdFx0XHRcdFx0Ly8gUHNldWRvLXBhcmFtcyB3aXRoIG9ubHkgd2hhdCdzIG5lZWRlZCB0byBwYXJzZSB0aGUgbGV2ZWwgaS5lLiBubyBtZXNzYWdlRGF0YVxuXHRcdFx0XHRcdGNvbnN0IHBhcmFtcyA9IHtcblx0XHRcdFx0XHRcdHN1Yl9ncm91cDogb2xkX3N1YnZhbHVlLFxuXHRcdFx0XHRcdFx0YXJ0aWNsZTogZS50YXJnZXQucm9vdC5hcnRpY2xlLnZhbHVlLFxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0Y29uc3QgbHZsID0gYGxldmVsJHtUd2lua2xlLndhcm4uY2FsbGJhY2tzLmF1dG9sZXZlbFBhcnNlV2lraXRleHQod2lraXRleHQsIHBhcmFtcywgbGF0ZXN0KVsxXX1gO1xuXHRcdFx0XHRcdC8vIElkZW50aWNhbCB0byBsZXZlbDEsIGV0Yy4gYWJvdmUgYnV0IGV4cGxpY2l0bHkgcHJvdmlkZXMgdGhlIGxldmVsXG5cdFx0XHRcdFx0Zm9yIChjb25zdCBsZXZlbEdyb3VwIG9mIFR3aW5rbGUud2Fybi5tZXNzYWdlcy5sZXZlbHMpIHtcblx0XHRcdFx0XHRcdGxldCBvcHRncm91cCA9IG5ldyBNb3JlYml0cy5xdWlja0Zvcm0uZWxlbWVudCh7XG5cdFx0XHRcdFx0XHRcdHR5cGU6ICdvcHRncm91cCcsXG5cdFx0XHRcdFx0XHRcdGxhYmVsOiBsZXZlbEdyb3VwLmNhdGVnb3J5LFxuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRvcHRncm91cCA9IG9wdGdyb3VwLnJlbmRlcigpO1xuXHRcdFx0XHRcdFx0c3ViX2dyb3VwLmFwcGVuZENoaWxkKG9wdGdyb3VwKTtcblx0XHRcdFx0XHRcdC8vIGNyZWF0ZSB0aGUgb3B0aW9uc1xuXHRcdFx0XHRcdFx0Y3JlYXRlRW50cmllcyhsZXZlbEdyb3VwLmxpc3QsIG9wdGdyb3VwLCBmYWxzZSwgbHZsKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Ly8gVHJpZ2dlciBzdWJjYXRlZ29yeSBjaGFuZ2UsIGFkZCBzZWxlY3QgbWVudSwgZXRjLlxuXHRcdFx0XHRcdFR3aW5rbGUud2Fybi5jYWxsYmFjay5wb3N0Q2F0ZWdvcnlDbGVhbnVwKGUpO1xuXHRcdFx0XHR9O1xuXHRcdFx0XHRpZiAoVHdpbmtsZS53YXJuLnRhbGtwYWdlT2JqKSB7XG5cdFx0XHRcdFx0YXV0b2xldmVsUHJvYygpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGNvbnN0IHVzZXJ0YWxrX3BhZ2UgPSBuZXcgTW9yZWJpdHMud2lraS5wYWdlKFxuXHRcdFx0XHRcdFx0YFVzZXJfdGFsazoke3JlbGV2YW50VXNlck5hbWV9YCxcblx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5Yqg6L295LiK5qyh6K2m5ZGKJywgJ+i8ieWFpeS4iuasoeitpuWRiicpXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0XHR1c2VydGFsa19wYWdlLnNldEZvbGxvd1JlZGlyZWN0KHRydWUsIGZhbHNlKTtcblx0XHRcdFx0XHR1c2VydGFsa19wYWdlLmxvYWQoXG5cdFx0XHRcdFx0XHQocGFnZW9iaikgPT4ge1xuXHRcdFx0XHRcdFx0XHRUd2lua2xlLndhcm4udGFsa3BhZ2VPYmogPSBwYWdlb2JqOyAvLyBVcGRhdGUgdGFsa3BhZ2VPYmpcblx0XHRcdFx0XHRcdFx0YXV0b2xldmVsUHJvYygpO1xuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdCgpID0+IHtcblx0XHRcdFx0XHRcdFx0Ly8gQ2F0Y2ggYW5kIHdhcm4gaWYgdGhlIHRhbGtwYWdlIGNhbid0IGxvYWQsXG5cdFx0XHRcdFx0XHRcdC8vIG1vc3QgbGlrZWx5IGJlY2F1c2UgaXQncyBhIGNyb3NzLW5hbWVzcGFjZSByZWRpcmVjdFxuXHRcdFx0XHRcdFx0XHQvLyBTdXBlcnNlZGVzIHRoZSB0eXBpY2FsICRhdXRvbGV2ZWxNZXNzYWdlIGFkZGVkIGluIGF1dG9sZXZlbFBhcnNlV2lraXRleHRcblx0XHRcdFx0XHRcdFx0Y29uc3QgJG5vVGFsa1BhZ2VOb2RlID0gJCgnPHN0cm9uZz4nKVxuXHRcdFx0XHRcdFx0XHRcdC5hdHRyKCdpZCcsICd0d2lua2xlLXdhcm4tYXV0b2xldmVsLW1lc3NhZ2UnKVxuXHRcdFx0XHRcdFx0XHRcdC5jc3MoJ2NvbG9yJywgJyNmMDAnKVxuXHRcdFx0XHRcdFx0XHRcdC50ZXh0KFxuXHRcdFx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQn5peg5rOV5Yqg6L2955So5oi36K6o6K666aG177yM6L+Z5Y+v6IO95piv5Zug5Li65a6D5piv6Leo5ZG95ZCN56m66Ze06YeN5a6a5ZCR77yM6Ieq5Yqo6YCJ5oup6K2m5ZGK57qn5Yir5bCG5LiN5Lya6L+Q5L2c44CCJyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0J+eEoeazlei8ieWFpeS9v+eUqOiAheiojuirlumgge+8jOmAmeWPr+iDveaYr+WboOeCuuWug+aYr+i3qOWRveWQjeepuumWk+mHjeaWsOWwjuWQke+8jOiHquWLlemBuOaTh+itpuWRiue0muWIpeWwh+S4jeacg+mBi+S9nOOAgidcblx0XHRcdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHQkbm9UYWxrUGFnZU5vZGUuaW5zZXJ0QmVmb3JlKCRib2R5LmZpbmQoJyN0d2lua2xlLXdhcm4td2FybmluZy1tZXNzYWdlcycpKTtcblx0XHRcdFx0XHRcdFx0Ly8gSWYgYSBwcmV2aWV3IHdhcyBvcGVuZWQgd2hpbGUgaW4gYSBkaWZmZXJlbnQgbW9kZSwgY2xvc2UgaXRcblx0XHRcdFx0XHRcdFx0Ly8gU2hvdWxkIG51bGxpZnkgdGhlIG5lZWQgdG8gY2F0Y2ggdGhlIGVycm9yIGluIHByZXZpZXcgY2FsbGJhY2tcblx0XHRcdFx0XHRcdFx0ZS50YXJnZXQucm9vdC5wcmV2aWV3ZXIuY2xvc2VQcmV2aWV3KCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0fVxuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdHZvaWQgbXcubm90aWZ5KHdpbmRvdy53Z1VMUygndHdpbmtsZXdhcm7vvJrmnKrnn6XnmoTorablkYrnu4QnLCAndHdpbmtsZXdhcm7vvJrmnKrnn6XnmoTorablkYrntYQnKSwge1xuXHRcdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0XHR0YWc6ICd0d2lua2xld2FybicsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRicmVhaztcblx0XHR9XG5cdFx0Ly8gVHJpZ2dlciBzdWJjYXRlZ29yeSBjaGFuZ2UsIGFkZCBzZWxlY3QgbWVudSwgZXRjLlxuXHRcdC8vIEhlcmUgYmVjYXVzZSBvZiB0aGUgYXN5bmMgbG9hZCBmb3IgYXV0b2xldmVsXG5cdFx0aWYgKHZhbHVlICE9PSAnYXV0b2xldmVsJykge1xuXHRcdFx0Ly8gcmVzZXQgYW55IGF1dG9sZXZlbC1zcGVjaWZpYyBtZXNzYWdlcyB3aGlsZSB3ZSdyZSBoZXJlXG5cdFx0XHQkYm9keS5maW5kKCcjdHdpbmtsZS13YXJuLWF1dG9sZXZlbC1tZXNzYWdlJykucmVtb3ZlKCk7XG5cdFx0XHRUd2lua2xlLndhcm4uY2FsbGJhY2sucG9zdENhdGVnb3J5Q2xlYW51cChlKTtcblx0XHR9XG5cdH07XG5cdFR3aW5rbGUud2Fybi5jYWxsYmFjay5wb3N0Q2F0ZWdvcnlDbGVhbnVwID0gKGUpID0+IHtcblx0XHQvLyBjbGVhciBvdmVycmlkZGVuIGxhYmVsIG9uIGFydGljbGUgdGV4dGJveFxuXHRcdE1vcmViaXRzLnF1aWNrRm9ybS5zZXRFbGVtZW50VG9vbHRpcFZpc2liaWxpdHkoZS50YXJnZXQucm9vdC5hcnRpY2xlLCB0cnVlKTtcblx0XHRNb3JlYml0cy5xdWlja0Zvcm0ucmVzZXRFbGVtZW50TGFiZWwoZS50YXJnZXQucm9vdC5hcnRpY2xlKTtcblx0XHQvLyBUcmlnZ2VyIGN1c3RvbSBsYWJlbC9jaGFuZ2Ugb24gbWFpbiBjYXRlZ29yeSBjaGFuZ2Vcblx0XHRUd2lua2xlLndhcm4uY2FsbGJhY2suY2hhbmdlX3N1YmNhdGVnb3J5KGUpO1xuXHRcdC8vIFVzZSBzZWxlY3QyIHRvIG1ha2UgdGhlIHNlbGVjdCBtZW51IHNlYXJjaGFibGVcblx0XHRpZiAoIVR3aW5rbGUuZ2V0UHJlZignb2xkU2VsZWN0JykpIHtcblx0XHRcdCRib2R5XG5cdFx0XHRcdC5maW5kKCdzZWxlY3RbbmFtZT1zdWJfZ3JvdXBdJylcblx0XHRcdFx0LnNlbGVjdDIoe1xuXHRcdFx0XHRcdHdpZHRoOiAnMTAwJScsXG5cdFx0XHRcdFx0bWF0Y2hlcjogTW9yZWJpdHMuc2VsZWN0Mi5tYXRjaGVycy5vcHRncm91cEZ1bGwsXG5cdFx0XHRcdFx0dGVtcGxhdGVSZXN1bHQ6IE1vcmViaXRzLnNlbGVjdDIuaGlnaGxpZ2h0U2VhcmNoTWF0Y2hlcyxcblx0XHRcdFx0XHRsYW5ndWFnZToge1xuXHRcdFx0XHRcdFx0c2VhcmNoaW5nOiBNb3JlYml0cy5zZWxlY3QyLnF1ZXJ5SW50ZXJjZXB0b3IsXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0fSlcblx0XHRcdFx0LmNoYW5nZShUd2lua2xlLndhcm4uY2FsbGJhY2suY2hhbmdlX3N1YmNhdGVnb3J5KTtcblx0XHRcdCRib2R5LmZpbmQoJy5zZWxlY3QyLXNlbGVjdGlvbicpLm9uKCdrZXlkb3duJywgTW9yZWJpdHMuc2VsZWN0Mi5hdXRvU3RhcnQpLnRyaWdnZXIoJ2ZvY3VzJyk7XG5cdFx0XHRtdy51dGlsLmFkZENTUyhcblx0XHRcdFx0LyogSW5jcmVhc2UgaGVpZ2h0O1xuXHRcdFx0XHQgKiBSZWR1Y2UgcGFkZGluZztcblx0XHRcdFx0ICogQWRqdXN0IGZvbnQgc2l6ZS5cblx0XHRcdFx0ICogKi9cblx0XHRcdFx0Jy5zZWxlY3QyLWNvbnRhaW5lciAuc2VsZWN0Mi1kcm9wZG93biAuc2VsZWN0Mi1yZXN1bHRzPi5zZWxlY3QyLXJlc3VsdHNfX29wdGlvbnN7bWF4LWhlaWdodDozNTBweH0uc2VsZWN0Mi1yZXN1bHRzIC5zZWxlY3QyLXJlc3VsdHNfX2dyb3VwLC5zZWxlY3QyLXJlc3VsdHMgLnNlbGVjdDItcmVzdWx0c19fb3B0aW9ue3BhZGRpbmctdG9wOjFweDtwYWRkaW5nLWJvdHRvbToxcHh9LnNlbGVjdDItY29udGFpbmVyIC5zZWxlY3QyLWRyb3Bkb3duIC5zZWxlY3QyLXJlc3VsdHMsLnNlbGVjdDItY29udGFpbmVyIC5zZWxlY3Rpb24gLnNlbGVjdDItc2VsZWN0aW9uX19yZW5kZXJlZHtmb250LXNpemU6MTNweH0nXG5cdFx0XHQpO1xuXHRcdH1cblx0fTtcblx0VHdpbmtsZS53YXJuLmNhbGxiYWNrLmNoYW5nZV9zdWJjYXRlZ29yeSA9IChlKSA9PiB7XG5cdFx0Y29uc3QgbWFpbl9ncm91cCA9IGUudGFyZ2V0LmZvcm0ubWFpbl9ncm91cC52YWx1ZTtcblx0XHRjb25zdCB7dmFsdWV9ID0gZS50YXJnZXQuZm9ybS5zdWJfZ3JvdXA7XG5cdFx0Ly8gVGFncyB0aGF0IGRvbid0IHRha2UgYSBsaW5rZWQgYXJ0aWNsZSwgYnV0IHNvbWV0aGluZyBlbHNlIChvZnRlbiBhIHVzZXJuYW1lKS5cblx0XHQvLyBUaGUgdmFsdWUgb2YgZWFjaCB0YWcgaXMgdGhlIGxhYmVsIG5leHQgdG8gdGhlIGlucHV0IGZpZWxkXG5cdFx0Y29uc3Qgbm90TGlua2VkQXJ0aWNsZSA9IHtcblx0XHRcdCd1dy1iaXRlJzogd2luZG93LndnVUxTKCfooqvigJzlkqzliLDigJ3nmoTnlKjmiLfvvIjkuI3lkKtVc2VyOu+8iSAnLCAn6KKr44CM5ZKs5Yiw44CN55qE5L2/55So6ICF77yI5LiN5ZCrVXNlcjrvvIkgJyksXG5cdFx0XHQndXctYWl2Jzogd2luZG93LndnVUxTKCflj6/pgInovpPlhaXooqvorablkYrnmoTnlKjmiLflkI3vvIjkuI3lkKtVc2VyOu+8iSAnLCAn5Y+v6YG46Ly45YWl6KKr6K2m5ZGK55qE5L2/55So6ICF5ZCN56ix77yI5LiN5ZCrVXNlcjrvvIkgJyksXG5cdFx0fTtcblx0XHRpZiAoWydzaW5nbGVub3RpY2UnLCAnc2luZ2xld2FybicsICdzaW5nbGVjb21iaW5lZCcsICdraXRjaGVuc2luayddLmluY2x1ZGVzKG1haW5fZ3JvdXApKSB7XG5cdFx0XHRpZiAobm90TGlua2VkQXJ0aWNsZVt2YWx1ZV0pIHtcblx0XHRcdFx0aWYgKFR3aW5rbGUud2Fybi5wcmV2X2FydGljbGUgPT09IG51bGwpIHtcblx0XHRcdFx0XHRUd2lua2xlLndhcm4ucHJldl9hcnRpY2xlID0gZS50YXJnZXQuZm9ybS5hcnRpY2xlLnZhbHVlO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGUudGFyZ2V0LmZvcm0uYXJ0aWNsZS5ub3RBcnRpY2xlID0gdHJ1ZTtcblx0XHRcdFx0ZS50YXJnZXQuZm9ybS5hcnRpY2xlLnZhbHVlID0gJyc7XG5cdFx0XHRcdC8vIGNoYW5nZSBmb3JtIGxhYmVscyBhY2NvcmRpbmcgdG8gdGhlIHdhcm5pbmcgc2VsZWN0ZWRcblx0XHRcdFx0TW9yZWJpdHMucXVpY2tGb3JtLnNldEVsZW1lbnRUb29sdGlwVmlzaWJpbGl0eShlLnRhcmdldC5mb3JtLmFydGljbGUsIGZhbHNlKTtcblx0XHRcdFx0TW9yZWJpdHMucXVpY2tGb3JtLm92ZXJyaWRlRWxlbWVudExhYmVsKGUudGFyZ2V0LmZvcm0uYXJ0aWNsZSwgbm90TGlua2VkQXJ0aWNsZVt2YWx1ZV0pO1xuXHRcdFx0fSBlbHNlIGlmIChlLnRhcmdldC5mb3JtLmFydGljbGUubm90QXJ0aWNsZSkge1xuXHRcdFx0XHRpZiAoVHdpbmtsZS53YXJuLnByZXZfYXJ0aWNsZSAhPT0gbnVsbCkge1xuXHRcdFx0XHRcdGUudGFyZ2V0LmZvcm0uYXJ0aWNsZS52YWx1ZSA9IFR3aW5rbGUud2Fybi5wcmV2X2FydGljbGU7XG5cdFx0XHRcdFx0VHdpbmtsZS53YXJuLnByZXZfYXJ0aWNsZSA9IG51bGw7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZS50YXJnZXQuZm9ybS5hcnRpY2xlLm5vdEFydGljbGUgPSBmYWxzZTtcblx0XHRcdFx0TW9yZWJpdHMucXVpY2tGb3JtLnNldEVsZW1lbnRUb29sdGlwVmlzaWJpbGl0eShlLnRhcmdldC5mb3JtLmFydGljbGUsIHRydWUpO1xuXHRcdFx0XHRNb3JlYml0cy5xdWlja0Zvcm0ucmVzZXRFbGVtZW50TGFiZWwoZS50YXJnZXQuZm9ybS5hcnRpY2xlKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0Ly8gYWRkIGJpZyByZWQgbm90aWNlLCB3YXJuaW5nIHVzZXJzIGFib3V0IGhvdyB0byB1c2Uge3t1dy1bY29pLV11c2VybmFtZX19IGFwcHJvcHJpYXRlbHlcblx0XHQkYm9keS5maW5kKCcjdHctd2Fybi1yZWQtbm90aWNlJykucmVtb3ZlKCk7XG5cdH07XG5cdFR3aW5rbGUud2Fybi5jYWxsYmFja3MgPSB7XG5cdFx0Z2V0V2FybmluZ1dpa2l0ZXh0OiAodGVtcGxhdGVOYW1lLCBhcnRpY2xlLCByZWFzb24sIGlzQ3VzdG9tLCBub1NpZ24pID0+IHtcblx0XHRcdGxldCB0ZXh0ID0gJ3t7Jy5jb25jYXQoJ3N1YnN0OicsIHRlbXBsYXRlTmFtZSk7XG5cdFx0XHQvLyBhZGQgbGlua2VkIGFydGljbGUgZm9yIHVzZXIgd2FybmluZ3Ncblx0XHRcdGlmIChhcnRpY2xlKSB7XG5cdFx0XHRcdHRleHQgKz0gYHwxPSR7YXJ0aWNsZX1gO1xuXHRcdFx0fVxuXHRcdFx0aWYgKHJlYXNvbikge1xuXHRcdFx0XHQvLyBhZGQgZXh0cmEgbWVzc2FnZVxuXHRcdFx0XHR0ZXh0ICs9IGB8Mj0ke3JlYXNvbn1gO1xuXHRcdFx0fVxuXHRcdFx0dGV4dCArPSAnfHN1YnN0PScuY29uY2F0KCdzdWJzdDonKTtcblx0XHRcdGlmICghbm9TaWduKSB7XG5cdFx0XHRcdHRleHQgKz0gJ3xzaWc9fn4nLmNvbmNhdCgnfn4nKTtcblx0XHRcdH1cblx0XHRcdHRleHQgKz0gJ319Jztcblx0XHRcdHJldHVybiB0ZXh0O1xuXHRcdH0sXG5cdFx0c2hvd1ByZXZpZXc6IChmb3JtLCB0ZW1wbGF0ZW5hbWUpID0+IHtcblx0XHRcdGNvbnN0IGlucHV0ID0gTW9yZWJpdHMucXVpY2tGb3JtLmdldElucHV0RGF0YShmb3JtKTtcblx0XHRcdC8vIFByb3ZpZGVkIG9uIGF1dG9sZXZlbCwgbm90IG90aGVyd2lzZVxuXHRcdFx0dGVtcGxhdGVuYW1lIHx8PSBpbnB1dC5zdWJfZ3JvdXA7XG5cdFx0XHRjb25zdCBsaW5rZWRhcnRpY2xlID0gaW5wdXQuYXJ0aWNsZTtcblx0XHRcdGNvbnN0IHRlbXBsYXRldGV4dCA9IFR3aW5rbGUud2Fybi5jYWxsYmFja3MuZ2V0V2FybmluZ1dpa2l0ZXh0KFxuXHRcdFx0XHR0ZW1wbGF0ZW5hbWUsXG5cdFx0XHRcdGxpbmtlZGFydGljbGUsXG5cdFx0XHRcdGlucHV0LnJlYXNvbixcblx0XHRcdFx0aW5wdXQubWFpbl9ncm91cCA9PT0gJ2N1c3RvbSdcblx0XHRcdCk7XG5cdFx0XHRmb3JtLnByZXZpZXdlci5iZWdpblJlbmRlcih0ZW1wbGF0ZXRleHQsIGBVc2VyX3RhbGs6JHtyZWxldmFudFVzZXJOYW1lfWApOyAvLyBGb3JjZSB3aWtpdGV4dC9jb3JyZWN0IHVzZXJuYW1lXG5cdFx0fSxcblxuXHRcdC8vIEp1c3QgYSBwYXNzLXRocm91Z2ggdW5sZXNzIHRoZSBhdXRvbGV2ZWwgb3B0aW9uIHdhcyBzZWxlY3RlZFxuXHRcdHByZXZpZXc6IChmb3JtKSA9PiB7XG5cdFx0XHRpZiAoZm9ybS5tYWluX2dyb3VwLnZhbHVlID09PSAnYXV0b2xldmVsJykge1xuXHRcdFx0XHQvLyBBbHdheXMgZ2V0IGEgbmV3LCB1cGRhdGVkIHRhbGtwYWdlIGZvciBhdXRvbGV2ZWwgcHJvY2Vzc2luZ1xuXHRcdFx0XHRjb25zdCB1c2VydGFsa19wYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShcblx0XHRcdFx0XHRgVXNlcl90YWxrOiR7cmVsZXZhbnRVc2VyTmFtZX1gLFxuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5Yqg6L295LiK5qyh6K2m5ZGKJywgJ+i8ieWFpeS4iuasoeitpuWRiicpXG5cdFx0XHRcdCk7XG5cdFx0XHRcdHVzZXJ0YWxrX3BhZ2Uuc2V0Rm9sbG93UmVkaXJlY3QodHJ1ZSwgZmFsc2UpO1xuXHRcdFx0XHQvLyBXaWxsIGZhaWwgc2lsZW50bHkgaWYgdGhlIHRhbGsgcGFnZSBpcyBhIGNyb3NzLW5zIHJlZGlyZWN0LFxuXHRcdFx0XHQvLyByZW1vdmFsIG9mIHRoZSBwcmV2aWV3IGJveCBoYW5kbGVkIHdoZW4gbG9hZGluZyB0aGUgbWVudVxuXHRcdFx0XHR1c2VydGFsa19wYWdlLmxvYWQoKHBhZ2VvYmopID0+IHtcblx0XHRcdFx0XHRUd2lua2xlLndhcm4udGFsa3BhZ2VPYmogPSBwYWdlb2JqOyAvLyBVcGRhdGUgdGFsa3BhZ2VPYmpcblx0XHRcdFx0XHRjb25zdCB3aWtpdGV4dCA9IHBhZ2VvYmouZ2V0UGFnZVRleHQoKTtcblx0XHRcdFx0XHQvLyBoaXN0b3J5IG5vdCBuZWVkZWQgZm9yIGF1dG9sZXZlbFxuXHRcdFx0XHRcdGNvbnN0IFtsYXRlc3RdID0gVHdpbmtsZS53YXJuLmNhbGxiYWNrcy5kYXRlUHJvY2Vzc2luZyh3aWtpdGV4dCk7XG5cdFx0XHRcdFx0Y29uc3QgcGFyYW1zID0ge1xuXHRcdFx0XHRcdFx0c3ViX2dyb3VwOiBmb3JtLnN1Yl9ncm91cC52YWx1ZSxcblx0XHRcdFx0XHRcdGFydGljbGU6IGZvcm0uYXJ0aWNsZS52YWx1ZSxcblx0XHRcdFx0XHRcdG1lc3NhZ2VEYXRhOiAkKGZvcm0uc3ViX2dyb3VwKVxuXHRcdFx0XHRcdFx0XHQuZmluZChgb3B0aW9uW3ZhbHVlPVwiJHskKGZvcm0uc3ViX2dyb3VwKS52YWwoKX1cIl1gKVxuXHRcdFx0XHRcdFx0XHQuZGF0YSgnbWVzc2FnZURhdGEnKSxcblx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdGNvbnN0IFt0ZW1wbGF0ZV0gPSBUd2lua2xlLndhcm4uY2FsbGJhY2tzLmF1dG9sZXZlbFBhcnNlV2lraXRleHQod2lraXRleHQsIHBhcmFtcywgbGF0ZXN0KTtcblx0XHRcdFx0XHRUd2lua2xlLndhcm4uY2FsbGJhY2tzLnNob3dQcmV2aWV3KGZvcm0sIHRlbXBsYXRlKTtcblx0XHRcdFx0XHQvLyBJZiB0aGUgdGVtcGxhdGVzIGhhdmUgZGl2ZXJnZWQsIGZha2UgYSBjaGFuZ2UgZXZlbnRcblx0XHRcdFx0XHQvLyB0byByZWxvYWQgdGhlIG1lbnUgd2l0aCB0aGUgdXBkYXRlZCBwYWdlb2JqXG5cdFx0XHRcdFx0aWYgKGZvcm0uc3ViX2dyb3VwLnZhbHVlICE9PSB0ZW1wbGF0ZSkge1xuXHRcdFx0XHRcdFx0Y29uc3QgZXZ0ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50Jyk7XG5cdFx0XHRcdFx0XHRldnQuaW5pdEV2ZW50KCdjaGFuZ2UnLCB0cnVlLCB0cnVlKTtcblx0XHRcdFx0XHRcdGZvcm0ubWFpbl9ncm91cC5kaXNwYXRjaEV2ZW50KGV2dCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFR3aW5rbGUud2Fybi5jYWxsYmFja3Muc2hvd1ByZXZpZXcoZm9ybSk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHQvKipcblx0XHQgKiBVc2VkIGluIHRoZSBtYWluIGFuZCBhdXRvbGV2ZWwgbG9vcHMgdG8gZGV0ZXJtaW5lIHdoZW4gdG8gd2FyblxuXHRcdCAqIGFib3V0IGV4Y2Vzc2l2ZWx5IHJlY2VudCwgc3RhbGUsIG9yIGlkZW50aWNhbCB3YXJuaW5ncy5cblx0XHQgKlxuXHRcdCAqIEBwYXJhbSB7c3RyaW5nfSB3aWtpdGV4dCAgVGhlIHRleHQgb2YgYSB1c2VyJ3MgdGFsayBwYWdlLCBmcm9tIGdldFBhZ2VUZXh0KClcblx0XHQgKiBAcmV0dXJucyB7T2JqZWN0W119IC0gQXJyYXkgb2Ygb2JqZWN0czogbGF0ZXN0IGNvbnRhaW5zIG1vc3QgcmVjZW50XG5cdFx0ICogd2FybmluZyBhbmQgZGF0ZTsgaGlzdG9yeSBsaXN0cyBhbGwgcHJpb3Igd2FybmluZ3Ncblx0XHQgKi9cblx0XHRkYXRlUHJvY2Vzc2luZzogKHdpa2l0ZXh0KSA9PiB7XG5cdFx0XHRjb25zdCBoaXN0b3J5X3JlID1cblx0XHRcdFx0LzwhLS1cXHM/VGVtcGxhdGU6KFt1VV13LS4qPylcXHM/LS0+Lio/KFxcZHs0fSnlubQoXFxkezEsMn0p5pyIKFxcZHsxLDJ9KeaXpSBcXChb5pel5LiA5LqM5LiJ5Zub5LqU5YWtXVxcKSAoXFxkezEsMn0pOihcXGR7MSwyfSkgXFwoQ1NUXFwpL2c7XG5cdFx0XHRjb25zdCBoaXN0b3J5ID0ge307XG5cdFx0XHRjb25zdCBsYXRlc3QgPSB7XG5cdFx0XHRcdGRhdGU6IG5ldyBNb3JlYml0cy5kYXRlKDApLFxuXHRcdFx0XHR0eXBlOiAnJyxcblx0XHRcdH07XG5cdFx0XHRsZXQgY3VycmVudDtcblx0XHRcdHdoaWxlICgoY3VycmVudCA9IGhpc3RvcnlfcmUuZXhlYyh3aWtpdGV4dCkpICE9PSBudWxsKSB7XG5cdFx0XHRcdGNvbnN0IFssIHRlbXBsYXRlXSA9IGN1cnJlbnQ7XG5cdFx0XHRcdGNvbnN0IGN1cnJlbnRfZGF0ZSA9IG5ldyBNb3JlYml0cy5kYXRlKFxuXHRcdFx0XHRcdGAke2N1cnJlbnRbMl19LSR7Y3VycmVudFszXX0tJHtjdXJyZW50WzRdfSAke2N1cnJlbnRbNV19OiR7Y3VycmVudFs2XX0gKENTVClgXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGlmICghKHRlbXBsYXRlIGluIGhpc3RvcnkpIHx8IGhpc3RvcnlbdGVtcGxhdGVdLmlzQmVmb3JlKGN1cnJlbnRfZGF0ZSkpIHtcblx0XHRcdFx0XHRoaXN0b3J5W3RlbXBsYXRlXSA9IGN1cnJlbnRfZGF0ZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoIWxhdGVzdC5kYXRlLmlzQWZ0ZXIoY3VycmVudF9kYXRlKSkge1xuXHRcdFx0XHRcdGxhdGVzdC5kYXRlID0gY3VycmVudF9kYXRlO1xuXHRcdFx0XHRcdGxhdGVzdC50eXBlID0gdGVtcGxhdGU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBbbGF0ZXN0LCBoaXN0b3J5XTtcblx0XHR9LFxuXHRcdC8qKlxuXHRcdCAqIE1haW4gbG9vcCBmb3IgZGVjaWRpbmcgd2hhdCB0aGUgbGV2ZWwgc2hvdWxkIGluY3JlbWVudCB0by4gTW9zdCBvZlxuXHRcdCAqIHRoaXMgaXMgcmVhbGx5IGp1c3QgZXJyb3IgY2F0Y2hpbmcgYW5kIHVwZGF0aW5nIHRoZSBzdWJzZXF1ZW50IGRhdGEuXG5cdFx0ICogTWF5IHByb2R1Y2UgdXAgdG8gdHdvIG5vdGljZXMgaW4gYSB0d2lua2xlLXdhcm4tYXV0b2xldmVsLW1lc3NhZ2VzIGRpdlxuXHRcdCAqXG5cdFx0ICogQHBhcmFtIHtzdHJpbmd9IHdpa2l0ZXh0ICBUaGUgdGV4dCBvZiBhIHVzZXIncyB0YWxrIHBhZ2UsIGZyb20gZ2V0UGFnZVRleHQoKSAocmVxdWlyZWQpXG5cdFx0ICogQHBhcmFtIHtPYmplY3R9IHBhcmFtcyAgUGFyYW1zIG9iamVjdDogc3ViX2dyb3VwIGlzIHRoZSB0ZW1wbGF0ZSAocmVxdWlyZWQpO1xuXHRcdCAqIGFydGljbGUgaXMgdGhlIHVzZXItcHJvdmlkZWQgYXJ0aWNsZSAoZm9ybS5hcnRpY2xlKSB1c2VkIHRvIGxpbmsgQVJWIG9uIHJlY2VudCBsZXZlbDIgd2FybmluZ3M7XG5cdFx0ICogbWVzc2FnZURhdGEgaXMgb25seSBuZWNlc3NhcnkgaWYgZ2V0dGluZyB0aGUgZnVsbCB0ZW1wbGF0ZSwgYXMgaXQnc1xuXHRcdCAqIHVzZWQgdG8gZW5zdXJlIGEgdmFsaWQgdGVtcGxhdGUgb2YgdGhhdCBsZXZlbCBleGlzdHNcblx0XHQgKiBAcGFyYW0ge09iamVjdH0gbGF0ZXN0ICBGaXJzdCBlbGVtZW50IG9mIHRoZSBhcnJheSByZXR1cm5lZCBmcm9tXG5cdFx0ICogZGF0ZVByb2Nlc3NpbmcuIFByb3ZpZGVkIGhlcmUgcmF0aGVyIHRoYW4gcHJvY2Vzc2VkIHdpdGhpbiB0byBhdm9pZFxuXHRcdCAqIHJlcGVhdGVkIGNhbGwgdG8gZGF0ZVByb2Nlc3Npbmdcblx0XHQgKiBAcGFyYW0geyhEYXRlfE1vcmViaXRzLmRhdGUpfSBkYXRlICBEYXRlIGZyb20gd2hpY2ggc3RhbGVuZXNzIGlzIGRldGVybWluZWRcblx0XHQgKiBAcGFyYW0ge01vcmViaXRzLnN0YXR1c30gc3RhdGVsZW0gIFN0YXR1cyBlbGVtZW50LCBvbmx5IHVzZWQgZm9yIGhhbmRsaW5nIGVycm9yIGluIGZpbmFsIGV4ZWN1dGlvblxuXHRcdCAqXG5cdFx0ICogQHJldHVybnMge0FycmF5fSAtIEFycmF5IHRoYXQgY29udGFpbnMgdGhlIGZ1bGwgdGVtcGxhdGUgYW5kIGp1c3QgdGhlIHdhcm5pbmcgbGV2ZWxcblx0XHQgKi9cblx0XHRhdXRvbGV2ZWxQYXJzZVdpa2l0ZXh0OiAod2lraXRleHQsIHBhcmFtcywgbGF0ZXN0LCBkYXRlLCBzdGF0ZWxlbSkgPT4ge1xuXHRcdFx0bGV0IGxldmVsOyAvLyB1bmRlZmluZWQgcmF0aGVyIHRoYW4gJycgbWVhbnMgdGhlIGlzTmFOIGJlbG93IHdpbGwgcmV0dXJuIHRydWVcblx0XHRcdGlmICgvXFxkPyQvLnRlc3QobGF0ZXN0LnR5cGUpKSB7XG5cdFx0XHRcdC8vIGxldmVsMS0yXG5cdFx0XHRcdGxldmVsID0gTnVtYmVyLnBhcnNlSW50KGxhdGVzdC50eXBlLnJlcGxhY2UoLy4qKFxcZCk/JC8sICckMScpLCAxMCk7XG5cdFx0XHR9IGVsc2UgaWYgKGxhdGVzdC50eXBlKSB7XG5cdFx0XHRcdGxldmVsID0gMTsgLy8gc2luZ2xlbm90aWNlIG9yIG5vdCBmb3VuZFxuXHRcdFx0fVxuXHRcdFx0Y29uc3QgJGF1dG9sZXZlbE1lc3NhZ2UgPSAkKCc8ZGl2PicpLmF0dHIoJ2lkJywgJ3R3aW5rbGUtd2Fybi1hdXRvbGV2ZWwtbWVzc2FnZScpO1xuXHRcdFx0aWYgKE51bWJlci5pc05hTihsZXZlbCkpIHtcblx0XHRcdFx0Ly8gTm8gcHJpb3Igd2FybmluZ3MgZm91bmQsIHRoaXMgaXMgdGhlIGZpcnN0XG5cdFx0XHRcdGxldmVsID0gMTtcblx0XHRcdH0gZWxzZSBpZiAobGV2ZWwgPiAyIHx8IGxldmVsIDwgMSkge1xuXHRcdFx0XHQvLyBTaG91bGRuJ3QgaGFwcGVuXG5cdFx0XHRcdGNvbnN0IG1lc3NhZ2UgPSB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0J+aXoOazleino+aekOS4iuasoeeahOitpuWRiuWxgue6p++8jOivt+aJi+WKqOmAieaLqeS4gOS4quitpuWRiuWxgue6p+OAgicsXG5cdFx0XHRcdFx0J+eEoeazleino+aekOS4iuasoeeahOitpuWRiuWxpOe0mu+8jOiri+aJi+WLlemBuOaTh+S4gOWAi+itpuWRiuWxpOe0muOAgidcblx0XHRcdFx0KTtcblx0XHRcdFx0aWYgKHN0YXRlbGVtKSB7XG5cdFx0XHRcdFx0c3RhdGVsZW0uZXJyb3IobWVzc2FnZSk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dm9pZCBtdy5ub3RpZnkobWVzc2FnZSwge1xuXHRcdFx0XHRcdFx0dHlwZTogJ3dhcm4nLFxuXHRcdFx0XHRcdFx0dGFnOiAndHdpbmtsZXdhcm4nLFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGRhdGUgfHw9IG5ldyBEYXRlKCk7XG5cdFx0XHRcdGNvbnN0IGF1dG9UaW1lb3V0ID0gbmV3IE1vcmViaXRzLmRhdGUobGF0ZXN0LmRhdGUuZ2V0VGltZSgpKS5hZGQoXG5cdFx0XHRcdFx0TnVtYmVyLnBhcnNlSW50KFR3aW5rbGUuZ2V0UHJlZignYXV0b2xldmVsU3RhbGVEYXlzJyksIDEwKSxcblx0XHRcdFx0XHQnZGF5J1xuXHRcdFx0XHQpO1xuXHRcdFx0XHRpZiAoYXV0b1RpbWVvdXQuaXNBZnRlcihkYXRlKSkge1xuXHRcdFx0XHRcdGlmIChsZXZlbCA9PT0gMikge1xuXHRcdFx0XHRcdFx0bGV2ZWwgPSAyO1xuXHRcdFx0XHRcdFx0Ly8gQmFzaWNhbGx5IGluZGljYXRlcyB3aGV0aGVyIHdlJ3JlIGluIHRoZSBmaW5hbCBNYWluIGV2YWx1YXRpb24gb3Igbm90LFxuXHRcdFx0XHRcdFx0Ly8gYW5kIHRodXMgd2hldGhlciB3ZSBjYW4gY29udGludWUgb3IgbmVlZCB0byBkaXNwbGF5IHRoZSB3YXJuaW5nIGFuZCBsaW5rXG5cdFx0XHRcdFx0XHRpZiAoIXN0YXRlbGVtKSB7XG5cdFx0XHRcdFx0XHRcdGNvbnN0ICRsaW5rID0gJCgnPGE+Jylcblx0XHRcdFx0XHRcdFx0XHQuYXR0cignaHJlZicsICcjJylcblx0XHRcdFx0XHRcdFx0XHQudGV4dCh3aW5kb3cud2dVTFMoJ+WNleWHu+atpOWkhOaJk+W8gOWRiueKtuW3peWFtycsICfpu57mk4rmraTomZXmiZPplovlkYrni4Dlt6XlhbcnKSlcblx0XHRcdFx0XHRcdFx0XHQuY3NzKCdmb250LXdlaWdodCcsICdib2xkJylcblx0XHRcdFx0XHRcdFx0XHQub24oJ2NsaWNrJywgKCkgPT4ge1xuXHRcdFx0XHRcdFx0XHRcdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQucmVkaXJlY3QgPSBudWxsO1xuXHRcdFx0XHRcdFx0XHRcdFx0VHdpbmtsZS53YXJuLmRpYWxvZy5jbG9zZSgpO1xuXHRcdFx0XHRcdFx0XHRcdFx0VHdpbmtsZS5hcnYuY2FsbGJhY2socmVsZXZhbnRVc2VyTmFtZSk7XG5cdFx0XHRcdFx0XHRcdFx0XHQkYm9keS5maW5kKCdpbnB1dFtuYW1lPXBhZ2VdJykudmFsKHBhcmFtcy5hcnRpY2xlKTsgLy8gVGFyZ2V0IHBhZ2Vcblx0XHRcdFx0XHRcdFx0XHRcdCRib2R5LmZpbmQoJ2lucHV0W3ZhbHVlPWZpbmFsXScpLnByb3AoJ2NoZWNrZWQnLCB0cnVlKTsgLy8gVmFuZGFsaXNtIGFmdGVyIGZpbmFsXG5cdFx0XHRcdFx0XHRcdFx0fSk7XG5cblx0XHRcdFx0XHRcdFx0Y29uc3Qgc3RhdHVzTm9kZSA9ICQoJzxkaXY+Jylcblx0XHRcdFx0XHRcdFx0XHQuY3NzKCdjb2xvcicsICcjZjAwJylcblx0XHRcdFx0XHRcdFx0XHQudGV4dChcblx0XHRcdFx0XHRcdFx0XHRcdHJlbGV2YW50VXNlck5hbWUgK1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+acgOWQjuaUtuWIsOS6huS4gOS4quWxgue6pzLorablkYrvvIgnLCAn5pyA5b6M5pS25Yiw5LqG5LiA5YCL5bGk57SaMuitpuWRiu+8iCcpICtcblx0XHRcdFx0XHRcdFx0XHRcdFx0bGF0ZXN0LnR5cGUgK1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0J++8ie+8jOaJgOS7peWwhuWFtuaKpeWRiue7meeuoeeQhuS6uuWRmOS8muavlOi+g+Wlve+8mycsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0J++8ie+8jOaJgOS7peWwh+WFtuWgseWRiue1pueuoeeQhuS6uuWToeacg+avlOi8g+Wlve+8mydcblx0XHRcdFx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdHN0YXR1c05vZGUuYXBwZW5kKCRsaW5rWzBdKTtcblx0XHRcdFx0XHRcdFx0JGF1dG9sZXZlbE1lc3NhZ2UuYXBwZW5kKHN0YXR1c05vZGUpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHQvLyBBdXRvbWF0aWNhbGx5IGluY3JlYXNlIHNldmVyaXR5XG5cdFx0XHRcdFx0XHRsZXZlbCArPSAxO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHQvLyBSZXNldCB3YXJuaW5nIGxldmVsIGlmIG1vc3QtcmVjZW50IHdhcm5pbmcgaXMgdG9vIG9sZFxuXHRcdFx0XHRcdGxldmVsID0gMTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0JGF1dG9sZXZlbE1lc3NhZ2UucHJlcGVuZChcblx0XHRcdFx0JChcblx0XHRcdFx0XHRgPGRpdj4ke3dpbmRvdy53Z1VMUygn5bCG5Y+R6YCBJywgJ+Wwh+eZvOmAgScpfTxzcGFuIHN0eWxlPVwiZm9udC13ZWlnaHQ6IGJvbGQ7XCI+JHt3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn5bGC57qnJyxcblx0XHRcdFx0XHRcdCflsaTntJonXG5cdFx0XHRcdFx0KX0ke2xldmVsfTwvc3Bhbj7orablkYrmqKHmnb/jgII8L2Rpdj5gXG5cdFx0XHRcdClcblx0XHRcdCk7XG5cdFx0XHQvLyBQbGFjZSBhZnRlciB0aGUgc3RhbGUgYW5kIG90aGVyLXVzZXItcmV2ZXJ0ZWQgKHRleHQtb25seSkgbWVzc2FnZXNcblx0XHRcdCRib2R5LmZpbmQoJyN0d2lua2xlLXdhcm4tYXV0b2xldmVsLW1lc3NhZ2UnKS5yZW1vdmUoKTsgLy8gY2xlYW4gc2xhdGVcblx0XHRcdCRhdXRvbGV2ZWxNZXNzYWdlLmluc2VydEFmdGVyKCRib2R5LmZpbmQoJyN0d2lua2xlLXdhcm4td2FybmluZy1tZXNzYWdlcycpKTtcblx0XHRcdGxldCB0ZW1wbGF0ZSA9IHBhcmFtcy5zdWJfZ3JvdXAucmVwbGFjZSgvKC4qKVxcZCQvLCAnJDEnKTtcblx0XHRcdC8vIFZhbGlkYXRlIHdhcm5pbmcgbGV2ZWwsIGZhbGxpbmcgYmFjayB0byB0aGUgdXctZ2VuZXJpYyBzZXJpZXMuXG5cdFx0XHQvLyBPbmx5IGEgZmV3IGl0ZW1zIGFyZSBtaXNzaW5nIGEgbGV2ZWwsIGFuZCBpbiBhbGwgYnV0IGEgaGFuZGZ1bFxuXHRcdFx0Ly8gb2YgY2FzZXMsIHRoZSB1dy1nZW5lcmljIHNlcmllcyBpcyBleHBsaWNpdGx5IHVzZWQgZWxzZXdoZXJlLlxuXHRcdFx0aWYgKHBhcmFtcy5tZXNzYWdlRGF0YSAmJiAhcGFyYW1zLm1lc3NhZ2VEYXRhW2BsZXZlbCR7bGV2ZWx9YF0pIHtcblx0XHRcdFx0dGVtcGxhdGUgPSAndXctZ2VuZXJpYyc7XG5cdFx0XHR9XG5cdFx0XHR0ZW1wbGF0ZSArPSBsZXZlbDtcblx0XHRcdHJldHVybiBbdGVtcGxhdGUsIGxldmVsXTtcblx0XHR9LFxuXHRcdG1haW46IChwYWdlb2JqKSA9PiB7XG5cdFx0XHRjb25zdCB0ZXh0ID0gcGFnZW9iai5nZXRQYWdlVGV4dCgpO1xuXHRcdFx0Y29uc3Qgc3RhdGVsZW0gPSBwYWdlb2JqLmdldFN0YXR1c0VsZW1lbnQoKTtcblx0XHRcdGNvbnN0IHBhcmFtcyA9IHBhZ2VvYmouZ2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKCk7XG5cdFx0XHRsZXQge21lc3NhZ2VEYXRhfSA9IHBhcmFtcztcblx0XHRcdGNvbnN0IHdhcm5pbmdIaXN0b3J5ID0gVHdpbmtsZS53YXJuLmNhbGxiYWNrcy5kYXRlUHJvY2Vzc2luZyh0ZXh0KTtcblx0XHRcdGNvbnN0IFtsYXRlc3QsIGhpc3RvcnldID0gd2FybmluZ0hpc3Rvcnk7XG5cdFx0XHRjb25zdCBub3cgPSBuZXcgTW9yZWJpdHMuZGF0ZShwYWdlb2JqLmdldExvYWRUaW1lKCkpO1xuXHRcdFx0VHdpbmtsZS53YXJuLnRhbGtwYWdlT2JqID0gcGFnZW9iajsgLy8gVXBkYXRlIHRhbGtwYWdlT2JqLCBqdXN0IGluIGNhc2Vcblx0XHRcdGlmIChwYXJhbXMubWFpbl9ncm91cCA9PT0gJ2F1dG9sZXZlbCcpIHtcblx0XHRcdFx0Ly8gW3RlbXBsYXRlLCBsZXZlbF1cblx0XHRcdFx0Y29uc3QgdGVtcGxhdGVBbmRMZXZlbCA9IFR3aW5rbGUud2Fybi5jYWxsYmFja3MuYXV0b2xldmVsUGFyc2VXaWtpdGV4dChcblx0XHRcdFx0XHR0ZXh0LFxuXHRcdFx0XHRcdHBhcmFtcyxcblx0XHRcdFx0XHRsYXRlc3QsXG5cdFx0XHRcdFx0bm93LFxuXHRcdFx0XHRcdHN0YXRlbGVtXG5cdFx0XHRcdCk7XG5cdFx0XHRcdC8vIE9ubHkgaWYgdGhlcmUncyBhIGNoYW5nZSBmcm9tIHRoZSBwcmlvciBkaXNwbGF5L2xvYWRcblx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdHBhcmFtcy5zdWJfZ3JvdXAgIT09IHRlbXBsYXRlQW5kTGV2ZWxbMF0gJiZcblx0XHRcdFx0XHQhY29uZmlybShcblx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5bCG5Y+R6YCB57uZ55So5oi3e3snLCAn5bCH55m86YCB57Wm5L2/55So6ICFe3snKSArXG5cdFx0XHRcdFx0XHRcdHRlbXBsYXRlQW5kTGV2ZWxbMF0gK1xuXHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ3195qih5p2/77yM5aW95ZCX77yfJywgJ3195qih5p2/77yM5aW95ZeO77yfJylcblx0XHRcdFx0XHQpXG5cdFx0XHRcdCkge1xuXHRcdFx0XHRcdHN0YXRlbGVtLmVycm9yKHdpbmRvdy53Z1VMUygn55So5oi35Y+W5raIJywgJ+S9v+eUqOiAheWPlua2iCcpKTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gVXBkYXRlIHBhcmFtcyBub3cgdGhhdCB3ZSd2ZSBzZWxlY3RlZCBhIHdhcm5pbmdcblx0XHRcdFx0W3BhcmFtcy5zdWJfZ3JvdXBdID0gdGVtcGxhdGVBbmRMZXZlbDtcblx0XHRcdFx0bWVzc2FnZURhdGEgPSBwYXJhbXMubWVzc2FnZURhdGFbYGxldmVsJHt0ZW1wbGF0ZUFuZExldmVsWzFdfWBdO1xuXHRcdFx0fSBlbHNlIGlmIChcblx0XHRcdFx0cGFyYW1zLnN1Yl9ncm91cCBpbiBoaXN0b3J5ICYmXG5cdFx0XHRcdG5ldyBNb3JlYml0cy5kYXRlKGhpc3RvcnlbcGFyYW1zLnN1Yl9ncm91cF0pLmFkZCgxLCAnZGF5JykuaXNBZnRlcihub3cpICYmXG5cdFx0XHRcdCFjb25maXJtKFxuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn6L+RMjTlsI/ml7blhoXkuIDkuKrlkIzmoLfnmoQgJywgJ+i/kTI05bCP5pmC5YWn5LiA5YCL5ZCM5qij55qEICcpICtcblx0XHRcdFx0XHRcdHBhcmFtcy5zdWJfZ3JvdXAgK1xuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCcg5qih5p2/5bey6KKr5Y+R5Ye644CCXFxu5piv5ZCm57un57ut77yfJywgJyDmqKHmnb/lt7Looqvnmbzlh7rjgIJcXG7mmK/lkKbnubznuozvvJ8nKVxuXHRcdFx0XHQpXG5cdFx0XHQpIHtcblx0XHRcdFx0c3RhdGVsZW0uZXJyb3Iod2luZG93LndnVUxTKCfnlKjmiLflj5bmtognLCAn5L2/55So6ICF5Y+W5raIJykpO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRsYXRlc3QuZGF0ZS5hZGQoMSwgJ21pbnV0ZScpOyAvLyBhZnRlciBsb25nIGRlYmF0ZSwgb25lIG1pbnV0ZSBpcyBtYXhcblx0XHRcdGlmIChcblx0XHRcdFx0bGF0ZXN0LmRhdGUuaXNBZnRlcihub3cpICYmXG5cdFx0XHRcdCFjb25maXJtKFxuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn6L+RMeWIhumSn+WGhSAnLCAn6L+RMeWIhumQmOWFpyAnKSArXG5cdFx0XHRcdFx0XHRsYXRlc3QudHlwZSArXG5cdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJyDmqKHmnb/lt7Looqvlj5Hlh7rjgIJcXG7mmK/lkKbnu6fnu63vvJ8nLCAnIOaooeadv+W3suiiq+eZvOWHuuOAglxcbuaYr+WQpue5vOe6jO+8nycpXG5cdFx0XHRcdClcblx0XHRcdCkge1xuXHRcdFx0XHRzdGF0ZWxlbS5lcnJvcih3aW5kb3cud2dVTFMoJ+eUqOaIt+WPlua2iCcsICfkvb/nlKjogIXlj5bmtognKSk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdC8vIGJ1aWxkIHRoZSBlZGl0IHN1bW1hcnlcblx0XHRcdC8vIEZ1bmN0aW9uIHRvIGhhbmRsZSBnZW5lcmF0aW9uIG9mIHN1bW1hcnkgcHJlZml4IGZvciBjdXN0b20gdGVtcGxhdGVzXG5cdFx0XHRjb25zdCBjdXN0b21Qcm9jZXNzID0gKHRlbXBsYXRlKSA9PiB7XG5cdFx0XHRcdFt0ZW1wbGF0ZV0gPSB0ZW1wbGF0ZS5zcGxpdCgnfCcpO1xuXHRcdFx0XHRsZXQgcHJlZml4O1xuXHRcdFx0XHRzd2l0Y2ggKHRlbXBsYXRlLnNsaWNlKC0xKSkge1xuXHRcdFx0XHRcdGNhc2UgJzEnOlxuXHRcdFx0XHRcdFx0cHJlZml4ID0gJ+azqOaEjyc7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRjYXNlICcyJzpcblx0XHRcdFx0XHRcdHByZWZpeCA9ICforablkYonO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0Ly8gZmFsbHMgdGhyb3VnaFxuXHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHRwcmVmaXggPSAn5o+Q6YaSJztcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBgJHtwcmVmaXh977yaJHtNb3JlYml0cy5zdHJpbmcudG9VcHBlckNhc2VGaXJzdENoYXIobWVzc2FnZURhdGEubGFiZWwpfWA7XG5cdFx0XHR9O1xuXHRcdFx0bGV0IHN1bW1hcnk7XG5cdFx0XHRpZiAocGFyYW1zLm1haW5fZ3JvdXAgPT09ICdjdXN0b20nKSB7XG5cdFx0XHRcdHN1bW1hcnkgPSBjdXN0b21Qcm9jZXNzKHBhcmFtcy5zdWJfZ3JvdXApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Ly8gTm9ybWFsaXplIGtpdGNoZW5zaW5rIHRvIHRoZSAxLTIgc3R5bGVcblx0XHRcdFx0aWYgKHBhcmFtcy5tYWluX2dyb3VwID09PSAna2l0Y2hlbnNpbmsnICYmICEvXkQrJC8udGVzdChwYXJhbXMuc3ViX2dyb3VwKSkge1xuXHRcdFx0XHRcdGxldCBzdWIgPSBwYXJhbXMuc3ViX2dyb3VwLnNsaWNlKC0xKTtcblx0XHRcdFx0XHRpZiAoc3ViID09PSAnbScpIHtcblx0XHRcdFx0XHRcdHN1YiA9IHBhcmFtcy5zdWJfZ3JvdXAuc2xpY2UoLTMpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHQvLyBEb24ndCBvdmVyd3JpdGUgdXctM3JyLCB0ZWNobmljYWxseSB1bm5lY2Vzc2FyeVxuXHRcdFx0XHRcdGlmICgvXFxkLy50ZXN0KHN1YikpIHtcblx0XHRcdFx0XHRcdHBhcmFtcy5tYWluX2dyb3VwID0gYGxldmVsJHtzdWJ9YDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gc2luZ2xldCB8fCBsZXZlbDEtMiwgbm8gbmVlZCB0byAvXlxcRCskLy50ZXN0KHBhcmFtcy5tYWluX2dyb3VwKVxuXHRcdFx0XHRzdW1tYXJ5ID1cblx0XHRcdFx0XHRtZXNzYWdlRGF0YS5zdW1tYXJ5IHx8IChtZXNzYWdlRGF0YVtwYXJhbXMubWFpbl9ncm91cF0gJiYgbWVzc2FnZURhdGFbcGFyYW1zLm1haW5fZ3JvdXBdLnN1bW1hcnkpO1xuXHRcdFx0XHQvLyBOb3QgaW4gVHdpbmtsZS53YXJuLm1lc3NhZ2VzLCBhc3N1bWUgY3VzdG9tIHRlbXBsYXRlXG5cdFx0XHRcdHN1bW1hcnkgfHw9IGN1c3RvbVByb2Nlc3MocGFyYW1zLnN1Yl9ncm91cCk7XG5cdFx0XHRcdGlmIChtZXNzYWdlRGF0YS5zdXBwcmVzc0FydGljbGVJblN1bW1hcnkgIT09IHRydWUgJiYgcGFyYW1zLmFydGljbGUpIHtcblx0XHRcdFx0XHRpZiAocGFyYW1zLnN1Yl9ncm91cCA9PT0gJ3V3LWFpdicpIHtcblx0XHRcdFx0XHRcdC8vIHRoZXNlIHRlbXBsYXRlcyByZXF1aXJlIGEgdXNlcm5hbWVcblx0XHRcdFx0XHRcdHN1bW1hcnkgKz0gYO+8iCR7d2luZG93LndnVUxTKCflr7nkuo4nLCAn5bCN5pa8Jyl9W1tVc2VyOiR7cGFyYW1zLmFydGljbGV9XV3vvIlgO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAocGFyYW1zLnN1Yl9ncm91cCA9PT0gJ3V3LWJpdGUnKSB7XG5cdFx0XHRcdFx0XHQvLyB0aGlzIHRlbXBsYXRlIHJlcXVpcmVzIGEgdXNlcm5hbWVcblx0XHRcdFx0XHRcdHN1bW1hcnkgKz0gYO+8jCR7d2luZG93LndnVUxTKCfkuo4nLCAn5pa8Jyl9W1tVc2VyIHRhbGs6JHtwYXJhbXMuYXJ0aWNsZX1dXWA7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHN1bW1hcnkgKz0gYCR7d2luZG93LndnVUxTKCfvvIzkuo5bWycsICfvvIzmlrxbWycpICsgcGFyYW1zLmFydGljbGV9XV1gO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cGFnZW9iai5zZXRFZGl0U3VtbWFyeShzdW1tYXJ5KTtcblx0XHRcdHBhZ2VvYmouc2V0Q2hhbmdlVGFncyhUd2lua2xlLmNoYW5nZVRhZ3MpO1xuXHRcdFx0cGFnZW9iai5zZXRXYXRjaGxpc3QoVHdpbmtsZS5nZXRQcmVmKCd3YXRjaFdhcm5pbmdzJykpO1xuXHRcdFx0Ly8gR2V0IGFjdHVhbCB3YXJuaW5nIHRleHRcblx0XHRcdGNvbnN0IHdhcm5pbmdUZXh0ID0gVHdpbmtsZS53YXJuLmNhbGxiYWNrcy5nZXRXYXJuaW5nV2lraXRleHQoXG5cdFx0XHRcdHBhcmFtcy5zdWJfZ3JvdXAsXG5cdFx0XHRcdHBhcmFtcy5hcnRpY2xlLFxuXHRcdFx0XHRwYXJhbXMucmVhc29uLFxuXHRcdFx0XHRwYXJhbXMubWFpbl9ncm91cCA9PT0gJ2N1c3RvbSdcblx0XHRcdCk7XG5cdFx0XHRsZXQgc2VjdGlvbkV4aXN0cyA9IGZhbHNlO1xuXHRcdFx0bGV0IHNlY3Rpb25OdW1iZXIgPSAwO1xuXHRcdFx0Ly8gT25seSBjaGVjayBzZWN0aW9ucyBpZiB0aGVyZSBhcmUgc2VjdGlvbnMgb3IgdGhlcmUncyBhIGNoYW5jZSB3ZSB3b24ndCBjcmVhdGUgb3VyIG93blxuXHRcdFx0aWYgKCFtZXNzYWdlRGF0YS5oZWFkaW5nICYmIHRleHQubGVuZ3RoKSB7XG5cdFx0XHRcdC8vIEdldCBhbGwgc2VjdGlvbnNcblx0XHRcdFx0Y29uc3Qgc2VjdGlvbnMgPSB0ZXh0Lm1hdGNoKC9eKD09KikuK1xcMS9nbSk7XG5cdFx0XHRcdGlmIChzZWN0aW9ucyAmJiBzZWN0aW9ucy5sZW5ndGggIT09IDApIHtcblx0XHRcdFx0XHQvLyBGaW5kIHRoZSBpbmRleCBvZiB0aGUgc2VjdGlvbiBoZWFkZXIgaW4gcXVlc3Rpb25cblx0XHRcdFx0XHRjb25zdCBkYXRlSGVhZGVyUmVnZXggPSBub3cubW9udGhIZWFkZXJSZWdleCgpO1xuXHRcdFx0XHRcdHNlY3Rpb25OdW1iZXIgPSAwO1xuXHRcdFx0XHRcdC8vIEZpbmQgdGhpcyBtb250aCdzIHNlY3Rpb24gYW1vbmcgTDIgc2VjdGlvbnMsIHByZWZlcnJpbmcgdGhlIGJvdHRvbS1tb3N0XG5cdFx0XHRcdFx0c2VjdGlvbkV4aXN0cyA9IHNlY3Rpb25zLnJldmVyc2UoKS5zb21lKChzZWMsIGlkeCkgPT4ge1xuXHRcdFx0XHRcdFx0cmV0dXJuIChcblx0XHRcdFx0XHRcdFx0L14oPT0pW149XS4rXFwxL20udGVzdChzZWMpICYmXG5cdFx0XHRcdFx0XHRcdGRhdGVIZWFkZXJSZWdleC50ZXN0KHNlYykgJiZcblx0XHRcdFx0XHRcdFx0dHlwZW9mIChzZWN0aW9uTnVtYmVyID0gc2VjdGlvbnMubGVuZ3RoIC0gMSAtIGlkeCkgPT09ICdudW1iZXInXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRpZiAoc2VjdGlvbkV4aXN0cykge1xuXHRcdFx0XHQvLyBhcHBlbmQgdG8gZXhpc3Rpbmcgc2VjdGlvblxuXHRcdFx0XHRwYWdlb2JqLnNldFBhZ2VTZWN0aW9uKHNlY3Rpb25OdW1iZXIgKyAxKTtcblx0XHRcdFx0cGFnZW9iai5zZXRBcHBlbmRUZXh0KGBcXG5cXG4ke3dhcm5pbmdUZXh0fWApO1xuXHRcdFx0XHRwYWdlb2JqLmFwcGVuZCgpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aWYgKG1lc3NhZ2VEYXRhLmhlYWRpbmcpIHtcblx0XHRcdFx0XHQvLyBjcmVhdGUgbmV3IHNlY3Rpb25cblx0XHRcdFx0XHRwYWdlb2JqLnNldE5ld1NlY3Rpb25UaXRsZShtZXNzYWdlRGF0YS5oZWFkaW5nKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRNb3JlYml0cy5zdGF0dXMuaW5mbyhcblx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5L+h5oGvJywgJ+izh+ioiicpLFxuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfmnKrmib7liLDlvZPmnIjnmoTkuoznuqfmoIfpopjvvIzlsIbliJvlu7rmlrDnmoQnLCAn5pyq5om+5Yiw55W25pyI55qE5LqM57Sa5qiZ6aGM77yM5bCH5bu656uL5paw55qEJylcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdHBhZ2VvYmouc2V0TmV3U2VjdGlvblRpdGxlKG5vdy5tb250aEhlYWRlcigwKSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0cGFnZW9iai5zZXROZXdTZWN0aW9uVGV4dCh3YXJuaW5nVGV4dCk7XG5cdFx0XHRcdHBhZ2VvYmoubmV3U2VjdGlvbigpO1xuXHRcdFx0fVxuXHRcdH0sXG5cdH07XG5cdFR3aW5rbGUud2Fybi5jYWxsYmFjay5ldmFsdWF0ZSA9IChlKSA9PiB7XG5cdFx0Y29uc3QgdXNlclRhbGtQYWdlID0gYFVzZXJfdGFsazoke3JlbGV2YW50VXNlck5hbWV9YDtcblx0XHQvLyByZWFzb24sIG1haW5fZ3JvdXAsIHN1Yl9ncm91cCwgYXJ0aWNsZVxuXHRcdGNvbnN0IHBhcmFtcyA9IE1vcmViaXRzLnF1aWNrRm9ybS5nZXRJbnB1dERhdGEoZS50YXJnZXQpO1xuXHRcdGlmIChwYXJhbXMuYXJ0aWNsZSkge1xuXHRcdFx0aWYgKC9odHRwcz86XFwvXFwvLy50ZXN0KHBhcmFtcy5hcnRpY2xlKSkge1xuXHRcdFx0XHR2b2lkIG13Lm5vdGlmeSh3aW5kb3cud2dVTFMoJ+KAnOmhtemdoumTvuaOpeKAneS4jeiDveS9v+eUqOe9keWdgOOAgicsICfjgIzpoIHpnaLpgKPntZDjgI3kuI3og73kvb/nlKjntrLlnYDjgIInKSwge1xuXHRcdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0XHR0YWc6ICd3YXJuJyxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdHRyeSB7XG5cdFx0XHRcdGNvbnN0IGFydGljbGUgPSBuZXcgbXcuVGl0bGUocGFyYW1zLmFydGljbGUpO1xuXHRcdFx0XHRwYXJhbXMuYXJ0aWNsZSA9IGFydGljbGUuZ2V0UHJlZml4ZWRUZXh0KCk7XG5cdFx0XHRcdGlmIChhcnRpY2xlLmdldEZyYWdtZW50KCkpIHtcblx0XHRcdFx0XHRwYXJhbXMuYXJ0aWNsZSArPSBgIyR7YXJ0aWNsZS5nZXRGcmFnbWVudCgpfWA7XG5cdFx0XHRcdH1cblx0XHRcdH0gY2F0Y2gge1xuXHRcdFx0XHRhbGVydChcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn4oCc6aG16Z2i6ZO+5o6l4oCd5LiN5ZCI5rOV77yM5LuF6IO96L6T5YWl5LiA5Liq6aG16Z2i5ZCN56ew77yM5Yu/5L2/55So572R5Z2A44CBW1sgXV3vvIzlj6/kvb/nlKhTcGVjaWFsOkRpZmbjgIInLFxuXHRcdFx0XHRcdFx0J+OAjOmggemdoumAo+e1kOOAjeS4jeWQiOazle+8jOWDheiDvei8uOWFpeS4gOWAi+mggemdouWQjeeose+8jOWLv+S9v+eUqOe2suWdgOOAgVtbIF1d77yM5Y+v5L2/55SoU3BlY2lhbDpEaWZm44CCJ1xuXHRcdFx0XHRcdClcblx0XHRcdFx0KTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdH1cblx0XHQvLyBUaGUgYXV0b2xldmVsIG9wdGlvbiB3aWxsIGFscmVhZHkga25vdyBieSBub3cgaWYgYSB1c2VyIHRhbGsgcGFnZVxuXHRcdC8vIGlzIGEgY3Jvc3MtbmFtZXNwYWNlIHJlZGlyZWN0ICh2aWEgISFUd2lua2xlLndhcm4udGFsa3BhZ2VPYmopLCBzb1xuXHRcdC8vIHRlY2huaWNhbGx5IHdlIGNvdWxkIGFsZXJ0IGFuIGVycm9yIGhlcmUsIGJ1dCB0aGUgdXNlciB3aWxsIGhhdmVcblx0XHQvLyBhbHJlYWR5IGlnbm9yZWQgdGhlIGJvbGQgcmVkIGVycm9yIGFib3ZlLiBNb3Jlb3ZlciwgdGhleSBwcm9iYWJseVxuXHRcdC8vICpkb24ndCogd2FudCB0byBhY3R1YWxseSBpc3N1ZSBhIHdhcm5pbmcsIHNvIHRoZSBlcnJvciBoYW5kbGluZ1xuXHRcdC8vIGFmdGVyIHRoZSBmb3JtIGlzIHN1Ym1pdHRlZCBpcyBwcm9iYWJseSBwcmVmZXJhYmxlXG5cdFx0Ly8gRmluZCB0aGUgc2VsZWN0ZWQgPG9wdGlvbj4gZWxlbWVudCBzbyB3ZSBjYW4gZmV0Y2ggdGhlIGRhdGEgc3RydWN0dXJlXG5cdFx0Y29uc3QgJHNlbGVjdGVkRWwgPSAkKGUudGFyZ2V0LnN1Yl9ncm91cCkuZmluZChgb3B0aW9uW3ZhbHVlPVwiJHskKGUudGFyZ2V0LnN1Yl9ncm91cCkudmFsKCl9XCJdYCk7XG5cdFx0cGFyYW1zLm1lc3NhZ2VEYXRhID0gJHNlbGVjdGVkRWwuZGF0YSgnbWVzc2FnZURhdGEnKTtcblx0XHRpZiAocGFyYW1zLm1lc3NhZ2VEYXRhID09PSB1bmRlZmluZWQpIHtcblx0XHRcdHZvaWQgbXcubm90aWZ5KHdpbmRvdy53Z1VMUygn6K+36YCJ5oup6K2m5ZGK5qih5p2/44CCJywgJ+iri+mBuOaTh+itpuWRiuaooeadv+OAgicpLCB7XG5cdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0dGFnOiAnd2FybicsXG5cdFx0XHR9KTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0TW9yZWJpdHMuc2ltcGxlV2luZG93LnNldEJ1dHRvbnNFbmFibGVkKGZhbHNlKTtcblx0XHRNb3JlYml0cy5zdGF0dXMuaW5pdChlLnRhcmdldCk7XG5cdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQucmVkaXJlY3QgPSB1c2VyVGFsa1BhZ2U7XG5cdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQubm90aWNlID0gd2luZG93LndnVUxTKCforablkYrlrozmiJDvvIzlsIblnKjlh6Dnp5LlkI7liLfmlrAnLCAn6K2m5ZGK5a6M5oiQ77yM5bCH5Zyo5bm+56eS5b6M6YeN5paw5pW055CGJyk7XG5cdFx0Y29uc3QgcWl1d2VuX3BhZ2UgPSBuZXcgTW9yZWJpdHMud2lraS5wYWdlKHVzZXJUYWxrUGFnZSwgd2luZG93LndnVUxTKCfnlKjmiLforqjorrrpobXkv67mlLknLCAn5L2/55So6ICF6KiO6KuW6aCB5L+u5pS5JykpO1xuXHRcdHFpdXdlbl9wYWdlLnNldENhbGxiYWNrUGFyYW1ldGVycyhwYXJhbXMpO1xuXHRcdHFpdXdlbl9wYWdlLnNldEZvbGxvd1JlZGlyZWN0KHRydWUsIGZhbHNlKTtcblx0XHRxaXV3ZW5fcGFnZS5sb2FkKFR3aW5rbGUud2Fybi5jYWxsYmFja3MubWFpbik7XG5cdH07XG5cdFR3aW5rbGUuYWRkSW5pdENhbGxiYWNrKFR3aW5rbGUud2FybiwgJ3dhcm4nKTtcbn0pKGpRdWVyeSk7XG5cbmV4cG9ydCB7fTtcbiIsICIvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10cy1jb21tZW50XG4vLyBAdHMtbm9jaGVja1xuaW1wb3J0IHthcGl9IGZyb20gJy4vYXBpJztcbmltcG9ydCB7Z2VuZXJhdGVBcnJheX0gZnJvbSAnZXh0LmdhZGdldC5VdGlsJztcblxuLyohIFR3aW5rbGUuanMgLSB0d2lua2xlYmxvY2suanMgKi9cbihmdW5jdGlvbiB0d2lua2xlYmxvY2soJCkge1xuXHRjb25zdCAkYm9keSA9ICQoJ2JvZHknKTtcblx0bGV0IHJlbGV2YW50VXNlck5hbWU7XG5cdGxldCBibG9ja2VkVXNlck5hbWU7XG5cdGNvbnN0IG1lbnVGb3JtYXR0ZWROYW1lc3BhY2VzID0ge1xuXHRcdC4uLm13LmNvbmZpZy5nZXQoJ3dnRm9ybWF0dGVkTmFtZXNwYWNlcycpLFxuXHR9O1xuXHRtZW51Rm9ybWF0dGVkTmFtZXNwYWNlc1swXSA9IHdpbmRvdy53Z1VMUygn77yI5p2h55uu77yJJywgJ++8iOaineebru+8iScpO1xuXHRjb25zdCBibG9ja0FjdGlvblRleHQgPSB7XG5cdFx0YmxvY2s6IHdpbmRvdy53Z1VMUygn5bCB56aBJywgJ+WwgemOlicpLFxuXHRcdHJlYmxvY2s6IHdpbmRvdy53Z1VMUygn6YeN5paw5bCB56aBJywgJ+mHjeaWsOWwgemOlicpLFxuXHRcdHVuYmxvY2s6IHdpbmRvdy53Z1VMUygn6Kej6Zmk5bCB56aBJywgJ+ino+mZpOWwgemOlicpLFxuXHR9O1xuXHQvKipcblx0ICogdHdpbmtsZWJsb2NrLmpzOiBCbG9jayBtb2R1bGVcblx0ICogTW9kZSBvZiBpbnZvY2F0aW9uOiBUYWIgKFwiQmxvY2tcIilcblx0ICogQWN0aXZlIG9uOiBBbnkgcGFnZSB3aXRoIHJlbGV2YW50IHVzZXIgbmFtZSAodXNlcnNwYWNlLCBjb250cmlicywgZXRjLilcblx0ICovXG5cdFR3aW5rbGUuYmxvY2sgPSAoKSA9PiB7XG5cdFx0cmVsZXZhbnRVc2VyTmFtZSA9IG13LmNvbmZpZy5nZXQoJ3dnUmVsZXZhbnRVc2VyTmFtZScpO1xuXHRcdC8vIHNob3VsZCBzaG93IG9uIENvbnRyaWJ1dGlvbnMgb3IgQmxvY2sgcGFnZXMsIGFueXdoZXJlIHRoZXJlJ3MgYSByZWxldmFudCB1c2VyXG5cdFx0Ly8gSWdub3JlIHJhbmdlcyB3aWRlciB0aGFuIHRoZSBDSURSIGxpbWl0XG5cdFx0Ly8gRW5hYmxlIGZvciBub24tYWRtaW5zXG5cdFx0aWYgKFxuXHRcdFx0KE1vcmViaXRzLnVzZXJJc1N5c29wIHx8ICFtdy51dGlsLmlzSVBBZGRyZXNzKHJlbGV2YW50VXNlck5hbWUsIHRydWUpKSAmJlxuXHRcdFx0cmVsZXZhbnRVc2VyTmFtZSAmJlxuXHRcdFx0KCFNb3JlYml0cy5pcC5pc1JhbmdlKHJlbGV2YW50VXNlck5hbWUpIHx8IE1vcmViaXRzLmlwLnZhbGlkQ0lEUihyZWxldmFudFVzZXJOYW1lKSlcblx0XHQpIHtcblx0XHRcdFR3aW5rbGUuYWRkUG9ydGxldExpbmsoXG5cdFx0XHRcdFR3aW5rbGUuYmxvY2suY2FsbGJhY2ssXG5cdFx0XHRcdHdpbmRvdy53Z1VMUygn5bCB56aBJywgJ+WwgemOlicpLFxuXHRcdFx0XHQndHctYmxvY2snLFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ+WwgeemgeebuOWFs+eUqOaItycsICflsIHpjpbnm7jpl5zkvb/nlKjogIUnKVxuXHRcdFx0KTtcblx0XHR9XG5cdH07XG5cdFR3aW5rbGUuYmxvY2suY2FsbGJhY2sgPSAoKSA9PiB7XG5cdFx0aWYgKFxuXHRcdFx0cmVsZXZhbnRVc2VyTmFtZSA9PT0gbXcuY29uZmlnLmdldCgnd2dVc2VyTmFtZScpICYmXG5cdFx0XHQhY29uZmlybShcblx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdCfmgqjljbPlsIblr7noh6rlt7HmiafooYzlsIHnpoHnm7jlhbPmk43kvZzvvIHnoa7orqTopoHnu6fnu63lkJfvvJ8nLFxuXHRcdFx0XHRcdCfmgqjljbPlsIflsI3oh6rlt7Hln7fooYzlsIHpjpbnm7jpl5zmk43kvZzvvIHnorroqo3opoHnubznuozll47vvJ8nXG5cdFx0XHRcdClcblx0XHRcdClcblx0XHQpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0VHdpbmtsZS5ibG9jay5jdXJyZW50QmxvY2tJbmZvID0gdW5kZWZpbmVkO1xuXHRcdFR3aW5rbGUuYmxvY2suZmllbGRfYmxvY2tfb3B0aW9ucyA9IHt9O1xuXHRcdFR3aW5rbGUuYmxvY2suZmllbGRfdGVtcGxhdGVfb3B0aW9ucyA9IHt9O1xuXHRcdGNvbnN0IFdpbmRvdyA9IG5ldyBNb3JlYml0cy5zaW1wbGVXaW5kb3coNjUwLCA1MzApO1xuXHRcdC8vIG5lZWQgdG8gYmUgdmVyYm9zZSBhYm91dCB3aG8gd2UncmUgYmxvY2tpbmdcblx0XHRXaW5kb3cuc2V0VGl0bGUoXG5cdFx0XHR3aW5kb3cud2dVTFMoJ+WwgeemgeaIluWQkScsICflsIHpjpbmiJblkJEnKSArIHJlbGV2YW50VXNlck5hbWUgKyB3aW5kb3cud2dVTFMoJ+WPkeWHuuWwgeemgeaooeadvycsICfnmbzlh7rlsIHpjpbmqKHmnb8nKVxuXHRcdCk7XG5cdFx0V2luZG93LnNldFNjcmlwdE5hbWUoJ1R3aW5rbGUnKTtcblx0XHRXaW5kb3cuYWRkRm9vdGVyTGluayh3aW5kb3cud2dVTFMoJ+WwgeemgeaWuemSiCcsICflsIHpjpbmlrnph50nKSwgJ1FXOkJMT0NLJyk7XG5cdFx0V2luZG93LmFkZEZvb3Rlckxpbmsod2luZG93LndnVUxTKCflsIHnpoHorr7nva4nLCAn5bCB6Y6W6Kit5a6aJyksICdIOlRXL1BSRUYjYmxvY2snKTtcblx0XHRXaW5kb3cuYWRkRm9vdGVyTGluayh3aW5kb3cud2dVTFMoJ1R3aW5rbGXluK7liqknLCAnVHdpbmtsZeiqquaYjicpLCAnSDpUVy9ET0MjYmxvY2snKTtcblx0XHRjb25zdCBmb3JtID0gbmV3IE1vcmViaXRzLnF1aWNrRm9ybShUd2lua2xlLmJsb2NrLmNhbGxiYWNrLmV2YWx1YXRlKTtcblx0XHRjb25zdCBhY3Rpb25maWVsZCA9IGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdmaWVsZCcsXG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmk43kvZznsbvlnosnLCAn5pON5L2c6aGe5YilJyksXG5cdFx0fSk7XG5cdFx0YWN0aW9uZmllbGQuYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRuYW1lOiAnYWN0aW9udHlwZScsXG5cdFx0XHRldmVudDogVHdpbmtsZS5ibG9jay5jYWxsYmFjay5jaGFuZ2VfYWN0aW9uLFxuXHRcdFx0bGlzdDogW1xuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5bCB56aB55So5oi3JywgJ+WwgemOluS9v+eUqOiAhScpLFxuXHRcdFx0XHRcdHZhbHVlOiAnYmxvY2snLFxuXHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfnlKjpgInmi6nnmoTpgInpobnlhajnq5nlsIHnpoHnm7jlhbPnlKjmiLfvvIzoi6XmnKrli77pgInpg6jliIblsIHnpoHliJnkuLrlhajnq5nlsIHnpoHjgIInLFxuXHRcdFx0XHRcdFx0J+eUqOmBuOaTh+eahOmBuOmgheWFqOermeWwgemOluebuOmXnOS9v+eUqOiAhe+8jOiLpeacquWLvumBuOmDqOWIhuWwgemOluWJh+eCuuWFqOermeWwgemOluOAgidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdGhpZGRlbjogIU1vcmViaXRzLnVzZXJJc1N5c29wLFxuXHRcdFx0XHRcdGNoZWNrZWQ6IE1vcmViaXRzLnVzZXJJc1N5c29wLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6YOo5YiG5bCB56aBJywgJ+mDqOWIhuWwgemOlicpLFxuXHRcdFx0XHRcdHZhbHVlOiAncGFydGlhbCcsXG5cdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKCflkK/nlKjpg6jliIblsIHnpoHlj4rpg6jliIblsIHnpoHmqKHmnb/jgIInLCAn5ZWf55So6YOo5YiG5bCB6Y6W5Y+K6YOo5YiG5bCB6Y6W5qih5p2/44CCJyksXG5cdFx0XHRcdFx0aGlkZGVuOiAhTW9yZWJpdHMudXNlcklzU3lzb3AsXG5cdFx0XHRcdFx0Y2hlY2tlZDogVHdpbmtsZS5nZXRQcmVmKCdkZWZhdWx0VG9QYXJ0aWFsQmxvY2tzJyksIC8vIE92ZXJyaWRkZW4gaWYgYWxyZWFkeSBibG9ja2VkXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfliqDlhaXlsIHnpoHmqKHmnb/liLDnlKjmiLforqjorrrpobUnLCAn5Yqg5YWl5bCB6Y6W5qih5p2/5Yiw5L2/55So6ICF6KiO6KuW6aCBJyksXG5cdFx0XHRcdFx0dmFsdWU6ICd0ZW1wbGF0ZScsXG5cdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+iLpeaJp+ihjOWwgeemgeeahOeuoeeQhuWRmOW/mOiusOWPkeWHuuWwgeemgeaooeadv++8jOaIluS9oOWwgeemgeS6hueUqOaIt+iAjOayoeaciee7meWFtuWPkeWHuuaooeadv++8jOWImeS9oOWPr+S7peeUqOatpOadpeWPkeWHuuWQiOmAgueahOaooeadv+OAguWLvumAiemDqOWIhuWwgeemgeS7peS9v+eUqOmDqOWIhuWwgeemgeaooeadv+OAgicsXG5cdFx0XHRcdFx0XHQn6Iul5Z+36KGM5bCB6Y6W55qE566h55CG5ZOh5b+Y6KiY55m85Ye65bCB6Y6W5qih5p2/77yM5oiW5L2g5bCB6Y6W5LqG5L2/55So6ICF6ICM5rKS5pyJ57Wm5YW255m85Ye65qih5p2/77yM5YmH5L2g5Y+v5Lul55So5q2k5L6G55m85Ye65ZCI6YGp55qE5qih5p2/44CC5Yu+6YG46YOo5YiG5bCB6Y6W5Lul5L2/55So6YOo5YiG5bCB6Y6W5qih5p2/44CCJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0Ly8gRGlzYWxsb3cgd2hlbiB2aWV3aW5nIHRoZSBibG9jayBkaWFsb2cgb24gYW4gSVAgcmFuZ2Vcblx0XHRcdFx0XHRoaWRkZW46ICFNb3JlYml0cy51c2VySXNTeXNvcCxcblx0XHRcdFx0XHRjaGVja2VkOiBNb3JlYml0cy51c2VySXNTeXNvcCAmJiAhTW9yZWJpdHMuaXAuaXNSYW5nZShyZWxldmFudFVzZXJOYW1lKSxcblx0XHRcdFx0XHRkaXNhYmxlZDogTW9yZWJpdHMuaXAuaXNSYW5nZShyZWxldmFudFVzZXJOYW1lKSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+agh+iusOeUqOaIt+mhtScsICfmqJnoqJjkvb/nlKjogIXpoIHpnaInKSxcblx0XHRcdFx0XHR2YWx1ZTogJ3RhZycsXG5cdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+WwhueUqOaIt+mhteabv+aNouaIkOebuOWFs+eahOagh+iusOaooeadv++8jOS7hemZkOawuOS5heWwgeemgeS9v+eUqOOAgicsXG5cdFx0XHRcdFx0XHQn5bCH5L2/55So6ICF6aCB6Z2i5pu/5o+b5oiQ55u46Zec55qE5qiZ6KiY5qih5p2/77yM5YOF6ZmQ5rC45LmF5bCB6Y6W5L2/55So44CCJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0aGlkZGVuOiB0cnVlLFxuXHRcdFx0XHRcdGNoZWNrZWQ6ICFNb3JlYml0cy51c2VySXNTeXNvcCxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+S/neaKpOeUqOaIt+mhtScsICfkv53orbfkvb/nlKjogIXpoIHpnaInKSxcblx0XHRcdFx0XHR2YWx1ZTogJ3Byb3RlY3QnLFxuXHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUygn5YWo5L+d5oqk55So5oi36aG177yM5LuF6ZmQ5rC45LmF5bCB56aB5L2/55So44CCJywgJ+WFqOS/neitt+S9v+eUqOiAhemggemdou+8jOWDhemZkOawuOS5heWwgemOluS9v+eUqOOAgicpLFxuXHRcdFx0XHRcdGhpZGRlbjogdHJ1ZSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+ino+mZpOWwgeemgeeUqOaItycsICfop6PpmaTlsIHpjpbkvb/nlKjogIUnKSxcblx0XHRcdFx0XHR2YWx1ZTogJ3VuYmxvY2snLFxuXHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUygn6Kej6Zmk5bCB56aB55u45YWz55So5oi344CCJywgJ+ino+mZpOWwgemOluebuOmXnOS9v+eUqOiAheOAgicpLFxuXHRcdFx0XHRcdGhpZGRlbjogIU1vcmViaXRzLnVzZXJJc1N5c29wLFxuXHRcdFx0XHR9LFxuXHRcdFx0XSxcblx0XHR9KTtcblx0XHQvKipcblx0XHQgKiBBZGQgb3B0aW9uIGZvciBJUHY2IHJhbmdlcyBzbWFsbGVyIHRoYW4gLzY0IHRvIHVwZ3JhZGUgdG8gdGhlIDY0XG5cdFx0ICogQ0lEUi4gVGhpcyBpcyBvbmUgb2YgdGhlIGZldyBwbGFjZXMgd2hlcmUgd2Ugd2FudFxuXHRcdCAqIHdnUmVsZXZhbnRVc2VyTmFtZSBzaW5jZSB0aGlzIGRlcGVuZHMgZW50aXJlbHkgb24gdGhlIG9yaWdpbmFsIHVzZXIuXG5cdFx0ICogSW4gdGhlb3J5LCB3ZSBzaG91bGRuJ3QgdXNlIE1vcmViaXRzLmlwLmdldDY0IGhlcmUgc2luY2Ugc2luY2Ugd2Ugd2FudFxuXHRcdCAqIHRvIGV4Y2x1ZGUgZnVuY3Rpb25hbGx5LWVxdWl2YWxlbnQgLzY0cy4gIFRoYXQnZCBiZTpcblx0XHQgKiAvLyBpZiAobXcudXRpbC5pc0lQdjZBZGRyZXNzKG13LmNvbmZpZy5nZXQoJ3dnUmVsZXZhbnRVc2VyTmFtZScpLCB0cnVlKSAmJlxuXHRcdCAqIC8vIChtdy51dGlsLmlzSVB2NkFkZHJlc3MobXcuY29uZmlnLmdldCgnd2dSZWxldmFudFVzZXJOYW1lJykpIHx8IHBhcnNlSW50KG13LmNvbmZpZy5nZXQoJ3dnUmVsZXZhbnRVc2VyTmFtZScpLnJlcGxhY2UoL14oLis/KVxcLz8oXFxkezEsM30pPyQvLCAnJDInKSwgMTApID4gNjQpKSB7XG5cdFx0ICogSW4gcHJhY3RpY2UsIHRob3VnaCwgc2luY2UgZnVuY3Rpb25hbGx5LWVxdWl2YWxlbnQgcmFuZ2VzIGFyZVxuXHRcdCAqIChtaXMpdHJlYXRlZCBhcyBzZXBhcmF0ZSBieSBNZWRpYVdpa2kncyBsb2dnaW5nLFxuXHRcdCAqIHVzaW5nIE1vcmViaXRzLmlwLmdldDY0IHByb3ZpZGVzIGEgbW9kaWN1bSBvZiByZWxpZWYgaW4gdGhpc2UgY2FzZS5cblx0XHQgKi9cblx0XHRjb25zdCBzaXh0eUZvdXIgPSBNb3JlYml0cy5pcC5nZXQ2NChtdy5jb25maWcuZ2V0KCd3Z1JlbGV2YW50VXNlck5hbWUnKSk7XG5cdFx0aWYgKHNpeHR5Rm91ciAmJiBzaXh0eUZvdXIgIT09IG13LmNvbmZpZy5nZXQoJ3dnUmVsZXZhbnRVc2VyTmFtZScpKSB7XG5cdFx0XHRjb25zdCBibG9jazY0ZmllbGQgPSBmb3JtLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdmaWVsZCcsXG5cdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+i9rOaNouS4ui82NOauteWwgeemgScsICfovYnmj5vngrovNjTmrrXlsIHpjpYnKSxcblx0XHRcdFx0bmFtZTogJ2ZpZWxkXzY0Jyxcblx0XHRcdH0pO1xuXHRcdFx0YmxvY2s2NGZpZWxkLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0XHRzdHlsZTogJ21hcmdpbi1ib3R0b206IDAuNWVtJyxcblx0XHRcdFx0bGFiZWw6IFt3Z1VMUygn55u05o6l5bCB56aBLzY05q615pyJ55uK5peg5a6z44CCJywgJ+ebtOaOpeWwgemOli82NOauteacieebiueEoeWus+OAgicpXSxcblx0XHRcdH0pO1xuXHRcdFx0YmxvY2s2NGZpZWxkLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdG5hbWU6ICdibG9jazY0Jyxcblx0XHRcdFx0ZXZlbnQ6IFR3aW5rbGUuYmxvY2suY2FsbGJhY2suY2hhbmdlX2Jsb2NrNjQsXG5cdFx0XHRcdGxpc3Q6IFtcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRjaGVja2VkOiBUd2lua2xlLmdldFByZWYoJ2RlZmF1bHRUb0Jsb2NrNjQnKSxcblx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+aUueaIkOWwgeemgS82NCcsICfmlLnmiJDlsIHpjpYvNjQnKSxcblx0XHRcdFx0XHRcdHZhbHVlOiAnYmxvY2s2NCcsXG5cdFx0XHRcdFx0XHR0b29sdGlwOiBNb3JlYml0cy5pcC5pc1JhbmdlKG13LmNvbmZpZy5nZXQoJ3dnUmVsZXZhbnRVc2VyTmFtZScpKVxuXHRcdFx0XHRcdFx0XHQ/IHdpbmRvdy53Z1VMUygn5bCG5LiN5Lya5Y+R6YCB5qih5p2/6YCa55+l44CCJywgJ+Wwh+S4jeacg+eZvOmAgeaooeadv+mAmuefpeOAgicpXG5cdFx0XHRcdFx0XHRcdDogd2luZG93LndnVUxTKCfku7vkvZXmqKHmnb/lsIbkvJrlj5HpgIHnu5nljp/lp4tJUO+8micsICfku7vkvZXmqKHmnb/lsIfmnIPnmbzpgIHntabljp/lp4tJUO+8micpICtcblx0XHRcdFx0XHRcdFx0XHRtdy5jb25maWcuZ2V0KCd3Z1JlbGV2YW50VXNlck5hbWUnKSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRdLFxuXHRcdFx0fSk7XG5cdFx0fVxuXHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdmaWVsZCcsXG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfpu5jorqQnLCAn6aCQ6KitJyksXG5cdFx0XHRuYW1lOiAnZmllbGRfcHJlc2V0Jyxcblx0XHR9KTtcblx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnZmllbGQnLFxuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5qih5p2/6YCJ6aG5JywgJ+aooeadv+mBuOmghScpLFxuXHRcdFx0bmFtZTogJ2ZpZWxkX3RlbXBsYXRlX29wdGlvbnMnLFxuXHRcdH0pO1xuXHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdmaWVsZCcsXG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflsIHnpoHpgInpobknLCAn5bCB6Y6W6YG46aCFJyksXG5cdFx0XHRuYW1lOiAnZmllbGRfYmxvY2tfb3B0aW9ucycsXG5cdFx0fSk7XG5cdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ2ZpZWxkJyxcblx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+agh+iusOeUqOaIt+mhtScsICfmqJnoqJjkvb/nlKjogIXpoIHpnaInKSxcblx0XHRcdG5hbWU6ICdmaWVsZF90YWdfb3B0aW9ucycsXG5cdFx0fSk7XG5cdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ2ZpZWxkJyxcblx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+ino+mZpOWwgeemgemAiemhuScsICfop6PpmaTlsIHpjpbpgbjpoIUnKSxcblx0XHRcdG5hbWU6ICdmaWVsZF91bmJsb2NrX29wdGlvbnMnLFxuXHRcdH0pO1xuXHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdzdWJtaXQnLFxuXHRcdFx0bGFiZWw6ICfmj5DkuqQnLFxuXHRcdH0pO1xuXHRcdGNvbnN0IHJlc3VsdCA9IGZvcm0ucmVuZGVyKCk7XG5cdFx0V2luZG93LnNldENvbnRlbnQocmVzdWx0KTtcblx0XHRXaW5kb3cuZGlzcGxheSgpO1xuXHRcdHJlc3VsdC5yb290ID0gcmVzdWx0O1xuXHRcdFR3aW5rbGUuYmxvY2suZmV0Y2hVc2VySW5mbygoKSA9PiB7XG5cdFx0XHRpZiAoVHdpbmtsZS5ibG9jay5pc1JlZ2lzdGVyZWQpIHtcblx0XHRcdFx0Y29uc3QgJGZvcm0gPSAkKHJlc3VsdCk7XG5cdFx0XHRcdE1vcmViaXRzLnF1aWNrRm9ybS5zZXRFbGVtZW50VmlzaWJpbGl0eSgkZm9ybS5maW5kKCdbbmFtZT1hY3Rpb250eXBlXVt2YWx1ZT10YWddJykucGFyZW50KCksIHRydWUpO1xuXHRcdFx0XHRpZiAoTW9yZWJpdHMudXNlcklzU3lzb3ApIHtcblx0XHRcdFx0XHRNb3JlYml0cy5xdWlja0Zvcm0uc2V0RWxlbWVudFZpc2liaWxpdHkoXG5cdFx0XHRcdFx0XHQkZm9ybS5maW5kKCdbbmFtZT1hY3Rpb250eXBlXVt2YWx1ZT1wcm90ZWN0XScpLnBhcmVudCgpLFxuXHRcdFx0XHRcdFx0dHJ1ZVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdC8vIFRvZ2dsZSBpbml0aWFsIHBhcnRpYWwgc3RhdGUgZGVwZW5kaW5nIG9uIHByaW9yIGJsb2NrIHR5cGUsXG5cdFx0XHQvLyB3aWxsIG92ZXJyaWRlIHRoZSBkZWZhdWx0VG9QYXJ0aWFsQmxvY2tzIHByZWZcblx0XHRcdGlmIChibG9ja2VkVXNlck5hbWUgPT09IHJlbGV2YW50VXNlck5hbWUpIHtcblx0XHRcdFx0JChyZXN1bHQpXG5cdFx0XHRcdFx0LmZpbmQoJ1tuYW1lPWFjdGlvbnR5cGVdW3ZhbHVlPXBhcnRpYWxdJylcblx0XHRcdFx0XHQucHJvcCgnY2hlY2tlZCcsIFR3aW5rbGUuYmxvY2suY3VycmVudEJsb2NrSW5mby5wYXJ0aWFsID09PSAnJyk7XG5cdFx0XHR9XG5cdFx0XHQvLyBjbGVhbiB1cCBwcmVzZXQgZGF0YSAoZGVmYXVsdHMsIGV0Yy4pLCBkb25lIGV4YWN0bHkgb25jZSwgbXVzdCBiZSBiZWZvcmUgVHdpbmtsZS5ibG9jay5jYWxsYmFjay5jaGFuZ2VfYWN0aW9uIGlzIGNhbGxlZFxuXHRcdFx0VHdpbmtsZS5ibG9jay50cmFuc2Zvcm1CbG9ja1ByZXNldHMoKTtcblx0XHRcdC8vIGluaXQgdGhlIGNvbnRyb2xzIGFmdGVyIHVzZXIgYW5kIGJsb2NrIGluZm8gaGF2ZSBiZWVuIGZldGNoZWRcblx0XHRcdGNvbnN0IGV2dCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdFdmVudCcpO1xuXHRcdFx0ZXZ0LmluaXRFdmVudCgnY2hhbmdlJywgdHJ1ZSwgdHJ1ZSk7XG5cdFx0XHRpZiAocmVzdWx0LmJsb2NrNjQgJiYgcmVzdWx0LmJsb2NrNjQuY2hlY2tlZCkge1xuXHRcdFx0XHQvLyBDYWxscyB0aGUgc2FtZSBjaGFuZ2VfYWN0aW9uIGV2ZW50IG9uY2UgZmluaXNoZWRcblx0XHRcdFx0cmVzdWx0LmJsb2NrNjQuZGlzcGF0Y2hFdmVudChldnQpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmVzdWx0LmFjdGlvbnR5cGVbMF0uZGlzcGF0Y2hFdmVudChldnQpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHR9O1xuXHQvLyBTdG9yZSBmZXRjaGVkIHVzZXIgZGF0YSwgb25seSByZWxldmFudCBpZiBzd2l0Y2hpbmcgSVB2NiB0byBhIC82NFxuXHRUd2lua2xlLmJsb2NrLmZldGNoZWREYXRhID0ge307XG5cdC8vIFByb2Nlc3NlcyB0aGUgZGF0YSBmcm9tIGEgYSBxdWVyeSByZXNwb25zZSwgc2VwYXJhdGVkIGZyb21cblx0Ly8gVHdpbmtsZS5ibG9jay5mZXRjaFVzZXJJbmZvIHRvIGFsbG93IHJlcHJvY2Vzc2luZyBvZiBhbHJlYWR5LWZldGNoZWQgZGF0YVxuXHRUd2lua2xlLmJsb2NrLnByb2Nlc3NVc2VySW5mbyA9IChkYXRhLCBmbikgPT4ge1xuXHRcdGxldCBbYmxvY2tpbmZvXSA9IGRhdGEucXVlcnkuYmxvY2tzO1xuXHRcdGNvbnN0IFt1c2VyaW5mb10gPSBkYXRhLnF1ZXJ5LnVzZXJzO1xuXHRcdC8vIElmIGFuIElQIGlzIGJsb2NrZWQgKmFuZCogcmFuZ2VibG9ja2VkLCB0aGUgYWJvdmUgZmluZHNcblx0XHQvLyB3aGljaGV2ZXIgYmxvY2sgaXMgbW9yZSByZWNlbnQsIG5vdCBuZWNlc3NhcmlseSBjb3JyZWN0LlxuXHRcdC8vIFRocmVlIHNlZW1zLi4uIHVubGlrZWx5XG5cdFx0aWYgKGRhdGEucXVlcnkuYmxvY2tzLmxlbmd0aCA+IDEgJiYgYmxvY2tpbmZvLnVzZXIgIT09IHJlbGV2YW50VXNlck5hbWUpIHtcblx0XHRcdFssIGJsb2NraW5mb10gPSBkYXRhLnF1ZXJ5LmJsb2Nrcztcblx0XHR9XG5cdFx0Ly8gQ2FjaGUgcmVzcG9uc2UsIHVzZWQgd2hlbiB0b2dnbGluZyAvNjQgYmxvY2tzXG5cdFx0VHdpbmtsZS5ibG9jay5mZXRjaGVkRGF0YVt1c2VyaW5mby5uYW1lXSA9IGRhdGE7XG5cdFx0VHdpbmtsZS5ibG9jay5pc1JlZ2lzdGVyZWQgPSAhIXVzZXJpbmZvLnVzZXJpZDtcblx0XHRpZiAoVHdpbmtsZS5ibG9jay5pc1JlZ2lzdGVyZWQpIHtcblx0XHRcdFR3aW5rbGUuYmxvY2sudXNlcklzQm90ID1cblx0XHRcdFx0ISF1c2VyaW5mby5ncm91cG1lbWJlcnNoaXBzICYmXG5cdFx0XHRcdHVzZXJpbmZvLmdyb3VwbWVtYmVyc2hpcHNcblx0XHRcdFx0XHQubWFwKChlKSA9PiB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZS5ncm91cDtcblx0XHRcdFx0XHR9KVxuXHRcdFx0XHRcdC5pbmNsdWRlcygnYm90Jyk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdFR3aW5rbGUuYmxvY2sudXNlcklzQm90ID0gZmFsc2U7XG5cdFx0fVxuXHRcdGlmIChibG9ja2luZm8pIHtcblx0XHRcdC8vIGhhbmRsZSBmcnVzdHJhdGluZyBzeXN0ZW0gb2YgaW52ZXJ0ZWQgYm9vbGVhbiB2YWx1ZXNcblx0XHRcdGJsb2NraW5mby5kaXNhYmxldGFsayA9IGJsb2NraW5mby5hbGxvd3VzZXJ0YWxrID09PSB1bmRlZmluZWQ7XG5cdFx0XHRibG9ja2luZm8uaGFyZGJsb2NrID0gYmxvY2tpbmZvLmFub25vbmx5ID09PSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdC8vIHdpbGwgdW5kZWZpbmUgaWYgbm8gYmxvY2tzIHByZXNlbnRcblx0XHRUd2lua2xlLmJsb2NrLmN1cnJlbnRCbG9ja0luZm8gPSBibG9ja2luZm87XG5cdFx0YmxvY2tlZFVzZXJOYW1lID0gVHdpbmtsZS5ibG9jay5jdXJyZW50QmxvY2tJbmZvICYmIFR3aW5rbGUuYmxvY2suY3VycmVudEJsb2NrSW5mby51c2VyO1xuXHRcdC8vIFNlbWktYnVzdGVkIG9uIHJhbmdlcy5cblx0XHQvLyBCYXNpY2FsbHksIGxvZ2V2ZW50cyBkb2Vzbid0IHRyZWF0IGZ1bmN0aW9uYWxseS1lcXVpdmFsZW50IHJhbmdlc1xuXHRcdC8vIGFzIGVxdWl2YWxlbnQsIG1lYW5pbmcgYW55IGZ1bmN0aW9uYWxseS1lcXVpdmFsZW50IElQIHJhbmdlIGlzXG5cdFx0Ly8gbWlzaW50ZXJwcmV0ZWQgYnkgdGhlIGxvZyB0aHJvdWdob3V0LiAgV2l0aG91dCBsb2dldmVudHNcblx0XHQvLyByZWRpcmVjdGluZyAobGlrZSBTcGVjaWFsOkJsb2NrIGRvZXMpIHdlIHdvdWxkIG5lZWQgYSBmdW5jdGlvbiB0b1xuXHRcdC8vIHBhcnNlIHJhbmdlcywgd2hpY2ggaXMgYSBwYWluLiAgSVBVdGlscyBoYXMgdGhlIGNvZGUsIGJ1dCBpdCdkIGJlIGFcblx0XHQvLyBsb3Qgb2YgY3J1ZnQgZm9yIG9uZSBwdXJwb3NlLlxuXHRcdFR3aW5rbGUuYmxvY2suaGFzQmxvY2tMb2cgPSAhIWRhdGEucXVlcnkubG9nZXZlbnRzLmxlbmd0aDtcblx0XHRUd2lua2xlLmJsb2NrLmJsb2NrTG9nID0gVHdpbmtsZS5ibG9jay5oYXNCbG9ja0xvZyAmJiBkYXRhLnF1ZXJ5LmxvZ2V2ZW50cztcblx0XHQvLyBVc2VkIGxhdGVyIHRvIGNoZWNrIGlmIGJsb2NrIHN0YXR1cyBjaGFuZ2VkIHdoaWxlIGZpbGxpbmcgb3V0IHRoZSBmb3JtXG5cdFx0VHdpbmtsZS5ibG9jay5ibG9ja0xvZ0lkID0gVHdpbmtsZS5ibG9jay5oYXNCbG9ja0xvZyA/IGRhdGEucXVlcnkubG9nZXZlbnRzWzBdLmxvZ2lkIDogZmFsc2U7XG5cdFx0aWYgKHR5cGVvZiBmbiA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0cmV0dXJuIGZuKCk7XG5cdFx0fVxuXHR9O1xuXHRUd2lua2xlLmJsb2NrLmZldGNoVXNlckluZm8gPSAoZm4pID0+IHtcblx0XHRjb25zdCBxdWVyeSA9IHtcblx0XHRcdGZvcm1hdDogJ2pzb24nLFxuXHRcdFx0YWN0aW9uOiAncXVlcnknLFxuXHRcdFx0bGlzdDogJ2Jsb2Nrc3x1c2Vyc3xsb2dldmVudHMnLFxuXHRcdFx0bGV0eXBlOiAnYmxvY2snLFxuXHRcdFx0bGVsaW1pdDogMixcblx0XHRcdGxldGl0bGU6IGBVc2VyOiR7cmVsZXZhbnRVc2VyTmFtZX1gLFxuXHRcdFx0Ymtwcm9wOiAnZXhwaXJ5fHJlYXNvbnxmbGFnc3xyZXN0cmljdGlvbnN8cmFuZ2V8dXNlcicsXG5cdFx0XHR1c3VzZXJzOiByZWxldmFudFVzZXJOYW1lLFxuXHRcdH07XG5cdFx0Ly8gYmt1c2VycyBkb2Vzbid0IGNhdGNoIHNpbmdsZSBJUHMgYmxvY2tlZCBhcyBwYXJ0IG9mIGEgcmFuZ2UgYmxvY2tcblx0XHRpZiAobXcudXRpbC5pc0lQQWRkcmVzcyhyZWxldmFudFVzZXJOYW1lLCB0cnVlKSkge1xuXHRcdFx0cXVlcnkuYmtpcCA9IHJlbGV2YW50VXNlck5hbWU7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHF1ZXJ5LmJrdXNlcnMgPSByZWxldmFudFVzZXJOYW1lO1xuXHRcdFx0Ly8gZ3JvdXBtZW1iZXJzaGlwcyBvbmx5IHJlbGV2YW50IGZvciByZWdpc3RlcmVkIHVzZXJzXG5cdFx0XHRxdWVyeS51c3Byb3AgPSAnZ3JvdXBtZW1iZXJzaGlwcyc7XG5cdFx0fVxuXHRcdHZvaWQgYXBpLmdldChxdWVyeSkudGhlbihcblx0XHRcdChkYXRhKSA9PiB7XG5cdFx0XHRcdFR3aW5rbGUuYmxvY2sucHJvY2Vzc1VzZXJJbmZvKGRhdGEsIGZuKTtcblx0XHRcdH0sXG5cdFx0XHQoZXJyb3IpID0+IHtcblx0XHRcdFx0TW9yZWJpdHMuc3RhdHVzLmluaXQoJGJvZHkuZmluZCgnZGl2W25hbWU9XCJjdXJyZW50YmxvY2tcIl0gc3BhbicpLmxhc3QoKVswXSk7XG5cdFx0XHRcdE1vcmViaXRzLnN0YXR1cy53YXJuKHdpbmRvdy53Z1VMUygn5oqT5Y+W55So5oi35L+h5oGv5Ye66ZSZJywgJ+aKk+WPluS9v+eUqOiAheizh+ioiuWHuumMrycpLCBlcnJvcik7XG5cdFx0XHR9XG5cdFx0KTtcblx0fTtcblx0VHdpbmtsZS5ibG9jay5jYWxsYmFjay5zYXZlRmllbGRzZXQgPSAoZmllbGRzZXQpID0+IHtcblx0XHRUd2lua2xlLmJsb2NrWyQoZmllbGRzZXQpLnByb3AoJ25hbWUnKV0gPSB7fTtcblx0XHRmb3IgKGNvbnN0IGVsIG9mICQoZmllbGRzZXQpLnNlcmlhbGl6ZUFycmF5KCkpIHtcblx0XHRcdC8vIG5hbWVzcGFjZXMgYW5kIHBhZ2VzIGZvciBwYXJ0aWFsIGJsb2NrcyBhcmUgb3ZlcndyaXR0ZW5cblx0XHRcdC8vIGhlcmUsIGJ1dCB3ZSdyZSBoYW5kbGluZyB0aGVtIGVsc2V3aGVyZSBzbyB0aGF0J3MgZmluZVxuXHRcdFx0VHdpbmtsZS5ibG9ja1skKGZpZWxkc2V0KS5wcm9wKCduYW1lJyldW2VsLm5hbWVdID0gZWwudmFsdWU7XG5cdFx0fVxuXHR9O1xuXHRUd2lua2xlLmJsb2NrLmNhbGxiYWNrLmNoYW5nZV9ibG9jazY0ID0gKGUpID0+IHtcblx0XHRjb25zdCAkZm9ybSA9ICQoZS50YXJnZXQuZm9ybSk7XG5cdFx0Y29uc3QgJGJsb2NrNjQgPSAkZm9ybS5maW5kKCdbbmFtZT1ibG9jazY0XScpO1xuXHRcdC8vIFNob3cvaGlkZSBibG9jazY0IGJ1dHRvblxuXHRcdC8vIFNpbmdsZSBJUHY2LCBvciBJUHY2IHJhbmdlIHNtYWxsZXIgdGhhbiBhIC82NFxuXHRcdGNvbnN0IHByaW9yTmFtZSA9IHJlbGV2YW50VXNlck5hbWU7XG5cdFx0aWYgKCRibG9jazY0LmlzKCc6Y2hlY2tlZCcpKSB7XG5cdFx0XHRyZWxldmFudFVzZXJOYW1lID0gTW9yZWJpdHMuaXAuZ2V0NjQobXcuY29uZmlnLmdldCgnd2dSZWxldmFudFVzZXJOYW1lJykpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZWxldmFudFVzZXJOYW1lID0gbXcuY29uZmlnLmdldCgnd2dSZWxldmFudFVzZXJOYW1lJyk7XG5cdFx0fVxuXHRcdC8vIE5vIHRlbXBsYXRlcyBmb3IgcmFuZ2VzLCBidXQgaWYgdGhlIG9yaWdpbmFsIHVzZXIgaXMgYSBzaW5nbGUgSVAsIG9mZmVyIHRoZSBvcHRpb25cblx0XHQvLyAoZG9uZSBzZXBhcmF0ZWx5IGluIFR3aW5rbGUuYmxvY2suY2FsbGJhY2suaXNzdWVfdGVtcGxhdGUpXG5cdFx0Y29uc3Qgb3JpZ2luYWxJc1JhbmdlID0gTW9yZWJpdHMuaXAuaXNSYW5nZShtdy5jb25maWcuZ2V0KCd3Z1JlbGV2YW50VXNlck5hbWUnKSk7XG5cdFx0JGZvcm1cblx0XHRcdC5maW5kKCdbbmFtZT1hY3Rpb250eXBlXVt2YWx1ZT10ZW1wbGF0ZV0nKVxuXHRcdFx0LnByb3AoJ2Rpc2FibGVkJywgb3JpZ2luYWxJc1JhbmdlKVxuXHRcdFx0LnByb3AoJ2NoZWNrZWQnLCAhb3JpZ2luYWxJc1JhbmdlKTtcblx0XHQvLyBSZWZldGNoL3JlcHJvY2VzcyB1c2VyIGluZm8gdGhlbiByZWdlbmVyYXRlIHRoZSBtYWluIGNvbnRlbnRcblx0XHRjb25zdCByZWdlbmVyYXRlRm9ybSA9ICgpID0+IHtcblx0XHRcdC8vIFR3ZWFrIHRpdGxlYmFyIHRleHQuICBJbiB0aGVvcnksIHdlIGNvdWxkIHNhdmUgdGhlIGRpYWxvZ1xuXHRcdFx0Ly8gYXQgaW5pdGlhbGl6YXRpb24gYW5kIHRoZW4gdXNlIGAuc2V0VGl0bGVgIG9yXG5cdFx0XHQvLyBgZGlhbG9nKCdvcHRpb24nLCAndGl0bGUnKWAsIGJ1dCBpbiBwcmFjdGljZSB0aGF0IHN3YWxsb3dzXG5cdFx0XHQvLyB0aGUgc2NyaXB0TmFtZSBhbmQgcmVxdWlyZXMgYC5kaXNwbGF5YGluZywgd2hpY2gganVtcHMgdGhlXG5cdFx0XHQvLyB3aW5kb3cuICBJdCdzIGp1c3QgYSBsaW5lIG9mIHRleHQsIHNvIHRoaXMgaXMgZmluZS5cblx0XHRcdGNvbnN0IHRpdGxlQmFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnVpLWRpYWxvZy10aXRsZScpLmZpcnN0Q2hpbGQubmV4dFNpYmxpbmc7XG5cdFx0XHR0aXRsZUJhci5ub2RlVmFsdWUgPSB0aXRsZUJhci5ub2RlVmFsdWUucmVwbGFjZShwcmlvck5hbWUsIHJlbGV2YW50VXNlck5hbWUpO1xuXHRcdFx0Ly8gQ29ycmVjdCBwYXJ0aWFsIHN0YXRlXG5cdFx0XHQkZm9ybS5maW5kKCdbbmFtZT1hY3Rpb250eXBlXVt2YWx1ZT1wYXJ0aWFsXScpLnByb3AoJ2NoZWNrZWQnLCBUd2lua2xlLmdldFByZWYoJ2RlZmF1bHRUb1BhcnRpYWxCbG9ja3MnKSk7XG5cdFx0XHRpZiAoYmxvY2tlZFVzZXJOYW1lID09PSByZWxldmFudFVzZXJOYW1lKSB7XG5cdFx0XHRcdCRmb3JtXG5cdFx0XHRcdFx0LmZpbmQoJ1tuYW1lPWFjdGlvbnR5cGVdW3ZhbHVlPXBhcnRpYWxdJylcblx0XHRcdFx0XHQucHJvcCgnY2hlY2tlZCcsIFR3aW5rbGUuYmxvY2suY3VycmVudEJsb2NrSW5mby5wYXJ0aWFsID09PSAnJyk7XG5cdFx0XHR9XG5cdFx0XHQvLyBTZXQgY29udGVudCBhcHByb3ByaWF0ZWx5XG5cdFx0XHRUd2lua2xlLmJsb2NrLmNhbGxiYWNrLmNoYW5nZV9hY3Rpb24oZSk7XG5cdFx0fTtcblx0XHRpZiAoVHdpbmtsZS5ibG9jay5mZXRjaGVkRGF0YVtyZWxldmFudFVzZXJOYW1lXSkge1xuXHRcdFx0VHdpbmtsZS5ibG9jay5wcm9jZXNzVXNlckluZm8oVHdpbmtsZS5ibG9jay5mZXRjaGVkRGF0YVtyZWxldmFudFVzZXJOYW1lXSwgcmVnZW5lcmF0ZUZvcm0pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRUd2lua2xlLmJsb2NrLmZldGNoVXNlckluZm8ocmVnZW5lcmF0ZUZvcm0pO1xuXHRcdH1cblx0fTtcblx0VHdpbmtsZS5ibG9jay5jYWxsYmFjay5jaGFuZ2VfYWN0aW9uID0gKGUpID0+IHtcblx0XHRsZXQgZmllbGRfcHJlc2V0O1xuXHRcdGxldCBmaWVsZF90ZW1wbGF0ZV9vcHRpb25zO1xuXHRcdGxldCBmaWVsZF9ibG9ja19vcHRpb25zO1xuXHRcdGxldCBmaWVsZF90YWdfb3B0aW9ucztcblx0XHRsZXQgZmllbGRfdW5ibG9ja19vcHRpb25zO1xuXHRcdGNvbnN0ICRmb3JtID0gJChlLnRhcmdldC5mb3JtKTtcblx0XHQvLyBNYWtlIGlmcyBzaG9ydGVyXG5cdFx0Y29uc3QgJGJsb2NrID0gJGZvcm0uZmluZCgnW25hbWU9YWN0aW9udHlwZV1bdmFsdWU9YmxvY2tdJyk7XG5cdFx0bGV0IGJsb2NrQm94ID0gJGJsb2NrLmlzKCc6Y2hlY2tlZCcpO1xuXHRcdGNvbnN0ICR0ZW1wbGF0ZSA9ICRmb3JtLmZpbmQoJ1tuYW1lPWFjdGlvbnR5cGVdW3ZhbHVlPXRlbXBsYXRlXScpO1xuXHRcdGxldCB0ZW1wbGF0ZUJveCA9ICR0ZW1wbGF0ZS5pcygnOmNoZWNrZWQnKTtcblx0XHRjb25zdCAkdGFnID0gJGZvcm0uZmluZCgnW25hbWU9YWN0aW9udHlwZV1bdmFsdWU9dGFnXScpO1xuXHRcdGNvbnN0IHRhZ0JveCA9ICR0YWcuaXMoJzpjaGVja2VkJyk7XG5cdFx0Y29uc3QgJHByb3RlY3QgPSAkZm9ybS5maW5kKCdbbmFtZT1hY3Rpb250eXBlXVt2YWx1ZT1wcm90ZWN0XScpO1xuXHRcdGNvbnN0ICRwYXJ0aWFsID0gJGZvcm0uZmluZCgnW25hbWU9YWN0aW9udHlwZV1bdmFsdWU9cGFydGlhbF0nKTtcblx0XHRjb25zdCBwYXJ0aWFsQm94ID0gJHBhcnRpYWwuaXMoJzpjaGVja2VkJyk7XG5cdFx0Y29uc3QgJHVuYmxvY2sgPSAkZm9ybS5maW5kKCdbbmFtZT1hY3Rpb250eXBlXVt2YWx1ZT11bmJsb2NrXScpO1xuXHRcdGNvbnN0IHVuYmxvY2tCb3ggPSAkdW5ibG9jay5pcygnOmNoZWNrZWQnKTtcblx0XHRsZXQgYmxvY2tHcm91cCA9IHBhcnRpYWxCb3ggPyBUd2lua2xlLmJsb2NrLmJsb2NrR3JvdXBzUGFydGlhbCA6IFR3aW5rbGUuYmxvY2suYmxvY2tHcm91cHM7XG5cdFx0aWYgKGUudGFyZ2V0LnZhbHVlID09PSAndW5ibG9jaycpIHtcblx0XHRcdGlmICghVHdpbmtsZS5ibG9jay5jdXJyZW50QmxvY2tJbmZvKSB7XG5cdFx0XHRcdCR1bmJsb2NrLnByb3AoJ2NoZWNrZWQnLCBmYWxzZSk7XG5cdFx0XHRcdHZvaWQgbXcubm90aWZ5KHdpbmRvdy53Z1VMUygn55So5oi35rKh5pyJ6KKr5bCB56aBJywgJ+S9v+eUqOiAheaykuacieiiq+WwgemOlicpLCB7XG5cdFx0XHRcdFx0dHlwZTogJ3dhcm4nLFxuXHRcdFx0XHRcdHRhZzogJ3R3aW5rbGVibG9jaycsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHQkYmxvY2sucHJvcCgnY2hlY2tlZCcsIGZhbHNlKTtcblx0XHRcdGJsb2NrQm94ID0gZmFsc2U7XG5cdFx0XHQkdGVtcGxhdGUucHJvcCgnY2hlY2tlZCcsIGZhbHNlKTtcblx0XHRcdHRlbXBsYXRlQm94ID0gZmFsc2U7XG5cdFx0XHQkdGFnLnByb3AoJ2NoZWNrZWQnLCBmYWxzZSk7XG5cdFx0XHQkcHJvdGVjdC5wcm9wKCdjaGVja2VkJywgZmFsc2UpO1xuXHRcdFx0JHBhcnRpYWwucHJvcCgnY2hlY2tlZCcsIGZhbHNlKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0JHVuYmxvY2sucHJvcCgnY2hlY2tlZCcsIGZhbHNlKTtcblx0XHR9XG5cdFx0JHBhcnRpYWwucHJvcCgnZGlzYWJsZWQnLCAhYmxvY2tCb3ggJiYgIXRlbXBsYXRlQm94KTtcblx0XHQvLyBBZGQgY3VycmVudCBibG9jayBwYXJhbWV0ZXJzIGFzIGRlZmF1bHQgcHJlc2V0XG5cdFx0Y29uc3QgcHJpb3IgPSB7XG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflvZPliY3lsIHnpoEnLCAn55uu5YmN5bCB6Y6WJyksXG5cdFx0fTtcblx0XHRpZiAoYmxvY2tlZFVzZXJOYW1lID09PSByZWxldmFudFVzZXJOYW1lKSB7XG5cdFx0XHRUd2lua2xlLmJsb2NrLmJsb2NrUHJlc2V0c0luZm8ucHJpb3IgPSBUd2lua2xlLmJsb2NrLmN1cnJlbnRCbG9ja0luZm87XG5cdFx0XHQvLyB2YWx1ZSBub3QgYSB2YWxpZCB0ZW1wbGF0ZSBzZWxlY3Rpb24sIGNob3NlbiBiZWxvdyBieSBzZXR0aW5nIHRlbXBsYXRlTmFtZVxuXHRcdFx0cHJpb3IubGlzdCA9IFtcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+W9k+WJjeWwgeemgeiuvue9ricsICfnm67liY3lsIHpjpboqK3lrponKSxcblx0XHRcdFx0XHR2YWx1ZTogJ3ByaW9yJyxcblx0XHRcdFx0XHRzZWxlY3RlZDogdHJ1ZSxcblx0XHRcdFx0fSxcblx0XHRcdF07XG5cdFx0XHQvLyBBcnJheXMgb2Ygb2JqZWN0cyBhcmUgYW5ub3lpbmcgdG8gY2hlY2tcblx0XHRcdGlmIChcblx0XHRcdFx0IWJsb2NrR3JvdXAuc29tZSgoYmcpID0+IHtcblx0XHRcdFx0XHRyZXR1cm4gYmcubGFiZWwgPT09IHByaW9yLmxhYmVsO1xuXHRcdFx0XHR9KVxuXHRcdFx0KSB7XG5cdFx0XHRcdGJsb2NrR3JvdXBbYmxvY2tHcm91cC5sZW5ndGhdID0gcHJpb3I7XG5cdFx0XHR9XG5cdFx0XHQvLyBBbHdheXMgZW5zdXJlIHByb3BlciB0ZW1wbGF0ZSBleGlzdHMvaXMgc2VsZWN0ZWQgd2hlbiBzd2l0Y2hpbmcgbW9kZXNcblx0XHRcdGlmIChwYXJ0aWFsQm94KSB7XG5cdFx0XHRcdFR3aW5rbGUuYmxvY2suYmxvY2tQcmVzZXRzSW5mby5wcmlvci50ZW1wbGF0ZU5hbWUgPSBNb3JlYml0cy5zdHJpbmcuaXNJbmZpbml0eShcblx0XHRcdFx0XHRUd2lua2xlLmJsb2NrLmN1cnJlbnRCbG9ja0luZm8uZXhwaXJ5XG5cdFx0XHRcdClcblx0XHRcdFx0XHQ/ICd1dy1wYmxvY2tpbmRlZidcblx0XHRcdFx0XHQ6ICd1dy1wYmxvY2snO1xuXHRcdFx0fSBlbHNlIGlmIChUd2lua2xlLmJsb2NrLmlzUmVnaXN0ZXJlZCkge1xuXHRcdFx0XHRUd2lua2xlLmJsb2NrLmJsb2NrUHJlc2V0c0luZm8ucHJpb3IudGVtcGxhdGVOYW1lID0gTW9yZWJpdHMuc3RyaW5nLmlzSW5maW5pdHkoXG5cdFx0XHRcdFx0VHdpbmtsZS5ibG9jay5jdXJyZW50QmxvY2tJbmZvLmV4cGlyeVxuXHRcdFx0XHQpXG5cdFx0XHRcdFx0PyAndXctYmxvY2tpbmRlZidcblx0XHRcdFx0XHQ6ICd1dy1ibG9jayc7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRUd2lua2xlLmJsb2NrLmJsb2NrUHJlc2V0c0luZm8ucHJpb3IudGVtcGxhdGVOYW1lID0gJ3V3LWFibG9jayc7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIEJ1dCBmaXJzdCByZW1vdmUgYW55IHByaW9yIHByaW9yXG5cdFx0XHRibG9ja0dyb3VwID0gYmxvY2tHcm91cC5maWx0ZXIoKGJnKSA9PiB7XG5cdFx0XHRcdHJldHVybiBiZy5sYWJlbCAhPT0gcHJpb3IubGFiZWw7XG5cdFx0XHR9KTtcblx0XHR9XG5cdFx0VHdpbmtsZS5ibG9jay5jYWxsYmFjay5zYXZlRmllbGRzZXQoJGJvZHkuZmluZCgnW25hbWU9ZmllbGRfYmxvY2tfb3B0aW9uc10nKSk7XG5cdFx0VHdpbmtsZS5ibG9jay5jYWxsYmFjay5zYXZlRmllbGRzZXQoJGJvZHkuZmluZCgnW25hbWU9ZmllbGRfdGVtcGxhdGVfb3B0aW9uc10nKSk7XG5cdFx0VHdpbmtsZS5ibG9jay5jYWxsYmFjay5zYXZlRmllbGRzZXQoJGJvZHkuZmluZCgnW25hbWU9ZmllbGRfdGFnX29wdGlvbnNdJykpO1xuXHRcdFR3aW5rbGUuYmxvY2suY2FsbGJhY2suc2F2ZUZpZWxkc2V0KCRib2R5LmZpbmQoJ1tuYW1lPWZpZWxkX3VuYmxvY2tfb3B0aW9uc10nKSk7XG5cdFx0aWYgKGJsb2NrQm94KSB7XG5cdFx0XHRmaWVsZF9wcmVzZXQgPSBuZXcgTW9yZWJpdHMucXVpY2tGb3JtLmVsZW1lbnQoe1xuXHRcdFx0XHR0eXBlOiAnZmllbGQnLFxuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfpu5jorqQnLCAn6aCQ6KitJyksXG5cdFx0XHRcdG5hbWU6ICdmaWVsZF9wcmVzZXQnLFxuXHRcdFx0fSk7XG5cdFx0XHRmaWVsZF9wcmVzZXQuYXBwZW5kKHtcblx0XHRcdFx0dHlwZTogJ3NlbGVjdCcsXG5cdFx0XHRcdG5hbWU6ICdwcmVzZXQnLFxuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfpgInmi6npu5jorqTvvJonLCAn6YG45pOH6aCQ6Kit77yaJyksXG5cdFx0XHRcdGV2ZW50OiBUd2lua2xlLmJsb2NrLmNhbGxiYWNrLmNoYW5nZV9wcmVzZXQsXG5cdFx0XHRcdGxpc3Q6IFR3aW5rbGUuYmxvY2suY2FsbGJhY2suZmlsdGVyZWRfYmxvY2tfZ3JvdXBzKGJsb2NrR3JvdXApLFxuXHRcdFx0fSk7XG5cdFx0XHRmaWVsZF9ibG9ja19vcHRpb25zID0gbmV3IE1vcmViaXRzLnF1aWNrRm9ybS5lbGVtZW50KHtcblx0XHRcdFx0dHlwZTogJ2ZpZWxkJyxcblx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5bCB56aB6YCJ6aG5JywgJ+WwgemOlumBuOmghScpLFxuXHRcdFx0XHRuYW1lOiAnZmllbGRfYmxvY2tfb3B0aW9ucycsXG5cdFx0XHR9KTtcblx0XHRcdGZpZWxkX2Jsb2NrX29wdGlvbnMuYXBwZW5kKHtcblx0XHRcdFx0dHlwZTogJ2RpdicsXG5cdFx0XHRcdG5hbWU6ICdjdXJyZW50YmxvY2snLFxuXHRcdFx0XHRsYWJlbDogJyAnLFxuXHRcdFx0fSk7XG5cdFx0XHRmaWVsZF9ibG9ja19vcHRpb25zLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0XHRuYW1lOiAnaGFzYmxvY2tsb2cnLFxuXHRcdFx0XHRsYWJlbDogJyAnLFxuXHRcdFx0fSk7XG5cdFx0XHRmaWVsZF9ibG9ja19vcHRpb25zLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdzZWxlY3QnLFxuXHRcdFx0XHRuYW1lOiAnZXhwaXJ5X3ByZXNldCcsXG5cdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+i/h+acn+aXtumXtO+8micsICfpgY7mnJ/mmYLplpPvvJonKSxcblx0XHRcdFx0ZXZlbnQ6IFR3aW5rbGUuYmxvY2suY2FsbGJhY2suY2hhbmdlX2V4cGlyeSxcblx0XHRcdFx0bGlzdDogW1xuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+iHquWumuS5iScsICfoh6roqIInKSxcblx0XHRcdFx0XHRcdHZhbHVlOiAnY3VzdG9tJyxcblx0XHRcdFx0XHRcdHNlbGVjdGVkOiB0cnVlLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5peg6ZmQ5pyfJywgJ+eEoemZkOacnycpLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICdpbmZpbml0eScsXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCcz5bCP5pe2JywgJzPlsI/mmYInKSxcblx0XHRcdFx0XHRcdHZhbHVlOiAnMyBob3VycycsXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCcxMuWwj+aXticsICcxMuWwj+aZgicpLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICcxMiBob3VycycsXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRsYWJlbDogJzHlpKknLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICcxIGRheScsXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCczMeWwj+aXticsICczMeWwj+aZgicpLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICczMSBob3VycycsXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRsYWJlbDogJzLlpKknLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICcyIGRheXMnLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6ICcz5aSpJyxcblx0XHRcdFx0XHRcdHZhbHVlOiAnMyBkYXlzJyxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJzHlkagnLCAnMemAsScpLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICcxIHdlZWsnLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygnMuWRqCcsICcy6YCxJyksXG5cdFx0XHRcdFx0XHR2YWx1ZTogJzIgd2Vla3MnLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygnMeS4quaciCcsICcx5YCL5pyIJyksXG5cdFx0XHRcdFx0XHR2YWx1ZTogJzEgbW9udGgnLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygnM+S4quaciCcsICcz5YCL5pyIJyksXG5cdFx0XHRcdFx0XHR2YWx1ZTogJzMgbW9udGhzJyxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJzbkuKrmnIgnLCAnNuWAi+aciCcpLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICc2IG1vbnRocycsXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRsYWJlbDogJzHlubQnLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICcxIHllYXInLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6ICcy5bm0Jyxcblx0XHRcdFx0XHRcdHZhbHVlOiAnMiB5ZWFycycsXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRsYWJlbDogJzPlubQnLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICczIHllYXJzJyxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRdLFxuXHRcdFx0fSk7XG5cdFx0XHRmaWVsZF9ibG9ja19vcHRpb25zLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRcdG5hbWU6ICdleHBpcnknLFxuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfoh6rlrprkuYnov4fmnJ/ml7bpl7QnLCAn6Ieq6KiC6YGO5pyf5pmC6ZaTJyksXG5cdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHQn5oKo5Y+v5Lul5L2/55So55u45a+55pe26Ze077yM5aaC4oCcMSBtaW51dGXigJ3miJbigJwxOSBkYXlz4oCd77yb5oiW57ud5a+55pe26Ze077yM4oCceXl5eW1tZGRoaG1t4oCd77yI5aaC4oCcMjAwNjAyMDExNDA14oCd5pivMjAwNuW5tDLmnIgx5pelMTQ6MDUgVVRD44CC77yJJyxcblx0XHRcdFx0XHQn5oKo5Y+v5Lul5L2/55So55u45bCN5pmC6ZaT77yM5aaC44CMMSBtaW51dGXjgI3miJbjgIwxOSBkYXlz44CN77yb5oiW57WV5bCN5pmC6ZaT77yM44CMeXl5eW1tZGRoaG1t44CN77yI5aaC44CMMjAwNjAyMDExNDA144CN5pivMjAwNuW5tDLmnIgx5pelMTQ6MDUgVVRD44CC77yJJ1xuXHRcdFx0XHQpLFxuXHRcdFx0XHR2YWx1ZTogVHdpbmtsZS5ibG9jay5maWVsZF9ibG9ja19vcHRpb25zLmV4cGlyeSB8fCBUd2lua2xlLmJsb2NrLmZpZWxkX3RlbXBsYXRlX29wdGlvbnMudGVtcGxhdGVfZXhwaXJ5LFxuXHRcdFx0fSk7XG5cdFx0XHRpZiAocGFydGlhbEJveCkge1xuXHRcdFx0XHQvLyBQYXJ0aWFsIGJsb2NrXG5cdFx0XHRcdGZpZWxkX2Jsb2NrX29wdGlvbnMuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnc2VsZWN0Jyxcblx0XHRcdFx0XHRtdWx0aXBsZTogdHJ1ZSxcblx0XHRcdFx0XHRuYW1lOiAncGFnZXJlc3RyaWN0aW9ucycsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6aG16Z2i5bCB56aBJywgJ+mggemdouWwgemOlicpLFxuXHRcdFx0XHRcdHZhbHVlOiAnJyxcblx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoJ+acgOWkmjEw5Liq6aG16Z2i44CCJywgJ+acgOWkmjEw5YCL6aCB6Z2i44CCJyksXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRjb25zdCBucyA9IGZpZWxkX2Jsb2NrX29wdGlvbnMuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnc2VsZWN0Jyxcblx0XHRcdFx0XHRtdWx0aXBsZTogdHJ1ZSxcblx0XHRcdFx0XHRuYW1lOiAnbmFtZXNwYWNlcmVzdHJpY3Rpb25zJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflkb3lkI3nqbrpl7TlsIHnpoEnLCAn5ZG95ZCN56m66ZaT5bCB6Y6WJyksXG5cdFx0XHRcdFx0dmFsdWU6ICcnLFxuXHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUygn5oyH5a6a5bCB56aB55qE5ZG95ZCN56m66Ze044CCJywgJ+aMh+WumuWwgemOlueahOWRveWQjeepuumWk+OAgicpLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0Zm9yIChjb25zdCBbbnVtYmVyLCBuYW1lXSBvZiBPYmplY3QuZW50cmllcyhtZW51Rm9ybWF0dGVkTmFtZXNwYWNlcykpIHtcblx0XHRcdFx0XHQvLyBJZ25vcmUgLTE6IFNwZWNpYWw7IC0yOiBNZWRpYTsgYW5kIDIzMDAtMjMwMzogR2FkZ2V0ICh0YWxrKSBhbmQgR2FkZ2V0IGRlZmluaXRpb24gKHRhbGspXG5cdFx0XHRcdFx0aWYgKG51bWJlciA+PSAwICYmIG51bWJlciA8IDgzMCkge1xuXHRcdFx0XHRcdFx0bnMuYXBwZW5kKHtcblx0XHRcdFx0XHRcdFx0dHlwZTogJ29wdGlvbicsXG5cdFx0XHRcdFx0XHRcdGxhYmVsOiBuYW1lLFxuXHRcdFx0XHRcdFx0XHR2YWx1ZTogbnVtYmVyLFxuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRjb25zdCBibG9ja29wdGlvbnMgPSBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRjaGVja2VkOiBUd2lua2xlLmJsb2NrLmZpZWxkX2Jsb2NrX29wdGlvbnMubm9jcmVhdGUsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn56aB5q2i5Yib5bu66LSm5Y+3JywgJ+emgeatouW7uueri+izrOiZnycpLFxuXHRcdFx0XHRcdG5hbWU6ICdub2NyZWF0ZScsXG5cdFx0XHRcdFx0dmFsdWU6ICcxJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGNoZWNrZWQ6IFR3aW5rbGUuYmxvY2suZmllbGRfYmxvY2tfb3B0aW9ucy5ub2VtYWlsLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+eUteWtkOmCruS7tuWBnOeUqCcsICfpm7vlrZDpg7Xku7blgZznlKgnKSxcblx0XHRcdFx0XHRuYW1lOiAnbm9lbWFpbCcsXG5cdFx0XHRcdFx0dmFsdWU6ICcxJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGNoZWNrZWQ6IFR3aW5rbGUuYmxvY2suZmllbGRfYmxvY2tfb3B0aW9ucy5kaXNhYmxldGFsayxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfkuI3og73nvJbovpHoh6rlt7HnmoTorqjorrrpobUnLCAn5LiN6IO957eo6Lyv6Ieq5bex55qE6KiO6KuW6aCBJyksXG5cdFx0XHRcdFx0bmFtZTogJ2Rpc2FibGV0YWxrJyxcblx0XHRcdFx0XHR2YWx1ZTogJzEnLFxuXHRcdFx0XHRcdHRvb2x0aXA6IHBhcnRpYWxCb3hcblx0XHRcdFx0XHRcdD8gd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCfoi6Xkvb/nlKjpg6jliIblsIHnpoHvvIzkuI3lupTpgInmi6nmraTpobnvvIzpmaTpnZ7mgqjkuZ/mg7PopoHnpoHmraLnvJbovpHnlKjmiLforqjorrrpobXjgIInLFxuXHRcdFx0XHRcdFx0XHRcdCfoi6Xkvb/nlKjpg6jliIblsIHpjpbvvIzkuI3mh4npgbjmk4fmraTpoIXvvIzpmaTpnZ7mgqjkuZ/mg7PopoHnpoHmraLnt6jovK/kvb/nlKjogIXoqI7oq5bpoIHjgIInXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdDogJycsXG5cdFx0XHRcdH0sXG5cdFx0XHRdO1xuXHRcdFx0aWYgKFR3aW5rbGUuYmxvY2suaXNSZWdpc3RlcmVkKSB7XG5cdFx0XHRcdGJsb2Nrb3B0aW9uc1tibG9ja29wdGlvbnMubGVuZ3RoXSA9IHtcblx0XHRcdFx0XHRjaGVja2VkOiBUd2lua2xlLmJsb2NrLmZpZWxkX2Jsb2NrX29wdGlvbnMuYXV0b2Jsb2NrLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+iHquWKqOWwgeemgScsICfoh6rli5XlsIHpjpYnKSxcblx0XHRcdFx0XHRuYW1lOiAnYXV0b2Jsb2NrJyxcblx0XHRcdFx0XHR2YWx1ZTogJzEnLFxuXHRcdFx0XHR9O1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0YmxvY2tvcHRpb25zW2Jsb2Nrb3B0aW9ucy5sZW5ndGhdID0ge1xuXHRcdFx0XHRcdGNoZWNrZWQ6IFR3aW5rbGUuYmxvY2suZmllbGRfYmxvY2tfb3B0aW9ucy5oYXJkYmxvY2ssXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6Zi75q2i55m75b2V55So5oi35L2/55So6K+lSVDlnLDlnYDnvJbovpEnLCAn6Zi75q2i55m75YWl5L2/55So6ICF5L2/55So6KmySVDkvY3lnYDnt6jovK8nKSxcblx0XHRcdFx0XHRuYW1lOiAnaGFyZGJsb2NrJyxcblx0XHRcdFx0XHR2YWx1ZTogJzEnLFxuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdFx0YmxvY2tvcHRpb25zW2Jsb2Nrb3B0aW9ucy5sZW5ndGhdID1cblx0XHRcdFx0KHtcblx0XHRcdFx0XHRjaGVja2VkOiBUd2lua2xlLmJsb2NrLmZpZWxkX2Jsb2NrX29wdGlvbnMud2F0Y2h1c2VyLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+ebkeinhuivpeeUqOaIt+eahOeUqOaIt+mhteWSjOiuqOiuuumhtScsICfnm6PoppboqbLkvb/nlKjogIXnmoTkvb/nlKjogIXpoIHpnaLlkozoqI7oq5bpoIEnKSxcblx0XHRcdFx0XHRuYW1lOiAnd2F0Y2h1c2VyJyxcblx0XHRcdFx0XHR2YWx1ZTogJzEnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0Y2hlY2tlZDogdHJ1ZSxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmoIforrDlvZPliY3nmoTnoLTlnY/kuK3nmoTor7fmsYInLCAn5qiZ6KiY55W25YmN55qE56C05aOe5Lit55qE6KuL5rGCJyksXG5cdFx0XHRcdFx0bmFtZTogJ2Nsb3NldmlwJyxcblx0XHRcdFx0XHR2YWx1ZTogJzEnLFxuXHRcdFx0XHR9KTtcblx0XHRcdGZpZWxkX2Jsb2NrX29wdGlvbnMuYXBwZW5kKHtcblx0XHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdFx0bmFtZTogJ2Jsb2Nrb3B0aW9ucycsXG5cdFx0XHRcdGxpc3Q6IGJsb2Nrb3B0aW9ucyxcblx0XHRcdH0pO1xuXHRcdFx0ZmllbGRfYmxvY2tfb3B0aW9ucy5hcHBlbmQoe1xuXHRcdFx0XHR0eXBlOiAndGV4dGFyZWEnLFxuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfnkIbnlLHvvIjnlKjkuo7lsIHnpoHml6Xlv5fvvInvvJonLCAn55CG55Sx77yI55So5pa85bCB6Y6W5pel6KqM77yJ77yaJyksXG5cdFx0XHRcdG5hbWU6ICdyZWFzb24nLFxuXHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0J+ivt+iAg+iZkeWcqOm7mOiupOeahOa2iOaBr+S4reWKoOWFpeacieeUqOeahOivpue7huS/oeaBr+OAgicsXG5cdFx0XHRcdFx0J+iri+iAg+aFruWcqOmgkOioreeahOioiuaBr+S4reWKoOWFpeacieeUqOeahOips+e0sOizh+ioiuOAgidcblx0XHRcdFx0KSxcblx0XHRcdFx0dmFsdWU6IFR3aW5rbGUuYmxvY2suZmllbGRfYmxvY2tfb3B0aW9ucy5yZWFzb24sXG5cdFx0XHR9KTtcblx0XHRcdGZpZWxkX2Jsb2NrX29wdGlvbnMuYXBwZW5kKHtcblx0XHRcdFx0dHlwZTogJ2RpdicsXG5cdFx0XHRcdG5hbWU6ICdmaWxlcmxvZ19sYWJlbCcsXG5cdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WPguinge+8micsICflj4PopovvvJonKSxcblx0XHRcdFx0c3R5bGU6ICdkaXNwbGF5OmlubGluZS1ibG9jaztmb250LXN0eWxlOm5vcm1hbCAhaW1wb3J0YW50Jyxcblx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdCflnKjlsIHnpoHnkIbnlLHkuK3moIfmuIXnibnmrormg4XlhrXku6Xkvpvlhbbku5bnrqHnkIblkZjlj4LogIMnLFxuXHRcdFx0XHRcdCflnKjlsIHpjpbnkIbnlLHkuK3mqJnmuIXnibnmrormg4Xms4Hku6Xkvpvlhbbku5bnrqHnkIblk6Hlj4PogIMnXG5cdFx0XHRcdCksXG5cdFx0XHR9KTtcblx0XHRcdGZpZWxkX2Jsb2NrX29wdGlvbnMuYXBwZW5kKHtcblx0XHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdFx0bmFtZTogJ2ZpbHRlcl9zZWVfYWxzbycsXG5cdFx0XHRcdGV2ZW50OiBUd2lua2xlLmJsb2NrLmNhbGxiYWNrLnRvZ2dsZV9zZWVfYWxzb3MsXG5cdFx0XHRcdHN0eWxlOiAnZGlzcGxheTppbmxpbmUtYmxvY2s7IG1hcmdpbi1yaWdodDo1cHgnLFxuXHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6L+H5ruk5Zmo5pel5b+XJywgJ+mBjua/vuWZqOaXpeiqjCcpLFxuXHRcdFx0XHRcdFx0Y2hlY2tlZDogZmFsc2UsXG5cdFx0XHRcdFx0XHR2YWx1ZTogd2luZG93LndnVUxTKCfov4fmu6Tlmajml6Xlv5cnLCAn6YGO5r++5Zmo5pel6KqMJyksXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XSxcblx0XHRcdH0pO1xuXHRcdFx0ZmllbGRfYmxvY2tfb3B0aW9ucy5hcHBlbmQoe1xuXHRcdFx0XHR0eXBlOiAnY2hlY2tib3gnLFxuXHRcdFx0XHRuYW1lOiAnZGVsZXRlZF9zZWVfYWxzbycsXG5cdFx0XHRcdGV2ZW50OiBUd2lua2xlLmJsb2NrLmNhbGxiYWNrLnRvZ2dsZV9zZWVfYWxzb3MsXG5cdFx0XHRcdHN0eWxlOiAnZGlzcGxheTppbmxpbmUtYmxvY2s7IG1hcmdpbi1yaWdodDo1cHgnLFxuXHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5bey5Yig6Zmk55qE57yW6L6RJywgJ+W3suWIqumZpOeahOe3qOi8rycpLFxuXHRcdFx0XHRcdFx0Y2hlY2tlZDogZmFsc2UsXG5cdFx0XHRcdFx0XHR2YWx1ZTogd2luZG93LndnVUxTKCflt7LliKDpmaTnmoTnvJbovpEnLCAn5bey5Yiq6Zmk55qE57eo6LyvJyksXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XSxcblx0XHRcdH0pO1xuXHRcdFx0ZmllbGRfYmxvY2tfb3B0aW9ucy5hcHBlbmQoe1xuXHRcdFx0XHR0eXBlOiAnY2hlY2tib3gnLFxuXHRcdFx0XHRuYW1lOiAnZmlsdGVyX3NlZV9hbHNvJyxcblx0XHRcdFx0ZXZlbnQ6IFR3aW5rbGUuYmxvY2suY2FsbGJhY2sudG9nZ2xlX3NlZV9hbHNvcyxcblx0XHRcdFx0c3R5bGU6ICdkaXNwbGF5OmlubGluZS1ibG9jazsgbWFyZ2luLXJpZ2h0OjVweCcsXG5cdFx0XHRcdGxpc3Q6IFtcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfnlKjmiLforqjorrrpobUnLCAn5L2/55So6ICF6KiO6KuW6aCBJyksXG5cdFx0XHRcdFx0XHRjaGVja2VkOiBmYWxzZSxcblx0XHRcdFx0XHRcdHZhbHVlOiB3aW5kb3cud2dVTFMoJ+eUqOaIt+iuqOiuuumhtScsICfkvb/nlKjogIXoqI7oq5bpoIEnKSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRdLFxuXHRcdFx0fSk7XG5cdFx0XHRmaWVsZF9ibG9ja19vcHRpb25zLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdG5hbWU6ICdmaWx0ZXJfc2VlX2Fsc28nLFxuXHRcdFx0XHRldmVudDogVHdpbmtsZS5ibG9jay5jYWxsYmFjay50b2dnbGVfc2VlX2Fsc29zLFxuXHRcdFx0XHRzdHlsZTogJ2Rpc3BsYXk6aW5saW5lLWJsb2NrOyBtYXJnaW4tcmlnaHQ6NXB4Jyxcblx0XHRcdFx0bGlzdDogW1xuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+i/h+WOu+eahOWwgeemgeiusOW9lScsICfpgY7ljrvnmoTlsIHpjpboqJjpjIQnKSxcblx0XHRcdFx0XHRcdGNoZWNrZWQ6IGZhbHNlLFxuXHRcdFx0XHRcdFx0dmFsdWU6IHdpbmRvdy53Z1VMUygn6L+H5Y6755qE5bCB56aB6K6w5b2VJywgJ+mBjuWOu+eahOWwgemOluiomOmMhCcpLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdF0sXG5cdFx0XHR9KTtcblx0XHRcdC8vIFlldC1hbm90aGVyLWxvZ2V2ZW50cy1kb2Vzbid0LWhhbmRsZS1yYW5nZXMtd2VsbFxuXHRcdFx0aWYgKGJsb2NrZWRVc2VyTmFtZSA9PT0gcmVsZXZhbnRVc2VyTmFtZSkge1xuXHRcdFx0XHRmaWVsZF9ibG9ja19vcHRpb25zLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2hpZGRlbicsXG5cdFx0XHRcdFx0bmFtZTogJ3JlYmxvY2snLFxuXHRcdFx0XHRcdHZhbHVlOiAnMScsXG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRpZiAodGVtcGxhdGVCb3gpIHtcblx0XHRcdGZpZWxkX3RlbXBsYXRlX29wdGlvbnMgPSBuZXcgTW9yZWJpdHMucXVpY2tGb3JtLmVsZW1lbnQoe1xuXHRcdFx0XHR0eXBlOiAnZmllbGQnLFxuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmqKHmnb/pgInpobknLCAn5qih5p2/6YG46aCFJyksXG5cdFx0XHRcdG5hbWU6ICdmaWVsZF90ZW1wbGF0ZV9vcHRpb25zJyxcblx0XHRcdH0pO1xuXHRcdFx0ZmllbGRfdGVtcGxhdGVfb3B0aW9ucy5hcHBlbmQoe1xuXHRcdFx0XHR0eXBlOiAnc2VsZWN0Jyxcblx0XHRcdFx0bmFtZTogJ3RlbXBsYXRlJyxcblx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6YCJ5oup6K6o6K666aG15qih5p2/77yaJywgJ+mBuOaTh+iojuirlumggeaooeadv++8micpLFxuXHRcdFx0XHRldmVudDogVHdpbmtsZS5ibG9jay5jYWxsYmFjay5jaGFuZ2VfdGVtcGxhdGUsXG5cdFx0XHRcdGxpc3Q6IFR3aW5rbGUuYmxvY2suY2FsbGJhY2suZmlsdGVyZWRfYmxvY2tfZ3JvdXBzKGJsb2NrR3JvdXAsIHRydWUpLFxuXHRcdFx0XHR2YWx1ZTogVHdpbmtsZS5ibG9jay5maWVsZF90ZW1wbGF0ZV9vcHRpb25zLnRlbXBsYXRlLFxuXHRcdFx0fSk7XG5cdFx0XHRmaWVsZF90ZW1wbGF0ZV9vcHRpb25zLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRcdG5hbWU6ICdhcnRpY2xlJyxcblx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6ZO+5o6l6aG16Z2iJywgJ+mAo+e1kOmggemdoicpLFxuXHRcdFx0XHR2YWx1ZTogJycsXG5cdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHQn5Y+v5Lul6ZqP6YCa55+l6ZO+5o6l6aG16Z2i77yM5L6L5aaC56C05Z2P55qE55uu5qCH44CC5rKh5pyJ5p2h55uu6ZyA6KaB6ZO+5o6l5YiZ6K+355WZ56m644CCJyxcblx0XHRcdFx0XHQn5Y+v5Lul6Zqo6YCa55+l6YCj57WQ6aCB6Z2i77yM5L6L5aaC56C05aOe55qE55uu5qiZ44CC5rKS5pyJ5qKd55uu6ZyA6KaB6YCj57WQ5YmH6KuL55WZ56m644CCJ1xuXHRcdFx0XHQpLFxuXHRcdFx0fSk7XG5cdFx0XHQvLyBPbmx5IHZpc2libGUgaWYgcGFydGlhbCBhbmQgbm90IGJsb2NraW5nXG5cdFx0XHRmaWVsZF90ZW1wbGF0ZV9vcHRpb25zLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRcdG5hbWU6ICdhcmVhJyxcblx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5bCB56aB6IyD5Zu0JywgJ+WwgemOluevhOWcjScpLFxuXHRcdFx0XHR2YWx1ZTogJycsXG5cdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHQn6Zi75q2i55So5oi357yW6L6R55qE6aG16Z2i5oiW5ZG95ZCN56m66Ze055qE5Y+v6YCJ6K+05piO44CCJyxcblx0XHRcdFx0XHQn6Zi75q2i5L2/55So6ICF57eo6Lyv55qE6aCB6Z2i5oiW5ZG95ZCN56m66ZaT55qE5Y+v6YG46Kqq5piO44CCJ1xuXHRcdFx0XHQpLFxuXHRcdFx0fSk7XG5cdFx0XHRpZiAoIWJsb2NrQm94KSB7XG5cdFx0XHRcdGZpZWxkX3RlbXBsYXRlX29wdGlvbnMuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnaW5wdXQnLFxuXHRcdFx0XHRcdG5hbWU6ICd0ZW1wbGF0ZV9leHBpcnknLFxuXHRcdFx0XHRcdGxhYmVsOiAn5bCB56aB5pyf6ZmQ77yaJyxcblx0XHRcdFx0XHR2YWx1ZTogJycsXG5cdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKCflsIHnpoHml7bplb/vvIzlpoIyNOWwj+aXtuOAgTLlkajjgIHml6DpmZDmnJ/nrYnjgIInLCAn5bCB6Y6W5pmC6ZW377yM5aaCMjTlsI/mmYLjgIEy6YCx44CB54Sh6ZmQ5pyf562J44CCJyksXG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXHRcdFx0ZmllbGRfdGVtcGxhdGVfb3B0aW9ucy5hcHBlbmQoe1xuXHRcdFx0XHR0eXBlOiAnaW5wdXQnLFxuXHRcdFx0XHRuYW1lOiAnYmxvY2tfcmVhc29uJyxcblx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn4oCc55Sx5LqO4oCm4oCm5oKo5bey6KKr5bCB56aB4oCdJywgJ+OAjOeUseaWvOKApuKApuaCqOW3suiiq+WwgemOluOAjScpLFxuXHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0J+WPr+mAieeahOeQhueUse+8jOeUqOS6juabv+aNoum7mOiupOeQhueUseOAguWPquWcqOW4uOinhOWwgeemgeaooeadv+S4reacieaViOOAgicsXG5cdFx0XHRcdFx0J+WPr+mBuOeahOeQhueUse+8jOeUqOaWvOabv+aPm+mgkOioreeQhueUseOAguWPquWcqOW4uOimj+WwgemOluaooeadv+S4reacieaViOOAgidcblx0XHRcdFx0KSxcblx0XHRcdFx0dmFsdWU6IFR3aW5rbGUuYmxvY2suZmllbGRfdGVtcGxhdGVfb3B0aW9ucy5ibG9ja19yZWFzb24sXG5cdFx0XHRcdHNpemU6IDYwLFxuXHRcdFx0fSk7XG5cdFx0XHRpZiAoYmxvY2tCb3gpIHtcblx0XHRcdFx0ZmllbGRfdGVtcGxhdGVfb3B0aW9ucy5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdFx0bmFtZTogJ2JsYW5rX2R1cmF0aW9uJyxcblx0XHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+S4jeWcqOaooeadv+S4reWMheWQq+Wwgeemgeacn+mZkCcsICfkuI3lnKjmqKHmnb/kuK3ljIXlkKvlsIHpjpbmnJ/pmZAnKSxcblx0XHRcdFx0XHRcdFx0Y2hlY2tlZDogVHdpbmtsZS5ibG9jay5maWVsZF90ZW1wbGF0ZV9vcHRpb25zLmJsYW5rX2R1cmF0aW9uLFxuXHRcdFx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+aooeadv+WwhuS8muaYvuekuuKAnOS4gOauteaXtumXtOKAneiAjOS4jeaYr+WFt+S9k+aXtumVvycsXG5cdFx0XHRcdFx0XHRcdFx0J+aooeadv+Wwh+acg+mhr+ekuuOAjOS4gOauteaZgumWk+OAjeiAjOS4jeaYr+WFt+mrlOaZgumVtydcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XSxcblx0XHRcdFx0fSk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRmaWVsZF90ZW1wbGF0ZV9vcHRpb25zLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+S4jeiDvee8lui+keiHquW3seeahOiuqOiuuumhtScsICfkuI3og73nt6jovK/oh6rlt7HnmoToqI7oq5bpoIEnKSxcblx0XHRcdFx0XHRcdFx0bmFtZTogJ25vdGFsaycsXG5cdFx0XHRcdFx0XHRcdGNoZWNrZWQ6IFR3aW5rbGUuYmxvY2suZmllbGRfdGVtcGxhdGVfb3B0aW9ucy5ub3RhbGssXG5cdFx0XHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn55So5q2k5Zyo5bCB56aB5qih5p2/5Lit5oyH5piO6K+l55So5oi357yW6L6R6K6o6K666aG155qE5p2D6ZmQ5bey6KKr56e76ZmkJyxcblx0XHRcdFx0XHRcdFx0XHQn55So5q2k5Zyo5bCB6Y6W5qih5p2/5Lit5oyH5piO6Kmy5L2/55So6ICF57eo6Lyv6KiO6KuW6aCB55qE5qyK6ZmQ5bey6KKr56e76ZmkJ1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5LiN6IO95Y+R6YCB55S15a2Q6YKu5Lu2JywgJ+S4jeiDveWCs+mAgembu+WtkOmDteS7ticpLFxuXHRcdFx0XHRcdFx0XHRuYW1lOiAnbm9lbWFpbF90ZW1wbGF0ZScsXG5cdFx0XHRcdFx0XHRcdGNoZWNrZWQ6IFR3aW5rbGUuYmxvY2suZmllbGRfdGVtcGxhdGVfb3B0aW9ucy5ub2VtYWlsX3RlbXBsYXRlLFxuXHRcdFx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+eUqOatpOWcqOWwgeemgeaooeadv+S4reaMh+aYjuivpeeUqOaIt+WPkemAgeeUteWtkOmCruS7tueahOadg+mZkOW3suiiq+enu+mZpCcsXG5cdFx0XHRcdFx0XHRcdFx0J+eUqOatpOWcqOWwgemOluaooeadv+S4reaMh+aYjuipsuS9v+eUqOiAheWCs+mAgembu+WtkOmDteS7tueahOasiumZkOW3suiiq+enu+mZpCdcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+S4jeiDveWIm+W7uui0puWPtycsICfkuI3og73lu7rnq4vos6zomZ8nKSxcblx0XHRcdFx0XHRcdFx0bmFtZTogJ25vY3JlYXRlX3RlbXBsYXRlJyxcblx0XHRcdFx0XHRcdFx0Y2hlY2tlZDogVHdpbmtsZS5ibG9jay5maWVsZF90ZW1wbGF0ZV9vcHRpb25zLm5vY3JlYXRlX3RlbXBsYXRlLFxuXHRcdFx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+eUqOatpOWcqOWwgeemgeaooeadv+S4reaMh+aYjuivpeeUqOaIt+WIm+W7uui0puWPt+eahOadg+mZkOW3suiiq+enu+mZpCcsXG5cdFx0XHRcdFx0XHRcdFx0J+eUqOatpOWcqOWwgemOluaooeadv+S4reaMh+aYjuipsuS9v+eUqOiAheW7uueri+izrOiZn+eahOasiumZkOW3suiiq+enu+mZpCdcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XSxcblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cdFx0XHRjb25zdCAkcHJldmlld2xpbmsgPSAkKCc8YT4nKS5hdHRyKCdpZCcsICd0d2lua2xlYmxvY2stcHJldmlldy1saW5rJykudGV4dCh3aW5kb3cud2dVTFMoJ+mihOiniCcsICfpoJDopr0nKSk7XG5cdFx0XHQkcHJldmlld2xpbmsub2ZmKCdjbGljaycpLm9uKCdjbGljaycsICgpID0+IHtcblx0XHRcdFx0VHdpbmtsZS5ibG9jay5jYWxsYmFjay5wcmV2aWV3KCRmb3JtWzBdKTtcblx0XHRcdH0pO1xuXHRcdFx0JHByZXZpZXdsaW5rLmNzcyh7XG5cdFx0XHRcdGN1cnNvcjogJ3BvaW50ZXInLFxuXHRcdFx0fSk7XG5cdFx0XHRmaWVsZF90ZW1wbGF0ZV9vcHRpb25zLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0XHRpZDogJ2Jsb2NrcHJldmlldycsXG5cdFx0XHRcdGxhYmVsOiBbJHByZXZpZXdsaW5rWzBdXSxcblx0XHRcdH0pO1xuXHRcdFx0ZmllbGRfdGVtcGxhdGVfb3B0aW9ucy5hcHBlbmQoe1xuXHRcdFx0XHR0eXBlOiAnZGl2Jyxcblx0XHRcdFx0aWQ6ICd0d2lua2xlYmxvY2stcHJldmlld2JveCcsXG5cdFx0XHRcdHN0eWxlOiAnZGlzcGxheTogbm9uZScsXG5cdFx0XHR9KTtcblx0XHR9XG5cdFx0aWYgKHRhZ0JveCkge1xuXHRcdFx0ZmllbGRfdGFnX29wdGlvbnMgPSBuZXcgTW9yZWJpdHMucXVpY2tGb3JtLmVsZW1lbnQoe1xuXHRcdFx0XHR0eXBlOiAnZmllbGQnLFxuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmoIforrDnlKjmiLfpobUnLCAn5qiZ6KiY5L2/55So6ICF6aCB6Z2iJyksXG5cdFx0XHRcdG5hbWU6ICdmaWVsZF90YWdfb3B0aW9ucycsXG5cdFx0XHR9KTtcblx0XHRcdGZpZWxkX3RhZ19vcHRpb25zLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdG5hbWU6ICd0YWcnLFxuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfpgInmi6nnlKjmiLfpobXmqKHmnb/vvJonLCAn6YG45pOH5L2/55So6ICF6aCB6Z2i5qih5p2/77yaJyksXG5cdFx0XHRcdGxpc3Q6IFtcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRsYWJlbDogYHt7QmxvY2tlZCB1c2VyfX3vvJoke3dpbmRvdy53Z1VMUygn5LiA6Iis5rC45LmF5bCB56aBJywgJ+S4gOiIrOawuOS5heWwgemOlicpfWAsXG5cdFx0XHRcdFx0XHR2YWx1ZTogJ0Jsb2NrZWQgdXNlcicsXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRsYWJlbDogYHt7U29ja3B1cHBldH1977yaJHt3aW5kb3cud2dVTFMoJ+WCgOWEoei0puWPtycsICflgoDlhKHos6zomZ8nKX1gLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICdTb2NrcHVwcGV0Jyxcblx0XHRcdFx0XHRcdHN1Ymdyb3VwOiBbXG5cdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHRuYW1lOiAnc3BwVXNlcm5hbWUnLFxuXHRcdFx0XHRcdFx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Li76LSm5Y+355So5oi35ZCN77yaJywgJ+S4u+izrOiZn+S9v+eUqOiAheWQjeeose+8micpLFxuXHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0bmFtZTogJ3NwcFR5cGUnLFxuXHRcdFx0XHRcdFx0XHRcdHR5cGU6ICdzZWxlY3QnLFxuXHRcdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+eKtuaAge+8micsICfni4DmhYvvvJonKSxcblx0XHRcdFx0XHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHR5cGU6ICdvcHRpb24nLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR2YWx1ZTogJ2Jsb2NrZWQnLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRsYWJlbDogYGJsb2NrZWQgLSAke3dpbmRvdy53Z1VMUygn5LuF5L6d6KGM5Li66K+B5o2u6K6k5a6aJywgJ+WDheS+neihjOeCuuitieaTmuiqjeWumicpfWAsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHNlbGVjdGVkOiB0cnVlLFxuXHRcdFx0XHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZTogJ29wdGlvbicsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHZhbHVlOiAncHJvdmVuJyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0bGFiZWw6IGBwcm92ZW4gLSAke3dpbmRvdy53Z1VMUygn57uP5YKA5YSh6LCD5p+l56Gu6K6kJywgJ+e2k+WCgOWEoeiqv+afpeeiuuiqjScpfWAsXG5cdFx0XHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR0eXBlOiAnb3B0aW9uJyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0dmFsdWU6ICdjb25maXJtZWQnLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRsYWJlbDogYGNvbmZpcm1lZCAtICR7d2luZG93LndnVUxTKCfnu4/mn6XmoLjnoa7orqQnLCAn57aT5p+l5qC456K66KqNJyl9YCxcblx0XHRcdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRcdFx0XSxcblx0XHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcdG5hbWU6ICdzcHBFdmlkZW5jZScsXG5cdFx0XHRcdFx0XHRcdFx0dHlwZTogJ2lucHV0Jyxcblx0XHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmoLnmja7igKbigKbnoa7lrprvvJonLCAn5qC55pOa4oCm4oCm56K65a6a77yaJyksXG5cdFx0XHRcdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdFx0J+e6r+aWh+Wtl+aIluaYr+W4pltbXV3nmoTpk77mjqXvvIzkvovlpoLvvJpbW1NwZWNpYWw65Zu65a6a6ZO+5o6lL3h4eHh4eHh4fOeUqOaIt+afpeaguF1dJyxcblx0XHRcdFx0XHRcdFx0XHRcdCfntJTmloflrZfmiJbmmK/luLZbW11d55qE6YCj57WQ77yM5L6L5aaC77yaW1tTcGVjaWFsOuWbuuWumumTvuaOpS94eHh4eHh4eHznlKjmiLbmn6XmoLhdXSdcblx0XHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdGxhYmVsOiBge3tTb2NrcHVwcGV0ZWVyfGJsb2NrZWR9fe+8miR7d2luZG93LndnVUxTKCflgoDlhKHkuLvotKblj7cnLCAn5YKA5YSh5Li76LOs6JmfJyl9YCxcblx0XHRcdFx0XHRcdHZhbHVlOiAnU29ja3B1cHBldGVlcicsXG5cdFx0XHRcdFx0XHRzdWJncm91cDogW1xuXHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdFx0XHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5hbWU6ICdzcG1DaGVja2VkJyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0dmFsdWU6ICdzcG1DaGVja2VkJyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn57uP55So5oi35p+l5qC456Gu6K6kJywgJ+e2k+S9v+eUqOiAheafpeaguOeiuuiqjScpLFxuXHRcdFx0XHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdFx0XHRdLFxuXHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0bmFtZTogJ3NwbUV2aWRlbmNlJyxcblx0XHRcdFx0XHRcdFx0XHR0eXBlOiAnaW5wdXQnLFxuXHRcdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+mineWklueQhueUse+8micsICfpoY3lpJbnkIbnlLHvvJonKSxcblx0XHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdF0sXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XSxcblx0XHRcdH0pO1xuXHRcdH1cblx0XHRpZiAodW5ibG9ja0JveCkge1xuXHRcdFx0ZmllbGRfdW5ibG9ja19vcHRpb25zID0gbmV3IE1vcmViaXRzLnF1aWNrRm9ybS5lbGVtZW50KHtcblx0XHRcdFx0dHlwZTogJ2ZpZWxkJyxcblx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6Kej6Zmk5bCB56aB6YCJ6aG5JywgJ+ino+mZpOWwgemOlumBuOmghScpLFxuXHRcdFx0XHRuYW1lOiAnZmllbGRfdW5ibG9ja19vcHRpb25zJyxcblx0XHRcdH0pO1xuXHRcdFx0ZmllbGRfdW5ibG9ja19vcHRpb25zLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICd0ZXh0YXJlYScsXG5cdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+eQhueUse+8iOeUqOS6juWwgeemgeaXpeW/l++8ie+8micsICfnkIbnlLHvvIjnlKjmlrzlsIHpjpbml6XoqozvvInvvJonKSxcblx0XHRcdFx0bmFtZTogJ3JlYXNvbicsXG5cdFx0XHRcdHZhbHVlOiBUd2lua2xlLmJsb2NrLmZpZWxkX3VuYmxvY2tfb3B0aW9ucy5yZWFzb24sXG5cdFx0XHR9KTtcblx0XHR9XG5cdFx0bGV0IG9sZGZpZWxkO1xuXHRcdGlmIChmaWVsZF9wcmVzZXQpIHtcblx0XHRcdFtvbGRmaWVsZF0gPSAkZm9ybS5maW5kKCdmaWVsZHNldFtuYW1lPVwiZmllbGRfcHJlc2V0XCJdJyk7XG5cdFx0XHRvbGRmaWVsZC5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChmaWVsZF9wcmVzZXQucmVuZGVyKCksIG9sZGZpZWxkKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0JGZvcm0uZmluZCgnZmllbGRzZXRbbmFtZT1cImZpZWxkX3ByZXNldFwiXScpLmhpZGUoKTtcblx0XHR9XG5cdFx0aWYgKGZpZWxkX2Jsb2NrX29wdGlvbnMpIHtcblx0XHRcdFtvbGRmaWVsZF0gPSAkZm9ybS5maW5kKCdmaWVsZHNldFtuYW1lPVwiZmllbGRfYmxvY2tfb3B0aW9uc1wiXScpO1xuXHRcdFx0b2xkZmllbGQucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoZmllbGRfYmxvY2tfb3B0aW9ucy5yZW5kZXIoKSwgb2xkZmllbGQpO1xuXHRcdFx0JGZvcm0uZmluZCgnZmllbGRzZXRbbmFtZT1cImZpZWxkXzY0XCJdJykuc2hvdygpO1xuXHRcdFx0JGZvcm0uZmluZCgnW25hbWU9cGFnZXJlc3RyaWN0aW9uc10nKS5zZWxlY3QyKHtcblx0XHRcdFx0d2lkdGg6ICcxMDAlJyxcblx0XHRcdFx0cGxhY2Vob2xkZXI6IHdpbmRvdy53Z1VMUygn6L6T5YWl6KaB6Zi75q2i55So5oi357yW6L6R55qE6aG16Z2iJywgJ+i8uOWFpeimgemYu+atouS9v+eUqOiAhee3qOi8r+eahOmggemdoicpLFxuXHRcdFx0XHRsYW5ndWFnZToge1xuXHRcdFx0XHRcdGVycm9yTG9hZGluZzogKCkgPT4ge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHdpbmRvdy53Z1VMUygn5pCc57Si6K+N5rGH5LiN5a6M5pW05oiW5peg5pWIJywgJ+aQnOWwi+ipnuW9meS4jeWujOaVtOaIlueEoeaViCcpO1xuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdH0sXG5cdFx0XHRcdG1heGltdW1TZWxlY3Rpb25MZW5ndGg6IDEwLFxuXHRcdFx0XHRtaW5pbXVtSW5wdXRMZW5ndGg6IDEsXG5cdFx0XHRcdGFqYXg6IHtcblx0XHRcdFx0XHR1cmw6IG13LnV0aWwud2lraVNjcmlwdCgnYXBpJyksXG5cdFx0XHRcdFx0ZGF0YVR5cGU6ICdqc29uJyxcblx0XHRcdFx0XHRkZWxheTogMTAwLFxuXHRcdFx0XHRcdGRhdGE6IChwYXJhbXMpID0+IHtcblx0XHRcdFx0XHRcdGNvbnN0IHRpdGxlID0gbXcuVGl0bGUubmV3RnJvbVRleHQocGFyYW1zLnRlcm0pO1xuXHRcdFx0XHRcdFx0aWYgKCF0aXRsZSkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdFx0XHRhY3Rpb246ICdxdWVyeScsXG5cdFx0XHRcdFx0XHRcdGZvcm1hdDogJ2pzb24nLFxuXHRcdFx0XHRcdFx0XHRsaXN0OiAnYWxscGFnZXMnLFxuXHRcdFx0XHRcdFx0XHRhcGZyb206IHRpdGxlLnRpdGxlLFxuXHRcdFx0XHRcdFx0XHRhcG5hbWVzcGFjZTogdGl0bGUubmFtZXNwYWNlLFxuXHRcdFx0XHRcdFx0XHRhcGxpbWl0OiAnMTAnLFxuXHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdHByb2Nlc3NSZXN1bHRzOiAoZGF0YSkgPT4ge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRcdFx0cmVzdWx0czogZGF0YS5xdWVyeS5hbGxwYWdlcy5tYXAoKHBhZ2UpID0+IHtcblx0XHRcdFx0XHRcdFx0XHRjb25zdCB0aXRsZSA9IG13LlRpdGxlLm5ld0Zyb21UZXh0KHBhZ2UudGl0bGUsIHBhZ2UubnMpLnRvVGV4dCgpO1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0XHRcdFx0XHRpZDogdGl0bGUsXG5cdFx0XHRcdFx0XHRcdFx0XHR0ZXh0OiB0aXRsZSxcblx0XHRcdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0XHR9KSxcblx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0fSxcblx0XHRcdFx0dGVtcGxhdGVTZWxlY3Rpb246IChjaG9pY2UpID0+IHtcblx0XHRcdFx0XHRyZXR1cm4gJCgnPGE+Jylcblx0XHRcdFx0XHRcdC50ZXh0KGNob2ljZS50ZXh0KVxuXHRcdFx0XHRcdFx0LmF0dHIoe1xuXHRcdFx0XHRcdFx0XHRocmVmOiBtdy51dGlsLmdldFVybChjaG9pY2UudGV4dCksXG5cdFx0XHRcdFx0XHRcdHRhcmdldDogJ19ibGFuaycsXG5cdFx0XHRcdFx0XHRcdHJlbDogJ25vb3BlbmVyIG5vcmVmZXJyZXInLFxuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH0sXG5cdFx0XHR9KTtcblx0XHRcdCRmb3JtLmZpbmQoJ1tuYW1lPW5hbWVzcGFjZXJlc3RyaWN0aW9uc10nKS5zZWxlY3QyKHtcblx0XHRcdFx0d2lkdGg6ICcxMDAlJyxcblx0XHRcdFx0bWF0Y2hlcjogTW9yZWJpdHMuc2VsZWN0Mi5tYXRjaGVycy53b3JkQmVnaW5uaW5nLFxuXHRcdFx0XHRsYW5ndWFnZToge1xuXHRcdFx0XHRcdHNlYXJjaGluZzogTW9yZWJpdHMuc2VsZWN0Mi5xdWVyeUludGVyY2VwdG9yLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR0ZW1wbGF0ZVJlc3VsdDogTW9yZWJpdHMuc2VsZWN0Mi5oaWdobGlnaHRTZWFyY2hNYXRjaGVzLFxuXHRcdFx0XHRwbGFjZWhvbGRlcjogd2luZG93LndnVUxTKCfpgInmi6nopoHnpoHmraLnlKjmiLfnvJbovpHnmoTlkb3lkI3nqbrpl7QnLCAn6YG45pOH6KaB56aB5q2i5L2/55So6ICF57eo6Lyv55qE5ZG95ZCN56m66ZaTJyksXG5cdFx0XHR9KTtcblx0XHRcdG13LnV0aWwuYWRkQ1NTKFxuXHRcdFx0XHQvKiBSZWR1Y2UgcGFkZGluZztcblx0XHRcdFx0ICogQWRqdXN0IGZvbnQgc2l6ZTtcblx0XHRcdFx0ICogUmVtb3ZlIGJsYWNrIGJvcmRlcjtcblx0XHRcdFx0ICogTWFrZSB0aGUgdGlueSBjcm9zcyBsYXJnZXJcblx0XHRcdFx0ICovXG5cdFx0XHRcdCcuc2VsZWN0Mi1yZXN1bHRzIC5zZWxlY3QyLXJlc3VsdHNfX29wdGlvbntwYWRkaW5nLXRvcDoxcHg7cGFkZGluZy1ib3R0b206MXB4fS5zZWxlY3QyLWNvbnRhaW5lciAuc2VsZWN0Mi1kcm9wZG93biAuc2VsZWN0Mi1yZXN1bHRzLC5zZWxlY3QyLWNvbnRhaW5lciAuc2VsZWN0aW9uIC5zZWxlY3QyLXNlbGVjdGlvbl9fcmVuZGVyZWR7Zm9udC1zaXplOjEzcHh9LnNlbGVjdDItY29udGFpbmVyLS1kZWZhdWx0LnNlbGVjdDItY29udGFpbmVyLS1mb2N1cyAuc2VsZWN0Mi1zZWxlY3Rpb24tLW11bHRpcGxle2JvcmRlcjoxcHggc29saWQgI2FhYX0uc2VsZWN0Mi1zZWxlY3Rpb25fX2Nob2ljZV9fcmVtb3Zle2ZvbnQtc2l6ZToxMjUlfSdcblx0XHRcdCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdCRmb3JtLmZpbmQoJ2ZpZWxkc2V0W25hbWU9XCJmaWVsZF9ibG9ja19vcHRpb25zXCJdJykuaGlkZSgpO1xuXHRcdFx0JGZvcm0uZmluZCgnZmllbGRzZXRbbmFtZT1cImZpZWxkXzY0XCJdJykuaGlkZSgpO1xuXHRcdFx0Ly8gQ2xlYXIgc2VsZWN0MiBvcHRpb25zXG5cdFx0XHQkZm9ybS5maW5kKCdbbmFtZT1wYWdlcmVzdHJpY3Rpb25zXScpLnZhbChudWxsKS50cmlnZ2VyKCdjaGFuZ2UnKTtcblx0XHRcdCRmb3JtLmZpbmQoJ1tuYW1lPW5hbWVzcGFjZXJlc3RyaWN0aW9uc10nKS52YWwobnVsbCkudHJpZ2dlcignY2hhbmdlJyk7XG5cdFx0fVxuXHRcdGlmIChmaWVsZF90ZW1wbGF0ZV9vcHRpb25zKSB7XG5cdFx0XHRbb2xkZmllbGRdID0gJGZvcm0uZmluZCgnZmllbGRzZXRbbmFtZT1cImZpZWxkX3RlbXBsYXRlX29wdGlvbnNcIl0nKTtcblx0XHRcdG9sZGZpZWxkLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKGZpZWxkX3RlbXBsYXRlX29wdGlvbnMucmVuZGVyKCksIG9sZGZpZWxkKTtcblx0XHRcdGUudGFyZ2V0LmZvcm0ucm9vdC5wcmV2aWV3ZXIgPSBuZXcgTW9yZWJpdHMud2lraS5wcmV2aWV3KFxuXHRcdFx0XHQkKGUudGFyZ2V0LmZvcm0ucm9vdCkuZmluZCgnI3R3aW5rbGVibG9jay1wcmV2aWV3Ym94JykubGFzdCgpWzBdXG5cdFx0XHQpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQkZm9ybS5maW5kKCdmaWVsZHNldFtuYW1lPVwiZmllbGRfdGVtcGxhdGVfb3B0aW9uc1wiXScpLmhpZGUoKTtcblx0XHR9XG5cdFx0aWYgKGZpZWxkX3RhZ19vcHRpb25zKSB7XG5cdFx0XHRbb2xkZmllbGRdID0gJGZvcm0uZmluZCgnZmllbGRzZXRbbmFtZT1cImZpZWxkX3RhZ19vcHRpb25zXCJdJyk7XG5cdFx0XHRvbGRmaWVsZC5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChmaWVsZF90YWdfb3B0aW9ucy5yZW5kZXIoKSwgb2xkZmllbGQpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQkZm9ybS5maW5kKCdmaWVsZHNldFtuYW1lPVwiZmllbGRfdGFnX29wdGlvbnNcIl0nKS5oaWRlKCk7XG5cdFx0fVxuXHRcdGlmIChmaWVsZF91bmJsb2NrX29wdGlvbnMpIHtcblx0XHRcdFtvbGRmaWVsZF0gPSAkZm9ybS5maW5kKCdmaWVsZHNldFtuYW1lPVwiZmllbGRfdW5ibG9ja19vcHRpb25zXCJdJyk7XG5cdFx0XHRvbGRmaWVsZC5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChmaWVsZF91bmJsb2NrX29wdGlvbnMucmVuZGVyKCksIG9sZGZpZWxkKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0JGZvcm0uZmluZCgnZmllbGRzZXRbbmFtZT1cImZpZWxkX3VuYmxvY2tfb3B0aW9uc1wiXScpLmhpZGUoKTtcblx0XHR9XG5cdFx0Ly8gQW55IGJsb2NrLCBpbmNsdWRpbmcgcmFuZ2VzXG5cdFx0aWYgKFR3aW5rbGUuYmxvY2suY3VycmVudEJsb2NrSW5mbykge1xuXHRcdFx0Ly8gZmFsc2UgZm9yIGFuIGlwIGNvdmVyZWQgYnkgYSByYW5nZSBvciBhIHNtYWxsZXIgcmFuZ2Ugd2l0aGluIGEgbGFyZ2VyIHJhbmdlO1xuXHRcdFx0Ly8gdHJ1ZSBmb3IgYSB1c2VyLCBzaW5nbGUgaXAgYmxvY2ssIG9yIHRoZSBleGFjdCByYW5nZSBmb3IgYSByYW5nZSBibG9ja1xuXHRcdFx0Y29uc3Qgc2FtZVVzZXIgPSBibG9ja2VkVXNlck5hbWUgPT09IHJlbGV2YW50VXNlck5hbWU7XG5cdFx0XHRNb3JlYml0cy5zdGF0dXMuaW5pdCgkYm9keS5maW5kKCdkaXZbbmFtZT1cImN1cnJlbnRibG9ja1wiXSBzcGFuJykubGFzdCgpWzBdKTtcblx0XHRcdGxldCBzdGF0dXNTdHIgPSBgJHtyZWxldmFudFVzZXJOYW1lfeW3suiiqyR7XG5cdFx0XHRcdFR3aW5rbGUuYmxvY2suY3VycmVudEJsb2NrSW5mby5wYXJ0aWFsID09PSAnJ1xuXHRcdFx0XHRcdD8gd2luZG93LndnVUxTKCfpg6jliIblsIHnpoEnLCAn6YOo5YiG5bCB6Y6WJylcblx0XHRcdFx0XHQ6IHdpbmRvdy53Z1VMUygn5YWo56uZ5bCB56aBJywgJ+WFqOermeWwgemOlicpXG5cdFx0XHR9YDtcblx0XHRcdC8vIFJhbmdlIGJsb2NrZWRcblx0XHRcdGlmIChUd2lua2xlLmJsb2NrLmN1cnJlbnRCbG9ja0luZm8ucmFuZ2VzdGFydCAhPT0gVHdpbmtsZS5ibG9jay5jdXJyZW50QmxvY2tJbmZvLnJhbmdlZW5kKSB7XG5cdFx0XHRcdGlmIChzYW1lVXNlcikge1xuXHRcdFx0XHRcdHN0YXR1c1N0ciArPSB3aW5kb3cud2dVTFMoJ++8iOauteWwgeemge+8iScsICfvvIjmrrXlsIHpjpbvvIknKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHQvLyBDaGFuZ2Ugb3JkZXJcblx0XHRcdFx0XHQvLyBMaW5rIHRvIHRoZSBmdWxsIHJhbmdlXG5cdFx0XHRcdFx0Y29uc3QgJHJhbmdlYmxvY2tsb2dsaW5rID0gJCgnPHNwYW4+JykuYXBwZW5kKFxuXHRcdFx0XHRcdFx0JChcblx0XHRcdFx0XHRcdFx0YDxhIHJlbD1cIm5vb3BlbmVyXCIgdGFyZ2V0PVwiX2JsYW5rXCIgaHJlZj1cIiR7bXcudXRpbC5nZXRVcmwoJ1NwZWNpYWw6TG9nJywge1xuXHRcdFx0XHRcdFx0XHRcdGFjdGlvbjogJ3ZpZXcnLFxuXHRcdFx0XHRcdFx0XHRcdHBhZ2U6IGJsb2NrZWRVc2VyTmFtZSxcblx0XHRcdFx0XHRcdFx0XHR0eXBlOiAnYmxvY2snLFxuXHRcdFx0XHRcdFx0XHR9KX1cIj4ke1xuXHRcdFx0XHRcdFx0XHRcdE1vcmViaXRzLmlwLmdldDY0KHJlbGV2YW50VXNlck5hbWUpID09PSBibG9ja2VkVXNlck5hbWUgPyAnLzY0JyA6IGJsb2NrZWRVc2VyTmFtZVxuXHRcdFx0XHRcdFx0XHR9PC9hPilgXG5cdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRzdGF0dXNTdHIgKz1cblx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn77yI5L2N5LqOJywgJ++8iOS9jeaWvCcpICtcblx0XHRcdFx0XHRcdCRyYW5nZWJsb2NrbG9nbGluay5odG1sKCkgK1xuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfmrrXlsIHnpoHlhoXvvIknLCAn5q615bCB6Y6W5YWn77yJJyk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmIChUd2lua2xlLmJsb2NrLmN1cnJlbnRCbG9ja0luZm8uZXhwaXJ5ID09PSAnaW5maW5pdHknKSB7XG5cdFx0XHRcdHN0YXR1c1N0ciArPSB3aW5kb3cud2dVTFMoJ++8iOaXoOmZkOacn++8iScsICfvvIjnhKHpmZDmnJ/vvIknKTtcblx0XHRcdH0gZWxzZSBpZiAobmV3IE1vcmViaXRzLmRhdGUoVHdpbmtsZS5ibG9jay5jdXJyZW50QmxvY2tJbmZvLmV4cGlyeSkuaXNWYWxpZCgpKSB7XG5cdFx0XHRcdHN0YXR1c1N0ciArPSBgJHtcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ++8iOe7iOatouS6jicsICfvvIjntYLmraLmlrwnKSArXG5cdFx0XHRcdFx0bmV3IE1vcmViaXRzLmRhdGUoVHdpbmtsZS5ibG9jay5jdXJyZW50QmxvY2tJbmZvLmV4cGlyeSkuY2FsZW5kYXIoJ3V0YycpXG5cdFx0XHRcdH3vvIlgO1xuXHRcdFx0fVxuXHRcdFx0bGV0IGluZm9TdHIgPSB3aW5kb3cud2dVTFMoJ+atpOihqOWNleWwhicsICfmraTooajllq7lsIcnKTtcblx0XHRcdGlmIChzYW1lVXNlcikge1xuXHRcdFx0XHRpbmZvU3RyICs9IHdpbmRvdy53Z1VMUygn5pu05pS55bCB56aBJywgJ+iuiuabtOWwgemOlicpO1xuXHRcdFx0XHRpZiAoVHdpbmtsZS5ibG9jay5jdXJyZW50QmxvY2tJbmZvLnBhcnRpYWwgPT09IHVuZGVmaW5lZCAmJiBwYXJ0aWFsQm94KSB7XG5cdFx0XHRcdFx0aW5mb1N0ciArPSB3aW5kb3cud2dVTFMoJ+S4uumDqOWIhuWwgeemgScsICfngrrpg6jliIblsIHpjpYnKTtcblx0XHRcdFx0fSBlbHNlIGlmIChUd2lua2xlLmJsb2NrLmN1cnJlbnRCbG9ja0luZm8ucGFydGlhbCA9PT0gJycgJiYgIXBhcnRpYWxCb3gpIHtcblx0XHRcdFx0XHRpbmZvU3RyICs9IHdpbmRvdy53Z1VMUygn5Li65YWo56uZ5bCB56aBJywgJ+eCuuWFqOermeWwgemOlicpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGluZm9TdHIgKz0gJ+OAgic7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRpbmZvU3RyICs9XG5cdFx0XHRcdFx0d2luZG93LndnVUxTKCfliqDkuIrpop3lpJbnmoQnLCAn5Yqg5LiK6aGN5aSW55qEJykgK1xuXHRcdFx0XHRcdChwYXJ0aWFsQm94ID8gJ+mDqOWIhicgOiAnJykgK1xuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5bCB56aB44CCJywgJ+WwgemOluOAgicpO1xuXHRcdFx0fVxuXHRcdFx0TW9yZWJpdHMuc3RhdHVzLndhcm4oc3RhdHVzU3RyLCBpbmZvU3RyKTtcblx0XHRcdC8vIERlZmF1bHQgdG8gdGhlIGN1cnJlbnQgYmxvY2sgY29uZGl0aW9ucyBvbiBpbnRpYWwgZm9ybSBnZW5lcmF0aW9uXG5cdFx0XHRUd2lua2xlLmJsb2NrLmNhbGxiYWNrLnVwZGF0ZV9mb3JtKGUsIFR3aW5rbGUuYmxvY2suY3VycmVudEJsb2NrSW5mbyk7XG5cdFx0fVxuXHRcdC8vIFRoaXMgaXMgd2hlcmUgVDE0NjYyOCByZWFsbHkgY29tZXMgaW50byBwbGF5OiBhIHJhbmdlYmxvY2sgd2lsbFxuXHRcdC8vIG9ubHkgcmV0dXJuIHRoZSBjb3JyZWN0IGJsb2NrIGxvZyBpZiB3Z1JlbGV2YW50VXNlck5hbWUgaXMgdGhlXG5cdFx0Ly8gZXhhY3QgcmFuZ2UsIG5vdCBtZXJlbHkgYSBmdW50aW9uYWwgZXF1aXZhbGVudFxuXHRcdGlmIChUd2lua2xlLmJsb2NrLmhhc0Jsb2NrTG9nKSB7XG5cdFx0XHQvLyBBZGQgbW9yZSBkZXRhaWxzXG5cdFx0XHRjb25zdCBibG9ja2xvZ2luZm8gPSBbXTtcblx0XHRcdGNvbnN0ICRibG9ja2xvZ2xpbmsgPSAkKCc8c3Bhbj4nKS5hcHBlbmQoXG5cdFx0XHRcdCQoXG5cdFx0XHRcdFx0YDxhIHJlbD1cIm5vb3BlbmVyXCIgdGFyZ2V0PVwiX2JsYW5rXCIgaHJlZj1cIiR7bXcudXRpbC5nZXRVcmwoJ1NwZWNpYWw6TG9nJywge1xuXHRcdFx0XHRcdFx0YWN0aW9uOiAndmlldycsXG5cdFx0XHRcdFx0XHRwYWdlOiByZWxldmFudFVzZXJOYW1lLFxuXHRcdFx0XHRcdFx0dHlwZTogJ2Jsb2NrJyxcblx0XHRcdFx0XHR9KX1cIj4ke3dpbmRvdy53Z1VMUygn5bCB56aB5pel5b+XJywgJ+WwgemOluaXpeiqjCcpfTwvYT4pYFxuXHRcdFx0XHQpXG5cdFx0XHQpO1xuXHRcdFx0aWYgKFR3aW5rbGUuYmxvY2suY3VycmVudEJsb2NrSW5mbykge1xuXHRcdFx0XHRibG9ja2xvZ2luZm9bYmxvY2tsb2dpbmZvLmxlbmd0aF0gPSB3aW5kb3cud2dVTFMoJ+WwgeemgeivpuaDhScsICflsIHpjpboqbPmg4UnKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGNvbnN0IFtsYXN0QmxvY2tBY3Rpb25dID0gVHdpbmtsZS5ibG9jay5ibG9ja0xvZztcblx0XHRcdFx0Y29uc3QgYmxvY2tBY3Rpb24gPSBsYXN0QmxvY2tBY3Rpb24uYWN0aW9uID09PSAndW5ibG9jaycgPyBUd2lua2xlLmJsb2NrLmJsb2NrTG9nWzFdIDogbGFzdEJsb2NrQWN0aW9uO1xuXHRcdFx0XHRibG9ja2xvZ2luZm9bYmxvY2tsb2dpbmZvLmxlbmd0aF0gPVxuXHRcdFx0XHRcdChg5q2kJHtcblx0XHRcdFx0XHRcdE1vcmViaXRzLmlwLmlzUmFuZ2UocmVsZXZhbnRVc2VyTmFtZSlcblx0XHRcdFx0XHRcdFx0PyB3aW5kb3cud2dVTFMoJ0lQ6IyD5Zu0JywgJ0lQ56+E5ZyNJylcblx0XHRcdFx0XHRcdFx0OiB3aW5kb3cud2dVTFMoJ+eUqOaItycsICfkvb/nlKjogIUnKVxuXHRcdFx0XHRcdH3mm77lnKhgLFxuXHRcdFx0XHRcdCQoJzxiPicpLnRleHQobmV3IE1vcmViaXRzLmRhdGUoYmxvY2tBY3Rpb24udGltZXN0YW1wKS5jYWxlbmRhcigndXRjJykpWzBdLFxuXHRcdFx0XHRcdGDooqske2Jsb2NrQWN0aW9uLnVzZXJ9JHt3aW5kb3cud2dVTFMoJ+WwgeemgScsICflsIHpjpYnKX1gLFxuXHRcdFx0XHRcdCQoJzxiPicpLnRleHQoTW9yZWJpdHMuc3RyaW5nLmZvcm1hdFRpbWUoYmxvY2tBY3Rpb24ucGFyYW1zLmR1cmF0aW9uKSlbMF0pO1xuXHRcdFx0XHRpZiAobGFzdEJsb2NrQWN0aW9uLmFjdGlvbiA9PT0gJ3VuYmxvY2snKSB7XG5cdFx0XHRcdFx0YmxvY2tsb2dpbmZvW2Jsb2NrbG9naW5mby5sZW5ndGhdID1cblx0XHRcdFx0XHRcdGDvvIwke25ldyBNb3JlYml0cy5kYXRlKGxhc3RCbG9ja0FjdGlvbi50aW1lc3RhbXApLmNhbGVuZGFyKCd1dGMnKX3op6PlsIFgO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdC8vIGJsb2NrIG9yIHJlYmxvY2tcblx0XHRcdFx0XHRibG9ja2xvZ2luZm9bYmxvY2tsb2dpbmZvLmxlbmd0aF0gPVxuXHRcdFx0XHRcdFx0YO+8jCR7bmV3IE1vcmViaXRzLmRhdGUoYmxvY2tBY3Rpb24ucGFyYW1zLmV4cGlyeSkuY2FsZW5kYXIoJ3V0YycpfSR7d2luZG93LndnVUxTKCfov4fmnJ8nLCAn6YGO5pyfJyl9YDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0TW9yZWJpdHMuc3RhdHVzLmluaXQoJGJvZHkuZmluZCgnZGl2W25hbWU9XCJoYXNibG9ja2xvZ1wiXSBzcGFuJykubGFzdCgpWzBdKTtcblx0XHRcdE1vcmViaXRzLnN0YXR1cy53YXJuKGJsb2NrbG9naW5mbywgJGJsb2NrbG9nbGlua1swXSk7XG5cdFx0fVxuXHRcdC8vIE1ha2Ugc3VyZSBhbGwgdGhlIGZpZWxkcyBhcmUgY29ycmVjdCBiYXNlZCBvbiBpbml0aWFsIGRlZmF1bHRzXG5cdFx0aWYgKGJsb2NrQm94KSB7XG5cdFx0XHRUd2lua2xlLmJsb2NrLmNhbGxiYWNrLmNoYW5nZV9wcmVzZXQoZSk7XG5cdFx0fSBlbHNlIGlmICh0ZW1wbGF0ZUJveCkge1xuXHRcdFx0VHdpbmtsZS5ibG9jay5jYWxsYmFjay5jaGFuZ2VfdGVtcGxhdGUoZSk7XG5cdFx0fVxuXHR9O1xuXHQvKipcblx0ICogS2VlcCBhbHBoYWJldGl6ZWQgYnkga2V5IG5hbWUsIFR3aW5rbGUuYmxvY2suYmxvY2tHcm91cHMgZXN0YWJsaXNoZXNcblx0ICogICAgdGhlIG9yZGVyIHRoZXkgd2lsbCBhcHBlYXIgaW4gdGhlIGludGVyZmFjZVxuXHQgKlxuXHQgKiBCbG9jayBwcmVzZXQgZm9ybWF0LCBhbGwga2V5cyBhY2NlcHQgb25seSAndHJ1ZScgKG9taXQgZm9yIGZhbHNlKSBleGNlcHQgd2hlcmUgbm90ZWQ6XG5cdCAqIDx0aXRsZSBvZiBibG9jayB0ZW1wbGF0ZT4gOiB7XG5cdCAqICAgYXV0b2Jsb2NrOiA8YXV0b2Jsb2NrIGFueSBJUCBhZGRyZXNzZXMgdXNlZCAoZm9yIHJlZ2lzdGVyZWQgdXNlcnMgb25seSk+XG5cdCAqICAgZGlzYWJsZXRhbGs6IDxkaXNhYmxlIHVzZXIgZnJvbSBlZGl0aW5nIHRoZWlyIG93biB0YWxrIHBhZ2Ugd2hpbGUgYmxvY2tlZD5cblx0ICogICBleHBpcnk6IDxzdHJpbmcgLSBleHBpcnkgdGltZXN0YW1wLCBjYW4gaW5jbHVkZSByZWxhdGl2ZSB0aW1lcyBsaWtlIFwiNSBtb250aHNcIiwgXCIyIHdlZWtzXCIgZXRjPlxuXHQgKiAgIGZvckFub25Pbmx5OiA8c2hvdyBibG9jayBvcHRpb24gaW4gdGhlIGludGVyZmFjZSBvbmx5IGlmIHRoZSByZWxldmFudCB1c2VyIGlzIGFuIElQPlxuXHQgKiAgIGZvclJlZ2lzdGVyZWRPbmx5OiA8c2hvdyBibG9jayBvcHRpb24gaW4gdGhlIGludGVyZmFjZSBvbmx5IGlmIHRoZSByZWxldmFudCB1c2VyIGlzIHJlZ2lzdGVyZWQ+XG5cdCAqICAgbGFiZWw6IDxzdHJpbmcgLSBsYWJlbCBmb3IgdGhlIG9wdGlvbiBvZiB0aGUgZHJvcGRvd24gaW4gdGhlIGludGVyZmFjZSAoa2VlcCBicmllZik+XG5cdCAqICAgbm9lbWFpbDogcHJldmVudCB0aGUgdXNlciBmcm9tIHNlbmRpbmcgZW1haWwgdGhyb3VnaCBTcGVjaWFsOkVtYWlsdXNlclxuXHQgKiAgIHBhZ2VQYXJhbTogPHNldCBpZiB0aGUgYXNzb2NpYXRlZCBibG9jayB0ZW1wbGF0ZSBhY2NlcHRzIGEgcGFnZSBwYXJhbWV0ZXI+XG5cdCAqICAgcHJlcGVuZFJlYXNvbjogPHN0cmluZyAtIHByZXBlbmRzIHRoZSB2YWx1ZSBvZiAncmVhc29uJyB0byB0aGUgZW5kIG9mIHRoZSBleGlzdGluZyByZWFzb24sIG5hbWVseSBmb3Igd2hlbiByZXZva2luZyB0YWxrIHBhZ2UgYWNjZXNzPlxuXHQgKiAgIG5vY3JlYXRlOiA8YmxvY2sgYWNjb3VudCBjcmVhdGlvbiBmcm9tIHRoZSB1c2VyJ3MgSVAgKGZvciBhbm9ueW1vdXMgdXNlcnMgb25seSk+XG5cdCAqICAgbm9uc3RhbmRhcmQ6IDx0ZW1wbGF0ZSBkb2VzIG5vdCBjb25mb3JtIHRvIHN0ZXdhcmRzaGlwIG9mIFtbZW53aWtpOldpa2lQcm9qZWN0IFVzZXIgV2FybmluZ3NdXSBhbmQgbWF5IG5vdCBhY2NlcHQgc3RhbmRhcmQgcGFyYW1ldGVycz5cblx0ICogICByZWFzb246IDxzdHJpbmcgLSBibG9jayByYXRpb25hbGUsIGFzIHdvdWxkIGFwcGVhciBpbiB0aGUgYmxvY2sgbG9nLFxuXHQgKiAgICAgICAgICAgIGFuZCB0aGUgZWRpdCBzdW1tYXJ5IGZvciB3aGVuIGFkZGluZyBibG9jayB0ZW1wbGF0ZSwgdW5sZXNzICdzdW1tYXJ5JyBpcyBzZXQ+XG5cdCAqICAgcmVhc29uUGFyYW06IDxzZXQgaWYgdGhlIGFzc29jaWF0ZWQgYmxvY2sgdGVtcGxhdGUgYWNjZXB0cyBhIHJlYXNvbiBwYXJhbWV0ZXI+XG5cdCAqICAgc2lnOiA8c3RyaW5nIC0gc2V0IHRvIH5+fn4gaWYgYmxvY2sgdGVtcGxhdGUgZG9lcyBub3QgYWNjZXB0IFwidHJ1ZVwiIGFzIHRoZSB2YWx1ZSwgb3Igc2V0IG51bGwgdG8gb21pdCBzaWcgcGFyYW0gYWx0b2dldGhlcj5cblx0ICogICBzdW1tYXJ5OiA8c3RyaW5nIC0gZWRpdCBzdW1tYXJ5IGZvciB3aGVuIGFkZGluZyBibG9jayB0ZW1wbGF0ZSB0byB1c2VyJ3MgdGFsayBwYWdlLCBpZiBub3Qgc2V0LCAncmVhc29uJyBpcyB1c2VkPlxuXHQgKiAgIHN1cHByZXNzQXJ0aWNsZUluU3VtbWFyeTogPHNldCB0byBzdXBwcmVzcyBzaG93aW5nIHRoZSBhcnRpY2xlIG5hbWUgaW4gdGhlIGVkaXQgc3VtbWFyeSwgYXMgd2l0aCBhdHRhY2sgcGFnZXM+XG5cdCAqICAgdGVtcGxhdGVOYW1lOiA8c3RyaW5nIC0gbmFtZSBvZiB0ZW1wbGF0ZSB0byB1c2UgKGluc3RlYWQgb2Yga2V5IG5hbWUpLCBlbnRyeSB3aWxsIGJlIG9taXR0ZWQgZnJvbSB0aGUgVGVtcGxhdGVzIGxpc3QuXG5cdCAqICAgICAgICAgICAgICAgICAgKGUuZy4gdXNlIGFub3RoZXIgdGVtcGxhdGUgYnV0IHdpdGggZGlmZmVyZW50IGJsb2NrIG9wdGlvbnMpPlxuXHQgKiAgIHVzZUluaXRpYWxPcHRpb25zOiA8d2hlbiBwcmVzZXQgaXMgY2hvc2VuLCBvbmx5IGNoYW5nZSBnaXZlbiBibG9jayBvcHRpb25zLCBsZWF2ZSBvdGhlcnMgYXMgdGhleSB3ZXJlPlxuXHQgKlxuXHQgKiBXQVJOSU5HOiAnYW5vbm9ubHknIGFuZCAnYWxsb3d1c2VydGFsaycgYXJlIGVuYWJsZWQgYnkgZGVmYXVsdC5cblx0ICogICBUbyBkaXNhYmxlLCBzZXQgJ2hhcmRibG9jaycgYW5kICdkaXNhYmxldGFsaycsIHJlc3BlY3RpdmVseVxuXHQgKi9cblx0VHdpbmtsZS5ibG9jay5ibG9ja1ByZXNldHNJbmZvID0ge1xuXHRcdC8vIHV3LXByZWZpeGVkXG5cdFx0J3V3LWJsb2NrJzoge1xuXHRcdFx0YXV0b2Jsb2NrOiB0cnVlLFxuXHRcdFx0ZXhwaXJ5OiAnMSBkYXknLFxuXHRcdFx0Zm9yUmVnaXN0ZXJlZE9ubHk6IHRydWUsXG5cdFx0XHRub2NyZWF0ZTogdHJ1ZSxcblx0XHRcdHBhZ2VQYXJhbTogdHJ1ZSxcblx0XHRcdHJlYXNvblBhcmFtOiB0cnVlLFxuXHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKCflsIHnpoHpgJrnn6UnLCAn5bCB6Y6W6YCa55+lJyksXG5cdFx0XHRzdXBwcmVzc0FydGljbGVJblN1bW1hcnk6IHRydWUsXG5cdFx0fSxcblx0XHQndXctYmxvY2tpbmRlZic6IHtcblx0XHRcdGF1dG9ibG9jazogdHJ1ZSxcblx0XHRcdGV4cGlyeTogJ2luZmluaXR5Jyxcblx0XHRcdGZvclJlZ2lzdGVyZWRPbmx5OiB0cnVlLFxuXHRcdFx0bm9jcmVhdGU6IHRydWUsXG5cdFx0XHRwYWdlUGFyYW06IHRydWUsXG5cdFx0XHRyZWFzb25QYXJhbTogdHJ1ZSxcblx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5bCB56aB6YCa55+lJywgJ+WwgemOlumAmuefpScpLFxuXHRcdFx0c3VwcHJlc3NBcnRpY2xlSW5TdW1tYXJ5OiB0cnVlLFxuXHRcdH0sXG5cdFx0J3V3LWJsb2Nrbm90YWxrJzoge1xuXHRcdFx0ZGlzYWJsZXRhbGs6IHRydWUsXG5cdFx0XHRwYWdlUGFyYW06IHRydWUsXG5cdFx0XHRyZWFzb25QYXJhbTogdHJ1ZSxcblx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5bCB56aB6YCa55+l77ya56aB5q2i57yW6L6R6K6o6K666aG1JywgJ+WwgemOlumAmuefpe+8muemgeatoue3qOi8r+iojuirlumggScpLFxuXHRcdFx0c3VwcHJlc3NBcnRpY2xlSW5TdW1tYXJ5OiB0cnVlLFxuXHRcdH0sXG5cdFx0J3V3LTNibG9jayc6IHtcblx0XHRcdGF1dG9ibG9jazogdHJ1ZSxcblx0XHRcdGV4cGlyeTogJzEgZGF5Jyxcblx0XHRcdG5vY3JlYXRlOiB0cnVlLFxuXHRcdFx0cGFnZVBhcmFtOiB0cnVlLFxuXHRcdFx0cmVhc29uOiB3aW5kb3cud2dVTFMoJ+i/neWPjVtbUVc6M1JSfOWbnumAgOS4jei/h+S4ieWOn+WImV1dJywgJ+mBleWPjVtbUVc6M1JSfOWbnumAgOS4jemBjuS4ieWOn+WJh11dJyksXG5cdFx0XHRzdW1tYXJ5OiB3aW5kb3cud2dVTFMoJ+WwgeemgemAmuefpe+8mui/neWPjVtbUVc6M1JSfOWbnumAgOS4jei/h+S4ieWOn+WImV1dJywgJ+WwgemOlumAmuefpe+8mumBleWPjVtbUVc6M1JSfOWbnumAgOS4jemBjuS4ieWOn+WJh11dJyksXG5cdFx0fSxcblx0XHQndXctYWRibG9jayc6IHtcblx0XHRcdGF1dG9ibG9jazogdHJ1ZSxcblx0XHRcdG5vY3JlYXRlOiB0cnVlLFxuXHRcdFx0cGFnZVBhcmFtOiB0cnVlLFxuXHRcdFx0cmVhc29uOiB3aW5kb3cud2dVTFMoJ+aVo+WPkVtbUVc6U09BUHzmlaPlj5Hlub/lkYrmiJblrqPkvKBdXScsICfmlaPnmbxbW1FXOlNPQVB85pWj55m85buj5ZGK5oiW5a6j5YKzXV0nKSxcblx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0J+WwgeemgemAmuefpe+8muaVo+WPkVtbUVc6U09BUHzmlaPlj5Hlub/lkYrmiJblrqPkvKBdXScsXG5cdFx0XHRcdCflsIHpjpbpgJrnn6XvvJrmlaPnmbxbW1FXOlNPQVB85pWj55m85buj5ZGK5oiW5a6j5YKzXV0nXG5cdFx0XHQpLFxuXHRcdH0sXG5cdFx0J3V3LWF0dGFja2Jsb2NrJzoge1xuXHRcdFx0YXV0b2Jsb2NrOiB0cnVlLFxuXHRcdFx0ZXhwaXJ5OiAnMSBkYXknLFxuXHRcdFx0bm9jcmVhdGU6IHRydWUsXG5cdFx0XHRyZWFzb246IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0J1tbUVc6Q0lWfOihjOS4uuaXoOekvF1d5oiWW1tRVzpOUEF85Lq66Lqr5pS75Ye7XV0nLFxuXHRcdFx0XHQnW1tRVzpDSVZ86KGM54K654Sh56auXV3miJZbW1FXOk5QQXzkurrouqvmlLvmk4pdXSdcblx0XHRcdCksXG5cdFx0XHRzdW1tYXJ5OiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdCflsIHnpoHpgJrnn6XvvJpbW1FXOkNJVnzooYzkuLrml6DnpLxdXeaIlltbUVc6TlBBfOS6uui6q+aUu+WHu11dJyxcblx0XHRcdFx0J+WwgemOlumAmuefpe+8mltbUVc6Q0lWfOihjOeCuueEoeemrl1d5oiWW1tRVzpOUEF85Lq66Lqr5pS75pOKXV0nXG5cdFx0XHQpLFxuXHRcdH0sXG5cdFx0J3V3LWNvcHlyaWdodGJsb2NrJzoge1xuXHRcdFx0YXV0b2Jsb2NrOiB0cnVlLFxuXHRcdFx0ZXhwaXJ5OiAnaW5maW5pdHknLFxuXHRcdFx0bm9jcmVhdGU6IHRydWUsXG5cdFx0XHRwYWdlUGFyYW06IHRydWUsXG5cdFx0XHRyZWFzb246IHdpbmRvdy53Z1VMUygn5oyB57utW1tRVzpDT1BZVklPfOS+teeKr+iRl+S9nOadg11dJywgJ+aMgee6jFtbUVc6Q09QWVZJT3zkvrXniq/okZfkvZzmrIpdXScpLFxuXHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKCflsIHnpoHpgJrnn6XvvJrmjIHnu61bW1FXOkNPUFlWSU985L6154qv6JGX5L2c5p2DXV0nLCAn5bCB6Y6W6YCa55+l77ya5oyB57qMW1tRVzpDT1BZVklPfOS+teeKr+iRl+S9nOasil1dJyksXG5cdFx0XHR0ZW1wbGF0ZU5hbWU6ICd1dy1ibG9ja2luZGVmJyxcblx0XHR9LFxuXHRcdCd1dy1kYmxvY2snOiB7XG5cdFx0XHRhdXRvYmxvY2s6IHRydWUsXG5cdFx0XHRub2NyZWF0ZTogdHJ1ZSxcblx0XHRcdHBhZ2VQYXJhbTogdHJ1ZSxcblx0XHRcdHJlYXNvbjogd2luZG93LndnVUxTKCfmjIHnu61bW1FXOlZBTnzliKDpmaTlhoXlrrldXScsICfmjIHnuoxbW1FXOlZBTnzliKrpmaTlhaflrrldXScpLFxuXHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKCflsIHnpoHpgJrnn6XvvJrmjIHnu61bW1FXOlZBTnzliKDpmaTlhoXlrrldXScsICflsIHpjpbpgJrnn6XvvJrmjIHnuoxbW1FXOlZBTnzliKrpmaTlhaflrrldXScpLFxuXHRcdH0sXG5cdFx0J3V3LWhibG9jayc6IHtcblx0XHRcdGF1dG9ibG9jazogdHJ1ZSxcblx0XHRcdG5vY3JlYXRlOiB0cnVlLFxuXHRcdFx0cGFnZVBhcmFtOiB0cnVlLFxuXHRcdFx0cmVhc29uOiB3aW5kb3cud2dVTFMoJ1tbUVc66aqa5omwfOmqmuaJsF1d5YW25LuW55So5oi3JywgJ1tbUVc66ai35pO+fOmot+aTvl1d5YW25LuW5L2/55So6ICFJyksXG5cdFx0XHRzdW1tYXJ5OiB3aW5kb3cud2dVTFMoJ+WwgeemgemAmuefpe+8mltbUVc66aqa5omwfOmqmuaJsF1d5YW25LuW55So5oi3JywgJ+WwgemOlumAmuefpe+8mltbUVc66ai35pO+fOmot+aTvl1d5YW25LuW5L2/55So6ICFJyksXG5cdFx0fSxcblx0XHQndXctdmJsb2NrJzoge1xuXHRcdFx0YXV0b2Jsb2NrOiB0cnVlLFxuXHRcdFx0ZXhwaXJ5OiAnMSBkYXknLFxuXHRcdFx0bm9jcmVhdGU6IHRydWUsXG5cdFx0XHRwYWdlUGFyYW06IHRydWUsXG5cdFx0XHRyZWFzb246IHdpbmRvdy53Z1VMUygnW1tRVzpWQU5856C05Z2PXV0nLCAnW1tRVzpWQU5856C05aOeXV0nKSxcblx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5bCB56aB6YCa55+l77yaW1tRVzpWQU5856C05Z2PXV0nLCAn5bCB6Y6W6YCa55+l77yaW1tRVzpWQU5856C05aOeXV0nKSxcblx0XHR9LFxuXHRcdCd1dy1pbGxlZ2FsYmxvY2snOiB7XG5cdFx0XHRhdXRvYmxvY2s6IHRydWUsXG5cdFx0XHRleHBpcnk6ICcxIGRheScsXG5cdFx0XHRub2NyZWF0ZTogdHJ1ZSxcblx0XHRcdHBhZ2VQYXJhbTogdHJ1ZSxcblx0XHRcdHJlYXNvbjogd2luZG93LndnVUxTKCfmjIHnu63liqDlhaXkuI3nrKblkIjkuK3lm73ku7flgLzop4LnmoTpnZ7ms5XlhoXlrrknLCAn5oyB57qM5Yqg5YWl5LiN56ym5ZCI5Lit5ZyL5YO55YC86KeA55qE6Z2e5rOV5YWn5a65JyksXG5cdFx0XHRzdW1tYXJ5OiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdCflsIHnpoHpgJrnn6XvvJrmjIHnu63liqDlhaXkuI3nrKblkIjkuK3lm73ku7flgLzop4LnmoTpnZ7ms5XlhoXlrrknLFxuXHRcdFx0XHQn5bCB6Y6W6YCa55+l77ya5oyB57qM5Yqg5YWl5LiN56ym5ZCI5Lit5ZyL5YO55YC86KeA55qE6Z2e5rOV5YWn5a65J1xuXHRcdFx0KSxcblx0XHR9LFxuXHRcdCd1dy1zb2NrYmxvY2snOiB7XG5cdFx0XHRhdXRvYmxvY2s6IHRydWUsXG5cdFx0XHRleHBpcnk6ICcxIHdlZWsnLFxuXHRcdFx0Zm9yUmVnaXN0ZXJlZE9ubHk6IHRydWUsXG5cdFx0XHRub2NyZWF0ZTogdHJ1ZSxcblx0XHRcdHJlYXNvbjogd2luZG93LndnVUxTKCfmu6XnlKhbW1FXOlNPQ0t85aSa5Liq6LSm5Y+3XV0nLCAn5r+r55SoW1tRVzpTT0NLfOWkmuWAi+izrOiZn11dJyksXG5cdFx0XHRzdW1tYXJ5OiB3aW5kb3cud2dVTFMoJ+WwgeemgemAmuefpe+8mua7peeUqFtbUVc6U09DS3zlpJrkuKrotKblj7ddXScsICflsIHpjpbpgJrnn6XvvJrmv6vnlKhbW1FXOlNPQ0t85aSa5YCL6LOs6JmfXV0nKSxcblx0XHRcdHRlbXBsYXRlTmFtZTogJ3V3LWJsb2NrJyxcblx0XHR9LFxuXHRcdC8vIHV3LXUtcHJlZml4ZWRcblx0XHQndXctdWJsb2NrJzoge1xuXHRcdFx0ZXhwaXJ5OiAnaW5maW5pdHknLFxuXHRcdFx0Zm9yUmVnaXN0ZXJlZE9ubHk6IHRydWUsXG5cdFx0XHRyZWFzb246IGB7e3V3LXVibG9ja319PCEtLSAke3dpbmRvdy53Z1VMUygn5LiN5b2T55So5oi35ZCN44CB6L2v5bCB56aBJywgJ+S4jeeVtuS9v+eUqOiAheWQjeeosScpfSAtLT5gLFxuXHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKFxuXHRcdFx0XHQn5bCB56aB6YCa55+l77ya5oKo55qE55So5oi35ZCN6L+d5Y+NW1tRVzpVfOeUqOaIt+WQjeaWuemSiF1dJyxcblx0XHRcdFx0J+WwgemOlumAmuefpe+8muaCqOeahOS9v+eUqOiAheWQjeeosemBleWPjVtbUVc6VXzkvb/nlKjogIXlkI3nqLHmlrnph51dXSdcblx0XHRcdCksXG5cdFx0fSxcblx0XHQndXctdWJsb2NrLWlsbGVnYWwnOiB7XG5cdFx0XHRhdXRvYmxvY2s6IHRydWUsXG5cdFx0XHRleHBpcnk6ICdpbmZpbml0eScsXG5cdFx0XHRmb3JSZWdpc3RlcmVkT25seTogdHJ1ZSxcblx0XHRcdG5vY3JlYXRlOiB0cnVlLFxuXHRcdFx0cmVhc29uOiBge3t1dy11YmxvY2staWxsZWdhbH19PCEtLSAke3dpbmRvdy53Z1VMUygn5LiN5ZCI6KeE55qE55So5oi35ZCNJywgJ+S4jeWQiOimj+eahOS9v+eUqOiAheWQjeeosScpfSAtLT5gLFxuXHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKFxuXHRcdFx0XHQn5bCB56aB6YCa55+l77ya5oKo55qE55So5oi35ZCN6L+d5Y+NW1tRVzpVfOeUqOaIt+WQjeaWuemSiF1dJyxcblx0XHRcdFx0J+WwgemOlumAmuefpe+8muaCqOeahOS9v+eUqOiAheWQjeeosemBleWPjVtbUVc6VXzkvb/nlKjogIXlkI3nqLHmlrnph51dXSdcblx0XHRcdCksXG5cdFx0fSxcblx0XHQndXctdWJsb2NrLXN1Z2dlc3RpdmUnOiB7XG5cdFx0XHRhdXRvYmxvY2s6IHRydWUsXG5cdFx0XHRleHBpcnk6ICdpbmZpbml0eScsXG5cdFx0XHRmb3JSZWdpc3RlcmVkT25seTogdHJ1ZSxcblx0XHRcdG5vY3JlYXRlOiB0cnVlLFxuXHRcdFx0cmVhc29uOiBge3t1dy11YmxvY2stc3VnZ2VzdGl2ZX19PCEtLSAke3dpbmRvdy53Z1VMUygn6K+v5a+844CB5re35reG5oCn55So5oi35ZCNJywgJ+iqpOWwjuOAgea3t+a3huaAp+S9v+eUqOiAheWQjeeosScpfSAtLT5gLFxuXHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKFxuXHRcdFx0XHQn5bCB56aB6YCa55+l77ya5oKo55qE55So5oi35ZCN6L+d5Y+NW1tRVzpVfOeUqOaIt+WQjeaWuemSiF1dJyxcblx0XHRcdFx0J+WwgemOlumAmuefpe+8muaCqOeahOS9v+eUqOiAheWQjeeosemBleWPjVtbUVc6VXzkvb/nlKjogIXlkI3nqLHmlrnph51dXSdcblx0XHRcdCksXG5cdFx0fSxcblx0XHQndXctdWJsb2NrLXNwYW0nOiB7XG5cdFx0XHRhdXRvYmxvY2s6IHRydWUsXG5cdFx0XHRleHBpcnk6ICdpbmZpbml0eScsXG5cdFx0XHRmb3JSZWdpc3RlcmVkT25seTogdHJ1ZSxcblx0XHRcdG5vY3JlYXRlOiB0cnVlLFxuXHRcdFx0cmVhc29uOiBge3t1dy11YmxvY2stc3BhbX19PCEtLSAke3dpbmRvdy53Z1VMUygn5a6j5Lyg5oCn55So5oi35ZCN5oiW5a6j5Lyg5oCn57yW6L6RJywgJ+Wuo+WCs+aAp+S9v+eUqOiAheWQjeeoseaIluWuo+WCs+aAp+e3qOi8rycpfSAtLT5gLFxuXHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKFxuXHRcdFx0XHQn5bCB56aB6YCa55+l77ya5oKo55qE55So5oi35ZCN6L+d5Y+NW1tRVzpVfOeUqOaIt+WQjeaWuemSiF1dJyxcblx0XHRcdFx0J+WwgemOlumAmuefpe+8muaCqOeahOS9v+eUqOiAheWQjeeosemBleWPjVtbUVc6VXzkvb/nlKjogIXlkI3nqLHmlrnph51dXSdcblx0XHRcdCksXG5cdFx0fSxcblx0XHQvLyBvdGhlciBibG9jayB0ZW1wbGF0ZXNcblx0XHQncmFuZ2UgYmxvY2snOiB7XG5cdFx0XHRleHBpcnk6ICcxIHdlZWsnLFxuXHRcdFx0cmVhc29uOiAne3tyYW5nZSBibG9ja319Jyxcblx0XHRcdG5vY3JlYXRlOiB0cnVlLFxuXHRcdFx0bm9uc3RhbmRhcmQ6IHRydWUsXG5cdFx0XHRmb3JBbm9uT25seTogdHJ1ZSxcblx0XHRcdHNpZzogJ35+Jy5jb25jYXQoJ35+JyksXG5cdFx0fSxcblx0XHQnYmxvY2tlZCBwcm94eSc6IHtcblx0XHRcdGV4cGlyeTogJzIgeWVhcnMnLFxuXHRcdFx0Zm9yQW5vbk9ubHk6IHRydWUsXG5cdFx0XHRub2NyZWF0ZTogdHJ1ZSxcblx0XHRcdG5vbnN0YW5kYXJkOiB0cnVlLFxuXHRcdFx0aGFyZGJsb2NrOiB0cnVlLFxuXHRcdFx0cmVhc29uOiAne3tibG9ja2VkIHByb3h5fX0nLFxuXHRcdFx0c2lnOiBudWxsLFxuXHRcdH0sXG5cdFx0Y2hlY2t1c2VyYmxvY2s6IHtcblx0XHRcdGV4cGlyeTogJzEgd2VlaycsXG5cdFx0XHRmb3JBbm9uT25seTogdHJ1ZSxcblx0XHRcdG5vY3JlYXRlOiB0cnVlLFxuXHRcdFx0bm9uc3RhbmRhcmQ6IHRydWUsXG5cdFx0XHRyZWFzb246ICd7e2NoZWNrdXNlcmJsb2NrfX0nLFxuXHRcdFx0c2lnOiAnfn4nLmNvbmNhdCgnfn4nKSxcblx0XHR9LFxuXHRcdCdjaGVja3VzZXJibG9jay1hY2NvdW50Jzoge1xuXHRcdFx0YXV0b2Jsb2NrOiB0cnVlLFxuXHRcdFx0ZXhwaXJ5OiAnaW5maW5pdHknLFxuXHRcdFx0Zm9yUmVnaXN0ZXJlZE9ubHk6IHRydWUsXG5cdFx0XHRub2NyZWF0ZTogdHJ1ZSxcblx0XHRcdG5vbnN0YW5kYXJkOiB0cnVlLFxuXHRcdFx0cmVhc29uOiAne3tjaGVja3VzZXJibG9jay1hY2NvdW50fX0nLFxuXHRcdFx0c2lnOiAnfn4nLmNvbmNhdCgnfn4nKSxcblx0XHR9LFxuXHRcdCdzY2hvb2wgYmxvY2snOiB7XG5cdFx0XHRleHBpcnk6ICcxIHdlZWsnLFxuXHRcdFx0Zm9yQW5vbk9ubHk6IHRydWUsXG5cdFx0XHRub2NyZWF0ZTogdHJ1ZSxcblx0XHRcdG5vbnN0YW5kYXJkOiB0cnVlLFxuXHRcdFx0cmVhc29uOiAne3tzY2hvb2wgYmxvY2t9fScsXG5cdFx0XHRzaWc6ICd+ficuY29uY2F0KCd+ficpLFxuXHRcdH0sXG5cdFx0J0JvdCBibG9jayBtZXNzYWdlJzoge1xuXHRcdFx0ZXhwaXJ5OiAnaW5maW5pdHknLFxuXHRcdFx0Zm9yUmVnaXN0ZXJlZE9ubHk6IHRydWUsXG5cdFx0XHRyZWFzb246IHdpbmRvdy53Z1VMUygn5py65Zmo5Lq65pWF6ZqcJywgJ+apn+WZqOS6uuaVhemanCcpLFxuXHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKCflsIHnpoHpgJrnn6XvvJrmnLrlmajkurrmlYXpmpwnLCAn5bCB6Y6W6YCa55+l77ya5qmf5Zmo5Lq65pWF6ZqcJyksXG5cdFx0XHRzaWc6ICd+ficuY29uY2F0KCd+ficpLFxuXHRcdH0sXG5cdFx0Ly8gb3RoZXIgYmxvY2sgcmVhc29uc1xuXHRcdGJpb2Jsb2NrOiB7XG5cdFx0XHRhdXRvYmxvY2s6IHRydWUsXG5cdFx0XHRleHBpcnk6ICcxIGRheScsXG5cdFx0XHRub2NyZWF0ZTogdHJ1ZSxcblx0XHRcdHBhZ2VQYXJhbTogdHJ1ZSxcblx0XHRcdHJlYXNvbjogd2luZG93LndnVUxTKCfov53lj43nlJ/ogIXkvKDorrDmlrnpkognLCAn6YGV5Y+N55Sf6ICF5YKz6KiY5pa56YedJyksXG5cdFx0XHRzdW1tYXJ5OiB3aW5kb3cud2dVTFMoJ+WwgeemgemAmuefpe+8mui/neWPjeeUn+iAheS8oOiusOaWuemSiCcsICflsIHpjpbpgJrnn6XvvJrpgZXlj43nlJ/ogIXlgrPoqJjmlrnph50nKSxcblx0XHRcdHRlbXBsYXRlTmFtZTogJ3V3LXZibG9jaycsXG5cdFx0fSxcblx0XHR1Y2Jsb2NrOiB7XG5cdFx0XHRhdXRvYmxvY2s6IHRydWUsXG5cdFx0XHRleHBpcnk6ICcxIGRheScsXG5cdFx0XHRub2NyZWF0ZTogdHJ1ZSxcblx0XHRcdHBhZ2VQYXJhbTogdHJ1ZSxcblx0XHRcdHJlYXNvbjogd2luZG93LndnVUxTKCflsaHmrKHlop7liqDmsqHmnIlbW1FXOlJTfOWPr+mdoOadpea6kF1d55qE6LWE5paZJywgJ+WxouasoeWinuWKoOaykuaciVtbUVc6UlN85Y+v6Z2g5L6G5rqQXV3nmoTos4fmlpknKSxcblx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0J+WwgeemgemAmuefpe+8muWxoeasoeWinuWKoOayoeaciVtbUVc6UlN85Y+v6Z2g5p2l5rqQXV3nmoTotYTmlpknLFxuXHRcdFx0XHQn5bCB6Y6W6YCa55+l77ya5bGi5qyh5aKe5Yqg5rKS5pyJW1tRVzpSU3zlj6/pnaDkvobmupBdXeeahOizh+aWmSdcblx0XHRcdCksXG5cdFx0XHR0ZW1wbGF0ZU5hbWU6ICd1dy1ibG9jaycsXG5cdFx0fSxcblx0XHRucGJsb2NrOiB7XG5cdFx0XHRhdXRvYmxvY2s6IHRydWUsXG5cdFx0XHRleHBpcnk6ICcxIGRheScsXG5cdFx0XHRub2NyZWF0ZTogdHJ1ZSxcblx0XHRcdHBhZ2VQYXJhbTogdHJ1ZSxcblx0XHRcdHJlYXNvbjogd2luZG93LndnVUxTKCflnKjmnaHnm67kuK3lop7liqDml6DmhI/kuYnmloflrZcnLCAn5Zyo5qKd55uu5Lit5aKe5Yqg54Sh5oSP576p5paH5a2XJyksXG5cdFx0XHRzdW1tYXJ5OiB3aW5kb3cud2dVTFMoJ+WwgeemgemAmuefpe+8muWcqOadoeebruS4reWinuWKoOaXoOaEj+S5ieaWh+WtlycsICflsIHpjpbpgJrnn6XvvJrlnKjmop3nm67kuK3lop7liqDnhKHmhI/nvqnmloflrZcnKSxcblx0XHRcdHRlbXBsYXRlTmFtZTogJ3V3LXZibG9jaycsXG5cdFx0fSxcblx0XHQncG9pbnQtYmxvY2snOiB7XG5cdFx0XHRhdXRvYmxvY2s6IHRydWUsXG5cdFx0XHRleHBpcnk6ICcxIGRheScsXG5cdFx0XHRub2NyZWF0ZTogdHJ1ZSxcblx0XHRcdHBhZ2VQYXJhbTogdHJ1ZSxcblx0XHRcdHJlYXNvblBhcmFtOiB0cnVlLFxuXHRcdFx0cmVhc29uOiB3aW5kb3cud2dVTFMoJ+aMgee7reaJk+WItuW6puaTpui+ueeQgycsICfmjIHnuozmiZPliLbluqbmk6bpgornkIMnKSxcblx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5bCB56aB6YCa55+l77ya5oyB57ut5omT5Yi25bqm5pOm6L6555CDJywgJ+WwgemOlumAmuefpe+8muaMgee6jOaJk+WItuW6puaTpumCiueQgycpLFxuXHRcdFx0dGVtcGxhdGVOYW1lOiAndXctYmxvY2snLFxuXHRcdH0sXG5cdFx0J3NvY2stY29udHJpYnMnOiB7XG5cdFx0XHRhdXRvYmxvY2s6IHRydWUsXG5cdFx0XHRleHBpcnk6ICdpbmZpbml0eScsXG5cdFx0XHRmb3JSZWdpc3RlcmVkT25seTogdHJ1ZSxcblx0XHRcdG5vY3JlYXRlOiB0cnVlLFxuXHRcdFx0cmVhc29uUGFyYW06IHRydWUsXG5cdFx0XHRyZWFzb246IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0J+ehruiupOS4ultbUVc6U09DS3zlgoDlhKFdXeaIluecn+S6uuWCgOWEoSAtIOagueaNrueUqOaIt+i0oeeMruehruWumicsXG5cdFx0XHRcdCfnorroqo3ngrpbW1FXOlNPQ0t85YKA5YShXV3miJbnnJ/kurrlgoDlhKEgLSDmoLnmk5rkvb/nlKjogIXosqLnjbvnorrlrponXG5cdFx0XHQpLFxuXHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKFxuXHRcdFx0XHQn5bCB56aB6YCa55+l77ya56Gu6K6k5Li6W1tRVzpTT0NLfOWCgOWEoV1d5oiW55yf5Lq65YKA5YShJyxcblx0XHRcdFx0J+WwgemOlumAmuefpe+8mueiuuiqjeeCultbUVc6U09DS3zlgoDlhKFdXeaIluecn+S6uuWCgOWEoSdcblx0XHRcdCksXG5cdFx0XHR0ZW1wbGF0ZU5hbWU6ICd1dy1ibG9ja2luZGVmJyxcblx0XHR9LFxuXHRcdCdzb2NrLWN1Jzoge1xuXHRcdFx0YXV0b2Jsb2NrOiB0cnVlLFxuXHRcdFx0ZXhwaXJ5OiAnaW5maW5pdHknLFxuXHRcdFx0Zm9yUmVnaXN0ZXJlZE9ubHk6IHRydWUsXG5cdFx0XHRub2NyZWF0ZTogdHJ1ZSxcblx0XHRcdHJlYXNvblBhcmFtOiB0cnVlLFxuXHRcdFx0cmVhc29uOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdCfnoa7orqTkuLpbW1FXOlNPQ0t85YKA5YShXV3miJbnnJ/kurrlgoDlhKEgLSDnlKjmiLfmn6XmoLjnoa7orqQnLFxuXHRcdFx0XHQn56K66KqN54K6W1tRVzpTT0NLfOWCgOWEoV1d5oiW55yf5Lq65YKA5YShIC0g5L2/55So6ICF5p+l5qC456K66KqNJ1xuXHRcdFx0KSxcblx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0J+WwgeemgemAmuefpe+8muehruiupOS4ultbUVc6U09DS3zlgoDlhKFdXeaIluecn+S6uuWCgOWEoScsXG5cdFx0XHRcdCflsIHpjpbpgJrnn6XvvJrnorroqo3ngrpbW1FXOlNPQ0t85YKA5YShXV3miJbnnJ/kurrlgoDlhKEnXG5cdFx0XHQpLFxuXHRcdFx0dGVtcGxhdGVOYW1lOiAndXctYmxvY2tpbmRlZicsXG5cdFx0fSxcblx0XHQndXctdWJsb2NrLWF0dGFjayc6IHtcblx0XHRcdGF1dG9ibG9jazogdHJ1ZSxcblx0XHRcdGV4cGlyeTogJ2luZmluaXR5Jyxcblx0XHRcdGZvclJlZ2lzdGVyZWRPbmx5OiB0cnVlLFxuXHRcdFx0bm9jcmVhdGU6IHRydWUsXG5cdFx0XHRyZWFzb246IGB7e3V3LXVibG9jay1hdHRhY2t9fTwhLS0gJHt3aW5kb3cud2dVTFMoJ+aUu+WHu+aAp+eUqOaIt+WQjScsICfmlLvmk4rmgKfkvb/nlKjogIXlkI3nqLEnKX0gLS0+YCxcblx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUygn5bCB56aB6YCa55+l77ya5pS75Ye75oCn55So5oi35ZCNJywgJ+WwgemOlumAmuefpe+8muaUu+aTiuaAp+S9v+eUqOiAheWQjeeosScpLFxuXHRcdH0sXG5cdFx0Ly8gQmVnaW4gcGFydGlhbCBibG9jayB0ZW1wbGF0ZXMsIGFjY2Vzc2VkIGluIFR3aW5rbGUuYmxvY2suYmxvY2tHcm91cHNQYXJ0aWFsXG5cdFx0J3V3LXBibG9jayc6IHtcblx0XHRcdGF1dG9ibG9jazogdHJ1ZSxcblx0XHRcdGV4cGlyeTogJzEgZGF5Jyxcblx0XHRcdG5vY3JlYXRlOiBmYWxzZSxcblx0XHRcdHBhZ2VQYXJhbTogZmFsc2UsXG5cdFx0XHRyZWFzb25QYXJhbTogdHJ1ZSxcblx0XHRcdHN1bW1hcnk6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0J+WwgeemgemAmuefpe+8muaCqOW3suiiq+emgeatoue8lui+keaxgumXu+eZvuenkeeahOmDqOWIhuWMuuWfnycsXG5cdFx0XHRcdCflsIHpjpbpgJrnn6XvvJrmgqjlt7LooqvnpoHmraLnt6jovK/msYLogZ7nmb7np5HnmoTpg6jliIbljYDln58nXG5cdFx0XHQpLFxuXHRcdH0sXG5cdFx0J3V3LXBibG9ja2luZGVmJzoge1xuXHRcdFx0YXV0b2Jsb2NrOiB0cnVlLFxuXHRcdFx0ZXhwaXJ5OiAnaW5maW5pdHknLFxuXHRcdFx0bm9jcmVhdGU6IGZhbHNlLFxuXHRcdFx0cGFnZVBhcmFtOiBmYWxzZSxcblx0XHRcdHJlYXNvblBhcmFtOiB0cnVlLFxuXHRcdFx0c3VtbWFyeTogd2luZG93LndnVUxTKFxuXHRcdFx0XHQn5bCB56aB6YCa55+l77ya5oKo5bey6KKr5rC45LmF56aB5q2i57yW6L6R5rGC6Ze755m+56eR55qE6YOo5YiG5Yy65Z+fJyxcblx0XHRcdFx0J+WwgemOlumAmuefpe+8muaCqOW3suiiq+awuOS5heemgeatoue3qOi8r+axguiBnueZvuenkeeahOmDqOWIhuWNgOWfnydcblx0XHRcdCksXG5cdFx0fSxcblx0fTtcblx0VHdpbmtsZS5ibG9jay50cmFuc2Zvcm1CbG9ja1ByZXNldHMgPSAoKSA9PiB7XG5cdFx0Ly8gTWVyZ2UgY3VzdG9tIHJlYXNvblxuXHRcdGZvciAoY29uc3QgaXRlbSBvZiBUd2lua2xlLmdldFByZWYoJ2N1c3RvbUJsb2NrUmVhc29uTGlzdCcpKSB7XG5cdFx0XHRjb25zdCBuZXdLZXkgPSBgJHtpdGVtLnZhbHVlfXwke2l0ZW0ubGFiZWx9YDtcblx0XHRcdFR3aW5rbGUuYmxvY2suYmxvY2tQcmVzZXRzSW5mb1tuZXdLZXldID0ge1xuXHRcdFx0XHRhdXRvYmxvY2s6IHRydWUsXG5cdFx0XHRcdG5vY3JlYXRlOiB0cnVlLFxuXHRcdFx0XHQuLi5Ud2lua2xlLmJsb2NrLmJsb2NrUHJlc2V0c0luZm9baXRlbS52YWx1ZV0sXG5cdFx0XHRcdHJlYXNvbjogaXRlbS5sYWJlbCxcblx0XHRcdFx0dGVtcGxhdGVOYW1lOiBpdGVtLnZhbHVlLFxuXHRcdFx0fTtcblx0XHRcdGlmIChUd2lua2xlLmJsb2NrLmJsb2NrUHJlc2V0c0luZm9baXRlbS52YWx1ZV0gPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRUd2lua2xlLmJsb2NrLmJsb2NrUHJlc2V0c0luZm9baXRlbS52YWx1ZV0gPSB7XG5cdFx0XHRcdFx0cGFnZVBhcmFtOiB0cnVlLFxuXHRcdFx0XHRcdHJlYXNvblBhcmFtOiB0cnVlLFxuXHRcdFx0XHRcdGN1c3RvbTogdHJ1ZSxcblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHR9XG5cdFx0Ly8gc3VwcGx5IHNlbnNpYmxlIGRlZmF1bHRzXG5cdFx0Zm9yIChjb25zdCBbcHJlc2V0LCBzZXR0aW5nc10gb2YgT2JqZWN0LmVudHJpZXMoVHdpbmtsZS5ibG9jay5ibG9ja1ByZXNldHNJbmZvKSkge1xuXHRcdFx0c2V0dGluZ3Muc3VtbWFyeSB8fD0gc2V0dGluZ3MucmVhc29uO1xuXHRcdFx0c2V0dGluZ3Muc2lnID0gc2V0dGluZ3Muc2lnID09PSB1bmRlZmluZWQgPyAneWVzJyA6IHNldHRpbmdzLnNpZztcblx0XHRcdHNldHRpbmdzLmluZGVmaW5pdGUgfHw9IE1vcmViaXRzLnN0cmluZy5pc0luZmluaXR5KHNldHRpbmdzLmV4cGlyeSk7XG5cdFx0XHRpZiAoIVR3aW5rbGUuYmxvY2suaXNSZWdpc3RlcmVkICYmIHNldHRpbmdzLmluZGVmaW5pdGUpIHtcblx0XHRcdFx0c2V0dGluZ3MuZXhwaXJ5ID0gJzEgZGF5Jztcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHNldHRpbmdzLmV4cGlyeSB8fD0gJzEgZGF5Jztcblx0XHRcdH1cblx0XHRcdFR3aW5rbGUuYmxvY2suYmxvY2tQcmVzZXRzSW5mb1twcmVzZXRdID0gc2V0dGluZ3M7XG5cdFx0fVxuXHR9O1xuXHQvLyBUaGVzZSBhcmUgdGhlIGdyb3VwcyBvZiBwcmVzZXRzIGFuZCBkZWZpbmVzIHRoZSBvcmRlciBpbiB3aGljaCB0aGV5IGFwcGVhci4gRm9yIGVhY2ggbGlzdCBpdGVtOlxuXHQvLyAgIGxhYmVsOiA8c3RyaW5nLCB0aGUgZGVzY3JpcHRpb24gdGhhdCB3aWxsIGJlIHZpc2libGUgaW4gdGhlIGRyb3Bkb3duPlxuXHQvLyAgIHZhbHVlOiA8c3RyaW5nLCB0aGUga2V5IG9mIGEgcHJlc2V0IGluIGJsb2NrUHJlc2V0c0luZm8+XG5cdC8vICAgbWV0YTogPGJvb2xlYW4sIHNob3cgaW4gdGVtcGxhdGVzIG9ubHk+XG5cdFR3aW5rbGUuYmxvY2suYmxvY2tHcm91cHMgPSBbXG5cdFx0e1xuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5pmu6YCa5bCB56aBJywgJ+aZrumAmuWwgemOlicpLFxuXHRcdFx0bGlzdDogW1xuXHRcdFx0XHR7bGFiZWw6IHdpbmRvdy53Z1VMUygn6YCa55So5bCB56aB77yI6Ieq5a6a5LmJ55CG55Sx77yJJywgJ+mAmueUqOWwgemOlu+8iOiHquiogueQhueUse+8iScpLCB2YWx1ZTogJ3V3LWJsb2NrJ30sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfml6DpmZDmnJ/lsIHnpoHvvIjoh6rlrprkuYnnkIbnlLHvvIknLCAn54Sh6ZmQ5pyf5bCB6Y6W77yI6Ieq6KiC55CG55Sx77yJJyksXG5cdFx0XHRcdFx0dmFsdWU6ICd1dy1ibG9ja2luZGVmJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e2xhYmVsOiB3aW5kb3cud2dVTFMoJ+emgeatoue8lui+keiuqOiuuumhtScsICfnpoHmraLnt6jovK/oqI7oq5bpoIEnKSwgdmFsdWU6ICd1dy1ibG9ja25vdGFsaycsIG1ldGE6IHRydWV9LFxuXHRcdFx0XHR7bGFiZWw6IHdpbmRvdy53Z1VMUygn6L+d5Y+N5Zue6YCA5LiN6L+H5LiJ5Y6f5YiZJywgJ+mBleWPjeWbnumAgOS4jemBjuS4ieWOn+WJhycpLCB2YWx1ZTogJ3V3LTNibG9jayd9LFxuXHRcdFx0XHR7bGFiZWw6IHdpbmRvdy53Z1VMUygn5pWj5Y+R5bm/5ZGK5oiW5a6j5LygJywgJ+aVo+eZvOW7o+WRiuaIluWuo+WCsycpLCB2YWx1ZTogJ3V3LWFkYmxvY2snfSxcblx0XHRcdFx0e2xhYmVsOiB3aW5kb3cud2dVTFMoJ+ihjOS4uuaXoOekvOaIluS6uui6q+aUu+WHuycsICfooYzngrrnhKHnpq7miJbkurrouqvmlLvmk4onKSwgdmFsdWU6ICd1dy1hdHRhY2tibG9jayd9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5aSa5qyh5Yqg5YWl5L6154qv6JGX5L2c5p2D55qE5YaF5a65JywgJ+WkmuasoeWKoOWFpeS+teeKr+iRl+S9nOasiueahOWFp+WuuScpLFxuXHRcdFx0XHRcdHZhbHVlOiAndXctY29weXJpZ2h0YmxvY2snLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7bGFiZWw6IHdpbmRvdy53Z1VMUygn5peg5pWF5Yig6Zmk5YaF5a65JywgJ+eEoeaVheWIqumZpOWFp+WuuScpLCB2YWx1ZTogJ3V3LWRibG9jayd9LFxuXHRcdFx0XHR7bGFiZWw6IHdpbmRvdy53Z1VMUygn6aqa5omw55So5oi3JywgJ+mot+aTvuS9v+eUqOiAhScpLCB2YWx1ZTogJ3V3LWhibG9jayd9LFxuXHRcdFx0XHR7bGFiZWw6IHdpbmRvdy53Z1VMUygn56C05Z2PJywgJ+egtOWjnicpLCB2YWx1ZTogJ3V3LXZibG9jaycsIHNlbGVjdGVkOiB0cnVlfSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+aMgee7reWKoOWFpeS4jeespuWQiOS4reWbveS7t+WAvOingueahOmdnuazleWGheWuuScsICfmjIHnuozliqDlhaXkuI3nrKblkIjkuK3lnIvlg7nlgLzop4DnmoTpnZ7ms5XlhaflrrknKSxcblx0XHRcdFx0XHR2YWx1ZTogJ3V3LWlsbGVnYWxibG9jaycsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtsYWJlbDogd2luZG93LndnVUxTKCfmu6XnlKjlpJrkuKrotKblj7cnLCAn5r+r55So5aSa5YCL6LOs6JmfJyksIHZhbHVlOiAndXctc29ja2Jsb2NrJ30sXG5cdFx0XHRcdC8vIG90aGVyIGJsb2NrIHJlYXNvbnNcblx0XHRcdFx0e2xhYmVsOiB3aW5kb3cud2dVTFMoJ+i/neWPjeeUn+iAheS8oOiusOaWuemSiCcsICfpgZXlj43nlJ/ogIXlgrPoqJjmlrnph50nKSwgdmFsdWU6ICdiaW9ibG9jayd9LFxuXHRcdFx0XHR7bGFiZWw6IHdpbmRvdy53Z1VMUygn5bGh5qyh5aKe5Yqg5rKh5pyJ5Y+v6Z2g5p2l5rqQ55qE6LWE5paZJywgJ+WxouasoeWinuWKoOaykuacieWPr+mdoOS+hua6kOeahOizh+aWmScpLCB2YWx1ZTogJ3VjYmxvY2snfSxcblx0XHRcdFx0e2xhYmVsOiB3aW5kb3cud2dVTFMoJ+WcqOadoeebruS4reWinuWKoOaXoOaEj+S5ieaWh+WtlycsICflnKjmop3nm67kuK3lop7liqDnhKHmhI/nvqnmloflrZcnKSwgdmFsdWU6ICducGJsb2NrJ30sXG5cdFx0XHRcdHtsYWJlbDogd2luZG93LndnVUxTKCfmjIHnu63miZPliLbluqbmk6bovrnnkIMnLCAn5oyB57qM5omT5Yi25bqm5pOm6YKK55CDJyksIHZhbHVlOiAncG9pbnQtYmxvY2snfSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn56Gu6K6k5Li65YKA5YSh5oiW55yf5Lq65YKA5YSh77yI5qC55o2u55So5oi36LSh54yu56Gu5a6a77yJJyxcblx0XHRcdFx0XHRcdCfnorroqo3ngrrlgoDlhKHmiJbnnJ/kurrlgoDlhKHvvIjmoLnmk5rkvb/nlKjogIXosqLnjbvnorrlrprvvIknXG5cdFx0XHRcdFx0KSxcblx0XHRcdFx0XHR2YWx1ZTogJ3NvY2stY29udHJpYnMnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfnoa7orqTkuLrlgoDlhKHmiJbnnJ/kurrlgoDlhKHvvIjnlKjmiLfmn6XmoLjnoa7orqTvvIknLFxuXHRcdFx0XHRcdFx0J+eiuuiqjeeCuuWCgOWEoeaIluecn+S6uuWCgOWEoe+8iOS9v+eUqOiAheafpeaguOeiuuiqje+8iSdcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdHZhbHVlOiAnc29jay1jdScsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmnLrlmajkurrlj5HnlJ/mlYXpmpzlubblv4XpobvntKfmgKXlgZzmraInLCAn5qmf5Zmo5Lq655m855Sf5pWF6Zqc5Lim5b+F6aCI57eK5oCl5YGc5q2iJyksXG5cdFx0XHRcdFx0dmFsdWU6ICdCb3QgYmxvY2sgbWVzc2FnZScsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0Y3VzdG9tOiB0cnVlLFxuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6Ieq5a6a5LmJ5bCB56aB55CG55SxJywgJ+iHquioguWwgemOlueQhueUsScpLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn55So5oi35ZCN5bCB56aBJywgJ+S9v+eUqOiAheWQjeeoseWwgemOlicpLFxuXHRcdFx0bGlzdDogW1xuXHRcdFx0XHR7bGFiZWw6IHdpbmRvdy53Z1VMUygn6L+d5Y+N55So5oi35ZCN5pa56ZKIJywgJ+mBleWPjeS9v+eUqOiAheWQjeeoseaWuemHnScpLCB2YWx1ZTogJ3V3LXVibG9jayd9LFxuXHRcdFx0XHR7bGFiZWw6IHdpbmRvdy53Z1VMUygn5LiN5ZCI6KeE55qE55So5oi35ZCNJywgJ+S4jeWQiOimj+eahOS9v+eUqOiAheWQjeeosScpLCB2YWx1ZTogJ3V3LXVibG9jay1pbGxlZ2FsJ30sXG5cdFx0XHRcdHtsYWJlbDogd2luZG93LndnVUxTKCflrqPkvKDmgKfnlKjmiLflkI0nLCAn5a6j5YKz5oCn5L2/55So6ICF5ZCN56ixJyksIHZhbHVlOiAndXctdWJsb2NrLXNwYW0nfSxcblx0XHRcdFx0e2xhYmVsOiB3aW5kb3cud2dVTFMoJ+aUu+WHu+aAp+eUqOaIt+WQjScsICfmlLvmk4rmgKfkvb/nlKjogIXlkI3nqLEnKSwgdmFsdWU6ICd1dy11YmxvY2stYXR0YWNrJ30sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmt7fmt4bmgKfmiJbor6/lr7zmgKfnlKjmiLflkI0nLCAn5re35reG5oCn5oiW6Kqk5bCO5oCn5L2/55So6ICF5ZCN56ixJyksXG5cdFx0XHRcdFx0dmFsdWU6ICd1dy11YmxvY2stc3VnZ2VzdGl2ZScsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0bGFiZWw6ICflhbbku5bmqKHmnb8nLFxuXHRcdFx0bGlzdDogW1xuXHRcdFx0XHR7bGFiZWw6ICdyYW5nZSBibG9jaycsIHZhbHVlOiAncmFuZ2UgYmxvY2snLCBmb3JBbm9uT25seTogdHJ1ZX0sXG5cdFx0XHRcdHtsYWJlbDogJ3NjaG9vbCBibG9jaycsIHZhbHVlOiAnc2Nob29sIGJsb2NrJywgZm9yQW5vbk9ubHk6IHRydWV9LFxuXHRcdFx0XHR7bGFiZWw6ICdibG9ja2VkIHByb3h5JywgdmFsdWU6ICdibG9ja2VkIHByb3h5JywgZm9yQW5vbk9ubHk6IHRydWV9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn55So5oi35p+l5qC45bCB56aB77yI5Li755So5oi377yJJywgJ+S9v+eUqOiAheafpeaguOWwgemOlu+8iOS4u+S9v+eUqOiAhe+8iScpLFxuXHRcdFx0XHRcdHZhbHVlOiAnY2hlY2t1c2VyYmxvY2snLFxuXHRcdFx0XHRcdGZvckFub25Pbmx5OiB0cnVlLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn55So5oi35p+l5qC45bCB56aB77yI5a2Q55So5oi377yJJywgJ+S9v+eUqOiAheafpeaguOWwgemOlu+8iOWtkOS9v+eUqOiAhe+8iScpLFxuXHRcdFx0XHRcdHZhbHVlOiAnY2hlY2t1c2VyYmxvY2stYWNjb3VudCcsXG5cdFx0XHRcdFx0Zm9yUmVnaXN0ZXJlZE9ubHk6IHRydWUsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdF07XG5cdFR3aW5rbGUuYmxvY2suYmxvY2tHcm91cHNQYXJ0aWFsID0gW1xuXHRcdHtcblx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+W4uOingemDqOWIhuWwgeemgeeQhueUsScsICfluLjopovpg6jliIblsIHpjpbnkIbnlLEnKSxcblx0XHRcdGxpc3Q6IFtcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+mAmueUqOmDqOWIhuWwgeemge+8iOiHquWumuS5ieeQhueUse+8iScsICfpgJrnlKjpg6jliIblsIHpjpbvvIjoh6roqILnkIbnlLHvvIknKSxcblx0XHRcdFx0XHR2YWx1ZTogJ3V3LXBibG9jaycsXG5cdFx0XHRcdFx0c2VsZWN0ZWQ6IHRydWUsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfml6DpmZDmnJ/pg6jliIblsIHnpoHvvIjoh6rlrprkuYnnkIbnlLHvvIknLCAn54Sh6ZmQ5pyf6YOo5YiG5bCB6Y6W77yI6Ieq6KiC55CG55Sx77yJJyksXG5cdFx0XHRcdFx0dmFsdWU6ICd1dy1wYmxvY2tpbmRlZicsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdF07XG5cdFR3aW5rbGUuYmxvY2suY2FsbGJhY2suZmlsdGVyZWRfYmxvY2tfZ3JvdXBzID0gKGdyb3VwLCBzaG93X3RlbXBsYXRlKSA9PiB7XG5cdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWpxdWVyeS9uby1tYXAtdXRpbFxuXHRcdHJldHVybiAkLm1hcChncm91cCwgKGJsb2NrR3JvdXApID0+IHtcblx0XHRcdC8vIEFkZCBjdXN0b20gcmVhc29uXG5cdFx0XHRpZiAoYmxvY2tHcm91cC5jdXN0b20pIHtcblx0XHRcdFx0aWYgKHNob3dfdGVtcGxhdGUpIHtcblx0XHRcdFx0XHRsZXQgdGVtcGxhdGVzID0gQXJyYXkucHJvdG90eXBlLm1hcC5jYWxsKFR3aW5rbGUuZ2V0UHJlZignY3VzdG9tQmxvY2tSZWFzb25MaXN0JyksIChpdGVtKSA9PiB7XG5cdFx0XHRcdFx0XHRpZiAoVHdpbmtsZS5ibG9jay5ibG9ja1ByZXNldHNJbmZvW2l0ZW0udmFsdWVdLmN1c3RvbSkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gaXRlbS52YWx1ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHR0ZW1wbGF0ZXMgPSBNb3JlYml0cy5hcnJheS51bmlxKHRlbXBsYXRlcyk7XG5cdFx0XHRcdFx0YmxvY2tHcm91cC5saXN0ID0gQXJyYXkucHJvdG90eXBlLm1hcC5jYWxsKHRlbXBsYXRlcywgKHRlbXBsYXRlKSA9PiB7XG5cdFx0XHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfoh6rlrprkuYnmqKHmnb8nLCAn6Ieq6KiC5qih5p2/JyksXG5cdFx0XHRcdFx0XHRcdHZhbHVlOiB0ZW1wbGF0ZSxcblx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0YmxvY2tHcm91cC5saXN0ID0gQXJyYXkucHJvdG90eXBlLm1hcC5jYWxsKFR3aW5rbGUuZ2V0UHJlZignY3VzdG9tQmxvY2tSZWFzb25MaXN0JyksIChpdGVtKSA9PiB7XG5cdFx0XHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogaXRlbS5sYWJlbCxcblx0XHRcdFx0XHRcdFx0dmFsdWU6IGAke2l0ZW0udmFsdWV9fCR7aXRlbS5sYWJlbH1gLFxuXHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWpxdWVyeS9uby1tYXAtdXRpbFxuXHRcdFx0Y29uc3QgbGlzdCA9ICQubWFwKGJsb2NrR3JvdXAubGlzdCwgKGJsb2NrUHJlc2V0KSA9PiB7XG5cdFx0XHRcdGlmICghc2hvd190ZW1wbGF0ZSAmJiBibG9ja1ByZXNldC5tZXRhKSB7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHN3aXRjaCAoYmxvY2tQcmVzZXQudmFsdWUpIHtcblx0XHRcdFx0XHRjYXNlICdyYW5nZSBibG9jayc6XG5cdFx0XHRcdFx0XHRpZiAoIU1vcmViaXRzLmlwLmlzUmFuZ2UocmVsZXZhbnRVc2VyTmFtZSkpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0YmxvY2tQcmVzZXQuc2VsZWN0ZWQgPSAhTW9yZWJpdHMuaXAuZ2V0NjQocmVsZXZhbnRVc2VyTmFtZSk7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdFx0Y29uc3QgYmxvY2tTZXR0aW5ncyA9IFR3aW5rbGUuYmxvY2suYmxvY2tQcmVzZXRzSW5mb1tibG9ja1ByZXNldC52YWx1ZV07XG5cdFx0XHRcdGxldCByZWdpc3RyYXRpb25SZXN0cmljdDtcblx0XHRcdFx0aWYgKGJsb2NrU2V0dGluZ3MuZm9yUmVnaXN0ZXJlZE9ubHkpIHtcblx0XHRcdFx0XHRyZWdpc3RyYXRpb25SZXN0cmljdCA9IFR3aW5rbGUuYmxvY2suaXNSZWdpc3RlcmVkO1xuXHRcdFx0XHR9IGVsc2UgaWYgKGJsb2NrU2V0dGluZ3MuZm9yQW5vbk9ubHkpIHtcblx0XHRcdFx0XHRyZWdpc3RyYXRpb25SZXN0cmljdCA9ICFUd2lua2xlLmJsb2NrLmlzUmVnaXN0ZXJlZDtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRyZWdpc3RyYXRpb25SZXN0cmljdCA9IHRydWU7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCEoYmxvY2tTZXR0aW5ncy50ZW1wbGF0ZU5hbWUgJiYgc2hvd190ZW1wbGF0ZSkgJiYgcmVnaXN0cmF0aW9uUmVzdHJpY3QpIHtcblx0XHRcdFx0XHRjb25zdCB0ZW1wbGF0ZU5hbWUgPSBibG9ja1NldHRpbmdzLnRlbXBsYXRlTmFtZSB8fCBibG9ja1ByZXNldC52YWx1ZTtcblx0XHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdFx0bGFiZWw6IChzaG93X3RlbXBsYXRlID8gYHt7JHt0ZW1wbGF0ZU5hbWV9fX06IGAgOiAnJykgKyBibG9ja1ByZXNldC5sYWJlbCxcblx0XHRcdFx0XHRcdHZhbHVlOiBibG9ja1ByZXNldC52YWx1ZSxcblx0XHRcdFx0XHRcdGRhdGE6IFtcblx0XHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcdG5hbWU6ICd0ZW1wbGF0ZS1uYW1lJyxcblx0XHRcdFx0XHRcdFx0XHR2YWx1ZTogdGVtcGxhdGVOYW1lLFxuXHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XSxcblx0XHRcdFx0XHRcdHNlbGVjdGVkOiAhIWJsb2NrUHJlc2V0LnNlbGVjdGVkLFxuXHRcdFx0XHRcdFx0ZGlzYWJsZWQ6ICEhYmxvY2tQcmVzZXQuZGlzYWJsZWQsXG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdFx0XHRpZiAobGlzdC5sZW5ndGgpIHtcblx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRsYWJlbDogYmxvY2tHcm91cC5sYWJlbCxcblx0XHRcdFx0XHRsaXN0LFxuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdH0pO1xuXHR9O1xuXHRUd2lua2xlLmJsb2NrLmNhbGxiYWNrLmNoYW5nZV9wcmVzZXQgPSAoZSkgPT4ge1xuXHRcdGNvbnN0IHtmb3JtfSA9IGUudGFyZ2V0O1xuXHRcdGNvbnN0IGtleSA9IGZvcm0ucHJlc2V0LnZhbHVlO1xuXHRcdGlmICgha2V5KSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdFR3aW5rbGUuYmxvY2suY2FsbGJhY2sudXBkYXRlX2Zvcm0oZSwgVHdpbmtsZS5ibG9jay5ibG9ja1ByZXNldHNJbmZvW2tleV0pO1xuXHRcdGlmIChmb3JtLnRlbXBsYXRlKSB7XG5cdFx0XHRmb3JtLnRlbXBsYXRlLnZhbHVlID0gVHdpbmtsZS5ibG9jay5ibG9ja1ByZXNldHNJbmZvW2tleV0udGVtcGxhdGVOYW1lIHx8IGtleTtcblx0XHRcdFR3aW5rbGUuYmxvY2suY2FsbGJhY2suY2hhbmdlX3RlbXBsYXRlKGUpO1xuXHRcdH1cblx0fTtcblx0VHdpbmtsZS5ibG9jay5jYWxsYmFjay5jaGFuZ2VfZXhwaXJ5ID0gKGUpID0+IHtcblx0XHRjb25zdCB7ZXhwaXJ5fSA9IGUudGFyZ2V0LmZvcm07XG5cdFx0aWYgKGUudGFyZ2V0LnZhbHVlID09PSAnY3VzdG9tJykge1xuXHRcdFx0TW9yZWJpdHMucXVpY2tGb3JtLnNldEVsZW1lbnRWaXNpYmlsaXR5KGV4cGlyeS5wYXJlbnROb2RlLCB0cnVlKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0TW9yZWJpdHMucXVpY2tGb3JtLnNldEVsZW1lbnRWaXNpYmlsaXR5KGV4cGlyeS5wYXJlbnROb2RlLCBmYWxzZSk7XG5cdFx0XHRleHBpcnkudmFsdWUgPSBlLnRhcmdldC52YWx1ZTtcblx0XHR9XG5cdH07XG5cdFR3aW5rbGUuYmxvY2suc2VlQWxzb3MgPSBbXTtcblx0VHdpbmtsZS5ibG9jay5jYWxsYmFjay50b2dnbGVfc2VlX2Fsc29zID0gZnVuY3Rpb24gKCkge1xuXHRcdGNvbnN0IHJlYXNvbiA9IHRoaXMuZm9ybS5yZWFzb24udmFsdWUucmVwbGFjZShcblx0XHRcdG5ldyBSZWdFeHAoYCg8IS0tICko5Y+C6KeBfOWPg+imiykke1R3aW5rbGUuYmxvY2suc2VlQWxzb3Muam9pbign44CBJyl9KCAtLT4pYCksXG5cdFx0XHQnJ1xuXHRcdCk7XG5cdFx0VHdpbmtsZS5ibG9jay5zZWVBbHNvcyA9IFR3aW5rbGUuYmxvY2suc2VlQWxzb3MuZmlsdGVyKChlbCkgPT4ge1xuXHRcdFx0cmV0dXJuIGVsICE9PSB0aGlzLnZhbHVlO1xuXHRcdH0pO1xuXHRcdGlmICh0aGlzLmNoZWNrZWQpIHtcblx0XHRcdFR3aW5rbGUuYmxvY2suc2VlQWxzb3NbVHdpbmtsZS5ibG9jay5zZWVBbHNvcy5sZW5ndGhdID0gdGhpcy52YWx1ZTtcblx0XHR9XG5cdFx0Y29uc3Qgc2VlQWxzb01lc3NhZ2UgPSBUd2lua2xlLmJsb2NrLnNlZUFsc29zLmpvaW4oJ+OAgScpO1xuXHRcdGlmIChUd2lua2xlLmJsb2NrLnNlZUFsc29zLmxlbmd0aCkge1xuXHRcdFx0dGhpcy5mb3JtLnJlYXNvbi52YWx1ZSA9IGAke3JlYXNvbn08IS0tICR7d2luZG93LndnVUxTKCflj4Lop4EnLCAn5Y+D6KaLJyl9JHtzZWVBbHNvTWVzc2FnZX0gLS0+YDtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5mb3JtLnJlYXNvbi52YWx1ZSA9IHJlYXNvbjtcblx0XHR9XG5cdH07XG5cdC8vIE5vIGRzXG5cdFR3aW5rbGUuYmxvY2suY2FsbGJhY2sudXBkYXRlX2Zvcm0gPSAoZSwgZGF0YSkgPT4ge1xuXHRcdGNvbnN0IHtmb3JtfSA9IGUudGFyZ2V0O1xuXHRcdGxldCB7ZXhwaXJ5fSA9IGRhdGE7XG5cdFx0Ly8gZG9uJ3Qgb3ZlcnJpZGUgb3JpZ2luYWwgZXhwaXJ5IGlmIHVzZUluaXRpYWxPcHRpb25zIGlzIHNldFxuXHRcdGlmICghZGF0YS51c2VJbml0aWFsT3B0aW9ucykge1xuXHRcdFx0aWYgKERhdGUucGFyc2UoZXhwaXJ5KSkge1xuXHRcdFx0XHRleHBpcnkgPSBuZXcgRGF0ZShleHBpcnkpLnRvR01UU3RyaW5nKCk7XG5cdFx0XHRcdGZvcm0uZXhwaXJ5X3ByZXNldC52YWx1ZSA9ICdjdXN0b20nO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Zm9ybS5leHBpcnlfcHJlc2V0LnZhbHVlID0gZGF0YS5leHBpcnkgfHwgJ2N1c3RvbSc7XG5cdFx0XHR9XG5cdFx0XHRmb3JtLmV4cGlyeS52YWx1ZSA9IGV4cGlyeTtcblx0XHRcdGlmIChmb3JtLmV4cGlyeV9wcmVzZXQudmFsdWUgPT09ICdjdXN0b20nKSB7XG5cdFx0XHRcdE1vcmViaXRzLnF1aWNrRm9ybS5zZXRFbGVtZW50VmlzaWJpbGl0eShmb3JtLmV4cGlyeS5wYXJlbnROb2RlLCB0cnVlKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdE1vcmViaXRzLnF1aWNrRm9ybS5zZXRFbGVtZW50VmlzaWJpbGl0eShmb3JtLmV4cGlyeS5wYXJlbnROb2RlLCBmYWxzZSk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdC8vIGJvb2xlYW4tZmxpcHBlZCBvcHRpb25zLCBtb3JlIGF0IFtbbXc6QVBJOkJsb2NrXV1cblx0XHRkYXRhLmRpc2FibGV0YWxrID0gZGF0YS5kaXNhYmxldGFsayA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBkYXRhLmRpc2FibGV0YWxrO1xuXHRcdGRhdGEuaGFyZGJsb2NrID0gZGF0YS5oYXJkYmxvY2sgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogZGF0YS5oYXJkYmxvY2s7XG5cdFx0Ly8gZGlzYWJsZSBhdXRvYmxvY2sgaWYgYmxvY2tpbmcgYSBib3Rcblx0XHRpZiAoVHdpbmtsZS5ibG9jay51c2VySXNCb3QgfHwgL2JvdFxcYi9pLnRlc3QocmVsZXZhbnRVc2VyTmFtZSkpIHtcblx0XHRcdGRhdGEuYXV0b2Jsb2NrID0gZmFsc2U7XG5cdFx0fVxuXHRcdCQoZm9ybSlcblx0XHRcdC5maW5kKCdbbmFtZT1maWVsZF9ibG9ja19vcHRpb25zXScpXG5cdFx0XHQuZmluZCgnOmNoZWNrYm94Jylcblx0XHRcdC5lYWNoKChfaSwgZWwpID0+IHtcblx0XHRcdFx0Ly8gZG9uJ3Qgb3ZlcnJpZGUgb3JpZ2luYWwgb3B0aW9ucyBpZiB1c2VJbml0aWFsT3B0aW9ucyBpcyBzZXRcblx0XHRcdFx0aWYgKGRhdGEudXNlSW5pdGlhbE9wdGlvbnMgJiYgZGF0YVtlbC5uYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChlbC5uYW1lID09PSAnY2xvc2V2aXAnKSB7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGNvbnN0IGNoZWNrID0gZGF0YVtlbC5uYW1lXSA9PT0gJycgfHwgISFkYXRhW2VsLm5hbWVdO1xuXHRcdFx0XHQkKGVsKS5wcm9wKCdjaGVja2VkJywgY2hlY2spO1xuXHRcdFx0fSk7XG5cdFx0aWYgKGRhdGEucHJlcGVuZFJlYXNvbiAmJiBkYXRhLnJlYXNvbikge1xuXHRcdFx0Zm9ybS5yZWFzb24udmFsdWUgPSBgJHtkYXRhLnJlYXNvbn3vvJske2Zvcm0ucmVhc29uLnZhbHVlfWA7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGZvcm0ucmVhc29uLnZhbHVlID0gZGF0YS5yZWFzb24gfHwgJyc7XG5cdFx0fVxuXHRcdC8vIENsZWFyIGFuZC9vciBzZXQgYW55IHBhcnRpYWwgcGFnZSBvciBuYW1lc3BhY2UgcmVzdHJpY3Rpb25zXG5cdFx0aWYgKGZvcm0ucGFnZXJlc3RyaWN0aW9ucykge1xuXHRcdFx0Y29uc3QgJHBhZ2VTZWxlY3QgPSAkKGZvcm0pLmZpbmQoJ1tuYW1lPXBhZ2VyZXN0cmljdGlvbnNdJyk7XG5cdFx0XHRjb25zdCAkbmFtZXNwYWNlU2VsZWN0ID0gJChmb3JtKS5maW5kKCdbbmFtZT1uYW1lc3BhY2VyZXN0cmljdGlvbnNdJyk7XG5cdFx0XHQvLyBSZXNwZWN0IHVzZUluaXRpYWxPcHRpb25zIGJ5IGNsZWFyaW5nIGRhdGEgd2hlbiBzd2l0Y2hpbmcgcHJlc2V0c1xuXHRcdFx0Ly8gSW4gcHJhY3RpY2UsIHRoaXMgd2lsbCBhbHdheXMgY2xlYXIsIHNpbmNlIG5vIHBhcnRpYWwgcHJlc2V0cyB1c2UgaXRcblx0XHRcdGlmICghZGF0YS51c2VJbml0aWFsT3B0aW9ucykge1xuXHRcdFx0XHQkcGFnZVNlbGVjdC52YWwobnVsbCkudHJpZ2dlcignY2hhbmdlJyk7XG5cdFx0XHRcdCRuYW1lc3BhY2VTZWxlY3QudmFsKG51bGwpLnRyaWdnZXIoJ2NoYW5nZScpO1xuXHRcdFx0fVxuXHRcdFx0Ly8gQWRkIGFueSBwcmVzZXQgb3B0aW9uczsgaW4gcHJhY3RpY2UsIGp1c3QgdXNlZCBmb3IgcHJpb3IgYmxvY2sgc2V0dGluZ3Ncblx0XHRcdGlmIChkYXRhLnJlc3RyaWN0aW9ucykge1xuXHRcdFx0XHRpZiAoZGF0YS5yZXN0cmljdGlvbnMucGFnZXMgJiYgISRwYWdlU2VsZWN0LnZhbCgpLmxlbmd0aCkge1xuXHRcdFx0XHRcdGNvbnN0IHBhZ2VzID0gZGF0YS5yZXN0cmljdGlvbnMucGFnZXMubWFwKChwcikgPT4ge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHByLnRpdGxlO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdC8vIHNpbmNlIHBhZ2UgcmVzdHJpY3Rpb25zIHVzZSBhbiBhamF4IHNvdXJjZSwgd2Vcblx0XHRcdFx0XHQvLyBzaG9ydC1jaXJjdWl0IHRoYXQgYW5kIGp1c3QgYWRkIGEgbmV3IG9wdGlvblxuXHRcdFx0XHRcdGZvciAoY29uc3QgcGFnZSBvZiBwYWdlcykge1xuXHRcdFx0XHRcdFx0aWYgKCEkcGFnZVNlbGVjdC5maW5kKGBvcHRpb25bdmFsdWU9JyR7JC5lc2NhcGVTZWxlY3RvcihwYWdlKX0nXWApLmxlbmd0aCkge1xuXHRcdFx0XHRcdFx0XHRjb25zdCBuZXdPcHRpb24gPSBuZXcgT3B0aW9uKHBhZ2UsIHBhZ2UsIHRydWUsIHRydWUpO1xuXHRcdFx0XHRcdFx0XHQkcGFnZVNlbGVjdC5hcHBlbmQobmV3T3B0aW9uKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0JHBhZ2VTZWxlY3QudmFsKFsuLi4kcGFnZVNlbGVjdC52YWwoKSwgLi4uZ2VuZXJhdGVBcnJheShwYWdlcyldKS50cmlnZ2VyKCdjaGFuZ2UnKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoZGF0YS5yZXN0cmljdGlvbnMubmFtZXNwYWNlcykge1xuXHRcdFx0XHRcdCRuYW1lc3BhY2VTZWxlY3Rcblx0XHRcdFx0XHRcdC52YWwoWy4uLiRuYW1lc3BhY2VTZWxlY3QudmFsKCksIC4uLmdlbmVyYXRlQXJyYXkoZGF0YS5yZXN0cmljdGlvbnMubmFtZXNwYWNlcyldKVxuXHRcdFx0XHRcdFx0LnRyaWdnZXIoJ2NoYW5nZScpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRUd2lua2xlLmJsb2NrLmNhbGxiYWNrLmNoYW5nZV90ZW1wbGF0ZSA9IChlKSA9PiB7XG5cdFx0Y29uc3Qge2Zvcm19ID0gZS50YXJnZXQ7XG5cdFx0Y29uc3Qge3ZhbHVlfSA9IGZvcm0udGVtcGxhdGU7XG5cdFx0Y29uc3Qgc2V0dGluZ3MgPSBUd2lua2xlLmJsb2NrLmJsb2NrUHJlc2V0c0luZm9bdmFsdWVdO1xuXHRcdGNvbnN0IGJsb2NrQm94ID0gJChmb3JtKS5maW5kKCdbbmFtZT1hY3Rpb250eXBlXVt2YWx1ZT1ibG9ja10nKS5pcygnOmNoZWNrZWQnKTtcblx0XHRjb25zdCBwYXJ0aWFsQm94ID0gJChmb3JtKS5maW5kKCdbbmFtZT1hY3Rpb250eXBlXVt2YWx1ZT1wYXJ0aWFsXScpLmlzKCc6Y2hlY2tlZCcpO1xuXHRcdGNvbnN0IHRlbXBsYXRlQm94ID0gJChmb3JtKS5maW5kKCdbbmFtZT1hY3Rpb250eXBlXVt2YWx1ZT10ZW1wbGF0ZV0nKS5pcygnOmNoZWNrZWQnKTtcblx0XHQvLyBCbG9jayBmb3JtIGlzIG5vdCBwcmVzZW50XG5cdFx0aWYgKCFibG9ja0JveCkge1xuXHRcdFx0aWYgKHNldHRpbmdzLmluZGVmaW5pdGUgfHwgc2V0dGluZ3Mubm9uc3RhbmRhcmQpIHtcblx0XHRcdFx0aWYgKFR3aW5rbGUuYmxvY2sucHJldl90ZW1wbGF0ZV9leHBpcnkgPT09IG51bGwpIHtcblx0XHRcdFx0XHRUd2lua2xlLmJsb2NrLnByZXZfdGVtcGxhdGVfZXhwaXJ5ID0gZm9ybS50ZW1wbGF0ZV9leHBpcnkudmFsdWUgfHwgJyc7XG5cdFx0XHRcdH1cblx0XHRcdFx0Zm9ybS50ZW1wbGF0ZV9leHBpcnkucGFyZW50Tm9kZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuXHRcdFx0XHRmb3JtLnRlbXBsYXRlX2V4cGlyeS52YWx1ZSA9ICdpbmZpbml0eSc7XG5cdFx0XHR9IGVsc2UgaWYgKGZvcm0udGVtcGxhdGVfZXhwaXJ5LnBhcmVudE5vZGUuc3R5bGUuZGlzcGxheSA9PT0gJ25vbmUnKSB7XG5cdFx0XHRcdGlmIChUd2lua2xlLmJsb2NrLnByZXZfdGVtcGxhdGVfZXhwaXJ5ICE9PSBudWxsKSB7XG5cdFx0XHRcdFx0Zm9ybS50ZW1wbGF0ZV9leHBpcnkudmFsdWUgPSBUd2lua2xlLmJsb2NrLnByZXZfdGVtcGxhdGVfZXhwaXJ5O1xuXHRcdFx0XHRcdFR3aW5rbGUuYmxvY2sucHJldl90ZW1wbGF0ZV9leHBpcnkgPSBudWxsO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGZvcm0udGVtcGxhdGVfZXhwaXJ5LnBhcmVudE5vZGUuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG5cdFx0XHR9XG5cdFx0XHRpZiAoVHdpbmtsZS5ibG9jay5wcmV2X3RlbXBsYXRlX2V4cGlyeSkge1xuXHRcdFx0XHRmb3JtLmV4cGlyeS52YWx1ZSA9IFR3aW5rbGUuYmxvY2sucHJldl90ZW1wbGF0ZV9leHBpcnk7XG5cdFx0XHR9XG5cdFx0XHRNb3JlYml0cy5xdWlja0Zvcm0uc2V0RWxlbWVudFZpc2liaWxpdHkoZm9ybS5ub3RhbGsucGFyZW50Tm9kZSwgIXNldHRpbmdzLm5vbnN0YW5kYXJkKTtcblx0XHRcdC8vIFBhcnRpYWxcblx0XHRcdE1vcmViaXRzLnF1aWNrRm9ybS5zZXRFbGVtZW50VmlzaWJpbGl0eShmb3JtLm5vZW1haWxfdGVtcGxhdGUucGFyZW50Tm9kZSwgcGFydGlhbEJveCk7XG5cdFx0XHRNb3JlYml0cy5xdWlja0Zvcm0uc2V0RWxlbWVudFZpc2liaWxpdHkoZm9ybS5ub2NyZWF0ZV90ZW1wbGF0ZS5wYXJlbnROb2RlLCBwYXJ0aWFsQm94KTtcblx0XHR9IGVsc2UgaWYgKHRlbXBsYXRlQm94KSB7XG5cdFx0XHQvLyBPbmx5IHByZXNlbnQgaWYgYmxvY2sgJiYgdGVtcGxhdGUgZm9ybXMgYm90aCB2aXNpYmxlXG5cdFx0XHRNb3JlYml0cy5xdWlja0Zvcm0uc2V0RWxlbWVudFZpc2liaWxpdHkoXG5cdFx0XHRcdGZvcm0uYmxhbmtfZHVyYXRpb24ucGFyZW50Tm9kZSxcblx0XHRcdFx0IXNldHRpbmdzLmluZGVmaW5pdGUgJiYgIXNldHRpbmdzLm5vbnN0YW5kYXJkXG5cdFx0XHQpO1xuXHRcdH1cblx0XHQvLyBPbmx5IHBhcnRpY3VsYXJseSByZWxldmFudCBpZiB0ZW1wbGF0ZSBmb3JtIGlzIHByZXNlbnRcblx0XHRNb3JlYml0cy5xdWlja0Zvcm0uc2V0RWxlbWVudFZpc2liaWxpdHkoZm9ybS5hcnRpY2xlLnBhcmVudE5vZGUsIHNldHRpbmdzICYmICEhc2V0dGluZ3MucGFnZVBhcmFtKTtcblx0XHRNb3JlYml0cy5xdWlja0Zvcm0uc2V0RWxlbWVudFZpc2liaWxpdHkoZm9ybS5ibG9ja19yZWFzb24ucGFyZW50Tm9kZSwgc2V0dGluZ3MgJiYgISFzZXR0aW5ncy5yZWFzb25QYXJhbSk7XG5cdFx0Ly8gQXBwbHkgcmVhc29uIGZyb20gYmxvY2tQcmVzZXRzSW5mb1xuXHRcdGlmIChzZXR0aW5ncy5yZWFzb25QYXJhbSkge1xuXHRcdFx0Zm9ybS5ibG9ja19yZWFzb24udmFsdWUgPSBUd2lua2xlLmJsb2NrLmJsb2NrUHJlc2V0c0luZm9bZm9ybS5wcmVzZXQudmFsdWVdLnJlYXNvbiB8fCAnJztcblx0XHR9IGVsc2Uge1xuXHRcdFx0Zm9ybS5ibG9ja19yZWFzb24udmFsdWUgPSAnJztcblx0XHR9XG5cdFx0Ly8gUGFydGlhbCBibG9ja1xuXHRcdE1vcmViaXRzLnF1aWNrRm9ybS5zZXRFbGVtZW50VmlzaWJpbGl0eShmb3JtLmFyZWEucGFyZW50Tm9kZSwgcGFydGlhbEJveCAmJiAhYmxvY2tCb3gpO1xuXHRcdGZvcm0ucm9vdC5wcmV2aWV3ZXIuY2xvc2VQcmV2aWV3KCk7XG5cdH07XG5cdFR3aW5rbGUuYmxvY2sucHJldl90ZW1wbGF0ZV9leHBpcnkgPSBudWxsO1xuXHRUd2lua2xlLmJsb2NrLmNhbGxiYWNrLnByZXZpZXcgPSAoZm9ybSkgPT4ge1xuXHRcdGNvbnN0IHBhcmFtcyA9IHtcblx0XHRcdGFydGljbGU6IGZvcm0uYXJ0aWNsZS52YWx1ZSxcblx0XHRcdGJsYW5rX2R1cmF0aW9uOiBmb3JtLmJsYW5rX2R1cmF0aW9uID8gZm9ybS5ibGFua19kdXJhdGlvbi5jaGVja2VkIDogZmFsc2UsXG5cdFx0XHRkaXNhYmxldGFsazogZm9ybS5kaXNhYmxldGFsay5jaGVja2VkIHx8IChmb3JtLm5vdGFsayA/IGZvcm0ubm90YWxrLmNoZWNrZWQgOiBmYWxzZSksXG5cdFx0XHRleHBpcnk6IGZvcm0udGVtcGxhdGVfZXhwaXJ5ID8gZm9ybS50ZW1wbGF0ZV9leHBpcnkudmFsdWUgOiBmb3JtLmV4cGlyeS52YWx1ZSxcblx0XHRcdGhhcmRibG9jazogVHdpbmtsZS5ibG9jay5pc1JlZ2lzdGVyZWQgPyBmb3JtLmF1dG9ibG9jay5jaGVja2VkIDogZm9ybS5oYXJkYmxvY2suY2hlY2tlZCxcblx0XHRcdGluZGVmaW5pdGU6IE1vcmViaXRzLnN0cmluZy5pc0luZmluaXR5KFxuXHRcdFx0XHRmb3JtLnRlbXBsYXRlX2V4cGlyeSA/IGZvcm0udGVtcGxhdGVfZXhwaXJ5LnZhbHVlIDogZm9ybS5leHBpcnkudmFsdWVcblx0XHRcdCksXG5cdFx0XHRyZWFzb246IGZvcm0uYmxvY2tfcmVhc29uLnZhbHVlLFxuXHRcdFx0dGVtcGxhdGU6IGZvcm0udGVtcGxhdGUudmFsdWUsXG5cdFx0XHRwYXJ0aWFsOiAkKGZvcm0pLmZpbmQoJ1tuYW1lPWFjdGlvbnR5cGVdW3ZhbHVlPXBhcnRpYWxdJykuaXMoJzpjaGVja2VkJyksXG5cdFx0XHRwYWdlcmVzdHJpY3Rpb25zOiAkKGZvcm0ucGFnZXJlc3RyaWN0aW9ucykudmFsKCkgfHwgW10sXG5cdFx0XHRuYW1lc3BhY2VyZXN0cmljdGlvbnM6ICQoZm9ybS5uYW1lc3BhY2VyZXN0cmljdGlvbnMpLnZhbCgpIHx8IFtdLFxuXHRcdFx0bm9lbWFpbDogZm9ybS5ub2VtYWlsLmNoZWNrZWQgfHwgKGZvcm0ubm9lbWFpbF90ZW1wbGF0ZSA/IGZvcm0ubm9lbWFpbF90ZW1wbGF0ZS5jaGVja2VkIDogZmFsc2UpLFxuXHRcdFx0bm9jcmVhdGU6IGZvcm0ubm9jcmVhdGUuY2hlY2tlZCB8fCAoZm9ybS5ub2NyZWF0ZV90ZW1wbGF0ZSA/IGZvcm0ubm9jcmVhdGVfdGVtcGxhdGUuY2hlY2tlZCA6IGZhbHNlKSxcblx0XHRcdGFyZWE6IGZvcm0uYXJlYS52YWx1ZSxcblx0XHR9O1xuXHRcdGNvbnN0IHRlbXBsYXRlVGV4dCA9IFR3aW5rbGUuYmxvY2suY2FsbGJhY2suZ2V0QmxvY2tOb3RpY2VXaWtpdGV4dChwYXJhbXMpO1xuXHRcdGZvcm0ucHJldmlld2VyLmJlZ2luUmVuZGVyKHRlbXBsYXRlVGV4dCwgYFVzZXJfdGFsazoke3JlbGV2YW50VXNlck5hbWV9L1dpa2l0ZXh0YCk7IC8vIEZvcmNlIHdpa2l0ZXh0L2NvcnJlY3QgdXNlcm5hbWVcblx0fTtcblx0VHdpbmtsZS5ibG9jay5jYWxsYmFjay5ldmFsdWF0ZSA9IChlKSA9PiB7XG5cdFx0Y29uc3QgcGFyYW1zID0gTW9yZWJpdHMucXVpY2tGb3JtLmdldElucHV0RGF0YShlLnRhcmdldCk7XG5cdFx0Y29uc3QgJGZvcm0gPSAkKGUudGFyZ2V0KTtcblx0XHRjb25zdCB0b0Jsb2NrID0gJGZvcm0uZmluZCgnW25hbWU9YWN0aW9udHlwZV1bdmFsdWU9YmxvY2tdJykuaXMoJzpjaGVja2VkJyk7XG5cdFx0Y29uc3QgdG9XYXJuID0gJGZvcm0uZmluZCgnW25hbWU9YWN0aW9udHlwZV1bdmFsdWU9dGVtcGxhdGVdJykuaXMoJzpjaGVja2VkJyk7XG5cdFx0Y29uc3QgdG9QYXJ0aWFsID0gJGZvcm0uZmluZCgnW25hbWU9YWN0aW9udHlwZV1bdmFsdWU9cGFydGlhbF0nKS5pcygnOmNoZWNrZWQnKTtcblx0XHRjb25zdCB0b1RhZyA9ICRmb3JtLmZpbmQoJ1tuYW1lPWFjdGlvbnR5cGVdW3ZhbHVlPXRhZ10nKS5pcygnOmNoZWNrZWQnKTtcblx0XHRjb25zdCB0b1Byb3RlY3QgPSAkZm9ybS5maW5kKCdbbmFtZT1hY3Rpb250eXBlXVt2YWx1ZT1wcm90ZWN0XScpLmlzKCc6Y2hlY2tlZCcpO1xuXHRcdGNvbnN0IHRvVW5ibG9jayA9ICRmb3JtLmZpbmQoJ1tuYW1lPWFjdGlvbnR5cGVdW3ZhbHVlPXVuYmxvY2tdJykuaXMoJzpjaGVja2VkJyk7XG5cdFx0bGV0IGJsb2Nrb3B0aW9ucyA9IHt9O1xuXHRcdGxldCB0ZW1wbGF0ZW9wdGlvbnMgPSB7fTtcblx0XHRsZXQgdW5ibG9ja29wdGlvbnMgPSB7fTtcblx0XHRUd2lua2xlLmJsb2NrLmNhbGxiYWNrLnNhdmVGaWVsZHNldCgkZm9ybS5maW5kKCdbbmFtZT1maWVsZF9ibG9ja19vcHRpb25zXScpKTtcblx0XHRUd2lua2xlLmJsb2NrLmNhbGxiYWNrLnNhdmVGaWVsZHNldCgkZm9ybS5maW5kKCdbbmFtZT1maWVsZF90ZW1wbGF0ZV9vcHRpb25zXScpKTtcblx0XHRUd2lua2xlLmJsb2NrLmNhbGxiYWNrLnNhdmVGaWVsZHNldCgkZm9ybS5maW5kKCdbbmFtZT1maWVsZF90YWdfb3B0aW9uc10nKSk7XG5cdFx0VHdpbmtsZS5ibG9jay5jYWxsYmFjay5zYXZlRmllbGRzZXQoJGZvcm0uZmluZCgnW25hbWU9ZmllbGRfdW5ibG9ja19vcHRpb25zXScpKTtcblx0XHRibG9ja29wdGlvbnMgPSBUd2lua2xlLmJsb2NrLmZpZWxkX2Jsb2NrX29wdGlvbnM7XG5cdFx0dW5ibG9ja29wdGlvbnMgPSBUd2lua2xlLmJsb2NrLmZpZWxkX3VuYmxvY2tfb3B0aW9ucztcblx0XHRjb25zdCB0b0Nsb3NldmlwID0gISFibG9ja29wdGlvbnMuY2xvc2V2aXA7XG5cdFx0dGVtcGxhdGVvcHRpb25zID0gVHdpbmtsZS5ibG9jay5maWVsZF90ZW1wbGF0ZV9vcHRpb25zO1xuXHRcdHRlbXBsYXRlb3B0aW9ucy5kaXNhYmxldGFsayA9ICEhKHRlbXBsYXRlb3B0aW9ucy5kaXNhYmxldGFsayB8fCBibG9ja29wdGlvbnMuZGlzYWJsZXRhbGspO1xuXHRcdHRlbXBsYXRlb3B0aW9ucy5oYXJkYmxvY2sgPSAhIWJsb2Nrb3B0aW9ucy5oYXJkYmxvY2s7XG5cdFx0Ly8gcmVtb3ZlIGV4dHJhbmVvdXNcblx0XHRkZWxldGUgYmxvY2tvcHRpb25zLmV4cGlyeV9wcmVzZXQ7XG5cdFx0ZGVsZXRlIGJsb2Nrb3B0aW9ucy5jbG9zZXZpcDtcblx0XHQvLyBQYXJ0aWFsIEFQSSByZXF1aXJlcyB0aGlzIHRvIGJlIGdvbmUsIG5vdCBmYWxzZSBvciAwXG5cdFx0aWYgKHRvUGFydGlhbCkge1xuXHRcdFx0YmxvY2tvcHRpb25zLnBhcnRpYWwgPSB0cnVlO1xuXHRcdFx0dGVtcGxhdGVvcHRpb25zLnBhcnRpYWwgPSB0cnVlO1xuXHRcdH1cblx0XHR0ZW1wbGF0ZW9wdGlvbnMucGFnZXJlc3RyaWN0aW9ucyA9ICRmb3JtLmZpbmQoJ1tuYW1lPXBhZ2VyZXN0cmljdGlvbnNdJykudmFsKCkgfHwgW107XG5cdFx0dGVtcGxhdGVvcHRpb25zLm5hbWVzcGFjZXJlc3RyaWN0aW9ucyA9ICRmb3JtLmZpbmQoJ1tuYW1lPW5hbWVzcGFjZXJlc3RyaWN0aW9uc10nKS52YWwoKSB8fCBbXTtcblx0XHQvLyBGb3JtYXQgZm9yIEFQSSBoZXJlIHJhdGhlciB0aGFuIGluIHNhdmVGaWVsZHNldFxuXHRcdGJsb2Nrb3B0aW9ucy5wYWdlcmVzdHJpY3Rpb25zID0gdGVtcGxhdGVvcHRpb25zLnBhZ2VyZXN0cmljdGlvbnMuam9pbignfCcpO1xuXHRcdGJsb2Nrb3B0aW9ucy5uYW1lc3BhY2VyZXN0cmljdGlvbnMgPSB0ZW1wbGF0ZW9wdGlvbnMubmFtZXNwYWNlcmVzdHJpY3Rpb25zLmpvaW4oJ3wnKTtcblx0XHQvLyB1c2UgYmxvY2sgc2V0dGluZ3MgYXMgd2FybiBvcHRpb25zIHdoZXJlIG5vdCBzdXBwbGllZFxuXHRcdHRlbXBsYXRlb3B0aW9ucy5zdW1tYXJ5IHx8PSBibG9ja29wdGlvbnMucmVhc29uO1xuXHRcdHRlbXBsYXRlb3B0aW9ucy5leHBpcnkgPSB0ZW1wbGF0ZW9wdGlvbnMudGVtcGxhdGVfZXhwaXJ5IHx8IGJsb2Nrb3B0aW9ucy5leHBpcnk7XG5cdFx0dGVtcGxhdGVvcHRpb25zLnByZXNldCA9IHRvQmxvY2sgPyBwYXJhbXMucHJlc2V0IDogbnVsbDtcblx0XHQvLyBDaGVjayB0YWdzXG5cdFx0Ly8gR2l2ZW4gYW4gYXJyYXkgb2YgaW5jb21wYXRpYmxlIHRhZ3MsIGNoZWNrIGlmIHdlIGhhdmUgdHdvIG9yIG1vcmUgc2VsZWN0ZWRcblx0XHRjb25zdCBjaGVja0luY29tcGF0aWJsZSA9IChjb25mbGljdHMsIGV4dHJhKSA9PiB7XG5cdFx0XHRjb25zdCBjb3VudCA9IGNvbmZsaWN0cy5yZWR1Y2UoKHN1bSwgdGFnKSA9PiB7XG5cdFx0XHRcdHJldHVybiAoc3VtICs9IHBhcmFtcy50YWcuaW5jbHVkZXModGFnKSk7XG5cdFx0XHR9LCAwKTtcblx0XHRcdGlmIChjb3VudCA+IDEpIHtcblx0XHRcdFx0bGV0IG1lc3NhZ2UgPSBgJHt3aW5kb3cud2dVTFMoJ+ivt+WcqOS7peS4i+agh+etvuS4reaLqeS4gOS9v+eUqCcsICfoq4vlnKjku6XkuIvmqJnnsaTkuK3mk4fkuIDkvb/nlKgnKX3vvJp7eyR7Y29uZmxpY3RzLmpvaW4oXG5cdFx0XHRcdFx0J31944CBe3snXG5cdFx0XHRcdCl9fX3jgIJgO1xuXHRcdFx0XHRtZXNzYWdlICs9IGV4dHJhIHx8ICcnO1xuXHRcdFx0XHR2b2lkIG13Lm5vdGlmeShtZXNzYWdlLCB7XG5cdFx0XHRcdFx0dHlwZTogJ3dhcm4nLFxuXHRcdFx0XHRcdHRhZzogJ3R3aW5rbGVibG9jaycsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdH1cblx0XHR9O1xuXHRcdGlmICh0b1RhZykge1xuXHRcdFx0aWYgKHBhcmFtcy50YWcubGVuZ3RoID09PSAwKSB7XG5cdFx0XHRcdHZvaWQgbXcubm90aWZ5KHdpbmRvdy53Z1VMUygn6K+36Iez5bCR6YCJ5oup5LiA5Liq55So5oi36aG15qCH6K6w77yBJywgJ+iri+iHs+WwkemBuOaTh+S4gOWAi+S9v+eUqOiAhemggemdouaomeiomO+8gScpLCB7XG5cdFx0XHRcdFx0dHlwZTogJ3dhcm4nLFxuXHRcdFx0XHRcdHRhZzogJ3R3aW5rbGVibG9jaycsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRpZiAoXG5cdFx0XHRcdGNoZWNrSW5jb21wYXRpYmxlKFxuXHRcdFx0XHRcdFsnQmxvY2tlZCB1c2VyJywgJ1NvY2twdXBwZXQnXSxcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQne3tTb2NrcHVwcGV0fX3lt7LmtrXnm5Z7e0Jsb2NrZWQgdXNlcn1955qE5Yqf6IO944CCJyxcblx0XHRcdFx0XHRcdCd7e1NvY2twdXBwZXR9feW3sua2teiTi3t7QmxvY2tlZCB1c2VyfX3nmoTlip/og73jgIInXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpXG5cdFx0XHQpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdFx0aWYgKFxuXHRcdFx0XHRjaGVja0luY29tcGF0aWJsZShcblx0XHRcdFx0XHRbJ0Jsb2NrZWQgdXNlcicsICdTb2NrcHVwcGV0ZWVyJ10sXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J3t7U29ja3B1cHBldGVlcn195bey5ra155uWe3tCbG9ja2VkIHVzZXJ9feeahOWKn+iDveOAgicsXG5cdFx0XHRcdFx0XHQne3tTb2NrcHVwcGV0ZWVyfX3lt7LmtrXok4t7e0Jsb2NrZWQgdXNlcn1955qE5Yqf6IO944CCJ1xuXHRcdFx0XHRcdClcblx0XHRcdFx0KVxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdGlmIChcblx0XHRcdFx0Y2hlY2tJbmNvbXBhdGlibGUoXG5cdFx0XHRcdFx0WydTb2NrcHVwcGV0JywgJ1NvY2twdXBwZXRlZXInXSxcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+ivt+S7juS4u+i0puWPt+WSjOWIhui6q+i0puWPt+S4remAieaLqeS4gOS4quOAgicsICfoq4vlvp7kuLvos6zomZ/lkozliIbouqvos6zomZ/kuK3pgbjmk4fkuIDlgIvjgIInKVxuXHRcdFx0XHQpXG5cdFx0XHQpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdFx0aWYgKHBhcmFtcy50YWcuaW5jbHVkZXMoJ1NvY2twdXBwZXQnKSAmJiBwYXJhbXMuc3BwVXNlcm5hbWUudHJpbSgpID09PSAnJykge1xuXHRcdFx0XHR2b2lkIG13Lm5vdGlmeSh3aW5kb3cud2dVTFMoJ+ivt+aPkOS+m+WCgOWEoei0puWPt+eahOS4u+i0puWPt+eUqOaIt+WQje+8gScsICfoq4vmj5DkvpvlgoDlhKHos6zomZ/nmoTkuLvos6zomZ/kvb/nlKjogIXlkI3nqLHvvIEnKSwge1xuXHRcdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0XHR0YWc6ICd0d2lua2xlYmxvY2snLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRpZiAodG9CbG9jaykge1xuXHRcdFx0aWYgKGJsb2Nrb3B0aW9ucy5wYXJ0aWFsKSB7XG5cdFx0XHRcdGlmIChibG9ja29wdGlvbnMuZGlzYWJsZXRhbGsgJiYgIWJsb2Nrb3B0aW9ucy5uYW1lc3BhY2VyZXN0cmljdGlvbnMuaW5jbHVkZXMoJzMnKSkge1xuXHRcdFx0XHRcdHZvaWQgbXcubm90aWZ5KFxuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHQn6YOo5YiG5bCB56aB5peg5rOV6Zi75q2i57yW6L6R6Ieq5bex55qE6K6o6K666aG177yM6Zmk6Z2e5Lmf5bCB56aB5LqGVXNlciB0YWxr5ZG95ZCN56m66Ze077yBJyxcblx0XHRcdFx0XHRcdFx0J+mDqOWIhuWwgemOlueEoeazlemYu+atoue3qOi8r+iHquW3seeahOiojuirlumgge+8jOmZpOmdnuS5n+WwgemOluS6hlVzZXIgdGFsa+WRveWQjeepuumWk++8gSdcblx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0XHRcdFx0dGFnOiAndHdpbmtsZWJsb2NrJyxcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoIWJsb2Nrb3B0aW9ucy5uYW1lc3BhY2VyZXN0cmljdGlvbnMgJiYgIWJsb2Nrb3B0aW9ucy5wYWdlcmVzdHJpY3Rpb25zKSB7XG5cdFx0XHRcdFx0aWYgKCFibG9ja29wdGlvbnMubm9lbWFpbCAmJiAhYmxvY2tvcHRpb25zLm5vY3JlYXRlKSB7XG5cdFx0XHRcdFx0XHQvLyBCbGFuayBlbnRyaWVzIHRlY2huaWNhbGx5IGFsbG93ZWRcblx0XHRcdFx0XHRcdHZvaWQgbXcubm90aWZ5KFxuXHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+ayoeaciemAieaLqemhtemdouaIluWRveWQjeepuumXtO+8jOS5n+ayoeacieWBnOeUqOeUteWtkOmCruS7tuaIluemgeatouWIm+W7uui0puWPt++8m+ivt+mAieaLqeiHs+WwkeS4gOS4qumAiemhueS7peW6lOeUqOmDqOWIhuWwgeemge+8gScsXG5cdFx0XHRcdFx0XHRcdFx0J+aykuaciemBuOaTh+mggemdouaIluWRveWQjeepuumWk++8jOS5n+aykuacieWBnOeUqOmbu+WtkOmDteS7tuaIluemgeatouW7uueri+izrOiZn++8m+iri+mBuOaTh+iHs+WwkeS4gOWAi+mBuOmgheS7peaHieeUqOmDqOWIhuWwgemOlu+8gSdcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0XHRcdFx0XHR0YWc6ICd0d2lua2xlYmxvY2snLFxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAoXG5cdFx0XHRcdFx0XHQhY29uZmlybShcblx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCfmgqjlsIbopoHov5vooYzlsIHnpoHvvIzkvYbmsqHmnInpmLvmraLku7vkvZXpobXpnaLmiJblkb3lkI3nqbrpl7TnmoTnvJbovpHvvIznoa7lrpropoHnu6fnu63vvJ8nLFxuXHRcdFx0XHRcdFx0XHRcdCfmgqjlsIfopoHpgLLooYzlsIHpjpbvvIzkvYbmspLmnInpmLvmraLku7vkvZXpoIHpnaLmiJblkb3lkI3nqbrplpPnmoTnt6jovK/vvIznorrlrpropoHnubznuozvvJ8nXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHQpIHtcblx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmICghYmxvY2tvcHRpb25zLmV4cGlyeSkge1xuXHRcdFx0XHR2b2lkIG13Lm5vdGlmeSh3aW5kb3cud2dVTFMoJ+ivt+aPkOS+m+i/h+acn+aXtumXtO+8gScsICfoq4vmj5DkvpvpgY7mnJ/mmYLplpPvvIEnKSwge1xuXHRcdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0XHR0YWc6ICd0d2lua2xlYmxvY2snLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fSBlbHNlIGlmIChNb3JlYml0cy5zdHJpbmcuaXNJbmZpbml0eShibG9ja29wdGlvbnMuZXhwaXJ5KSAmJiAhVHdpbmtsZS5ibG9jay5pc1JlZ2lzdGVyZWQpIHtcblx0XHRcdFx0dm9pZCBtdy5ub3RpZnkod2luZG93LndnVUxTKCfnpoHmraLml6DpmZDmnJ/lsIHnpoFJUOWcsOWdgO+8gScsICfnpoHmraLnhKHpmZDmnJ/lsIHpjpZJUOS9jeWdgO+8gScpLCB7XG5cdFx0XHRcdFx0dHlwZTogJ3dhcm4nLFxuXHRcdFx0XHRcdHRhZzogJ3R3aW5rbGVibG9jaycsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRpZiAoIWJsb2Nrb3B0aW9ucy5yZWFzb24pIHtcblx0XHRcdFx0dm9pZCBtdy5ub3RpZnkod2luZG93LndnVUxTKCfor7fmj5DkvpvlsIHnpoHnkIbnlLHvvIEnLCAn6KuL5o+Q5L6b5bCB6Y6W55CG55Sx77yBJyksIHtcblx0XHRcdFx0XHR0eXBlOiAnd2FybicsXG5cdFx0XHRcdFx0dGFnOiAndHdpbmtsZWJsb2NrJyxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdE1vcmViaXRzLnNpbXBsZVdpbmRvdy5zZXRCdXR0b25zRW5hYmxlZChmYWxzZSk7XG5cdFx0XHRNb3JlYml0cy5zdGF0dXMuaW5pdChlLnRhcmdldCk7XG5cdFx0XHRjb25zdCBzdGF0dXNFbGVtZW50ID0gbmV3IE1vcmViaXRzLnN0YXR1cyh3aW5kb3cud2dVTFMoJ+aJp+ihjOWwgeemgScsICfln7fooYzlsIHpjpYnKSk7XG5cdFx0XHRibG9ja29wdGlvbnMuYWN0aW9uID0gJ2Jsb2NrJztcblx0XHRcdGJsb2Nrb3B0aW9ucy51c2VyID0gcmVsZXZhbnRVc2VyTmFtZTtcblx0XHRcdC8vIGJvb2xlYW4tZmxpcHBlZCBvcHRpb25zXG5cdFx0XHRibG9ja29wdGlvbnMuYW5vbm9ubHkgPSBibG9ja29wdGlvbnMuaGFyZGJsb2NrID8gdW5kZWZpbmVkIDogdHJ1ZTtcblx0XHRcdGJsb2Nrb3B0aW9ucy5hbGxvd3VzZXJ0YWxrID0gYmxvY2tvcHRpb25zLmRpc2FibGV0YWxrID8gdW5kZWZpbmVkIDogdHJ1ZTtcblx0XHRcdC8qKlxuXHRcdFx0ICogQ2hlY2sgaWYgYmxvY2sgc3RhdHVzIGNoYW5nZWQgd2hpbGUgcHJvY2Vzc2luZyB0aGUgZm9ybS5cblx0XHRcdCAqIFRoZXJlJ3MgYSBsb3QgdG8gY29uc2lkZXIgaGVyZS4gbGlzdD1ibG9ja3MgcHJvdmlkZXMgdGhlXG5cdFx0XHQgKiBjdXJyZW50IGJsb2NrIHN0YXR1cywgYnV0IHRoZXJlIGFyZSBhdCBsZWFzdCB0d28gaXNzdWVzIHdpdGhcblx0XHRcdCAqIHJlbHlpbmcgb24gaXQuIEZpcnN0LCB0aGUgaWQgZG9lc24ndCB1cGRhdGUgb24gYSByZWJsb2NrLFxuXHRcdFx0ICogbWVhbmluZyB0aGUgaW5kaXZpZHVhbCBwYXJhbWV0ZXJzIG5lZWQgdG8gYmUgY29tcGFyZWQuIFRoaXNcblx0XHRcdCAqIGNhbiBiZSBkb25lIHJvdWdobHkgd2l0aCBKU09OLnN0cmluZ2lmeSAtIHdlIGNhbiB0aGFua2Z1bGx5XG5cdFx0XHQgKiByZWx5IG9uIG9yZGVyIGZyb20gdGhlIHNlcnZlciwgYWx0aG91Z2ggc29ydGluZyB3b3VsZCBiZVxuXHRcdFx0ICogZmluZSBpZiBub3QgLSBidXQgZmFsc2V5IHZhbHVlcyBhcmUgcHJvYmxlbWF0aWMgYW5kIGlzXG5cdFx0XHQgKiBub24taWRlYWwuIE1vcmUgaW1wb3J0YW50bHksIGxpc3Q9YmxvY2tzIHdvbid0IGluZGljYXRlIGlmIGFcblx0XHRcdCAqIG5vbi1ibG9ja2VkIHVzZXIgaXMgYmxvY2tlZCB0aGVuIHVuYmxvY2tlZC4gVGhpcyBzaG91bGQgYmVcblx0XHRcdCAqIGV4Y2VlZGluZ3kgcmFyZSwgYnV0IHJlZ2FyZGxlc3MsIHdlIHRodXMgbmVlZCB0byBjaGVja1xuXHRcdFx0ICogbGlzdD1sb2dldmVudHMsIHdoaWNoIGhhcyBhIG5pY2VseSB1cGRhdGluZyBsb2dpZFxuXHRcdFx0ICogcGFyYW1ldGVyLiBXZSBjYW4ndCByZWx5IGp1c3Qgb24gdGhhdCwgdGhvdWdoLCBzaW5jZSBpdFxuXHRcdFx0ICogZG9lc24ndCBhY2NvdW50IGZvciBibG9ja3MgdGhhdCBoYXZlIGV4cGlyZWQgb24gdGhlaXIgb3duLlxuXHRcdFx0ICogQXMgc3VjaCwgd2UgdXNlIGJvdGguIFVzaW5nIHNvbWUgdGVybmFyaWVzLCB0aGUgbG9naWRcblx0XHRcdCAqIHZhcmlhYmxlcyBhcmUgZmFsc2UgaWYgdGhlcmUncyBubyBsb2dldmVudHMsIHNvIGlmIHRoZXlcblx0XHRcdCAqIGFyZW4ndCBlcXVhbCB3ZSBkZWZpbnRlbHkgaGF2ZSBhIGNoYW5nZWQgZW50cnkgKHNlbmRcblx0XHRcdCAqIGNvbmZpcm1hdGlvbikuIElmIHRoZXkgYXJlIGVxdWFsLCB0aGVuIGVpdGhlciB0aGUgdXNlciB3YXNcblx0XHRcdCAqIG5ldmVyIGJsb2NrZWQgKHRoZSBibG9jayBzdGF0dXNlcyB3aWxsIGJlIGVxdWFsLCBub1xuXHRcdFx0ICogY29uZmlybWF0aW9uKSBvciB0aGVyZSdzIG5vIG5ldyBibG9jaywgaW4gd2hpY2ggY2FzZSBlaXRoZXJcblx0XHRcdCAqIGEgYmxvY2sgZXhwaXJlZCAoZGlmZmVyZW50IHN0YXR1c2VzLCBjb25maXJtYXRpb24pIG9yIHRoZVxuXHRcdFx0ICogc2FtZSBibG9jayBpcyBzdGlsbCBhY3RpdmUgKHNhbWUgc3RhdHVzLCBubyBjb25maXJtYXRpb24pLlxuXHRcdFx0ICovXG5cdFx0XHRjb25zdCBxdWVyeSA9IHtcblx0XHRcdFx0Zm9ybWF0OiAnanNvbicsXG5cdFx0XHRcdGFjdGlvbjogJ3F1ZXJ5Jyxcblx0XHRcdFx0bGlzdDogJ2Jsb2Nrc3xsb2dldmVudHMnLFxuXHRcdFx0XHRsZXR5cGU6ICdibG9jaycsXG5cdFx0XHRcdGxlbGltaXQ6IDEsXG5cdFx0XHRcdGxldGl0bGU6IGBVc2VyOiR7YmxvY2tvcHRpb25zLnVzZXJ9YCxcblx0XHRcdH07XG5cdFx0XHQvLyBia3VzZXJzIGRvZXNuJ3QgY2F0Y2ggc2luZ2xlIElQcyBibG9ja2VkIGFzIHBhcnQgb2YgYSByYW5nZSBibG9ja1xuXHRcdFx0aWYgKG13LnV0aWwuaXNJUEFkZHJlc3MoYmxvY2tvcHRpb25zLnVzZXIsIHRydWUpKSB7XG5cdFx0XHRcdHF1ZXJ5LmJraXAgPSBibG9ja29wdGlvbnMudXNlcjtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHF1ZXJ5LmJrdXNlcnMgPSBibG9ja29wdGlvbnMudXNlcjtcblx0XHRcdFx0cXVlcnkubGlzdCArPSAnfHVzZXJzJztcblx0XHRcdFx0cXVlcnkudXNwcm9wID0gJ2dyb3Vwcyc7XG5cdFx0XHRcdHF1ZXJ5LnVzdXNlcnMgPSBibG9ja29wdGlvbnMudXNlcjtcblx0XHRcdFx0cXVlcnkubWV0YSA9ICd0b2tlbnMnO1xuXHRcdFx0XHRxdWVyeS50eXBlID0gJ3VzZXJyaWdodHMnO1xuXHRcdFx0fVxuXHRcdFx0dm9pZCBhcGkuZ2V0KHF1ZXJ5KS50aGVuKChkYXRhKSA9PiB7XG5cdFx0XHRcdGxldCBbYmxvY2tdID0gZGF0YS5xdWVyeS5ibG9ja3M7XG5cdFx0XHRcdC8vIEFzIHdpdGggdGhlIGluaXRpYWwgZGF0YSBmZXRjaCwgaWYgYW4gSVAgaXMgYmxvY2tlZFxuXHRcdFx0XHQvLyAqYW5kKiByYW5nZWJsb2NrZWQsIHRoaXMgd291bGQgb25seSBncmFiIHdoaWNoZXZlclxuXHRcdFx0XHQvLyBibG9jayBpcyBtb3JlIHJlY2VudCwgd2hpY2ggd291bGQgbGlrZWx5IG1lYW4gYVxuXHRcdFx0XHQvLyBtaXNtYXRjaC4gIEhvd2V2ZXIsIGlmIHRoZSByYW5nZWJsb2NrIGlzIHVwZGF0ZWRcblx0XHRcdFx0Ly8gd2hpbGUgZmlsbGluZyBvdXQgdGhlIGZvcm0sIHRoaXMgd29uJ3QgZGV0ZWN0IHRoYXQsXG5cdFx0XHRcdC8vIGJ1dCB0aGF0J3MgcHJvYmFibHkgZmluZS5cblx0XHRcdFx0aWYgKGRhdGEucXVlcnkuYmxvY2tzLmxlbmd0aCA+IDEgJiYgYmxvY2sudXNlciAhPT0gcmVsZXZhbnRVc2VyTmFtZSkge1xuXHRcdFx0XHRcdFssIGJsb2NrXSA9IGRhdGEucXVlcnkuYmxvY2tzO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGNvbnN0IFtsb2dldmVudHNdID0gZGF0YS5xdWVyeS5sb2dldmVudHM7XG5cdFx0XHRcdGNvbnN0IHVzZXIgPSBkYXRhLnF1ZXJ5LnVzZXJzID8gZGF0YS5xdWVyeS51c2Vyc1swXSA6IG51bGw7XG5cdFx0XHRcdGNvbnN0IGxvZ2lkID0gZGF0YS5xdWVyeS5sb2dldmVudHMubGVuZ3RoID8gbG9nZXZlbnRzLmxvZ2lkIDogZmFsc2U7XG5cdFx0XHRcdGlmIChsb2dpZCAhPT0gVHdpbmtsZS5ibG9jay5ibG9ja0xvZ0lkIHx8ICEhYmxvY2sgIT09ICEhVHdpbmtsZS5ibG9jay5jdXJyZW50QmxvY2tJbmZvKSB7XG5cdFx0XHRcdFx0bGV0IG1lc3NhZ2UgPSBibG9ja29wdGlvbnMudXNlciArIHdpbmRvdy53Z1VMUygn55qE5bCB56aB54q25oCB5bey6KKr5L+u5pS544CCJywgJ+eahOWwgemOlueLgOaFi+W3suiiq+S/ruaUueOAgicpO1xuXHRcdFx0XHRcdGlmIChibG9jaykge1xuXHRcdFx0XHRcdFx0bWVzc2FnZSArPSB3aW5kb3cud2dVTFMoJ+aWsOeKtuaAge+8micsICfmlrDni4DmhYvvvJonKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0bWVzc2FnZSArPSB3aW5kb3cud2dVTFMoJ+acgOaWsOaXpeW/l++8micsICfmnIDmlrDml6XoqozvvJonKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0bGV0IGxvZ0V4cGlyeSA9ICcnO1xuXHRcdFx0XHRcdGlmIChsb2dldmVudHMucGFyYW1zLmR1cmF0aW9uKSB7XG5cdFx0XHRcdFx0XHRpZiAobG9nZXZlbnRzLnBhcmFtcy5kdXJhdGlvbiA9PT0gJ2luZmluaXR5Jykge1xuXHRcdFx0XHRcdFx0XHRsb2dFeHBpcnkgPSB3aW5kb3cud2dVTFMoJ+aXoOmZkOacnycsICfnhKHpmZDmnJ8nKTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdGNvbnN0IGV4cGlyeURhdGUgPSBuZXcgTW9yZWJpdHMuZGF0ZShsb2dldmVudHMucGFyYW1zLmV4cGlyeSk7XG5cdFx0XHRcdFx0XHRcdGxvZ0V4cGlyeSArPVxuXHRcdFx0XHRcdFx0XHRcdChleHBpcnlEYXRlLmlzQmVmb3JlKG5ldyBEYXRlKCkpID8gd2luZG93LndnVUxTKCfov4fmnJ/kuo4nLCAn6YGO5pyf5pa8JykgOiAn55u05YiwJykgK1xuXHRcdFx0XHRcdFx0XHRcdGV4cGlyeURhdGUuY2FsZW5kYXIoKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0Ly8gbm8gZHVyYXRpb24sIGFjdGlvbj11bmJsb2NrLCBqdXN0IHNob3cgdGltZXN0YW1wXG5cdFx0XHRcdFx0XHRsb2dFeHBpcnkgPSBg5pa8JHtuZXcgTW9yZWJpdHMuZGF0ZShsb2dldmVudHMudGltZXN0YW1wKS5jYWxlbmRhcigpfWA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdG1lc3NhZ2UgKz0gYOeUsSR7bG9nZXZlbnRzLnVzZXJ9JHt3aW5kb3cud2dVTFMoJ+S7peKAnCcsICfku6XjgIwnKX0ke2xvZ2V2ZW50cy5jb21tZW50fSR7d2luZG93LndnVUxTKCfigJ0nLCAn44CNJyl9JHtcblx0XHRcdFx0XHRcdGJsb2NrQWN0aW9uVGV4dFtsb2dldmVudHMuYWN0aW9uXVxuXHRcdFx0XHRcdH0ke2xvZ0V4cGlyeX0ke3dpbmRvdy53Z1VMUygn77yM5L2g5oOz6KaB5Lul5L2g55qE6K6+572u5pu05pS55bCB56aB5ZCX77yfJywgJ++8jOS9oOaDs+imgeS7peS9oOeahOioreWumuiuiuabtOWwgemOluWXju+8nycpfWA7XG5cdFx0XHRcdFx0aWYgKCFjb25maXJtKG1lc3NhZ2UpKSB7XG5cdFx0XHRcdFx0XHRNb3JlYml0cy5zdGF0dXMuaW5mbyhcblx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfmiafooYzlsIHnpoEnLCAn5Z+36KGM5bCB6Y6WJyksXG5cdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn55So5oi35Y+W5raI5pON5L2cJywgJ+S9v+eUqOiAheWPlua2iOaTjeS9nCcpXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRibG9ja29wdGlvbnMucmVibG9jayA9IDE7IC8vIFdyaXRpbmcgb3ZlciBhIGJsb2NrIHdpbGwgZmFpbCBvdGhlcndpc2Vcblx0XHRcdFx0fVxuXHRcdFx0XHRjb25zdCBncm91cHNDYW5CZVJlbW92ZWQgPSBbXG5cdFx0XHRcdFx0J2F1dG9yZXZpZXdlcicsXG5cdFx0XHRcdFx0J2NvbmZpcm1lZCcsXG5cdFx0XHRcdFx0J3JucnN2ZXJpZnktZXhlbXB0Jyxcblx0XHRcdFx0XHQnbWFzc21lc3NhZ2Utc2VuZGVyJyxcblx0XHRcdFx0XHQncGF0cm9sbGVyJyxcblx0XHRcdFx0XHQndGVtcGxhdGVlZGl0b3InLFxuXHRcdFx0XHRcdCd0cmFuc3dpa2knLFxuXHRcdFx0XHRdO1xuXHRcdFx0XHRsZXQgZ3JvdXBzVG9CZVJlbW92ZWQgPSBbXTtcblx0XHRcdFx0aWYgKHVzZXIgJiYgTW9yZWJpdHMuc3RyaW5nLmlzSW5maW5pdHkoYmxvY2tvcHRpb25zLmV4cGlyeSkpIHtcblx0XHRcdFx0XHRncm91cHNUb0JlUmVtb3ZlZCA9IHVzZXIuZ3JvdXBzLmZpbHRlcigoZ3JvdXApID0+IHtcblx0XHRcdFx0XHRcdHJldHVybiBncm91cHNDYW5CZVJlbW92ZWQuaW5jbHVkZXMoZ3JvdXApO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cdFx0XHRcdC8vIGV4ZWN1dGUgYmxvY2tcblx0XHRcdFx0YmxvY2tvcHRpb25zLnRhZ3MgPSBUd2lua2xlLmNoYW5nZVRhZ3M7XG5cdFx0XHRcdGJsb2Nrb3B0aW9ucy50b2tlbiA9IG13LnVzZXIudG9rZW5zLmdldCgnY3NyZlRva2VuJyk7XG5cdFx0XHRcdGNvbnN0IG1iQXBpID0gbmV3IE1vcmViaXRzLndpa2kuYXBpKHdpbmRvdy53Z1VMUygn5omn6KGM5bCB56aBJywgJ+Wft+ihjOWwgemOlicpLCBibG9ja29wdGlvbnMsICgpID0+IHtcblx0XHRcdFx0XHRzdGF0dXNFbGVtZW50LmluZm8oJ+WujOaIkCcpO1xuXHRcdFx0XHRcdGlmICh0b1dhcm4pIHtcblx0XHRcdFx0XHRcdFR3aW5rbGUuYmxvY2suY2FsbGJhY2suaXNzdWVfdGVtcGxhdGUodGVtcGxhdGVvcHRpb25zKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKHRvQ2xvc2V2aXApIHtcblx0XHRcdFx0XHRcdGNvbnN0IHZpcFBhZ2UgPSBuZXcgTW9yZWJpdHMud2lraS5wYWdlKFxuXHRcdFx0XHRcdFx0XHQnUWl1d2VuX3RhbGs65oql5ZGK5b2T5YmN56C05Z2PJyxcblx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCflhbPpl63or7fmsYInLCAn6Zec6ZaJ6KuL5rGCJylcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHR2aXBQYWdlLnNldEZvbGxvd1JlZGlyZWN0KHRydWUpO1xuXHRcdFx0XHRcdFx0dmlwUGFnZS5zZXRDYWxsYmFja1BhcmFtZXRlcnMoYmxvY2tvcHRpb25zKTtcblx0XHRcdFx0XHRcdHZpcFBhZ2UubG9hZChUd2lua2xlLmJsb2NrLmNhbGxiYWNrLmNsb3NlUmVxdWVzdCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmIChncm91cHNUb0JlUmVtb3ZlZC5sZW5ndGggPiAwKSB7XG5cdFx0XHRcdFx0XHRjb25zdCByaWdodFN0YXR1c0VsZW1lbnQgPSBuZXcgTW9yZWJpdHMuc3RhdHVzKHdpbmRvdy53Z1VMUygn56e76Zmk5p2D6ZmQJywgJ+enu+mZpOasiumZkCcpKTtcblx0XHRcdFx0XHRcdGlmIChcblx0XHRcdFx0XHRcdFx0Y29uZmlybShcblx0XHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+ivpeeUqOaIt+acieS7peS4i+adg+mZkO+8micsICfoqbLkvb/nlKjogIXmnInku6XkuIvmrIrpmZDvvJonKSArXG5cdFx0XHRcdFx0XHRcdFx0XHRncm91cHNUb0JlUmVtb3ZlZC5qb2luKCfjgIEnKSArXG5cdFx0XHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ++8jOaCqOaYr+WQpuaDs+imgeWQjOaXtuenu+mZpOi/meS6m+adg+mZkO+8nycsICfvvIzmgqjmmK/lkKbmg7PopoHlkIzmmYLnp7vpmaTpgJnkupvmrIrpmZDvvJ8nKVxuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHQpIHtcblx0XHRcdFx0XHRcdFx0Y29uc3QgcmV2b2tlT3B0aW9ucyA9IHtcblx0XHRcdFx0XHRcdFx0XHRhY3Rpb246ICd1c2VycmlnaHRzJyxcblx0XHRcdFx0XHRcdFx0XHR1c2VyOiBibG9ja29wdGlvbnMudXNlcixcblx0XHRcdFx0XHRcdFx0XHRyZW1vdmU6IGdyb3Vwc1RvQmVSZW1vdmVkLmpvaW4oJ3wnKSxcblx0XHRcdFx0XHRcdFx0XHRyZWFzb246IHdpbmRvdy53Z1VMUygn55So5oi35bey6KKr5peg6ZmQ5pyf5bCB56aBJywgJ+S9v+eUqOiAheW3suiiq+eEoemZkOacn+WwgemOlicpLFxuXHRcdFx0XHRcdFx0XHRcdHRva2VuOiBkYXRhLnF1ZXJ5LnRva2Vucy51c2VycmlnaHRzdG9rZW4sXG5cdFx0XHRcdFx0XHRcdFx0dGFnczogVHdpbmtsZS5jaGFuZ2VUYWdzLFxuXHRcdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0XHRjb25zdCBtckFwaSA9IG5ldyBNb3JlYml0cy53aWtpLmFwaShcblx0XHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+enu+mZpOadg+mZkCcsICfnp7vpmaTmrIrpmZAnKSxcblx0XHRcdFx0XHRcdFx0XHRyZXZva2VPcHRpb25zLFxuXHRcdFx0XHRcdFx0XHRcdCgpID0+IHtcblx0XHRcdFx0XHRcdFx0XHRcdHJpZ2h0U3RhdHVzRWxlbWVudC5pbmZvKGDlt7Lnp7vpmaQke2dyb3Vwc1RvQmVSZW1vdmVkLmpvaW4oJ+OAgScpfWApO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0bXJBcGkucG9zdCgpO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0cmlnaHRTdGF0dXNFbGVtZW50LmVycm9yKHdpbmRvdy53Z1VMUygn55So5oi35Y+W5raI5pON5L2c44CCJywgJ+S9v+eUqOiAheWPlua2iOaTjeS9nOOAgicpKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRtYkFwaS5wb3N0KCk7XG5cdFx0XHR9KTtcblx0XHR9IGVsc2UgaWYgKHRvV2Fybikge1xuXHRcdFx0TW9yZWJpdHMuc2ltcGxlV2luZG93LnNldEJ1dHRvbnNFbmFibGVkKGZhbHNlKTtcblx0XHRcdE1vcmViaXRzLnN0YXR1cy5pbml0KGUudGFyZ2V0KTtcblx0XHRcdFR3aW5rbGUuYmxvY2suY2FsbGJhY2suaXNzdWVfdGVtcGxhdGUodGVtcGxhdGVvcHRpb25zKTtcblx0XHR9XG5cdFx0aWYgKHRvVGFnIHx8IHRvUHJvdGVjdCkge1xuXHRcdFx0TW9yZWJpdHMuc2ltcGxlV2luZG93LnNldEJ1dHRvbnNFbmFibGVkKGZhbHNlKTtcblx0XHRcdE1vcmViaXRzLnN0YXR1cy5pbml0KGUudGFyZ2V0KTtcblx0XHRcdGNvbnN0IHVzZXJQYWdlID0gYFVzZXI6JHttdy5jb25maWcuZ2V0KCd3Z1JlbGV2YW50VXNlck5hbWUnKX1gO1xuXHRcdFx0Y29uc3QgcWl1d2VuX3BhZ2UgPSBuZXcgTW9yZWJpdHMud2lraS5wYWdlKFxuXHRcdFx0XHR1c2VyUGFnZSxcblx0XHRcdFx0d2luZG93LndnVUxTKCfmoIforrDmiJbkv53miqTnlKjmiLfpobUnLCAn5qiZ6KiY5oiW5L+d6K235L2/55So6ICF6aCB6Z2iJylcblx0XHRcdCk7XG5cdFx0XHRxaXV3ZW5fcGFnZS5zZXRDYWxsYmFja1BhcmFtZXRlcnMocGFyYW1zKTtcblx0XHRcdHFpdXdlbl9wYWdlLmxvYWQoVHdpbmtsZS5ibG9jay5jYWxsYmFjay50YWd1c2VycGFnZSk7XG5cdFx0fVxuXHRcdGlmICh0b1VuYmxvY2spIHtcblx0XHRcdGlmICghdW5ibG9ja29wdGlvbnMucmVhc29uKSB7XG5cdFx0XHRcdHZvaWQgbXcubm90aWZ5KHdpbmRvdy53Z1VMUygn6K+35o+Q5L6b6Kej6Zmk5bCB56aB55CG55Sx77yBJywgJ+iri+aPkOS+m+ino+mZpOWwgemOlueQhueUse+8gScpLCB7XG5cdFx0XHRcdFx0dHlwZTogJ3dhcm4nLFxuXHRcdFx0XHRcdHRhZzogJ3R3aW5rbGVibG9jaycsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRNb3JlYml0cy5zaW1wbGVXaW5kb3cuc2V0QnV0dG9uc0VuYWJsZWQoZmFsc2UpO1xuXHRcdFx0TW9yZWJpdHMuc3RhdHVzLmluaXQoZS50YXJnZXQpO1xuXHRcdFx0Y29uc3QgdW5ibG9ja1N0YXR1c0VsZW1lbnQgPSBuZXcgTW9yZWJpdHMuc3RhdHVzKHdpbmRvdy53Z1VMUygn5omn6KGM6Kej6Zmk5bCB56aBJywgJ+Wft+ihjOino+mZpOWwgemOlicpKTtcblx0XHRcdHVuYmxvY2tvcHRpb25zLmFjdGlvbiA9ICd1bmJsb2NrJztcblx0XHRcdHVuYmxvY2tvcHRpb25zLnVzZXIgPSBtdy5jb25maWcuZ2V0KCd3Z1JlbGV2YW50VXNlck5hbWUnKTtcblx0XHRcdC8vIGV4ZWN1dGUgdW5ibG9ja1xuXHRcdFx0dW5ibG9ja29wdGlvbnMudGFncyA9IFR3aW5rbGUuY2hhbmdlVGFncztcblx0XHRcdHVuYmxvY2tvcHRpb25zLnRva2VuID0gbXcudXNlci50b2tlbnMuZ2V0KCdjc3JmVG9rZW4nKTtcblx0XHRcdGNvbnN0IHVuYmxvY2tNYkFwaSA9IG5ldyBNb3JlYml0cy53aWtpLmFwaShcblx0XHRcdFx0d2luZG93LndnVUxTKCfmiafooYzop6PpmaTlsIHnpoEnLCAn5Z+36KGM6Kej6Zmk5bCB6Y6WJyksXG5cdFx0XHRcdHVuYmxvY2tvcHRpb25zLFxuXHRcdFx0XHQoKSA9PiB7XG5cdFx0XHRcdFx0dW5ibG9ja1N0YXR1c0VsZW1lbnQuaW5mbygn5a6M5oiQJyk7XG5cdFx0XHRcdH1cblx0XHRcdCk7XG5cdFx0XHR1bmJsb2NrTWJBcGkucG9zdCgpO1xuXHRcdH1cblx0XHRpZiAoIXRvQmxvY2sgJiYgIXRvV2FybiAmJiAhdG9UYWcgJiYgIXRvUHJvdGVjdCAmJiAhdG9VbmJsb2NrKSB7XG5cdFx0XHR2b2lkIG13Lm5vdGlmeSh3aW5kb3cud2dVTFMoJ+ivt+e7mVR3aW5rbGXngrnkuovlgZrvvIEnLCAn6KuL57WmVHdpbmtsZem7nuS6i+WBmu+8gScpLCB7XG5cdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0dGFnOiAndHdpbmtsZWJsb2NrJyxcblx0XHRcdH0pO1xuXHRcdH1cblx0fTtcblx0VHdpbmtsZS5ibG9jay5jYWxsYmFjay50YWd1c2VycGFnZSA9IChwYWdlb2JqKSA9PiB7XG5cdFx0Y29uc3QgcGFyYW1zID0gcGFnZW9iai5nZXRDYWxsYmFja1BhcmFtZXRlcnMoKTtcblx0XHRjb25zdCBzdGF0ZWxlbSA9IHBhZ2VvYmouZ2V0U3RhdHVzRWxlbWVudCgpO1xuXHRcdGlmIChwYXJhbXMuYWN0aW9udHlwZS5pbmNsdWRlcygndGFnJykpIHtcblx0XHRcdGNvbnN0IHRhZ3MgPSBbXTtcblx0XHRcdGZvciAoY29uc3QgdGFnIG9mIHBhcmFtcy50YWcpIHtcblx0XHRcdFx0bGV0IHRhZ3RleHQgPSBge3ske3RhZ31gO1xuXHRcdFx0XHRzd2l0Y2ggKHRhZykge1xuXHRcdFx0XHRcdGNhc2UgJ0Jsb2NrZWQgdXNlcic6XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRjYXNlICdTb2NrcHVwcGV0Jzpcblx0XHRcdFx0XHRcdHRhZ3RleHQgKz0gYFxcbnwgMSA9ICR7cGFyYW1zLnNwcFVzZXJuYW1lLnRyaW0oKX1gO1xuXHRcdFx0XHRcdFx0dGFndGV4dCArPSBgXFxufCAyID0gJHtwYXJhbXMuc3BwVHlwZS50cmltKCl9YDtcblx0XHRcdFx0XHRcdGlmIChwYXJhbXMuc3BwRXZpZGVuY2UudHJpbSgpKSB7XG5cdFx0XHRcdFx0XHRcdHRhZ3RleHQgKz0gYFxcbnwgZXZpZGVuY2UgPSAke3BhcmFtcy5zcHBFdmlkZW5jZS50cmltKCl9YDtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdHRhZ3RleHQgKz0gJ1xcbnwgbG9ja2VkID0gbm8nO1xuXHRcdFx0XHRcdFx0dGFndGV4dCArPSAnXFxufCBub3RibG9ja2VkID0gbm8nO1xuXHRcdFx0XHRcdFx0dGFndGV4dCArPSAnXFxuJztcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdGNhc2UgJ1NvY2twdXBwZXRlZXInOlxuXHRcdFx0XHRcdFx0dGFndGV4dCArPSAnXFxufCAxID0gYmxvY2tlZCc7XG5cdFx0XHRcdFx0XHR0YWd0ZXh0ICs9IGBcXG58IGNoZWNrZWQgPSAke3BhcmFtcy5zcG1DaGVja2VkID8gJ3llcycgOiAnJ31gO1xuXHRcdFx0XHRcdFx0aWYgKHBhcmFtcy5zcG1FdmlkZW5jZS50cmltKCkpIHtcblx0XHRcdFx0XHRcdFx0dGFndGV4dCArPSBgXFxufCBldmlkZW5jZSA9ICR7cGFyYW1zLnNwbUV2aWRlbmNlLnRyaW0oKX1gO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0dGFndGV4dCArPSAnXFxuJztcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHR2b2lkIG13Lm5vdGlmeSh3aW5kb3cud2dVTFMoJ+acquefpeeahOeUqOaIt+mhteaooeadv++8gScsICfmnKrnn6XnmoTkvb/nlKjogIXpoIHpnaLmqKHmnb/vvIEnKSwge1xuXHRcdFx0XHRcdFx0XHR0eXBlOiAnd2FybicsXG5cdFx0XHRcdFx0XHRcdHRhZzogJ3R3aW5rbGVibG9jaycsXG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHRhZ3RleHQgKz0gJ319Jztcblx0XHRcdFx0dGFnc1t0YWdzLmxlbmd0aF0gPSB0YWd0ZXh0O1xuXHRcdFx0fVxuXHRcdFx0Y29uc3QgdGV4dCA9IHRhZ3Muam9pbignXFxuJyk7XG5cdFx0XHRwYWdlb2JqLnNldFBhZ2VUZXh0KHRleHQpO1xuXHRcdFx0cGFnZW9iai5zZXRFZGl0U3VtbWFyeSh3aW5kb3cud2dVTFMoJ+agh+iusOiiq+awuOS5heWwgeemgeeahOeUqOaIt+mhtScsICfmqJnoqJjooqvmsLjkuYXlsIHpjpbnmoTkvb/nlKjogIXpoIHpnaInKSk7XG5cdFx0XHRwYWdlb2JqLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdHBhZ2VvYmouc2F2ZSgoKSA9PiB7XG5cdFx0XHRcdE1vcmViaXRzLnN0YXR1cy5pbmZvKHdpbmRvdy53Z1VMUygn5qCH6K6w55So5oi36aG1JywgJ+aomeiomOS9v+eUqOiAhemggemdoicpLCAn5a6M5oiQJyk7XG5cdFx0XHRcdHN0YXRlbGVtLnN0YXR1cyh3aW5kb3cud2dVTFMoJ+ato+WcqOS/neaKpOmhtemdoicsICfmraPlnKjkv53orbfpoIHpnaInKSk7XG5cdFx0XHRcdHBhZ2VvYmoubG9hZChUd2lua2xlLmJsb2NrLmNhbGxiYWNrLnByb3RlY3R1c2VycGFnZSk7XG5cdFx0XHR9KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0VHdpbmtsZS5ibG9jay5jYWxsYmFjay5wcm90ZWN0dXNlcnBhZ2UocGFnZW9iaik7XG5cdFx0fVxuXHR9O1xuXHRUd2lua2xlLmJsb2NrLmNhbGxiYWNrLnByb3RlY3R1c2VycGFnZSA9IChwYWdlb2JqKSA9PiB7XG5cdFx0Y29uc3QgcGFyYW1zID0gcGFnZW9iai5nZXRDYWxsYmFja1BhcmFtZXRlcnMoKTtcblx0XHRjb25zdCBzdGF0ZWxlbSA9IHBhZ2VvYmouZ2V0U3RhdHVzRWxlbWVudCgpO1xuXHRcdGlmIChwYXJhbXMuYWN0aW9udHlwZS5pbmNsdWRlcygncHJvdGVjdCcpKSB7XG5cdFx0XHRpZiAocGFnZW9iai5leGlzdHMoKSkge1xuXHRcdFx0XHRwYWdlb2JqLnNldEVkaXRQcm90ZWN0aW9uKCdzeXNvcCcsICdpbmRlZmluaXRlJyk7XG5cdFx0XHRcdHBhZ2VvYmouc2V0TW92ZVByb3RlY3Rpb24oJ3N5c29wJywgJ2luZGVmaW5pdGUnKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHBhZ2VvYmouc2V0Q3JlYXRlUHJvdGVjdGlvbignc3lzb3AnLCAnaW5kZWZpbml0ZScpO1xuXHRcdFx0fVxuXHRcdFx0cGFnZW9iai5zZXRFZGl0U3VtbWFyeSh3aW5kb3cud2dVTFMoJ+iiq+awuOS5heWwgeemgeeahOeUqOaIt+mhtScsICfooqvmsLjkuYXlsIHpjpbnmoTkvb/nlKjogIXpoIHpnaInKSk7XG5cdFx0XHRwYWdlb2JqLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdHBhZ2VvYmoucHJvdGVjdCgoKSA9PiB7XG5cdFx0XHRcdE1vcmViaXRzLnN0YXR1cy5pbmZvKFxuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5L+d5oqk55So5oi36aG1JywgJ+S/neitt+S9v+eUqOiAhemggemdoicpLFxuXHRcdFx0XHRcdHBhZ2VvYmouZXhpc3RzKCkgPyB3aW5kb3cud2dVTFMoJ+W3suWFqOS/neaKpCcsICflt7Llhajkv53orbcnKSA6IHdpbmRvdy53Z1VMUygn5bey55m957q45L+d5oqkJywgJ+W3sueZvee0meS/neittycpXG5cdFx0XHRcdCk7XG5cdFx0XHRcdHN0YXRlbGVtLmluZm8oJ+WFqOmDqOWujOaIkCcpO1xuXHRcdFx0fSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHN0YXRlbGVtLmluZm8oJ+WFqOmDqOWujOaIkCcpO1xuXHRcdH1cblx0fTtcblx0VHdpbmtsZS5ibG9jay5jYWxsYmFjay5pc3N1ZV90ZW1wbGF0ZSA9IChmb3JtRGF0YSkgPT4ge1xuXHRcdC8vIFVzZSB3Z1JlbGV2YW50VXNlck5hbWUgdG8gZW5zdXJlIHRoZSBibG9jayB0ZW1wbGF0ZSBnb2VzIHRvIGEgc2luZ2xlIElQIGFuZCBub3QgdG8gdGhlXG5cdFx0Ly8gXCJ0YWxrIHBhZ2VcIiBvZiBhbiBJUCByYW5nZSAod2hpY2ggZG9lcyBub3QgZXhpc3QpXG5cdFx0Y29uc3QgdXNlclRhbGtQYWdlID0gYFVzZXJfdGFsazoke213LmNvbmZpZy5nZXQoJ3dnUmVsZXZhbnRVc2VyTmFtZScpfWA7XG5cdFx0Y29uc3QgcGFyYW1zID0ge1xuXHRcdFx0Li4uZm9ybURhdGEsXG5cdFx0XHRtZXNzYWdlRGF0YTogVHdpbmtsZS5ibG9jay5ibG9ja1ByZXNldHNJbmZvW2Zvcm1EYXRhLnRlbXBsYXRlXSxcblx0XHRcdHVzZXJ0YWxrX3N1bW1hcnk6IFR3aW5rbGUuYmxvY2suYmxvY2tQcmVzZXRzSW5mb1tmb3JtRGF0YS5wcmVzZXQgfHwgZm9ybURhdGEudGVtcGxhdGVdLnN1bW1hcnksXG5cdFx0XHRyZWFzb246IFR3aW5rbGUuYmxvY2suZmllbGRfdGVtcGxhdGVfb3B0aW9ucy5ibG9ja19yZWFzb24sXG5cdFx0XHRkaXNhYmxldGFsazogVHdpbmtsZS5ibG9jay5maWVsZF90ZW1wbGF0ZV9vcHRpb25zLm5vdGFsayxcblx0XHRcdG5vZW1haWw6IFR3aW5rbGUuYmxvY2suZmllbGRfdGVtcGxhdGVfb3B0aW9ucy5ub2VtYWlsX3RlbXBsYXRlLFxuXHRcdFx0bm9jcmVhdGU6IFR3aW5rbGUuYmxvY2suZmllbGRfdGVtcGxhdGVfb3B0aW9ucy5ub2NyZWF0ZV90ZW1wbGF0ZSxcblx0XHR9O1xuXHRcdE1vcmViaXRzLndpa2kuYWN0aW9uQ29tcGxldGVkLnJlZGlyZWN0ID0gdXNlclRhbGtQYWdlO1xuXHRcdE1vcmViaXRzLndpa2kuYWN0aW9uQ29tcGxldGVkLm5vdGljZSA9IHdpbmRvdy53Z1VMUyhcblx0XHRcdCflrozmiJDvvIzlsIblnKjlh6Dnp5LlkI7liqDovb3nlKjmiLforqjorrrpobUnLFxuXHRcdFx0J+WujOaIkO+8jOWwh+WcqOW5vuenkuW+jOi8ieWFpeS9v+eUqOiAheiojuirlumggSdcblx0XHQpO1xuXHRcdGNvbnN0IHFpdXdlbl9wYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZSh1c2VyVGFsa1BhZ2UsIHdpbmRvdy53Z1VMUygn55So5oi36K6o6K666aG15L+u5pS5JywgJ+S9v+eUqOiAheiojuirlumggeS/ruaUuScpKTtcblx0XHRxaXV3ZW5fcGFnZS5zZXRDYWxsYmFja1BhcmFtZXRlcnMocGFyYW1zKTtcblx0XHRxaXV3ZW5fcGFnZS5sb2FkKFR3aW5rbGUuYmxvY2suY2FsbGJhY2subWFpbik7XG5cdH07XG5cdFR3aW5rbGUuYmxvY2suY2FsbGJhY2suY2xvc2VSZXF1ZXN0ID0gKHZpcFBhZ2UpID0+IHtcblx0XHRjb25zdCBwYXJhbXMgPSB2aXBQYWdlLmdldENhbGxiYWNrUGFyYW1ldGVycygpO1xuXHRcdGxldCB0ZXh0ID0gdmlwUGFnZS5nZXRQYWdlVGV4dCgpO1xuXHRcdGNvbnN0IHN0YXR1c0VsZW1lbnQgPSB2aXBQYWdlLmdldFN0YXR1c0VsZW1lbnQoKTtcblx0XHRjb25zdCB1c2VyTmFtZSA9IG13LmNvbmZpZy5nZXQoJ3dnUmVsZXZhbnRVc2VyTmFtZScpO1xuXHRcdGNvbnN0IGV4cGlyeVRleHQgPSBNb3JlYml0cy5zdHJpbmcuZm9ybWF0VGltZShwYXJhbXMuZXhwaXJ5KTtcblx0XHRjb25zdCBjb21tZW50ID0gYHt7QmxvY2tlZHwke01vcmViaXRzLnN0cmluZy5pc0luZmluaXR5KHBhcmFtcy5leHBpcnkpID8gJ2luZGVmJyA6IGV4cGlyeVRleHR9fX3jgIJgO1xuXHRcdGNvbnN0IHJlcXVlc3RMaXN0ID0gdGV4dC5zcGxpdCgvKD89XFxuPT09Lis9PT1cXHMqXFxuKS8pO1xuXHRcdGxldCBmb3VuZCA9IGZhbHNlO1xuXHRcdGxldCBoaWRlbmFtZSA9IGZhbHNlO1xuXHRcdGNvbnN0IHZpcFJlID0gbmV3IFJlZ0V4cChcblx0XHRcdGB7e1xcXFxzKltWdl1hbmRhbFxcXFxzKlxcXFx8XFxcXHMqKDFcXFxccyo9XFxcXHMqKT8ke01vcmViaXRzLnBhZ2VOYW1lUmVnZXgoXG5cdFx0XHRcdHVzZXJOYW1lXG5cdFx0XHQpfVxcXFxzKihcXFxcfFxcXFxzKmhpZGVuYW1lXFxcXHMqPVtefF0rKT99fWAsXG5cdFx0XHQnbSdcblx0XHQpO1xuXHRcdGZvciAobGV0IHJlcXVlc3Qgb2YgcmVxdWVzdExpc3QpIHtcblx0XHRcdGlmICh2aXBSZS5leGVjKHJlcXVlc3QpKSB7XG5cdFx0XHRcdGhpZGVuYW1lID0gL1xcfFxccypoaWRlbmFtZVxccyo9W158XSsvLnRlc3QocmVxdWVzdCk7XG5cdFx0XHRcdHJlcXVlc3QgPSByZXF1ZXN0LnRyaW1FbmQoKTtcblx0XHRcdFx0bGV0IG5ld1RleHQgPSByZXF1ZXN0LnJlcGxhY2UoXG5cdFx0XHRcdFx0L14oXFwqXFxzKuWkhOeQhu+8milbIFxcdF0qKDwhLS0g6Z2e566h55CG5ZOh5YOF5Y+v5qiZ6KiY5bey5Z+36KGM55qE5bCB56aB77yM6Yed5bCN5o+Q5aCx55qE5oSP6KaL6KuL5pS+5Zyo5LiL5LiA6KGMIC0tPik/WyBcXHRdKiQvbSxcblx0XHRcdFx0XHRgJDEke2NvbW1lbnR9LS1+fmAuY29uY2F0KCd+ficpXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGlmIChyZXF1ZXN0ID09PSBuZXdUZXh0KSB7XG5cdFx0XHRcdFx0bmV3VGV4dCA9IGAke3JlcXVlc3R9XFxuKiDlpITnkIbvvJoke2NvbW1lbnR9LS1+fmAuY29uY2F0KCd+ficpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJlcXVlc3QgPSBgJHtuZXdUZXh0fVxcbmA7XG5cdFx0XHRcdGZvdW5kID0gdHJ1ZTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGlmICghZm91bmQpIHtcblx0XHRcdHN0YXR1c0VsZW1lbnQud2Fybih3aW5kb3cud2dVTFMoJ+ayoeacieaJvuWIsOebuOWFs+eahOivt+axgicsICfmspLmnInmib7liLDnm7jpl5znmoToq4vmsYInKSk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdHRleHQgPSByZXF1ZXN0TGlzdC5qb2luKCcnKTtcblx0XHRsZXQgc3VtbWFyeTtcblx0XHRpZiAoaGlkZW5hbWUpIHtcblx0XHRcdHN1bW1hcnkgPSB3aW5kb3cud2dVTFMoJ+agh+iusOS4uuW3suWkhOeQhicsICfmqJnoqJjngrrlt7LomZXnkIYnKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3VtbWFyeSA9IGAvKiAke3VzZXJOYW1lfSAqLyBgO1xuXHRcdFx0aWYgKE1vcmViaXRzLnN0cmluZy5pc0luZmluaXR5KHBhcmFtcy5leHBpcnkpKSB7XG5cdFx0XHRcdHN1bW1hcnkgKz0gd2luZG93LndnVUxTKCfkuI3pmZDmnJ/lsIHnpoEnLCAn5LiN6ZmQ5pyf5bCB6Y6WJyk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRzdW1tYXJ5ICs9IHdpbmRvdy53Z1VMUygn5bCB56aBJywgJ+WwgemOlicpICsgZXhwaXJ5VGV4dDtcblx0XHRcdH1cblx0XHR9XG5cdFx0dmlwUGFnZS5zZXRFZGl0U3VtbWFyeShzdW1tYXJ5KTtcblx0XHR2aXBQYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHR2aXBQYWdlLnNldFBhZ2VUZXh0KHRleHQpO1xuXHRcdHZpcFBhZ2Uuc2F2ZSgpO1xuXHR9O1xuXHRUd2lua2xlLmJsb2NrLmNhbGxiYWNrLmdldEJsb2NrTm90aWNlV2lraXRleHQgPSAocGFyYW1zKSA9PiB7XG5cdFx0bGV0IHRleHQgPSAne3snO1xuXHRcdGNvbnN0IHNldHRpbmdzID0gVHdpbmtsZS5ibG9jay5ibG9ja1ByZXNldHNJbmZvW3BhcmFtcy50ZW1wbGF0ZV07XG5cdFx0aWYgKHNldHRpbmdzLm5vbnN0YW5kYXJkKSB7XG5cdFx0XHR0ZXh0ICs9IHBhcmFtcy50ZW1wbGF0ZTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGV4dCArPSAnc3Vic3Q6Jy5jb25jYXQocGFyYW1zLnRlbXBsYXRlKTtcblx0XHRcdGlmIChwYXJhbXMuYXJ0aWNsZSAmJiBzZXR0aW5ncy5wYWdlUGFyYW0pIHtcblx0XHRcdFx0dGV4dCArPSBgfHBhZ2U9JHtwYXJhbXMuYXJ0aWNsZX1gO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCEvdGU/bXB8XlxccyokfG1pbi8uZXhlYyhwYXJhbXMuZXhwaXJ5KSkge1xuXHRcdFx0XHRpZiAocGFyYW1zLmluZGVmaW5pdGUpIHtcblx0XHRcdFx0XHR0ZXh0ICs9ICd8aW5kZWY9eWVzJztcblx0XHRcdFx0fSBlbHNlIGlmICghcGFyYW1zLmJsYW5rX2R1cmF0aW9uKSB7XG5cdFx0XHRcdFx0Ly8gTm8gZXhwaXJ5IGNoZWNrc1xuXHRcdFx0XHRcdC8vIEJsb2NrIHRlbXBsYXRlIHdhbnRzIGEgZHVyYXRpb24sIG5vdCBkYXRlXG5cdFx0XHRcdFx0dGV4dCArPSBgfHRpbWU9JHtNb3JlYml0cy5zdHJpbmcuZm9ybWF0VGltZShwYXJhbXMuZXhwaXJ5KX1gOyAvLyBmb3JtYXRUaW1lXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmICghVHdpbmtsZS5ibG9jay5pc1JlZ2lzdGVyZWQgJiYgIXBhcmFtcy5oYXJkYmxvY2spIHtcblx0XHRcdFx0dGV4dCArPSAnfGFub249eWVzJztcblx0XHRcdH1cblx0XHRcdGlmIChwYXJhbXMucmVhc29uKSB7XG5cdFx0XHRcdHRleHQgKz0gYHxyZWFzb249JHtwYXJhbXMucmVhc29ufWA7XG5cdFx0XHR9XG5cdFx0XHRpZiAocGFyYW1zLmRpc2FibGV0YWxrKSB7XG5cdFx0XHRcdHRleHQgKz0gJ3xub3RhbGs9eWVzJztcblx0XHRcdH1cblx0XHRcdC8vIEN1cnJlbnRseSwgYWxsIHBhcnRpYWwgYmxvY2sgdGVtcGxhdGVzIGFyZSBcInN0YW5kYXJkXCJcblx0XHRcdC8vIEJ1aWxkaW5nIHRoZSB0ZW1wbGF0ZSwgaG93ZXZlciwgdGFrZXMgYSBmYWlyIGJpdCBvZiBsb2dpY1xuXHRcdFx0aWYgKHBhcmFtcy5wYXJ0aWFsKSB7XG5cdFx0XHRcdGlmIChwYXJhbXMucGFnZXJlc3RyaWN0aW9ucy5sZW5ndGggfHwgcGFyYW1zLm5hbWVzcGFjZXJlc3RyaWN0aW9ucy5sZW5ndGgpIHtcblx0XHRcdFx0XHRjb25zdCBtYWtlU2VudGVuY2UgPSAoYXJyYXkpID0+IHtcblx0XHRcdFx0XHRcdGlmIChhcnJheS5sZW5ndGggPCAzKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBhcnJheS5qb2luKCflkownKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGNvbnN0IGxhc3QgPSBhcnJheS5wb3AoKTtcblx0XHRcdFx0XHRcdHJldHVybiBgJHthcnJheS5qb2luKCfjgIEnKX3lkowke2xhc3R9YDtcblx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdHRleHQgKz0gJ3xhcmVhPeafkOS6myc7XG5cdFx0XHRcdFx0aWYgKHBhcmFtcy5wYWdlcmVzdHJpY3Rpb25zLmxlbmd0aCkge1xuXHRcdFx0XHRcdFx0dGV4dCArPSBg6aCB6Z2i77yIJHttYWtlU2VudGVuY2UoXG5cdFx0XHRcdFx0XHRcdHBhcmFtcy5wYWdlcmVzdHJpY3Rpb25zLm1hcCgocCkgPT4ge1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiBgW1s6JHtwfV1dYDtcblx0XHRcdFx0XHRcdFx0fSlcblx0XHRcdFx0XHRcdCl9YDtcblx0XHRcdFx0XHRcdHRleHQgKz0gcGFyYW1zLm5hbWVzcGFjZXJlc3RyaWN0aW9ucy5sZW5ndGggPyAn77yJ5ZKM5p+Q5LqbJyA6ICfvvIknO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAocGFyYW1zLm5hbWVzcGFjZXJlc3RyaWN0aW9ucy5sZW5ndGgpIHtcblx0XHRcdFx0XHRcdC8vIDEgPT4gVGFsaywgMiA9PiBVc2VyLCBldGMuXG5cdFx0XHRcdFx0XHRjb25zdCBuYW1lc3BhY2VOYW1lcyA9IHBhcmFtcy5uYW1lc3BhY2VyZXN0cmljdGlvbnMubWFwKChpZCkgPT4ge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gbWVudUZvcm1hdHRlZE5hbWVzcGFjZXNbaWRdO1xuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHR0ZXh0ICs9IGAke1xuXHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ1tbSGVscDrlkb3lkI3nqbrpl7R85ZG95ZCN56m66Ze0XV3vvIgnLCAnW1tIZWxwOuWRveWQjeepuumWk3zlkb3lkI3nqbrplpNdXe+8iCcpICtcblx0XHRcdFx0XHRcdFx0bWFrZVNlbnRlbmNlKG5hbWVzcGFjZU5hbWVzKVxuXHRcdFx0XHRcdFx0fe+8iWA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9IGVsc2UgaWYgKHBhcmFtcy5hcmVhKSB7XG5cdFx0XHRcdFx0dGV4dCArPSBgfGFyZWE9JHtwYXJhbXMuYXJlYX1gO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGlmIChwYXJhbXMubm9lbWFpbCkge1xuXHRcdFx0XHRcdFx0dGV4dCArPSAnfGVtYWlsPXllcyc7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmIChwYXJhbXMubm9jcmVhdGUpIHtcblx0XHRcdFx0XHRcdHRleHQgKz0gJ3xhY2NvdW50Y3JlYXRlPXllcyc7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGlmIChzZXR0aW5ncy5zaWcpIHtcblx0XHRcdHRleHQgKz0gYHxzaWc9JHtzZXR0aW5ncy5zaWd9YDtcblx0XHR9XG5cdFx0cmV0dXJuIGAke3RleHR9fX1gO1xuXHR9O1xuXHRUd2lua2xlLmJsb2NrLmNhbGxiYWNrLm1haW4gPSAocGFnZW9iaikgPT4ge1xuXHRcdGNvbnN0IHBhcmFtcyA9IHBhZ2VvYmouZ2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKCk7XG5cdFx0Y29uc3QgZGF0ZSA9IG5ldyBNb3JlYml0cy5kYXRlKHBhZ2VvYmouZ2V0TG9hZFRpbWUoKSk7XG5cdFx0Y29uc3Qge21lc3NhZ2VEYXRhfSA9IHBhcmFtcztcblx0XHRsZXQgdGV4dDtcblx0XHRwYXJhbXMuaW5kZWZpbml0ZSA9IE1vcmViaXRzLnN0cmluZy5pc0luZmluaXR5KHBhcmFtcy5leHBpcnkpO1xuXHRcdGlmIChUd2lua2xlLmdldFByZWYoJ2JsYW5rVGFsa3BhZ2VPbkluZGVmQmxvY2snKSAmJiBwYXJhbXMudGVtcGxhdGUgIT09ICd1dy1sYmxvY2snICYmIHBhcmFtcy5pbmRlZmluaXRlKSB7XG5cdFx0XHRNb3JlYml0cy5zdGF0dXMuaW5mbyhcblx0XHRcdFx0d2luZG93LndnVUxTKCfkv6Hmga8nLCAn6LOH6KiKJyksXG5cdFx0XHRcdHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHQn5qC55o2u5Y+C5pWw6K6+572u5riF56m66K6o6K666aG15bm25Li65pel5pyf5Yib5bu65pawMue6p+agh+mimCcsXG5cdFx0XHRcdFx0J+agueaTmuWBj+WlveioreWumua4heepuuiojuirlumggeS4pueCuuaXpeacn+W7uueri+aWsDLntJrmqJnpoYwnXG5cdFx0XHRcdClcblx0XHRcdCk7XG5cdFx0XHR0ZXh0ID0gYCR7ZGF0ZS5tb250aEhlYWRlcigpfVxcbmA7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRleHQgPSBwYWdlb2JqLmdldFBhZ2VUZXh0KCk7XG5cdFx0XHRjb25zdCBkYXRlSGVhZGVyUmVnZXggPSBkYXRlLm1vbnRoSGVhZGVyUmVnZXgoKTtcblx0XHRcdGxldCBkYXRlSGVhZGVyUmVnZXhMYXN0O1xuXHRcdFx0bGV0IGRhdGVIZWFkZXJSZWdleFJlc3VsdDtcblx0XHRcdHdoaWxlICgoZGF0ZUhlYWRlclJlZ2V4TGFzdCA9IGRhdGVIZWFkZXJSZWdleC5leGVjKHRleHQpKSAhPT0gbnVsbCkge1xuXHRcdFx0XHRkYXRlSGVhZGVyUmVnZXhSZXN1bHQgPSBkYXRlSGVhZGVyUmVnZXhMYXN0O1xuXHRcdFx0fVxuXHRcdFx0Ly8gSWYgZGF0ZUhlYWRlclJlZ2V4UmVzdWx0IGlzIG51bGwgdGhlbiBsYXN0SGVhZGVySW5kZXggaXMgbmV2ZXIgY2hlY2tlZC4gSWYgaXQgaXMgbm90IG51bGwgYnV0XG5cdFx0XHQvLyBcXG49PSBpcyBub3QgZm91bmQsIHRoZW4gdGhlIGRhdGUgaGVhZGVyIG11c3QgYmUgYXQgdGhlIHZlcnkgc3RhcnQgb2YgdGhlIHBhZ2UuIGxhc3RJbmRleE9mXG5cdFx0XHQvLyByZXR1cm5zIC0xIGluIHRoaXMgY2FzZSwgc28gbGFzdEhlYWRlckluZGV4IGdldHMgc2V0IHRvIDAgYXMgZGVzaXJlZC5cblx0XHRcdGNvbnN0IGxhc3RIZWFkZXJJbmRleCA9IHRleHQubGFzdEluZGV4T2YoJ1xcbj09JykgKyAxO1xuXHRcdFx0aWYgKHRleHQubGVuZ3RoID4gMCkge1xuXHRcdFx0XHR0ZXh0ICs9ICdcXG5cXG4nO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCFkYXRlSGVhZGVyUmVnZXhSZXN1bHQgfHwgZGF0ZUhlYWRlclJlZ2V4UmVzdWx0LmluZGV4ICE9PSBsYXN0SGVhZGVySW5kZXgpIHtcblx0XHRcdFx0TW9yZWJpdHMuc3RhdHVzLmluZm8oXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKCfkv6Hmga8nLCAn6LOH6KiKJyksXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKCfmnKrmib7liLDlvZPmnIjnmoTkuoznuqfmoIfpopjvvIzlsIbliJvlu7rmlrDnmoQnLCAn5pyq5om+5Yiw55W25pyI55qE5LqM57Sa5qiZ6aGM77yM5bCH5bu656uL5paw55qEJylcblx0XHRcdFx0KTtcblx0XHRcdFx0dGV4dCArPSBgJHtkYXRlLm1vbnRoSGVhZGVyKCl9XFxuYDtcblx0XHRcdH1cblx0XHR9XG5cdFx0cGFyYW1zLmV4cGlyeSA9IHBhcmFtcy50ZW1wbGF0ZV9leHBpcnkgPT09IHVuZGVmaW5lZCA/IHBhcmFtcy5leHBpcnkgOiBwYXJhbXMudGVtcGxhdGVfZXhwaXJ5O1xuXHRcdHRleHQgKz0gVHdpbmtsZS5ibG9jay5jYWxsYmFjay5nZXRCbG9ja05vdGljZVdpa2l0ZXh0KHBhcmFtcyk7XG5cdFx0Ly8gYnVpbGQgdGhlIGVkaXQgc3VtbWFyeVxuXHRcdGxldCBzdW1tYXJ5ID0gcGFyYW1zLnVzZXJ0YWxrX3N1bW1hcnk7XG5cdFx0aWYgKG1lc3NhZ2VEYXRhLnN1cHByZXNzQXJ0aWNsZUluU3VtbWFyeSAhPT0gdHJ1ZSAmJiBwYXJhbXMuYXJ0aWNsZSkge1xuXHRcdFx0c3VtbWFyeSArPSBgJHt3aW5kb3cud2dVTFMoJ++8jOS6jicsICfvvIzmlrwnKX1bWzoke3BhcmFtcy5hcnRpY2xlfV1dYDtcblx0XHR9XG5cdFx0cGFnZW9iai5zZXRQYWdlVGV4dCh0ZXh0KTtcblx0XHRwYWdlb2JqLnNldEVkaXRTdW1tYXJ5KHN1bW1hcnkpO1xuXHRcdHBhZ2VvYmouc2V0Q2hhbmdlVGFncyhUd2lua2xlLmNoYW5nZVRhZ3MpO1xuXHRcdHBhZ2VvYmouc2V0V2F0Y2hsaXN0KFR3aW5rbGUuZ2V0UHJlZignd2F0Y2hCbG9ja05vdGljZXMnKSk7XG5cdFx0cGFnZW9iai5zYXZlKCk7XG5cdH07XG5cdFR3aW5rbGUuYWRkSW5pdENhbGxiYWNrKFR3aW5rbGUuYmxvY2ssICdibG9jaycpO1xufSkoalF1ZXJ5KTtcblxuZXhwb3J0IHt9O1xuIiwgIi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXRzLWNvbW1lbnRcbi8vIEB0cy1ub2NoZWNrXG5cbi8qISBUd2lua2xlLmpzIC0gZnJpZW5kbHl0YWxrYmFjay5qcyAqL1xuKGZ1bmN0aW9uIGZyaWVuZGx5dGFsa2JhY2soJCkge1xuXHRjb25zdCAkYm9keSA9ICQoJ2JvZHknKTtcblx0LyoqXG5cdCAqIGZyaWVuZGx5dGFsa2JhY2suanM6IFRhbGtiYWNrIG1vZHVsZVxuXHQgKiBNb2RlIG9mIGludm9jYXRpb246IFRhYiAoXCJUQlwiKVxuXHQgKiBBY3RpdmUgb246IEFueSBwYWdlIHdpdGggcmVsZXZhbnQgdXNlciBuYW1lICh1c2Vyc3BhY2UsIGNvbnRyaWJzLCBldGMuKSBleGNlcHQgSVAgcmFuZ2VzXG5cdCAqIENvbmZpZyBkaXJlY3RpdmVzIGluOiBGcmllbmRseUNvbmZpZ1xuXHQgKi9cblx0VHdpbmtsZS50YWxrYmFjayA9ICgpID0+IHtcblx0XHRpZiAoIW13LmNvbmZpZy5nZXQoJ3dnUmVsZXZhbnRVc2VyTmFtZScpKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdFR3aW5rbGUuYWRkUG9ydGxldExpbmsoXG5cdFx0XHRUd2lua2xlLnRhbGtiYWNrLmNhbGxiYWNrLFxuXHRcdFx0J+mAmuWRiicsXG5cdFx0XHQnZnJpZW5kbHktdGFsa2JhY2snLFxuXHRcdFx0d2luZG93LndnVUxTKCflm57lpI3pgJrlkYonLCAn5Zue6KaG6YCa5ZGKJylcblx0XHQpO1xuXHR9O1xuXHRUd2lua2xlLnRhbGtiYWNrLmNhbGxiYWNrID0gKCkgPT4ge1xuXHRcdGlmIChcblx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnUmVsZXZhbnRVc2VyTmFtZScpID09PSBtdy5jb25maWcuZ2V0KCd3Z1VzZXJOYW1lJykgJiZcblx0XHRcdCFjb25maXJtKHdpbmRvdy53Z1VMUygn5oKo5a+C5a+e5Yiw5LqG6KaB6Ieq5bex5Zue5aSN6Ieq5bex55qE56iL5bqm5LmI77yfJywgJ+aCqOWvguWvnuWIsOS6huimgeiHquW3seWbnuimhuiHquW3seeahOeoi+W6pum6vO+8nycpKVxuXHRcdCkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRjb25zdCBXaW5kb3cgPSBuZXcgTW9yZWJpdHMuc2ltcGxlV2luZG93KDYwMCwgMzUwKTtcblx0XHRXaW5kb3cuc2V0VGl0bGUod2luZG93LndnVUxTKCflm57lpI3pgJrlkYonLCAn5Zue6KaG6YCa5ZGKJykpO1xuXHRcdFdpbmRvdy5zZXRTY3JpcHROYW1lKCdUd2lua2xlJyk7XG5cdFx0V2luZG93LmFkZEZvb3Rlckxpbmsod2luZG93LndnVUxTKCflhbPkuo57e3RhbGtiYWNrfX0nLCAn6Zec5pa8e3t0YWxrYmFja319JyksICdUZW1wbGF0ZTpUYWxrYmFjaycpO1xuXHRcdFdpbmRvdy5hZGRGb290ZXJMaW5rKHdpbmRvdy53Z1VMUygn6YCa5ZGK6K6+572uJywgJ+mAmuWRiuioreWumicpLCAnSDpUVy9QUkVGI3RhbGtiYWNrJyk7XG5cdFx0V2luZG93LmFkZEZvb3Rlckxpbmsod2luZG93LndnVUxTKCdUd2lua2xl5biu5YqpJywgJ1R3aW5rbGXoqqrmmI4nKSwgJ0g6VFcvRE9DI3RhbGtiYWNrJyk7XG5cdFx0Y29uc3QgZm9ybSA9IG5ldyBNb3JlYml0cy5xdWlja0Zvcm0oVHdpbmtsZS50YWxrYmFjay5ldmFsdWF0ZSk7XG5cdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ3JhZGlvJyxcblx0XHRcdG5hbWU6ICd0YnRhcmdldCcsXG5cdFx0XHRsaXN0OiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflm57lpI3vvJrmiJHnmoTorqjorrrpobUnLCAn5Zue6KaG77ya5oiR55qE6KiO6KuW6aCBJyksXG5cdFx0XHRcdFx0dmFsdWU6ICdteXRhbGsnLFxuXHRcdFx0XHRcdGNoZWNrZWQ6ICd0cnVlJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WbnuWkje+8muWFtuS7lueUqOaIt+eahOiuqOiuuumhtScsICflm57opobvvJrlhbbku5bkvb/nlKjogIXnmoToqI7oq5bpoIEnKSxcblx0XHRcdFx0XHR2YWx1ZTogJ3VzZXJ0YWxrJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WbnuWkje+8muWFtuWug+mhtemdoicsICflm57opobvvJrlhbblroPpoIHpnaInKSxcblx0XHRcdFx0XHR2YWx1ZTogJ290aGVyJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+mCgOivt+iuqOiuuicsICfpgoDoq4voqI7oq5YnKSxcblx0XHRcdFx0XHR2YWx1ZTogJ3NlZScsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogJ+mAmuWRiuadv+mAmuefpScsXG5cdFx0XHRcdFx0dmFsdWU6ICdub3RpY2UnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn4oCc5pyJ5paw6YKu5Lu24oCdJywgJ+OAjOacieaWsOmDteS7tuOAjScpLFxuXHRcdFx0XHRcdHZhbHVlOiAnbWFpbCcsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdFx0ZXZlbnQ6IFR3aW5rbGUudGFsa2JhY2suY2hhbmdlVGFyZ2V0LFxuXHRcdH0pO1xuXHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdmaWVsZCcsXG5cdFx0XHRsYWJlbDogJ+W3peS9nOWMuicsXG5cdFx0XHRuYW1lOiAnd29ya19hcmVhJyxcblx0XHR9KTtcblx0XHRjb25zdCBwcmV2aWV3bGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcblx0XHQkKHByZXZpZXdsaW5rKS5vbignY2xpY2snLCAoKSA9PiB7XG5cdFx0XHRUd2lua2xlLnRhbGtiYWNrLnByZXZpZXcocmVzdWx0KTsgLy8gfHJlc3VsdHwgaXMgZGVmaW5lZCBiZWxvd1xuXHRcdH0pO1xuXG5cdFx0cHJldmlld2xpbmsuc3R5bGUuY3Vyc29yID0gJ3BvaW50ZXInO1xuXHRcdHByZXZpZXdsaW5rLnRleHRDb250ZW50ID0gd2luZG93LndnVUxTKCfpooTop4gnLCAn6aCQ6Ka9Jyk7XG5cdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ2RpdicsXG5cdFx0XHRpZDogJ3RhbGtiYWNrcHJldmlldycsXG5cdFx0XHRsYWJlbDogW3ByZXZpZXdsaW5rXSxcblx0XHR9KTtcblx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnZGl2Jyxcblx0XHRcdGlkOiAnZnJpZW5kbHl0YWxrYmFjay1wcmV2aWV3Ym94Jyxcblx0XHRcdHN0eWxlOiAnZGlzcGxheTogbm9uZScsXG5cdFx0fSk7XG5cdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ3N1Ym1pdCcsXG5cdFx0fSk7XG5cdFx0Y29uc3QgcmVzdWx0ID0gZm9ybS5yZW5kZXIoKTtcblx0XHRXaW5kb3cuc2V0Q29udGVudChyZXN1bHQpO1xuXHRcdFdpbmRvdy5kaXNwbGF5KCk7XG5cdFx0cmVzdWx0LnByZXZpZXdlciA9IG5ldyBNb3JlYml0cy53aWtpLnByZXZpZXcoJChyZXN1bHQpLmZpbmQoJ2RpdiNmcmllbmRseXRhbGtiYWNrLXByZXZpZXdib3gnKS5sYXN0KClbMF0pO1xuXHRcdC8vIFdlIG11c3QgaW5pdCB0aGVcblx0XHRjb25zdCBldnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnRXZlbnQnKTtcblx0XHRldnQuaW5pdEV2ZW50KCdjaGFuZ2UnLCB0cnVlLCB0cnVlKTtcblx0XHRyZXN1bHQudGJ0YXJnZXRbMF0uZGlzcGF0Y2hFdmVudChldnQpO1xuXHRcdC8vIENoZWNrIHdoZXRoZXIgdGhlIHVzZXIgaGFzIG9wdGVkIG91dCBmcm9tIHRhbGtiYWNrXG5cdFx0Y29uc3QgcXVlcnkgPSB7XG5cdFx0XHRhY3Rpb246ICdxdWVyeScsXG5cdFx0XHRwcm9wOiAnZXh0bGlua3MnLFxuXHRcdFx0dGl0bGVzOiBgVXNlciB0YWxrOiR7bXcuY29uZmlnLmdldCgnd2dSZWxldmFudFVzZXJOYW1lJyl9YCxcblx0XHRcdGVscXVlcnk6ICd1c2VyanMuaW52YWxpZC9ub1RhbGtiYWNrJyxcblx0XHRcdGVsbGltaXQ6ICcxJyxcblx0XHR9O1xuXHRcdGNvbnN0IHFpdXdlbl9hcGkgPSBuZXcgTW9yZWJpdHMud2lraS5hcGkoXG5cdFx0XHR3aW5kb3cud2dVTFMoJ+aKk+WPlumAgOWHuumAmuWRiuS/oeaBrycsICfmipPlj5bpgIDlh7rpgJrlkYros4foqIonKSxcblx0XHRcdHF1ZXJ5LFxuXHRcdFx0VHdpbmtsZS50YWxrYmFjay5jYWxsYmFjay5vcHRvdXRTdGF0dXNcblx0XHQpO1xuXHRcdHFpdXdlbl9hcGkucG9zdCgpO1xuXHR9O1xuXHRUd2lua2xlLnRhbGtiYWNrLm9wdG91dCA9ICcnO1xuXHRUd2lua2xlLnRhbGtiYWNrLmNhbGxiYWNrLm9wdG91dFN0YXR1cyA9IChhcGlvYmopID0+IHtcblx0XHRjb25zdCAkZWwgPSAkKGFwaW9iai5nZXRYTUwoKSkuZmluZCgnZWwnKTtcblx0XHRpZiAoJGVsLmxlbmd0aCkge1xuXHRcdFx0VHdpbmtsZS50YWxrYmFjay5vcHRvdXQgPVxuXHRcdFx0XHRtdy5jb25maWcuZ2V0KCd3Z1JlbGV2YW50VXNlck5hbWUnKSArIHdpbmRvdy53Z1VMUygn5LiN5biM5pyb5pS25Yiw5Zue5aSN6YCa5ZGKJywgJ+S4jeW4jOacm+aUtuWIsOWbnuimhumAmuWRiicpO1xuXHRcdFx0Y29uc3QgdXJsID0gJGVsLnRleHQoKTtcblx0XHRcdGNvbnN0IHJlYXNvbiA9IG13LnV0aWwuZ2V0UGFyYW1WYWx1ZSgncmVhc29uJywgdXJsKTtcblx0XHRcdFR3aW5rbGUudGFsa2JhY2sub3B0b3V0ICs9IHJlYXNvbiA/IGDvvJoke01vcmViaXRzLnN0cmluZy5hcHBlbmRQdW5jdHVhdGlvbihyZWFzb24pfWAgOiAn44CCJztcblx0XHR9XG5cdFx0JGJvZHkuZmluZCgnI3R3aW5rbGUtdGFsa2JhY2stb3B0b3V0LW1lc3NhZ2UnKS50ZXh0KFR3aW5rbGUudGFsa2JhY2sub3B0b3V0KTtcblx0fTtcblx0bGV0IHByZXZfcGFnZSA9ICcnO1xuXHRsZXQgcHJldl9zZWN0aW9uID0gJyc7XG5cdGxldCBwcmV2X21lc3NhZ2UgPSAnJztcblx0VHdpbmtsZS50YWxrYmFjay5jaGFuZ2VUYXJnZXQgPSAoZSkgPT4ge1xuXHRcdGNvbnN0IHZhbHVlID0gZS50YXJnZXQudmFsdWVzO1xuXHRcdGNvbnN0IHJvb3QgPSBlLnRhcmdldC5mb3JtO1xuXHRcdGNvbnN0IFtvbGRfYXJlYV0gPSBNb3JlYml0cy5xdWlja0Zvcm0uZ2V0RWxlbWVudHMocm9vdCwgJ3dvcmtfYXJlYScpO1xuXHRcdGlmIChyb290LnNlY3Rpb24pIHtcblx0XHRcdHByZXZfc2VjdGlvbiA9IHJvb3Quc2VjdGlvbi52YWx1ZTtcblx0XHR9XG5cdFx0aWYgKHJvb3QubWVzc2FnZSkge1xuXHRcdFx0cHJldl9tZXNzYWdlID0gcm9vdC5tZXNzYWdlLnZhbHVlO1xuXHRcdH1cblx0XHRpZiAocm9vdC5wYWdlKSB7XG5cdFx0XHRwcmV2X3BhZ2UgPSByb290LnBhZ2UudmFsdWU7XG5cdFx0fVxuXHRcdGxldCB3b3JrX2FyZWEgPSBuZXcgTW9yZWJpdHMucXVpY2tGb3JtLmVsZW1lbnQoe1xuXHRcdFx0dHlwZTogJ2ZpZWxkJyxcblx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WbnuWkjemAmuWRiuS/oeaBrycsICflm57opobpgJrlkYros4foqIonKSxcblx0XHRcdG5hbWU6ICd3b3JrX2FyZWEnLFxuXHRcdH0pO1xuXHRcdHJvb3QucHJldmlld2VyLmNsb3NlUHJldmlldygpO1xuXHRcdHN3aXRjaCAodmFsdWUpIHtcblx0XHRcdGNhc2UgJ3VzZXJ0YWxrJzpcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2RpdicsXG5cdFx0XHRcdFx0bGFiZWw6ICcnLFxuXHRcdFx0XHRcdHN0eWxlOiAnY29sb3I6ICNmMDAnLFxuXHRcdFx0XHRcdGlkOiAndHdpbmtsZS10YWxrYmFjay1vcHRvdXQtbWVzc2FnZScsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHR3b3JrX2FyZWEuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnaW5wdXQnLFxuXHRcdFx0XHRcdG5hbWU6ICdwYWdlJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfnlKjmiLfvvIjlv4XloavvvIknLCAn5L2/55So6ICF77yI5b+F5aGr77yJJyksXG5cdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKCfmgqjnlZnoqIDpobXpnaLnmoTnlKjmiLflkI3vvIzlv4XloavjgIInLCAn5oKo55WZ6KiA6aCB6Z2i55qE5L2/55So6ICF5ZCN56ix77yM5b+F5aGr44CCJyksXG5cdFx0XHRcdFx0dmFsdWU6IHByZXZfcGFnZSxcblx0XHRcdFx0XHRyZXF1aXJlZDogdHJ1ZSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRcdFx0bmFtZTogJ3NlY3Rpb24nLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+eroOiKgu+8iOWPr+mAie+8iScsICfnq6Dnr4DvvIjlj6/pgbjvvIknKSxcblx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn5oKo55WZ6KiA55qE56ug6IqC5qCH6aKY77yM55WZ56m65YiZ5LiN5Lya5Lqn55Sf56ug6IqC6ZO+5o6l44CCJyxcblx0XHRcdFx0XHRcdCfmgqjnlZnoqIDnmoTnq6Dnr4DmqJnpoYzvvIznlZnnqbrliYfkuI3mnIPnlKLnlJ/nq6Dnr4DpgKPntZDjgIInXG5cdFx0XHRcdFx0KSxcblx0XHRcdFx0XHR2YWx1ZTogcHJldl9zZWN0aW9uLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlICdub3RpY2UnOiB7XG5cdFx0XHRcdGNvbnN0IG5vdGljZWJvYXJkID0gd29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ3NlbGVjdCcsXG5cdFx0XHRcdFx0bmFtZTogJ25vdGljZWJvYXJkJyxcblx0XHRcdFx0XHRsYWJlbDogJ+mAmuWRiuadv++8micsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRmb3IgKGNvbnN0IFtuYm5hbWUsIGRhdGFdIG9mIE9iamVjdC5lbnRyaWVzKFR3aW5rbGUudGFsa2JhY2subm90aWNlYm9hcmRzKSkge1xuXHRcdFx0XHRcdG5vdGljZWJvYXJkLmFwcGVuZCh7XG5cdFx0XHRcdFx0XHR0eXBlOiAnb3B0aW9uJyxcblx0XHRcdFx0XHRcdGxhYmVsOiBkYXRhLmxhYmVsLFxuXHRcdFx0XHRcdFx0dmFsdWU6IG5ibmFtZSxcblx0XHRcdFx0XHRcdHNlbGVjdGVkOiAhIWRhdGEuZGVmYXVsdFNlbGVjdGVkLFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRcdFx0bmFtZTogJ3NlY3Rpb24nLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+eroOiKgu+8iOWPr+mAie+8iScsICfnq6Dnr4DvvIjlj6/pgbjvvIknKSxcblx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoJ+eroOiKguagh+mimO+8jOeVmeepuuWImeS4jeS8muS6p+eUn+eroOiKgumTvuaOpeOAgicsICfnq6Dnr4DmqJnpoYzvvIznlZnnqbrliYfkuI3mnIPnlKLnlJ/nq6Dnr4DpgKPntZDjgIInKSxcblx0XHRcdFx0XHR2YWx1ZTogcHJldl9zZWN0aW9uLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRjYXNlICdvdGhlcic6XG5cdFx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0XHRcdGxhYmVsOiAnJyxcblx0XHRcdFx0XHRzdHlsZTogJ2NvbG9yOiAjZjAwJyxcblx0XHRcdFx0XHRpZDogJ3R3aW5rbGUtdGFsa2JhY2stb3B0b3V0LW1lc3NhZ2UnLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2lucHV0Jyxcblx0XHRcdFx0XHRuYW1lOiAncGFnZScsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5a6M5pW06aG16Z2i5ZCNJywgJ+WujOaVtOmggemdouWQjScpLFxuXHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfmgqjnlZnkuIvmtojmga/nmoTlrozmlbTpobXpnaLlkI3vvIzkvovlpoLigJxRaXV3ZW5fdGFsazrpppbpobXigJ3jgIInLFxuXHRcdFx0XHRcdFx0J+aCqOeVmeS4i+ioiuaBr+eahOWujOaVtOmggemdouWQje+8jOS+i+WmguOAjFFpdXdlbl90YWxrOummlumggeOAjeOAgidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdHZhbHVlOiBwcmV2X3BhZ2UsXG5cdFx0XHRcdFx0cmVxdWlyZWQ6IHRydWUsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHR3b3JrX2FyZWEuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnaW5wdXQnLFxuXHRcdFx0XHRcdG5hbWU6ICdzZWN0aW9uJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfnq6DoioLvvIjlj6/pgInvvIknLCAn56ug56+A77yI5Y+v6YG477yJJyksXG5cdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+aCqOeVmeiogOeahOeroOiKguagh+mimO+8jOeVmeepuuWImeS4jeS8muS6p+eUn+eroOiKgumTvuaOpeOAgicsXG5cdFx0XHRcdFx0XHQn5oKo55WZ6KiA55qE56ug56+A5qiZ6aGM77yM55WZ56m65YmH5LiN5pyD55Si55Sf56ug56+A6YCj57WQ44CCJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0dmFsdWU6IHByZXZfc2VjdGlvbixcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnbWFpbCc6XG5cdFx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRcdFx0bmFtZTogJ3NlY3Rpb24nLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+eUteWtkOmCruS7tuS4u+mimO+8iOWPr+mAie+8iScsICfpm7vlrZDpg7Xku7bkuLvpoYzvvIjlj6/pgbjvvIknKSxcblx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoJ+aCqOWPkeWHuueahOeUteWtkOmCruS7tueahOS4u+mimOOAgicsICfmgqjnmbzlh7rnmoTpm7vlrZDpg7Xku7bnmoTkuLvpoYzjgIInKSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnc2VlJzpcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2lucHV0Jyxcblx0XHRcdFx0XHRuYW1lOiAncGFnZScsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5a6M5pW06aG16Z2i5ZCNJywgJ+WujOaVtOmggemdouWQjScpLFxuXHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfmgqjnlZnkuIvmtojmga/nmoTlrozmlbTpobXpnaLlkI3vvIzkvovlpoLigJxRaXV3ZW5fdGFsazrpppbpobXigJ3jgIInLFxuXHRcdFx0XHRcdFx0J+aCqOeVmeS4i+ioiuaBr+eahOWujOaVtOmggemdouWQje+8jOS+i+WmguOAjFFpdXdlbl90YWxrOummlumggeOAjeOAgidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdHZhbHVlOiBwcmV2X3BhZ2UsXG5cdFx0XHRcdFx0cmVxdWlyZWQ6IHRydWUsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHR3b3JrX2FyZWEuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnaW5wdXQnLFxuXHRcdFx0XHRcdG5hbWU6ICdzZWN0aW9uJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfnq6DoioLvvIjlj6/pgInvvIknLCAn56ug56+A77yI5Y+v6YG477yJJyksXG5cdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+aCqOeVmeiogOeahOeroOiKguagh+mimO+8jOeVmeepuuWImeS4jeS8muS6p+eUn+eroOiKgumTvuaOpeOAgicsXG5cdFx0XHRcdFx0XHQn5oKo55WZ6KiA55qE56ug56+A5qiZ6aGM77yM55WZ56m65YmH5LiN5pyD55Si55Sf56ug56+A6YCj57WQ44CCJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0dmFsdWU6IHByZXZfc2VjdGlvbixcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0LyogY2FzZSAnbXl0YWxrJzogKi9cblx0XHRcdC8qIGZhbGxzIHRocm91Z2ggKi9cblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0XHRcdGxhYmVsOiAnJyxcblx0XHRcdFx0XHRzdHlsZTogJ2NvbG9yOiAjZjAwJyxcblx0XHRcdFx0XHRpZDogJ3R3aW5rbGUtdGFsa2JhY2stb3B0b3V0LW1lc3NhZ2UnLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2lucHV0Jyxcblx0XHRcdFx0XHRuYW1lOiAnc2VjdGlvbicsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn56ug6IqC77yI5Y+v6YCJ77yJJywgJ+eroOevgO+8iOWPr+mBuO+8iScpLFxuXHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfmgqjnlZnoqIDnmoTnq6DoioLmoIfpopjvvIznlZnnqbrliJnkuI3kvJrkuqfnlJ/nq6DoioLpk77mjqXjgIInLFxuXHRcdFx0XHRcdFx0J+aCqOeVmeiogOeahOeroOevgOaomemhjO+8jOeVmeepuuWJh+S4jeacg+eUoueUn+eroOevgOmAo+e1kOOAgidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdHZhbHVlOiBwcmV2X3NlY3Rpb24sXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRicmVhaztcblx0XHR9XG5cdFx0aWYgKHZhbHVlICE9PSAnbm90aWNlJykge1xuXHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICd0ZXh0YXJlYScsXG5cdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+mZhOWKoOS/oeaBr++8iOWPr+mAie+8ie+8micsICfpmYTliqDos4foqIrvvIjlj6/pgbjvvInvvJonKSxcblx0XHRcdFx0bmFtZTogJ21lc3NhZ2UnLFxuXHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0J+S8muWcqOWbnuWkjemAmuWRiuaooeadv+S4i+WHuueOsOeahOa2iOaBr++8jOaCqOeahOetvuWQjeS8muiiq+WKoOWcqOacgOWQjuOAgicsXG5cdFx0XHRcdFx0J+acg+WcqOWbnuimhumAmuWRiuaooeadv+S4i+WHuuePvueahOioiuaBr++8jOaCqOeahOewveWQjeacg+iiq+WKoOWcqOacgOW+jOOAgidcblx0XHRcdFx0KSxcblx0XHRcdH0pO1xuXHRcdH1cblx0XHR3b3JrX2FyZWEgPSB3b3JrX2FyZWEucmVuZGVyKCk7XG5cdFx0cm9vdC5yZXBsYWNlQ2hpbGQod29ya19hcmVhLCBvbGRfYXJlYSk7XG5cdFx0aWYgKHJvb3QubWVzc2FnZSkge1xuXHRcdFx0cm9vdC5tZXNzYWdlLnZhbHVlID0gcHJldl9tZXNzYWdlO1xuXHRcdH1cblx0XHQkYm9keS5maW5kKCcjdHdpbmtsZS10YWxrYmFjay1vcHRvdXQtbWVzc2FnZScpLnRleHQoVHdpbmtsZS50YWxrYmFjay5vcHRvdXQpO1xuXHR9O1xuXHRUd2lua2xlLnRhbGtiYWNrLm5vdGljZWJvYXJkcyA9IHtcblx0XHRhZmZwOiB7XG5cdFx0XHRsYWJlbDogYFFXOkFGL0ZQ77yIJHt3aW5kb3cud2dVTFMoJ+i/h+a7pOWZqOWkhOeQhi/miqXlkYonLCAn6YGO5r++5Zmo6JmV55CGL+WgseWRiicpfe+8iWAsXG5cdFx0XHR0aXRsZTogd2luZG93LndnVUxTKCfov4fmu6TlmajplJnor6/miqXlkYrmnInmlrDlm57lupQnLCAn6YGO5r++5Zmo6Yyv6Kqk5aCx5ZGK5pyJ5paw5Zue5oeJJyksXG5cdFx0XHRjb250ZW50OiBgJHt3aW5kb3cud2dVTFMoXG5cdFx0XHRcdCfmgqjnmoRbW1FpdXdlbl90YWxrOui/h+a7pOWZqOWkhOeQhi/miqXlkYp86L+H5ruk5Zmo6ZSZ6K+v5oql5ZGKXV3lt7LmnInlm57lupTvvIzor7fliY3lvoDmn6XnnIvjgIInLFxuXHRcdFx0XHQn5oKo55qEW1tRaXV3ZW5fdGFsazrov4fmu6TlmajlpITnkIYv5oql5ZGKfOmBjua/vuWZqOmMr+iqpOWgseWRil1d5bey5pyJ5Zue5oeJ77yM6KuL5YmN5b6A5p+l55yL44CCJ1xuXHRcdFx0KX0tLX5+YC5jb25jYXQoJ35+JyksXG5cdFx0XHRlZGl0U3VtbWFyeTogd2luZG93LndnVUxTKFxuXHRcdFx0XHQn5pyJ5YWzW1tRaXV3ZW5fdGFsazrov4fmu6TlmajlpITnkIYv5oql5ZGKfOi/h+a7pOWZqOmUmeivr+aKpeWRil1d55qE6YCa55+lJyxcblx0XHRcdFx0J+aciemXnFtbUWl1d2VuX3RhbGs66L+H5ruk5Zmo5aSE55CGL+aKpeWRinzpgY7mv77lmajpjK/oqqTloLHlkYpdXeeahOmAmuefpSdcblx0XHRcdCksXG5cdFx0XHRkZWZhdWx0U2VsZWN0ZWQ6IHRydWUsXG5cdFx0fSxcblx0XHRzYmw6IHtcblx0XHRcdGxhYmVsOiAnU3BhbS1ibGFja2xpc3QnLFxuXHRcdFx0dGl0bGU6IHdpbmRvdy53Z1VMUygn5Z6D5Zy+6ZO+5o6l6buR5ZCN5Y2V6K+35rGC5pyJ5paw5Zue5bqUJywgJ+Weg+WcvumAo+e1kOm7keWQjeWWruiri+axguacieaWsOWbnuaHiScpLFxuXHRcdFx0Y29udGVudDogYCR7d2luZG93LndnVUxTKFxuXHRcdFx0XHQn5oKo55qEW1tRaXV3ZW5fdGFsazrnrqHnkIblkZjlkYrnpLrmnb985Z6D5Zy+6ZO+5o6l6buR5ZCN5Y2V6K+35rGCXV3lt7LmnInlm57lupTvvIzor7fliY3lvoDmn6XnnIvjgIInLFxuXHRcdFx0XHQn5oKo55qEW1tRaXV3ZW5fdGFsazrnrqHnkIblkZjlkYrnpLrmnb985Z6D5Zy+6YCj57WQ6buR5ZCN5Zau6KuL5rGCXV3lt7LmnInlm57mh4nvvIzoq4vliY3lvoDmn6XnnIvjgIInXG5cdFx0XHQpfS0tfn5gLmNvbmNhdCgnfn4nKSxcblx0XHRcdGVkaXRTdW1tYXJ5OiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdCfmnInlhbNbW1FpdXdlbl90YWxrOueuoeeQhuWRmOWRiuekuuadv3zlnoPlnL7pk77mjqXpu5HlkI3ljZXor7fmsYJdXeeahOmAmuefpScsXG5cdFx0XHRcdCfmnInpl5xbW1FpdXdlbl90YWxrOueuoeeQhuWRmOWRiuekuuadv3zlnoPlnL7pgKPntZDpu5HlkI3llq7oq4vmsYJdXeeahOmAmuefpSdcblx0XHRcdCksXG5cdFx0fSxcblx0XHRzaGw6IHtcblx0XHRcdGxhYmVsOiAnU3BhbS13aGl0ZWxpc3QnLFxuXHRcdFx0dGl0bGU6IHdpbmRvdy53Z1VMUygn5Z6D5Zy+6ZO+5o6l55m95ZCN5Y2V6K+35rGC5pyJ5paw5Zue5bqUJywgJ+Weg+WcvumAo+e1kOeZveWQjeWWruiri+axguacieaWsOWbnuaHiScpLFxuXHRcdFx0Y29udGVudDogYCR7d2luZG93LndnVUxTKFxuXHRcdFx0XHQn5oKo55qEW1tRaXV3ZW5fdGFsazrnrqHnkIblkZjlkYrnpLrmnb985Z6D5Zy+6ZO+5o6l55m95ZCN5Y2V6K+35rGCXV3lt7LmnInlm57lupTvvIzor7fliY3lvoDmn6XnnIvjgIInLFxuXHRcdFx0XHQn5oKo55qEW1tRaXV3ZW5fdGFsazrnrqHnkIblkZjlkYrnpLrmnb985Z6D5Zy+6YCj57WQ55m95ZCN5Zau6KuL5rGCXV3lt7LmnInlm57mh4nvvIzoq4vliY3lvoDmn6XnnIvjgIInXG5cdFx0XHQpfS0tfn5gLmNvbmNhdCgnfn4nKSxcblx0XHRcdGVkaXRTdW1tYXJ5OiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdCfmnInlhbNbW1FpdXdlbl90YWxrOueuoeeQhuWRmOWRiuekuuadv3zlnoPlnL7pk77mjqXnmb3lkI3ljZXor7fmsYJdXeeahOmAmuefpScsXG5cdFx0XHRcdCfmnInpl5xbW1FpdXdlbl90YWxrOueuoeeQhuWRmOWRiuekuuadv3zlnoPlnL7pgKPntZDnmb3lkI3llq7oq4vmsYJdXeeahOmAmuefpSdcblx0XHRcdCksXG5cdFx0fSxcblx0fTtcblx0VHdpbmtsZS50YWxrYmFjay5ldmFsdWF0ZSA9IChlKSA9PiB7XG5cdFx0Y29uc3QgZm9ybSA9IGUudGFyZ2V0O1xuXHRcdGNvbnN0IFt0YnRhcmdldF0gPSBmb3JtLmdldENoZWNrZWQoJ3RidGFyZ2V0Jyk7XG5cdFx0bGV0IHBhZ2U7XG5cdFx0bGV0IG1lc3NhZ2U7XG5cdFx0Y29uc3Qgc2VjdGlvbiA9IGZvcm0uc2VjdGlvbi52YWx1ZTtcblx0XHRsZXQgZWRpdFN1bW1hcnk7XG5cdFx0aWYgKHRidGFyZ2V0ID09PSAnbm90aWNlJykge1xuXHRcdFx0cGFnZSA9IGZvcm0ubm90aWNlYm9hcmQudmFsdWU7XG5cdFx0XHQoe2VkaXRTdW1tYXJ5fSA9IFR3aW5rbGUudGFsa2JhY2subm90aWNlYm9hcmRzW3BhZ2VdKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gdXNlcnRhbGssIG90aGVyLCBzZWVcblx0XHRcdHBhZ2UgPSBmb3JtLnBhZ2UgPyBmb3JtLnBhZ2UudmFsdWUgOiBtdy5jb25maWcuZ2V0KCd3Z1VzZXJOYW1lJyk7XG5cdFx0XHRpZiAoZm9ybS5tZXNzYWdlKSB7XG5cdFx0XHRcdG1lc3NhZ2UgPSBmb3JtLm1lc3NhZ2UudmFsdWUudHJpbSgpO1xuXHRcdFx0fVxuXHRcdFx0aWYgKHRidGFyZ2V0ID09PSAnbWFpbCcpIHtcblx0XHRcdFx0ZWRpdFN1bW1hcnkgPSB3aW5kb3cud2dVTFMoJ+mAmuefpe+8muacieaWsOmCruS7ticsICfpgJrnn6XvvJrmnInmlrDpg7Xku7YnKTtcblx0XHRcdH0gZWxzZSBpZiAodGJ0YXJnZXQgPT09ICdzZWUnKSB7XG5cdFx0XHRcdGVkaXRTdW1tYXJ5ID0gYCR7d2luZG93LndnVUxTKCfor7fnnIvnnIsnLCAn6KuL55yL55yLJyl9W1s6JHtwYWdlfSR7c2VjdGlvbiA/IGAjJHtzZWN0aW9ufWAgOiAnJ31dXSR7d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdCfkuIrnmoTorqjorronLFxuXHRcdFx0XHRcdCfkuIrnmoToqI7oq5YnXG5cdFx0XHRcdCl9YDtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdC8vIHRidGFyZ2V0IG9uZSBvZiBteXRhbGssIHVzZXJ0YWxrLCBvdGhlclxuXHRcdFx0XHRlZGl0U3VtbWFyeSA9IGAke3dpbmRvdy53Z1VMUygn5Zue5aSN6YCa5ZGKJywgJ+WbnuimhumAmuWRiicpfe+8iFtbOmA7XG5cdFx0XHRcdGlmICh0YnRhcmdldCAhPT0gJ290aGVyJyAmJiAhbmV3IFJlZ0V4cChgXlxcXFxzKiR7TW9yZWJpdHMubmFtZXNwYWNlUmVnZXgoMyl9OmAsICdpJykudGVzdChwYWdlKSkge1xuXHRcdFx0XHRcdGVkaXRTdW1tYXJ5ICs9ICdVc2VyIHRhbGs6Jztcblx0XHRcdFx0fVxuXHRcdFx0XHRlZGl0U3VtbWFyeSArPSBgJHtwYWdlICsgKHNlY3Rpb24gPyBgIyR7c2VjdGlvbn1gIDogJycpfV1dKWA7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdE1vcmViaXRzLnNpbXBsZVdpbmRvdy5zZXRCdXR0b25zRW5hYmxlZChmYWxzZSk7XG5cdFx0TW9yZWJpdHMuc3RhdHVzLmluaXQoZm9ybSk7XG5cdFx0Y29uc3QgZnVsbFVzZXJUYWxrUGFnZU5hbWUgPSBgJHtcblx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnRm9ybWF0dGVkTmFtZXNwYWNlcycpW213LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlSWRzJykudXNlcl90YWxrXVxuXHRcdH06JHttdy5jb25maWcuZ2V0KCd3Z1JlbGV2YW50VXNlck5hbWUnKX1gO1xuXHRcdE1vcmViaXRzLndpa2kuYWN0aW9uQ29tcGxldGVkLnJlZGlyZWN0ID0gZnVsbFVzZXJUYWxrUGFnZU5hbWU7XG5cdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQubm90aWNlID0gd2luZG93LndnVUxTKFxuXHRcdFx0J+WbnuWkjemAmuWRiuWujOaIkO+8jOWwhuWcqOWHoOenkuWGheWIt+aWsOmhtemdoicsXG5cdFx0XHQn5Zue6KaG6YCa5ZGK5a6M5oiQ77yM5bCH5Zyo5bm+56eS5YWn6YeN5paw5pW055CG6aCB6Z2iJ1xuXHRcdCk7XG5cdFx0Y29uc3QgdGV4dCA9IGBcXG5cXG4ke1R3aW5rbGUudGFsa2JhY2suZ2V0Tm90aWNlV2lraXRleHQodGJ0YXJnZXQsIHBhZ2UsIHNlY3Rpb24sIG1lc3NhZ2UpWzBdfWA7XG5cdFx0Y29uc3QgdGFsa3BhZ2UgPSBuZXcgTW9yZWJpdHMud2lraS5wYWdlKGZ1bGxVc2VyVGFsa1BhZ2VOYW1lLCB3aW5kb3cud2dVTFMoJ+WKoOWFpeWbnuWkjemAmuWRiicsICfliqDlhaXlm57opobpgJrlkYonKSk7XG5cdFx0dGFsa3BhZ2Uuc2V0RWRpdFN1bW1hcnkoZWRpdFN1bW1hcnkpO1xuXHRcdHRhbGtwYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHR0YWxrcGFnZS5zZXRBcHBlbmRUZXh0KHRleHQpO1xuXHRcdHRhbGtwYWdlLnNldENyZWF0ZU9wdGlvbigncmVjcmVhdGUnKTtcblx0XHR0YWxrcGFnZS5zZXRNaW5vckVkaXQoVHdpbmtsZS5nZXRQcmVmKCdtYXJrVGFsa2JhY2tBc01pbm9yJykpO1xuXHRcdHRhbGtwYWdlLnNldEZvbGxvd1JlZGlyZWN0KHRydWUpO1xuXHRcdHRhbGtwYWdlLmFwcGVuZCgpO1xuXHR9O1xuXHRUd2lua2xlLnRhbGtiYWNrLnByZXZpZXcgPSAoZm9ybSkgPT4ge1xuXHRcdGNvbnN0IFt0YnRhcmdldF0gPSBmb3JtLmdldENoZWNrZWQoJ3RidGFyZ2V0Jyk7XG5cdFx0Y29uc3Qgc2VjdGlvbiA9IGZvcm0uc2VjdGlvbi52YWx1ZTtcblx0XHRsZXQgcGFnZTtcblx0XHRsZXQgbWVzc2FnZTtcblx0XHRpZiAodGJ0YXJnZXQgPT09ICdub3RpY2UnKSB7XG5cdFx0XHRwYWdlID0gZm9ybS5ub3RpY2Vib2FyZC52YWx1ZTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gdXNlcnRhbGssIG90aGVyLCBzZWVcblx0XHRcdHBhZ2UgPSBmb3JtLnBhZ2UgPyBmb3JtLnBhZ2UudmFsdWUgOiBtdy5jb25maWcuZ2V0KCd3Z1VzZXJOYW1lJyk7XG5cdFx0XHRpZiAoZm9ybS5tZXNzYWdlKSB7XG5cdFx0XHRcdG1lc3NhZ2UgPSBmb3JtLm1lc3NhZ2UudmFsdWUudHJpbSgpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRjb25zdCBbbm90aWNldGV4dF0gPSBUd2lua2xlLnRhbGtiYWNrLmdldE5vdGljZVdpa2l0ZXh0KHRidGFyZ2V0LCBwYWdlLCBzZWN0aW9uLCBtZXNzYWdlKTtcblx0XHRmb3JtLnByZXZpZXdlci5iZWdpblJlbmRlcihub3RpY2V0ZXh0LCBgVXNlcl90YWxrOiR7bXcuY29uZmlnLmdldCgnd2dSZWxldmFudFVzZXJOYW1lJyl9YCk7IC8vIEZvcmNlIHdpa2l0ZXh0L2NvcnJlY3QgdXNlcm5hbWVcblx0fTtcblxuXHRUd2lua2xlLnRhbGtiYWNrLmdldE5vdGljZVdpa2l0ZXh0ID0gKHRidGFyZ2V0LCBwYWdlLCBzZWN0aW9uLCBtZXNzYWdlKSA9PiB7XG5cdFx0bGV0IHRleHQ7XG5cdFx0bGV0IHRpdGxlO1xuXHRcdGxldCBjb250ZW50O1xuXHRcdGlmICh0YnRhcmdldCA9PT0gJ25vdGljZScpIHtcblx0XHRcdCh7dGl0bGV9ID0gVHdpbmtsZS50YWxrYmFjay5ub3RpY2Vib2FyZHNbcGFnZV0pO1xuXHRcdFx0Y29udGVudCA9IE1vcmViaXRzLnN0cmluZy5zYWZlUmVwbGFjZShUd2lua2xlLnRhbGtiYWNrLm5vdGljZWJvYXJkc1twYWdlXS5jb250ZW50LCAnJFNFQ1RJT04nLCBzZWN0aW9uKTtcblx0XHRcdHRleHQgPSBgPT0gJHt0aXRsZX0gPT1cXG4ke2NvbnRlbnR9YDtcblx0XHR9IGVsc2UgaWYgKHRidGFyZ2V0ID09PSAnc2VlJykge1xuXHRcdFx0dGl0bGUgPSBwYWdlICsgd2luZG93LndnVUxTKCfnmoTnm7jlhbPorqjorronLCAn55qE55u46Zec6KiO6KuWJyk7XG5cdFx0XHRjb250ZW50ID0gJ3t7Jy5jb25jYXQoXG5cdFx0XHRcdCdzdWJzdDonLFxuXHRcdFx0XHRgUGxlYXNlIHNlZXxsb2NhdGlvbj0ke3BhZ2V9JHtzZWN0aW9uID8gYCMke3NlY3Rpb259YCA6ICcnfXxtb3JlPSR7bWVzc2FnZS50cmltKCl9fX1gXG5cdFx0XHQpO1xuXHRcdFx0dGV4dCA9ICd7eycuY29uY2F0KFxuXHRcdFx0XHQnc3Vic3Q6Jyxcblx0XHRcdFx0YFBsZWFzZSBzZWV8bG9jYXRpb249JHtwYWdlfSR7c2VjdGlvbiA/IGAjJHtzZWN0aW9ufWAgOiAnJ318bW9yZT0ke21lc3NhZ2UudHJpbSgpfX19YFxuXHRcdFx0KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGV4dCA9ICc9PSc7XG5cdFx0XHRpZiAodGJ0YXJnZXQgPT09ICdtYWlsJykge1xuXHRcdFx0XHR0aXRsZSA9IFR3aW5rbGUuZ2V0UHJlZignbWFpbEhlYWRpbmcnKTtcblx0XHRcdFx0Y29udGVudCA9IGB7e1lvdSd2ZSBnb3QgbWFpbHxzdWJqZWN0PSR7c2VjdGlvbn18dHM9fn5gLmNvbmNhdCgnficsICd+fn19Jyk7XG5cdFx0XHRcdHRleHQgKz0gYCR7VHdpbmtsZS5nZXRQcmVmKCdtYWlsSGVhZGluZycpfT09XFxue3tZb3UndmUgZ290IG1haWx8c3ViamVjdD0ke3NlY3Rpb259YDtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdC8vIHRidGFyZ2V0IG9uZSBvZiBteXRhbGssIHVzZXJ0YWxrLCBvdGhlclxuXHRcdFx0XHQvLyBjbGVhbiB0YWxrYmFjayBoZWFkaW5nOiBzdHJpcCBzZWN0aW9uIGhlYWRlciBtYXJrZXJzIHRoYXQgd2VyZSBlcnJvbmVvdXNseSBzdWdnZXN0ZWQgaW4gdGhlIGRvY3VtZW50YXRpb25cblx0XHRcdFx0dGl0bGUgPSBUd2lua2xlLmdldFByZWYoJ3RhbGtiYWNrSGVhZGluZycpLnJlcGxhY2UoL15cXHMqPStcXHMqKC4qPylcXHMqPSskXFxzKi8sICckMScpO1xuXHRcdFx0XHRjb250ZW50ID0gYHt7dGFsa2JhY2t8JHtwYWdlfSR7c2VjdGlvbiA/IGB8JHtzZWN0aW9ufWAgOiAnJ31gO1xuXHRcdFx0XHR0ZXh0ICs9IGAke1R3aW5rbGUuZ2V0UHJlZigndGFsa2JhY2tIZWFkaW5nJykucmVwbGFjZShcblx0XHRcdFx0XHQvXlxccyo9K1xccyooLio/KVxccyo9KyRcXHMqLyxcblx0XHRcdFx0XHQnJDEnXG5cdFx0XHRcdCl9PT1cXG57e3RhbGtiYWNrfCR7cGFnZX0ke3NlY3Rpb24gPyBgfCR7c2VjdGlvbn1gIDogJyd9YDtcblx0XHRcdH1cblx0XHRcdGNvbnRlbnQgKz0gJ3x0cz1+ficuY29uY2F0KCd+JywgJ35+fX0nKTtcblx0XHRcdHRleHQgKz0gJ3x0cz1+ficuY29uY2F0KCd+JywgJ35+fX0nKTtcblx0XHRcdGlmIChtZXNzYWdlKSB7XG5cdFx0XHRcdGNvbnRlbnQgKz0gYFxcbiR7bWVzc2FnZX1gO1xuXHRcdFx0XHR0ZXh0ICs9IGBcXG4ke21lc3NhZ2V9ICB+fmAuY29uY2F0KCd+ficpO1xuXHRcdFx0fSBlbHNlIGlmIChUd2lua2xlLmdldFByZWYoJ2luc2VydFRhbGtiYWNrU2lnbmF0dXJlJykpIHtcblx0XHRcdFx0dGV4dCArPSAnXFxufn4nLmNvbmNhdCgnfn4nKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIFt0ZXh0LCB0aXRsZSwgY29udGVudF07XG5cdH07XG5cdFR3aW5rbGUuYWRkSW5pdENhbGxiYWNrKFR3aW5rbGUudGFsa2JhY2ssICd0YWxrYmFjaycpO1xufSkoalF1ZXJ5KTtcblxuZXhwb3J0IHt9O1xuIiwgIi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXRzLWNvbW1lbnRcbi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQge2dlbmVyYXRlQXJyYXl9IGZyb20gJ2V4dC5nYWRnZXQuVXRpbCc7XG5cbi8qISBUd2lua2xlLmpzIC0gdHdpbmtsZXNwZWVkeS5qcyAqL1xuKGZ1bmN0aW9uIHR3aW5rbGVzcGVlZHkoJCkge1xuXHRjb25zdCAkYm9keSA9ICQoJ2JvZHknKTtcblx0LyoqXG5cdCAqIHR3aW5rbGVzcGVlZHkuanM6IENTRCBtb2R1bGVcblx0ICogTW9kZSBvZiBpbnZvY2F0aW9uOiBUYWIgKFwiQ1NEXCIpXG5cdCAqIEFjdGl2ZSBvbjogTm9uLXNwZWNpYWwsIGV4aXN0aW5nIHBhZ2VzXG5cdCAqXG5cdCAqIE5PVEUgRk9SIERFVkVMT1BFUlM6XG5cdCAqICBJZiBhZGRpbmcgYSBuZXcgY3JpdGVyaW9uLCBhZGQgaXQgdG8gdGhlIGFwcHJvcHJpYXRlIHBsYWNlcyBhdCB0aGUgdG9wIG9mXG5cdCAqICB0d2lua2xlY29uZmlnLmpzLlxuXHQgKiAgQWxzbywgY2hlY2sgb3V0IHRoZSBkZWZhdWx0IHZhbHVlcyBvZiB0aGUgQ1NEIHByZWZlcmVuY2VzIGluIHR3aW5rbGUuanMsXG5cdCAqICBhbmQgYWRkIHlvdXIgbmV3IGNyaXRlcmlvbiB0byB0aG9zZSBpZiB5b3UgdGhpbmsgaXQgd291bGQgYmUgZ29vZC5cblx0ICovXG5cdFR3aW5rbGUuc3BlZWR5ID0gKCkgPT4ge1xuXHRcdC8vIERpc2FibGUgb246XG5cdFx0Ly8gKiBzcGVjaWFsIHBhZ2VzXG5cdFx0Ly8gKiBub24tZXhpc3RlbnQgcGFnZXNcblx0XHRpZiAobXcuY29uZmlnLmdldCgnd2dOYW1lc3BhY2VOdW1iZXInKSA8IDAgfHwgIW13LmNvbmZpZy5nZXQoJ3dnQXJ0aWNsZUlkJykpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0VHdpbmtsZS5hZGRQb3J0bGV0TGluayhcblx0XHRcdFR3aW5rbGUuc3BlZWR5LmNhbGxiYWNrLFxuXHRcdFx0d2luZG93LndnVUxTKCfpgJ/liKAnLCAn6YCf5YiqJyksXG5cdFx0XHQndHctY3NkJyxcblx0XHRcdE1vcmViaXRzLnVzZXJJc1N5c29wID8gd2luZG93LndnVUxTKCflv6vpgJ/liKDpmaQnLCAn5b+r6YCf5Yiq6ZmkJykgOiB3aW5kb3cud2dVTFMoJ+ivt+axguW/q+mAn+WIoOmZpCcsICfoq4vmsYLlv6vpgJ/liKrpmaQnKVxuXHRcdCk7XG5cdH07XG5cdC8vIFRoaXMgZnVuY3Rpb24gaXMgcnVuIHdoZW4gdGhlIENTRCB0YWIvaGVhZGVyIGxpbmsgaXMgY2xpY2tlZFxuXHRUd2lua2xlLnNwZWVkeS5jYWxsYmFjayA9ICgpID0+IHtcblx0XHRUd2lua2xlLnNwZWVkeS5pbml0RGlhbG9nKFxuXHRcdFx0TW9yZWJpdHMudXNlcklzU3lzb3AgPyBUd2lua2xlLnNwZWVkeS5jYWxsYmFjay5ldmFsdWF0ZVN5c29wIDogVHdpbmtsZS5zcGVlZHkuY2FsbGJhY2suZXZhbHVhdGVVc2VyLFxuXHRcdFx0dHJ1ZVxuXHRcdCk7XG5cdH07XG5cdC8vIFVzZWQgYnkgdW5saW5rIGZlYXR1cmVcblx0VHdpbmtsZS5zcGVlZHkuZGlhbG9nID0gbnVsbDtcblx0Ly8gVXNlZCB0aHJvdWdob3V0XG5cdFR3aW5rbGUuc3BlZWR5Lmhhc0NTRCA9ICEhZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2RlbGV0ZS1yZWFzb24nKTtcblx0Ly8gVGhlIHNwZWVkeSBjcml0ZXJpYSBsaXN0IGNhbiBiZSBpbiBvbmUgb2Ygc2V2ZXJhbCBtb2Rlc1xuXHRUd2lua2xlLnNwZWVkeS5tb2RlID0ge1xuXHRcdHN5c29wU2luZ2xlU3VibWl0OiAxLFxuXHRcdC8vIHJhZGlvIGJ1dHRvbnMsIG5vIHN1Ymdyb3Vwcywgc3VibWl0IHdoZW4gXCJTdWJtaXRcIiBidXR0b24gaXMgY2xpY2tlZFxuXHRcdHN5c29wUmFkaW9DbGljazogMixcblx0XHQvLyByYWRpbyBidXR0b25zLCBubyBzdWJncm91cHMsIHN1Ym1pdCB3aGVuIGEgcmFkaW8gYnV0dG9uIGlzIGNsaWNrZWRcblx0XHRzeXNvcE11bHRpcGxlU3VibWl0OiAzLFxuXHRcdC8vIGNoZWNrIGJveGVzLCBzdWJncm91cHMsIFwiU3VibWl0XCIgYnV0dG9uIGFscmVhZHkgcHJlc2VudFxuXHRcdHN5c29wTXVsdGlwbGVSYWRpb0NsaWNrOiA0LFxuXHRcdC8vIGNoZWNrIGJveGVzLCBzdWJncm91cHMsIG5lZWQgdG8gYWRkIGEgXCJTdWJtaXRcIiBidXR0b25cblx0XHR1c2VyTXVsdGlwbGVTdWJtaXQ6IDUsXG5cdFx0Ly8gY2hlY2sgYm94ZXMsIHN1Ymdyb3VwcywgXCJTdWJtaXRcIiBidXR0b24gYWxyZWFkeSBwcmVzc2VudFxuXHRcdHVzZXJNdWx0aXBsZVJhZGlvQ2xpY2s6IDYsXG5cdFx0Ly8gY2hlY2sgYm94ZXMsIHN1Ymdyb3VwcywgbmVlZCB0byBhZGQgYSBcIlN1Ym1pdFwiIGJ1dHRvblxuXHRcdHVzZXJTaW5nbGVTdWJtaXQ6IDcsXG5cdFx0Ly8gcmFkaW8gYnV0dG9ucywgc3ViZ3JvdXBzLCBzdWJtaXQgd2hlbiBcIlN1Ym1pdFwiIGJ1dHRvbiBpcyBjbGlja2VkXG5cdFx0dXNlclNpbmdsZVJhZGlvQ2xpY2s6IDgsXG5cdFx0Ly8gcmFkaW8gYnV0dG9ucywgc3ViZ3JvdXBzLCBzdWJtaXQgd2hlbiBhIHJhZGlvIGJ1dHRvbiBpcyBjbGlja2VkXG5cdFx0Ly8gYXJlIHdlIGluIFwiZGVsZXRlIHBhZ2VcIiBtb2RlP1xuXHRcdC8vIChzeXNvcHMgY2FuIGFjY2VzcyBib3RoIFwiZGVsZXRlIHBhZ2VcIiBbc3lzb3BdIGFuZCBcInRhZyBwYWdlIG9ubHlcIiBbdXNlcl0gbW9kZXMpXG5cdFx0aXNTeXNvcDogKG1vZGUpID0+IHtcblx0XHRcdHJldHVybiAoXG5cdFx0XHRcdG1vZGUgPT09IFR3aW5rbGUuc3BlZWR5Lm1vZGUuc3lzb3BTaW5nbGVTdWJtaXQgfHxcblx0XHRcdFx0bW9kZSA9PT0gVHdpbmtsZS5zcGVlZHkubW9kZS5zeXNvcE11bHRpcGxlU3VibWl0IHx8XG5cdFx0XHRcdG1vZGUgPT09IFR3aW5rbGUuc3BlZWR5Lm1vZGUuc3lzb3BSYWRpb0NsaWNrIHx8XG5cdFx0XHRcdG1vZGUgPT09IFR3aW5rbGUuc3BlZWR5Lm1vZGUuc3lzb3BNdWx0aXBsZVJhZGlvQ2xpY2tcblx0XHRcdCk7XG5cdFx0fSxcblx0XHQvLyBkbyB3ZSBoYXZlIGEgXCJTdWJtaXRcIiBidXR0b24gb25jZSB0aGUgZm9ybSBpcyBjcmVhdGVkP1xuXHRcdGhhc1N1Ym1pdEJ1dHRvbjogKG1vZGUpID0+IHtcblx0XHRcdHJldHVybiAoXG5cdFx0XHRcdG1vZGUgPT09IFR3aW5rbGUuc3BlZWR5Lm1vZGUuc3lzb3BTaW5nbGVTdWJtaXQgfHxcblx0XHRcdFx0bW9kZSA9PT0gVHdpbmtsZS5zcGVlZHkubW9kZS5zeXNvcE11bHRpcGxlU3VibWl0IHx8XG5cdFx0XHRcdG1vZGUgPT09IFR3aW5rbGUuc3BlZWR5Lm1vZGUuc3lzb3BNdWx0aXBsZVJhZGlvQ2xpY2sgfHxcblx0XHRcdFx0bW9kZSA9PT0gVHdpbmtsZS5zcGVlZHkubW9kZS51c2VyTXVsdGlwbGVTdWJtaXQgfHxcblx0XHRcdFx0bW9kZSA9PT0gVHdpbmtsZS5zcGVlZHkubW9kZS51c2VyTXVsdGlwbGVSYWRpb0NsaWNrIHx8XG5cdFx0XHRcdG1vZGUgPT09IFR3aW5rbGUuc3BlZWR5Lm1vZGUudXNlclNpbmdsZVN1Ym1pdFxuXHRcdFx0KTtcblx0XHR9LFxuXHRcdC8vIGlzIGRiLW11bHRpcGxlIHRoZSBvdXRjb21lIGhlcmU/XG5cdFx0aXNNdWx0aXBsZTogKG1vZGUpID0+IHtcblx0XHRcdHJldHVybiAoXG5cdFx0XHRcdG1vZGUgPT09IFR3aW5rbGUuc3BlZWR5Lm1vZGUudXNlck11bHRpcGxlU3VibWl0IHx8XG5cdFx0XHRcdG1vZGUgPT09IFR3aW5rbGUuc3BlZWR5Lm1vZGUuc3lzb3BNdWx0aXBsZVN1Ym1pdCB8fFxuXHRcdFx0XHRtb2RlID09PSBUd2lua2xlLnNwZWVkeS5tb2RlLnVzZXJNdWx0aXBsZVJhZGlvQ2xpY2sgfHxcblx0XHRcdFx0bW9kZSA9PT0gVHdpbmtsZS5zcGVlZHkubW9kZS5zeXNvcE11bHRpcGxlUmFkaW9DbGlja1xuXHRcdFx0KTtcblx0XHR9LFxuXHR9O1xuXHQvLyBQcmVwYXJlcyB0aGUgc3BlZWR5IGRlbGV0aW9uIGRpYWxvZyBhbmQgZGlzcGxheXMgaXRcblx0VHdpbmtsZS5zcGVlZHkuaW5pdERpYWxvZyA9IChjYWxsYmFja2Z1bmMpID0+IHtcblx0XHRUd2lua2xlLnNwZWVkeS5kaWFsb2cgPSBuZXcgTW9yZWJpdHMuc2ltcGxlV2luZG93KFxuXHRcdFx0VHdpbmtsZS5nZXRQcmVmKCdzcGVlZHlXaW5kb3dXaWR0aCcpLFxuXHRcdFx0VHdpbmtsZS5nZXRQcmVmKCdzcGVlZHlXaW5kb3dIZWlnaHQnKVxuXHRcdCk7XG5cdFx0Y29uc3Qge2RpYWxvZ30gPSBUd2lua2xlLnNwZWVkeTtcblx0XHRkaWFsb2cuc2V0VGl0bGUod2luZG93LndnVUxTKCfpgInmi6nlv6vpgJ/liKDpmaTnkIbnlLEnLCAn6YG45pOH5b+r6YCf5Yiq6Zmk55CG55SxJykpO1xuXHRcdGRpYWxvZy5zZXRTY3JpcHROYW1lKCdUd2lua2xlJyk7XG5cdFx0ZGlhbG9nLmFkZEZvb3Rlckxpbmsod2luZG93LndnVUxTKCflv6vpgJ/liKDpmaTmlrnpkognLCAn5b+r6YCf5Yiq6Zmk5pa56YedJyksICdRVzpDU0QnKTtcblx0XHRkaWFsb2cuYWRkRm9vdGVyTGluayh3aW5kb3cud2dVTFMoJ+mAn+WIoOiuvue9ricsICfpgJ/liKroqK3lrponKSwgJ0g6VFcvUFJFRiNzcGVlZHknKTtcblx0XHRkaWFsb2cuYWRkRm9vdGVyTGluayh3aW5kb3cud2dVTFMoJ1R3aW5rbGXluK7liqknLCAnVHdpbmtsZeiqquaYjicpLCAnSDpUVy9ET0Mjc3BlZWR5Jyk7XG5cdFx0Y29uc3QgZm9ybSA9IG5ldyBNb3JlYml0cy5xdWlja0Zvcm0oXG5cdFx0XHRjYWxsYmFja2Z1bmMsXG5cdFx0XHRUd2lua2xlLmdldFByZWYoJ3NwZWVkeVNlbGVjdGlvblN0eWxlJykgPT09ICdyYWRpb0NsaWNrJyA/ICdjaGFuZ2UnIDogbnVsbFxuXHRcdCk7XG5cdFx0aWYgKE1vcmViaXRzLnVzZXJJc1N5c29wKSB7XG5cdFx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdGxpc3Q6IFtcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflj6rmoIforrDvvIzkuI3liKDpmaQnLCAn5Y+q5qiZ6KiY77yM5LiN5Yiq6ZmkJyksXG5cdFx0XHRcdFx0XHR2YWx1ZTogJ3RhZ19vbmx5Jyxcblx0XHRcdFx0XHRcdG5hbWU6ICd0YWdfb25seScsXG5cdFx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoJ+iLpeaCqOWPquaDs+agh+iusOatpOmhtemdouiAjOS4jeaYr+WwhuWFtuWIoOmZpCcsICfoi6Xmgqjlj6rmg7PmqJnoqJjmraTpoIHpnaLogIzkuI3mmK/lsIflhbbliKrpmaQnKSxcblx0XHRcdFx0XHRcdGNoZWNrZWQ6ICEoVHdpbmtsZS5zcGVlZHkuaGFzQ1NEIHx8IFR3aW5rbGUuZ2V0UHJlZignZGVsZXRlU3lzb3BEZWZhdWx0VG9EZWxldGUnKSksXG5cdFx0XHRcdFx0XHRldmVudDogKGV2ZW50KSA9PiB7XG5cdFx0XHRcdFx0XHRcdGNvbnN0IGNGb3JtID0gZXZlbnQudGFyZ2V0LmZvcm07XG5cdFx0XHRcdFx0XHRcdGNvbnN0IGNDaGVja2VkID0gZXZlbnQudGFyZ2V0LmNoZWNrZWQ7XG5cdFx0XHRcdFx0XHRcdC8vIGVuYWJsZS9kaXNhYmxlIHRhbGsgcGFnZSBjaGVja2JveFxuXHRcdFx0XHRcdFx0XHRpZiAoY0Zvcm0udGFsa3BhZ2UpIHtcblx0XHRcdFx0XHRcdFx0XHRjRm9ybS50YWxrcGFnZS5kaXNhYmxlZCA9IGNDaGVja2VkO1xuXHRcdFx0XHRcdFx0XHRcdGNGb3JtLnRhbGtwYWdlLmNoZWNrZWQgPSAhY0NoZWNrZWQgJiYgVHdpbmtsZS5nZXRQcmVmKCdkZWxldGVUYWxrUGFnZU9uRGVsZXRlJyk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0Ly8gZW5hYmxlL2Rpc2FibGUgcmVkaXJlY3RzIGNoZWNrYm94XG5cdFx0XHRcdFx0XHRcdGNGb3JtLnJlZGlyZWN0cy5kaXNhYmxlZCA9IGNDaGVja2VkO1xuXHRcdFx0XHRcdFx0XHRjRm9ybS5yZWRpcmVjdHMuY2hlY2tlZCA9ICFjQ2hlY2tlZDtcblx0XHRcdFx0XHRcdFx0Ly8gZW5hYmxlL2Rpc2FibGUgZGVsZXRlIG11bHRpcGxlXG5cdFx0XHRcdFx0XHRcdGNGb3JtLmRlbG11bHRpcGxlLmRpc2FibGVkID0gY0NoZWNrZWQ7XG5cdFx0XHRcdFx0XHRcdGNGb3JtLmRlbG11bHRpcGxlLmNoZWNrZWQgPSBmYWxzZTtcblx0XHRcdFx0XHRcdFx0Ly8gZW5hYmxlL2Rpc2FibGUgb3BlbiB0YWxrIHBhZ2UgY2hlY2tib3hcblx0XHRcdFx0XHRcdFx0Y0Zvcm0ub3BlbnVzZXJ0YWxrLmRpc2FibGVkID0gY0NoZWNrZWQ7XG5cdFx0XHRcdFx0XHRcdGNGb3JtLm9wZW51c2VydGFsay5jaGVja2VkID0gZmFsc2U7XG5cdFx0XHRcdFx0XHRcdC8vIGVuYWJsZS9kaXNhYmxlIG5vdGlmeSBjaGVja2JveFxuXHRcdFx0XHRcdFx0XHRjRm9ybS5ub3RpZnkuZGlzYWJsZWQgPSAhY0NoZWNrZWQ7XG5cdFx0XHRcdFx0XHRcdGNGb3JtLm5vdGlmeS5jaGVja2VkID0gY0NoZWNrZWQ7XG5cdFx0XHRcdFx0XHRcdC8vIGVuYWJsZS9kaXNhYmxlIG11bHRpcGxlXG5cdFx0XHRcdFx0XHRcdGNGb3JtLm11bHRpcGxlLmRpc2FibGVkID0gIWNDaGVja2VkO1xuXHRcdFx0XHRcdFx0XHRjRm9ybS5tdWx0aXBsZS5jaGVja2VkID0gZmFsc2U7XG5cdFx0XHRcdFx0XHRcdC8vIGVuYWJsZSByZXF1ZXN0aW5nIGNyZWF0aW9uIHByb3RlY3Rpb25cblx0XHRcdFx0XHRcdFx0Y0Zvcm0uc2FsdGluZy5jaGVja2VkID0gZmFsc2U7XG5cdFx0XHRcdFx0XHRcdFR3aW5rbGUuc3BlZWR5LmNhbGxiYWNrLm1vZGVDaGFuZ2VkKGNGb3JtKTtcblx0XHRcdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdF0sXG5cdFx0XHR9KTtcblx0XHRcdGNvbnN0IGRlbGV0ZU9wdGlvbnMgPSBmb3JtLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0XHRuYW1lOiAnZGVsZXRlX29wdGlvbnMnLFxuXHRcdFx0fSk7XG5cdFx0XHRkZWxldGVPcHRpb25zLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdoZWFkZXInLFxuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfliKDpmaTnm7jlhbPpgInpobknLCAn5Yiq6Zmk55u46Zec6YG46aCFJyksXG5cdFx0XHR9KTtcblx0XHRcdGlmIChtdy5jb25maWcuZ2V0KCd3Z05hbWVzcGFjZU51bWJlcicpICUgMiA9PT0gMCAmJiBtdy5jb25maWcuZ2V0KCd3Z05hbWVzcGFjZU51bWJlcicpICE9PSAyKSB7XG5cdFx0XHRcdC8vIGhpZGUgb3B0aW9uIGZvciB1c2VyIHBhZ2VzLCB0byBhdm9pZCBhY2NpZGVudGFsbHkgZGVsZXRpbmcgdXNlciB0YWxrIHBhZ2Vcblx0XHRcdFx0ZGVsZXRlT3B0aW9ucy5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdFx0bGlzdDogW1xuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfliKDpmaTorqjorrrpobUnLCAn5Yiq6Zmk6KiO6KuW6aCBJyksXG5cdFx0XHRcdFx0XHRcdHZhbHVlOiAndGFsa3BhZ2UnLFxuXHRcdFx0XHRcdFx0XHRuYW1lOiAndGFsa3BhZ2UnLFxuXHRcdFx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoJ+WIoOmZpOaXtumZhOW4puWIoOmZpOatpOmhtemdoueahOiuqOiuuumhteOAgicsICfliKrpmaTmmYLpmYTluLbliKrpmaTmraTpoIHpnaLnmoToqI7oq5bpoIHjgIInKSxcblx0XHRcdFx0XHRcdFx0Y2hlY2tlZDogVHdpbmtsZS5nZXRQcmVmKCdkZWxldGVUYWxrUGFnZU9uRGVsZXRlJyksXG5cdFx0XHRcdFx0XHRcdGV2ZW50OiAoZXZlbnQpID0+IHtcblx0XHRcdFx0XHRcdFx0XHRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XSxcblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cdFx0XHRkZWxldGVPcHRpb25zLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdGxpc3Q6IFtcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfliKDpmaTph43lrprlkJEnLCAn5Yiq6Zmk6YeN5paw5bCO5ZCRJyksXG5cdFx0XHRcdFx0XHR2YWx1ZTogJ3JlZGlyZWN0cycsXG5cdFx0XHRcdFx0XHRuYW1lOiAncmVkaXJlY3RzJyxcblx0XHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUygn5Yig6Zmk5Yiw5q2k6aG155qE6YeN5a6a5ZCR44CCJywgJ+WIqumZpOWIsOatpOmggeeahOmHjeaWsOWwjuWQkeOAgicpLFxuXHRcdFx0XHRcdFx0Y2hlY2tlZDogVHdpbmtsZS5nZXRQcmVmKCdkZWxldGVSZWRpcmVjdHNPbkRlbGV0ZScpLFxuXHRcdFx0XHRcdFx0ZXZlbnQ6IChldmVudCkgPT4ge1xuXHRcdFx0XHRcdFx0XHRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XSxcblx0XHRcdH0pO1xuXHRcdFx0ZGVsZXRlT3B0aW9ucy5hcHBlbmQoe1xuXHRcdFx0XHR0eXBlOiAnY2hlY2tib3gnLFxuXHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5bqU55So5aSa5Liq55CG55Sx5Yig6ZmkJywgJ+aHieeUqOWkmuWAi+eQhueUseWIqumZpCcpLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICdkZWxtdWx0aXBsZScsXG5cdFx0XHRcdFx0XHRuYW1lOiAnZGVsbXVsdGlwbGUnLFxuXHRcdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKCfmgqjlj6/pgInmi6nlupTnlKjkuo7or6XpobXnmoTlpJrkuKrnkIbnlLHjgIInLCAn5oKo5Y+v6YG45pOH5oeJ55So5pa86Kmy6aCB55qE5aSa5YCL55CG55Sx44CCJyksXG5cdFx0XHRcdFx0XHRldmVudDogKGV2ZW50KSA9PiB7XG5cdFx0XHRcdFx0XHRcdFR3aW5rbGUuc3BlZWR5LmNhbGxiYWNrLm1vZGVDaGFuZ2VkKGV2ZW50LnRhcmdldC5mb3JtKTtcblx0XHRcdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdF0sXG5cdFx0XHR9KTtcblx0XHRcdGRlbGV0ZU9wdGlvbnMuYXBwZW5kKHtcblx0XHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdFx0bGlzdDogW1xuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+W8gOWQr+eUqOaIt+iuqOiuuumhtScsICfplovllZ/kvb/nlKjogIXoqI7oq5bpoIEnKSxcblx0XHRcdFx0XHRcdHZhbHVlOiAnb3BlbnVzZXJ0YWxrJyxcblx0XHRcdFx0XHRcdG5hbWU6ICdvcGVudXNlcnRhbGsnLFxuXHRcdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHQn5q2k6aG555qE6buY6K6k5YC85Li65oKo55qE5byA5ZCv6K6o6K666aG16K6+572u44CC5Zyo5oKo6YCJ5oup5bqU55So5aSa5p2h55CG55Sx5Yig6Zmk5pe25q2k6aG55bCG5L+d5oyB5LiN5Y+Y44CCJyxcblx0XHRcdFx0XHRcdFx0J+atpOmgheeahOmgkOioreWAvOeCuuaCqOeahOmWi+WVn+iojuirlumggeioreWumuOAguWcqOaCqOmBuOaTh+aHieeUqOWkmuaineeQhueUseWIqumZpOaZguatpOmgheWwh+S/neaMgeS4jeiuiuOAgidcblx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRjaGVja2VkOiBmYWxzZSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRdLFxuXHRcdFx0fSk7XG5cdFx0fVxuXHRcdGNvbnN0IHRhZ09wdGlvbnMgPSBmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnZGl2Jyxcblx0XHRcdG5hbWU6ICd0YWdfb3B0aW9ucycsXG5cdFx0fSk7XG5cdFx0aWYgKE1vcmViaXRzLnVzZXJJc1N5c29wKSB7XG5cdFx0XHR0YWdPcHRpb25zLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdoZWFkZXInLFxuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmoIforrDnm7jlhbPpgInpobknLCAn5qiZ6KiY55u46Zec6YG46aCFJyksXG5cdFx0XHR9KTtcblx0XHR9XG5cdFx0dGFnT3B0aW9ucy5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdGxpc3Q6IFtcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WmguWPr+iDve+8jOmAmuefpeWIm+W7uuiAhScsICflpoLlj6/og73vvIzpgJrnn6Xlu7rnq4vogIUnKSxcblx0XHRcdFx0XHR2YWx1ZTogJ25vdGlmeScsXG5cdFx0XHRcdFx0bmFtZTogJ25vdGlmeScsXG5cdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+S4gOS4qumAmuefpeaooeadv+WwhuS8muiiq+WKoOWFpeWIm+W7uuiAheeahOiuqOiuuumhte+8jOiLpeaCqOWQr+eUqOS6huivpeeQhuaNrueahOmAmuefpeOAgicsXG5cdFx0XHRcdFx0XHQn5LiA5YCL6YCa55+l5qih5p2/5bCH5pyD6KKr5Yqg5YWl5bu656uL6ICF55qE6KiO6KuW6aCB77yM6Iul5oKo5ZWf55So5LqG6Kmy55CG5pOa55qE6YCa55+l44CCJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0Y2hlY2tlZDpcblx0XHRcdFx0XHRcdCFNb3JlYml0cy51c2VySXNTeXNvcCB8fFxuXHRcdFx0XHRcdFx0IShUd2lua2xlLnNwZWVkeS5oYXNDU0QgfHwgVHdpbmtsZS5nZXRQcmVmKCdkZWxldGVTeXNvcERlZmF1bHRUb0RlbGV0ZScpKSxcblx0XHRcdFx0XHRldmVudDogKGV2ZW50KSA9PiB7XG5cdFx0XHRcdFx0XHRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5riF56m66aG16Z2iJywgJ+a4heepuumggemdoicpLFxuXHRcdFx0XHRcdHZhbHVlOiAnYmxhbmsnLFxuXHRcdFx0XHRcdG5hbWU6ICdibGFuaycsXG5cdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+WcqOagh+iusOaooeadv+WJje+8jOWFiOa4heepuumhtemdou+8jOmAgueUqOS6juS4pemHjeegtOWdj+aIlui0n+mdoueUn+iAheS8oOiusOetieOAgicsXG5cdFx0XHRcdFx0XHQn5Zyo5qiZ6KiY5qih5p2/5YmN77yM5YWI5riF56m66aCB6Z2i77yM6YGp55So5pa85Zq06YeN56C05aOe5oiW6LKg6Z2i55Sf6ICF5YKz6KiY562J44CCJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflkIzml7bmoIforrDku6Xor7fmsYLnmb3nurjkv53miqQnLCAn5ZCM5pmC5qiZ6KiY5Lul6KuL5rGC55m957SZ5L+d6K23JyksXG5cdFx0XHRcdFx0dmFsdWU6ICdzYWx0aW5nJyxcblx0XHRcdFx0XHRuYW1lOiAnc2FsdGluZycsXG5cdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+mAieWPluWQju+8jOW/q+mAn+WIoOmZpOaooeadv+WQjuWwhumZhOW4piB7e3NhbHR9fSDmoIfnrb7vvIzku6Xor7fmsYLmiafooYzliKDpmaTnmoTnrqHnkIblkZjov5vooYznmb3nurjkv53miqTvvIzku4XlnKjpobXpnaLliJvlu7oz5qyh5Lul5LiK5omN6YCJ5oup5q2k6aG544CCJyxcblx0XHRcdFx0XHRcdCfpgbjlj5blvozvvIzlv6vpgJ/liKrpmaTmqKHmnb/lvozlsIfpmYTluLYge3tzYWx0fX0g5qiZ57Gk77yM5Lul6KuL5rGC5Z+36KGM5Yiq6Zmk55qE566h55CG5ZOh6YCy6KGM55m957SZ5L+d6K2377yM5YOF5Zyo6aCB6Z2i5bu656uLM+asoeS7peS4iuaJjemBuOaTh+atpOmgheOAgidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5bqU55So5aSa5Liq55CG55SxJywgJ+aHieeUqOWkmuWAi+eQhueUsScpLFxuXHRcdFx0XHRcdHZhbHVlOiAnbXVsdGlwbGUnLFxuXHRcdFx0XHRcdG5hbWU6ICdtdWx0aXBsZScsXG5cdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKCfmgqjlj6/pgInmi6nlupTnlKjkuo7or6XpobXnmoTlpJrkuKrnkIbnlLHjgIInLCAn5oKo5Y+v6YG45pOH5oeJ55So5pa86Kmy6aCB55qE5aSa5YCL55CG55Sx44CCJyksXG5cdFx0XHRcdFx0ZXZlbnQ6IChldmVudCkgPT4ge1xuXHRcdFx0XHRcdFx0VHdpbmtsZS5zcGVlZHkuY2FsbGJhY2subW9kZUNoYW5nZWQoZXZlbnQudGFyZ2V0LmZvcm0pO1xuXHRcdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0fSxcblx0XHRcdF0sXG5cdFx0fSk7XG5cdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ2RpdicsXG5cdFx0XHRpZDogJ3ByaW9yLWRlbGV0aW9uLWNvdW50Jyxcblx0XHR9KTtcblx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnZGl2Jyxcblx0XHRcdG5hbWU6ICd3b3JrX2FyZWEnLFxuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0J+WIneWni+WMlkNTROaooeWdl+Wksei0pe+8jOivt+mHjeivle+8jOaIluWwhui/meaKpeWRiue7mVR3aW5rbGXlvIDlj5HogIXjgIInLFxuXHRcdFx0XHQn5Yid5aeL5YyWQ1NE5qih57WE5aSx5pWX77yM6KuL6YeN6Kmm77yM5oiW5bCH6YCZ5aCx5ZGK57WmVHdpbmtsZemWi+eZvOiAheOAgidcblx0XHRcdCksXG5cdFx0fSk7XG5cdFx0aWYgKFR3aW5rbGUuZ2V0UHJlZignc3BlZWR5U2VsZWN0aW9uU3R5bGUnKSAhPT0gJ3JhZGlvQ2xpY2snKSB7XG5cdFx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdzdWJtaXQnLFxuXHRcdFx0XHRjbGFzc05hbWU6ICd0dy1zcGVlZHktc3VibWl0Jyxcblx0XHRcdH0pOyAvLyBSZW5hbWVkIGluIG1vZGVDaGFuZ2VkXG5cdFx0fVxuXG5cdFx0Y29uc3QgcmVzdWx0ID0gZm9ybS5yZW5kZXIoKTtcblx0XHRkaWFsb2cuc2V0Q29udGVudChyZXN1bHQpO1xuXHRcdGRpYWxvZy5kaXNwbGF5KCk7XG5cdFx0VHdpbmtsZS5zcGVlZHkuY2FsbGJhY2subW9kZUNoYW5nZWQocmVzdWx0KTtcblx0XHQvLyBDaGVjayBmb3IgcHJpb3IgZGVsZXRpb25zLiAgSnVzdCBvbmNlLCB1cG9uIGluaXRcblx0XHRUd2lua2xlLnNwZWVkeS5jYWxsYmFjay5wcmlvckRlbGV0aW9uQ291bnQoKTtcblx0fTtcblx0VHdpbmtsZS5zcGVlZHkuY2FsbGJhY2suZ2V0TW9kZSA9IChmb3JtKSA9PiB7XG5cdFx0bGV0IG1vZGUgPSBUd2lua2xlLnNwZWVkeS5tb2RlLnVzZXJTaW5nbGVTdWJtaXQ7XG5cdFx0aWYgKGZvcm0udGFnX29ubHkgJiYgIWZvcm0udGFnX29ubHkuY2hlY2tlZCkge1xuXHRcdFx0aWYgKGZvcm0uZGVsbXVsdGlwbGUuY2hlY2tlZCkge1xuXHRcdFx0XHRtb2RlID0gVHdpbmtsZS5zcGVlZHkubW9kZS5zeXNvcE11bHRpcGxlU3VibWl0O1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0bW9kZSA9IFR3aW5rbGUuc3BlZWR5Lm1vZGUuc3lzb3BTaW5nbGVTdWJtaXQ7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIGlmIChmb3JtLm11bHRpcGxlLmNoZWNrZWQpIHtcblx0XHRcdG1vZGUgPSBUd2lua2xlLnNwZWVkeS5tb2RlLnVzZXJNdWx0aXBsZVN1Ym1pdDtcblx0XHR9IGVsc2Uge1xuXHRcdFx0bW9kZSA9IFR3aW5rbGUuc3BlZWR5Lm1vZGUudXNlclNpbmdsZVN1Ym1pdDtcblx0XHR9XG5cdFx0aWYgKFR3aW5rbGUuZ2V0UHJlZignc3BlZWR5U2VsZWN0aW9uU3R5bGUnKSA9PT0gJ3JhZGlvQ2xpY2snKSB7XG5cdFx0XHRtb2RlKys7XG5cdFx0fVxuXHRcdHJldHVybiBtb2RlO1xuXHR9O1xuXHRUd2lua2xlLnNwZWVkeS5jYWxsYmFjay5tb2RlQ2hhbmdlZCA9IChmb3JtKSA9PiB7XG5cdFx0Y29uc3QgbmFtZXNwYWNlID0gbXcuY29uZmlnLmdldCgnd2dOYW1lc3BhY2VOdW1iZXInKTtcblx0XHQvLyBmaXJzdCBmaWd1cmUgb3V0IHdoYXQgbW9kZSB3ZSdyZSBpblxuXHRcdGNvbnN0IG1vZGUgPSBUd2lua2xlLnNwZWVkeS5jYWxsYmFjay5nZXRNb2RlKGZvcm0pO1xuXHRcdGNvbnN0IGlzU3lzb3BNb2RlID0gVHdpbmtsZS5zcGVlZHkubW9kZS5pc1N5c29wKG1vZGUpO1xuXHRcdGlmIChpc1N5c29wTW9kZSkge1xuXHRcdFx0JGJvZHkuZmluZCgnW25hbWU9ZGVsZXRlX29wdGlvbnNdJykuc2hvdygpO1xuXHRcdFx0JGJvZHkuZmluZCgnW25hbWU9dGFnX29wdGlvbnNdJykuaGlkZSgpO1xuXHRcdFx0JGJvZHkuZmluZCgnYnV0dG9uLnR3LXNwZWVkeS1zdWJtaXQnKS50ZXh0KHdpbmRvdy53Z1VMUygn5Yig6Zmk6aG16Z2iJywgJ+WIqumZpOmggemdoicpKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0JGJvZHkuZmluZCgnW25hbWU9ZGVsZXRlX29wdGlvbnNdJykuaGlkZSgpO1xuXHRcdFx0JGJvZHkuZmluZCgnW25hbWU9dGFnX29wdGlvbnNdJykuc2hvdygpO1xuXHRcdFx0JGJvZHkuZmluZCgnYnV0dG9uLnR3LXNwZWVkeS1zdWJtaXQnKS50ZXh0KHdpbmRvdy53Z1VMUygn5qCH6K6w6aG16Z2iJywgJ+aomeiomOmggemdoicpKTtcblx0XHR9XG5cdFx0Y29uc3Qgd29ya19hcmVhID0gbmV3IE1vcmViaXRzLnF1aWNrRm9ybS5lbGVtZW50KHtcblx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0bmFtZTogJ3dvcmtfYXJlYScsXG5cdFx0fSk7XG5cdFx0aWYgKFxuXHRcdFx0bW9kZSA9PT0gVHdpbmtsZS5zcGVlZHkubW9kZS51c2VyTXVsdGlwbGVSYWRpb0NsaWNrIHx8XG5cdFx0XHRtb2RlID09PSBUd2lua2xlLnNwZWVkeS5tb2RlLnN5c29wTXVsdGlwbGVSYWRpb0NsaWNrXG5cdFx0KSB7XG5cdFx0XHRjb25zdCBldmFsdWF0ZVR5cGUgPSBUd2lua2xlLnNwZWVkeS5tb2RlLmlzU3lzb3AobW9kZSkgPyAnZXZhbHVhdGVTeXNvcCcgOiAnZXZhbHVhdGVVc2VyJztcblx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHR0eXBlOiAnZGl2Jyxcblx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5b2T6YCJ5oup5a6M5oiQ5ZCO77yM5Y2V5Ye777yaJywgJ+eVtumBuOaTh+WujOaIkOW+jO+8jOm7nuaTiu+8micpLFxuXHRcdFx0fSk7XG5cdFx0XHR3b3JrX2FyZWEuYXBwZW5kKHtcblx0XHRcdFx0dHlwZTogJ2J1dHRvbicsXG5cdFx0XHRcdG5hbWU6ICdzdWJtaXQtbXVsdGlwbGUnLFxuXHRcdFx0XHRsYWJlbDogaXNTeXNvcE1vZGUgPyB3aW5kb3cud2dVTFMoJ+WIoOmZpOmhtemdoicsICfliKrpmaTpoIHpnaInKSA6IHdpbmRvdy53Z1VMUygn5qCH6K6w6aG16Z2iJywgJ+aomeiomOmggemdoicpLFxuXHRcdFx0XHRldmVudDogKGV2ZW50KSA9PiB7XG5cdFx0XHRcdFx0VHdpbmtsZS5zcGVlZHkuY2FsbGJhY2tbZXZhbHVhdGVUeXBlXShldmVudCk7XG5cdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdH0sXG5cdFx0XHR9KTtcblx0XHR9XG5cdFx0Y29uc3QgcmFkaW9PckNoZWNrYm94ID0gVHdpbmtsZS5zcGVlZHkubW9kZS5pc011bHRpcGxlKG1vZGUpID8gJ2NoZWNrYm94JyA6ICdyYWRpbyc7XG5cdFx0aWYgKGlzU3lzb3BNb2RlKSB7XG5cdFx0XHR3b3JrX2FyZWEuYXBwZW5kKHtcblx0XHRcdFx0dHlwZTogJ2hlYWRlcicsXG5cdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+iHquWumuS5ieeQhueUsScsICfoh6roqILnkIbnlLEnKSxcblx0XHRcdH0pO1xuXHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6IHJhZGlvT3JDaGVja2JveCxcblx0XHRcdFx0bmFtZTogJ2NzZCcsXG5cdFx0XHRcdGxpc3Q6IFR3aW5rbGUuc3BlZWR5LmdlbmVyYXRlQ3NkTGlzdChUd2lua2xlLnNwZWVkeS5jdXN0b21SYXRpb25hbGUsIG1vZGUpLFxuXHRcdFx0fSk7XG5cdFx0fVxuXHRcdHN3aXRjaCAobmFtZXNwYWNlKSB7XG5cdFx0XHRjYXNlIDA6XG5cdFx0XHRcdC8vIGFydGljbGUgYW5kIHBzZXVkbyBuYW1lc3BhY2Vcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2hlYWRlcicsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5p2h55uuJywgJ+aineebricpLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogcmFkaW9PckNoZWNrYm94LFxuXHRcdFx0XHRcdG5hbWU6ICdjc2QnLFxuXHRcdFx0XHRcdGxpc3Q6IFR3aW5rbGUuc3BlZWR5LmdlbmVyYXRlQ3NkTGlzdChUd2lua2xlLnNwZWVkeS5hcnRpY2xlTGlzdCwgbW9kZSksXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgMjpcblx0XHRcdFx0Ly8gdXNlclxuXHRcdFx0XHR3b3JrX2FyZWEuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnaGVhZGVyJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfnlKjmiLfpobUnLCAn5L2/55So6ICF6aCB6Z2iJyksXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHR3b3JrX2FyZWEuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiByYWRpb09yQ2hlY2tib3gsXG5cdFx0XHRcdFx0bmFtZTogJ2NzZCcsXG5cdFx0XHRcdFx0bGlzdDogVHdpbmtsZS5zcGVlZHkuZ2VuZXJhdGVDc2RMaXN0KFR3aW5rbGUuc3BlZWR5LnVzZXJMaXN0LCBtb2RlKSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAzOlxuXHRcdFx0XHQvLyB1c2VyIHRhbGtcblx0XHRcdFx0aWYgKG13LnV0aWwuaXNJUEFkZHJlc3MobXcuY29uZmlnLmdldCgnd2dSZWxldmFudFVzZXJOYW1lJykpKSB7XG5cdFx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0XHR0eXBlOiAnaGVhZGVyJyxcblx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+eUqOaIt+iuqOiuuumhtScsICfkvb/nlKjogIXoqI7oq5bpoIEnKSxcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHR3b3JrX2FyZWEuYXBwZW5kKHtcblx0XHRcdFx0XHRcdHR5cGU6IHJhZGlvT3JDaGVja2JveCxcblx0XHRcdFx0XHRcdG5hbWU6ICdjc2QnLFxuXHRcdFx0XHRcdFx0bGlzdDogVHdpbmtsZS5zcGVlZHkuZ2VuZXJhdGVDc2RMaXN0KFR3aW5rbGUuc3BlZWR5LnVzZXJ0YWxrTGlzdCwgbW9kZSksXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIDY6XG5cdFx0XHRcdC8vIGZpbGVcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2hlYWRlcicsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5paH5Lu2JywgJ+aqlOahiCcpLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogcmFkaW9PckNoZWNrYm94LFxuXHRcdFx0XHRcdG5hbWU6ICdjc2QnLFxuXHRcdFx0XHRcdGxpc3Q6IFR3aW5rbGUuc3BlZWR5LmdlbmVyYXRlQ3NkTGlzdChUd2lua2xlLnNwZWVkeS5maWxlTGlzdCwgbW9kZSksXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRpZiAoIVR3aW5rbGUuc3BlZWR5Lm1vZGUuaXNTeXNvcChtb2RlKSkge1xuXHRcdFx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHRcdFx0dHlwZTogJ2RpdicsXG5cdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHQn5qCH6K6wQ1NEIEYx44CBRjPjgIFGNe+8jOivt+S9v+eUqFR3aW5rbGXnmoTigJzlm77mnYPigJ3lip/og73jgIInLFxuXHRcdFx0XHRcdFx0XHQn5qiZ6KiYQ1NEIEYx44CBRjPjgIFGNe+8jOiri+S9v+eUqFR3aW5rbGXnmoTjgIzlnJbmrIrjgI3lip/og73jgIInXG5cdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAxNDpcblx0XHRcdFx0Ly8gY2F0ZWdvcnlcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2hlYWRlcicsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5YiG57G7JywgJ+WIhumhnicpLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogcmFkaW9PckNoZWNrYm94LFxuXHRcdFx0XHRcdG5hbWU6ICdjc2QnLFxuXHRcdFx0XHRcdGxpc3Q6IFR3aW5rbGUuc3BlZWR5LmdlbmVyYXRlQ3NkTGlzdChUd2lua2xlLnNwZWVkeS5jYXRlZ29yeUxpc3QsIG1vZGUpLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIDExODpcblx0XHRcdFx0Ly8gZHJhZnRcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2hlYWRlcicsXG5cdFx0XHRcdFx0bGFiZWw6ICfojYnnqL8nLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogcmFkaW9PckNoZWNrYm94LFxuXHRcdFx0XHRcdG5hbWU6ICdjc2QnLFxuXHRcdFx0XHRcdGxpc3Q6IFR3aW5rbGUuc3BlZWR5LmdlbmVyYXRlQ3NkTGlzdChUd2lua2xlLnNwZWVkeS5kcmFmdExpc3QsIG1vZGUpLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIG5hbWVzcGFjZSAlIDIgPT09IDEgJiYgbmFtZXNwYWNlICE9PSAzOlxuXHRcdFx0XHQvLyBzaG93IGRiLXRhbGsgb24gdGFsayBwYWdlcywgYnV0IG5vdCB1c2VyIHRhbGsgcGFnZXNcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2hlYWRlcicsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6K6o6K666aG1JywgJ+iojuirlumggScpLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogcmFkaW9PckNoZWNrYm94LFxuXHRcdFx0XHRcdG5hbWU6ICdjc2QnLFxuXHRcdFx0XHRcdGxpc3Q6IFR3aW5rbGUuc3BlZWR5LmdlbmVyYXRlQ3NkTGlzdChUd2lua2xlLnNwZWVkeS50YWxrTGlzdCwgbW9kZSksXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdGJyZWFrO1xuXHRcdH1cblx0XHQvLyBjdXN0b20gcmF0aW9uYWxlIGxpdmVzIHVuZGVyIGdlbmVyYWwgY3JpdGVyaWEgd2hlbiB0YWdnaW5nXG5cdFx0bGV0IGdlbmVyYWxDcml0ZXJpYSA9IFR3aW5rbGUuc3BlZWR5LmdlbmVyYWxMaXN0O1xuXHRcdGlmICghVHdpbmtsZS5zcGVlZHkubW9kZS5pc1N5c29wKG1vZGUpKSB7XG5cdFx0XHRnZW5lcmFsQ3JpdGVyaWEgPSBbLi4uVHdpbmtsZS5zcGVlZHkuY3VzdG9tUmF0aW9uYWxlLCAuLi5nZW5lcmF0ZUFycmF5KGdlbmVyYWxDcml0ZXJpYSldO1xuXHRcdH1cblx0XHR3b3JrX2FyZWEuYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdoZWFkZXInLFxuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5bi46KeEJywgJ+W4uOimjycpLFxuXHRcdH0pO1xuXHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogcmFkaW9PckNoZWNrYm94LFxuXHRcdFx0bmFtZTogJ2NzZCcsXG5cdFx0XHRsaXN0OiBUd2lua2xlLnNwZWVkeS5nZW5lcmF0ZUNzZExpc3QoZ2VuZXJhbENyaXRlcmlhLCBtb2RlKSxcblx0XHR9KTtcblx0XHRpZiAoIVR3aW5rbGUuc3BlZWR5Lm1vZGUuaXNTeXNvcChtb2RlKSkge1xuXHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdCfmj5DmiqXkvrXmnYPpobXpnaLvvIzor7fkvb/nlKhUd2lua2xl55qE4oCc5L615p2D4oCd5Yqf6IO944CCJyxcblx0XHRcdFx0XHQn5o+Q5aCx5L615qyK6aCB6Z2i77yM6KuL5L2/55SoVHdpbmtsZeeahOOAjOS+teasiuOAjeWKn+iDveOAgidcblx0XHRcdFx0KSxcblx0XHRcdH0pO1xuXHRcdH1cblx0XHRpZiAobXcuY29uZmlnLmdldCgnd2dJc1JlZGlyZWN0JykgfHwgTW9yZWJpdHMudXNlcklzU3lzb3ApIHtcblx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHR0eXBlOiAnaGVhZGVyJyxcblx0XHRcdFx0bGFiZWw6ICfph43lrprlkJEnLFxuXHRcdFx0fSk7XG5cdFx0XHR3b3JrX2FyZWEuYXBwZW5kKHtcblx0XHRcdFx0dHlwZTogcmFkaW9PckNoZWNrYm94LFxuXHRcdFx0XHRuYW1lOiAnY3NkJyxcblx0XHRcdFx0bGlzdDogVHdpbmtsZS5zcGVlZHkuZ2VuZXJhdGVDc2RMaXN0KFR3aW5rbGUuc3BlZWR5LnJlZGlyZWN0TGlzdCwgbW9kZSksXG5cdFx0XHR9KTtcblx0XHR9XG5cdFx0Y29uc3QgW29sZF9hcmVhXSA9IE1vcmViaXRzLnF1aWNrRm9ybS5nZXRFbGVtZW50cyhmb3JtLCAnd29ya19hcmVhJyk7XG5cdFx0Zm9ybS5yZXBsYWNlQ2hpbGQod29ya19hcmVhLnJlbmRlcigpLCBvbGRfYXJlYSk7XG5cdFx0Ly8gaWYgc3lzb3AsIGNoZWNrIGlmIENTRCBpcyBhbHJlYWR5IG9uIHRoZSBwYWdlIGFuZCBmaWxsIGluIGN1c3RvbSByYXRpb25hbGVcblx0XHRpZiAoaXNTeXNvcE1vZGUgJiYgVHdpbmtsZS5zcGVlZHkuaGFzQ1NEKSB7XG5cdFx0XHRjb25zdCBbY3VzdG9tT3B0aW9uXSA9ICRib2R5LmZpbmQoJ2lucHV0W25hbWU9Y3NkXVt2YWx1ZT1yZWFzb25dJyk7XG5cdFx0XHRpZiAoY3VzdG9tT3B0aW9uKSB7XG5cdFx0XHRcdGlmIChUd2lua2xlLmdldFByZWYoJ3NwZWVkeVNlbGVjdGlvblN0eWxlJykgIT09ICdyYWRpb0NsaWNrJykge1xuXHRcdFx0XHRcdC8vIGZvcmNlIGxpc3RlbmVycyB0byByZS1pbml0XG5cdFx0XHRcdFx0Y3VzdG9tT3B0aW9uLmNsaWNrKCk7XG5cdFx0XHRcdFx0Y3VzdG9tT3B0aW9uLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQoY3VzdG9tT3B0aW9uLnN1Ymdyb3VwKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRjdXN0b21PcHRpb24uc3ViZ3JvdXAucXVlcnlTZWxlY3RvcignaW5wdXQnKS52YWx1ZSA9IGRlY29kZVVSSUNvbXBvbmVudChcblx0XHRcdFx0XHQkYm9keS5maW5kKCcjZGVsZXRlLXJlYXNvbicpLnRleHQoKVxuXHRcdFx0XHQpLnJlcGxhY2UoL1xcKy9nLCAnICcpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHQvLyBlbmxhcmdlIEc3IHJhZGlvL2NoZWNrYm94IGFuZCBpdHMgbGFiZWxcblx0XHRpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaW5wdXRbdmFsdWU9XCJnN1wiXScpICYmIFR3aW5rbGUuZ2V0UHJlZignZW5sYXJnZUc3SW5wdXQnKSkge1xuXHRcdFx0ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaW5wdXRbdmFsdWU9XCJnN1wiXScpLnN0eWxlID1cblx0XHRcdFx0J2hlaWdodDogMmVtOyB3aWR0aDogMmVtOyBoZWlnaHQ6IC1tb3otaW5pdGlhbDsgd2lkdGg6IC1tb3otaW5pdGlhbDsgLW1vei10cmFuc2Zvcm06IHNjYWxlKDIpOyAtby10cmFuc2Zvcm06IHNjYWxlKDIpOyc7XG5cdFx0XHRkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dFt2YWx1ZT1cImc3XCJdJykubGFiZWxzWzBdLnN0eWxlID0gJ2ZvbnQtc2l6ZTogMS41ZW07IGxpbmUtaGVpZ2h0OiAxLjVlbTsnO1xuXHRcdH1cblx0XHRpZiAoIWlzU3lzb3BNb2RlICYmIG13LmNvbmZpZy5nZXQoJ3dnUGFnZUNvbnRlbnRNb2RlbCcpICE9PSAnd2lraXRleHQnKSB7XG5cdFx0XHQkYm9keS5maW5kKCdbbmFtZT10YWdfb3B0aW9uc10nKS5oaWRlKCk7XG5cdFx0XHQkYm9keS5maW5kKCdbbmFtZT13b3JrX2FyZWFdJykuZW1wdHkoKTtcblx0XHRcdGNvbnN0IG1lc3NhZ2UgPSBbXG5cdFx0XHRcdHdpbmRvdy53Z1VMUygnVHdpbmtsZeS4jeaUr+aMgeWcqOmhtemdouWGheWuueaooeWei+S4uicsICdUd2lua2xl5LiN5pSv5o+05Zyo6aCB6Z2i5YWn5a655qih5Z6L54K6JyksXG5cdFx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnUGFnZUNvbnRlbnRNb2RlbCcpLFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ+eahOmhtemdouS4iuaMguS4iuW/q+mAn+WIoOmZpOaooeadv++8jOivt+WPguingScsICfnmoTpoIHpnaLkuIrmjpvkuIrlv6vpgJ/liKrpmaTmqKHmnb/vvIzoq4vlj4PoposnKSxcblx0XHRcdFx0JCgnPGE+Jylcblx0XHRcdFx0XHQuYXR0cih7XG5cdFx0XHRcdFx0XHR0YXJnZXQ6ICdfYmxhbmsnLFxuXHRcdFx0XHRcdFx0cmVsOiAnbm9vcGVuZXIgbm9yZWZlcnJlcicsXG5cdFx0XHRcdFx0XHRocmVmOiBtdy51dGlsLmdldFVybCgnUVc6U1BFQ0lBTFNEJyksXG5cdFx0XHRcdFx0fSlcblx0XHRcdFx0XHQudGV4dCh3aW5kb3cud2dVTFMoJ+aJi+WKqOaUvue9ruaooeadv+aXtueahOazqOaEj+S6i+mhuScsICfmiYvli5XmlL7nva7mqKHmnb/mmYLnmoTms6jmhI/kuovpoIUnKSlbMF0sXG5cdFx0XHRcdCfjgIInLFxuXHRcdFx0XTtcblx0XHRcdCRib2R5LmZpbmQoJ1tuYW1lPXdvcmtfYXJlYV0nKS5hcHBlbmQobWVzc2FnZSk7XG5cdFx0XHRNb3JlYml0cy5zaW1wbGVXaW5kb3cuc2V0QnV0dG9uc0VuYWJsZWQoZmFsc2UpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRNb3JlYml0cy5zaW1wbGVXaW5kb3cuc2V0QnV0dG9uc0VuYWJsZWQodHJ1ZSk7XG5cdFx0fVxuXHR9O1xuXHRUd2lua2xlLnNwZWVkeS5jYWxsYmFjay5wcmlvckRlbGV0aW9uQ291bnQgPSAoKSA9PiB7XG5cdFx0Y29uc3QgcXVlcnkgPSB7XG5cdFx0XHRhY3Rpb246ICdxdWVyeScsXG5cdFx0XHRmb3JtYXQ6ICdqc29uJyxcblx0XHRcdGxpc3Q6ICdsb2dldmVudHMnLFxuXHRcdFx0bGV0eXBlOiAnZGVsZXRlJyxcblx0XHRcdGxlYWN0aW9uOiAnZGVsZXRlL2RlbGV0ZScsXG5cdFx0XHQvLyBKdXN0IHB1cmUgcGFnZSBkZWxldGlvbiwgbm8gcmVkaXJlY3Qgb3ZlcndyaXRlcyBvciByZXZkZWxcblx0XHRcdGxldGl0bGU6IG13LmNvbmZpZy5nZXQoJ3dnUGFnZU5hbWUnKSxcblx0XHRcdGxlcHJvcDogJycsXG5cdFx0XHQvLyBXZSdyZSBqdXN0IGNvdW50aW5nIHdlIGRvbid0IGFjdHVhbGx5IGNhcmUgYWJvdXQgdGhlIGVudHJpZXNcblx0XHRcdGxlbGltaXQ6IDUsXG5cdFx0XHQvLyBBIGxpdHRsZSBiaXQgZ29lcyBhIGxvbmcgd2F5XG5cdFx0fTtcblxuXHRcdG5ldyBNb3JlYml0cy53aWtpLmFwaSh3aW5kb3cud2dVTFMoJ+ajgOafpeS5i+WJjeeahOWIoOmZpCcsICfmqqLmn6XkuYvliY3nmoTliKrpmaQnKSwgcXVlcnksIChhcGlvYmopID0+IHtcblx0XHRcdGNvbnN0IHJlc3BvbnNlID0gYXBpb2JqLmdldFJlc3BvbnNlKCk7XG5cdFx0XHRjb25zdCBkZWxDb3VudCA9IHJlc3BvbnNlLnF1ZXJ5LmxvZ2V2ZW50cy5sZW5ndGg7XG5cdFx0XHRpZiAoZGVsQ291bnQpIHtcblx0XHRcdFx0bGV0IG1lc3NhZ2UgPSB3aW5kb3cud2dVTFMoJ+iiq+WIoOmZpCcsICfooqvliKrpmaQnKTtcblx0XHRcdFx0aWYgKHJlc3BvbnNlLmNvbnRpbnVlKSB7XG5cdFx0XHRcdFx0bWVzc2FnZSArPSB3aW5kb3cud2dVTFMoJ+i2hei/hycsICfotoXpgY4nKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRtZXNzYWdlICs9IGAke2RlbENvdW50feasoWA7XG5cdFx0XHRcdC8vIDMrIHNlZW1zIHByb2JsZW1hdGljXG5cdFx0XHRcdGlmIChkZWxDb3VudCA+PSAzKSB7XG5cdFx0XHRcdFx0JGJvZHkuZmluZCgnI3ByaW9yLWRlbGV0aW9uLWNvdW50JykuY3NzKCdjb2xvcicsICcjZmYwMDAwJyk7XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gUHJvdmlkZSBhIGxpbmsgdG8gcGFnZSBsb2dzIChDU0QgdGVtcGxhdGVzIGhhdmUgb25lIGZvciBzeXNvcHMpXG5cdFx0XHRcdGNvbnN0IGxpbmsgPSBNb3JlYml0cy5odG1sTm9kZSgnYScsIHdpbmRvdy53Z1VMUygn77yI5pel5b+X77yJJywgJ++8iOaXpeiqjO+8iScpKTtcblx0XHRcdFx0bGluay5zZXRBdHRyaWJ1dGUoXG5cdFx0XHRcdFx0J2hyZWYnLFxuXHRcdFx0XHRcdG13LnV0aWwuZ2V0VXJsKCdTcGVjaWFsOkxvZycsIHtcblx0XHRcdFx0XHRcdHBhZ2U6IG13LmNvbmZpZy5nZXQoJ3dnUGFnZU5hbWUnKSxcblx0XHRcdFx0XHR9KVxuXHRcdFx0XHQpO1xuXHRcdFx0XHRsaW5rLnNldEF0dHJpYnV0ZSgndGFyZ2V0JywgJ19ibGFuaycpO1xuXHRcdFx0XHRsaW5rLnNldEF0dHJpYnV0ZSgncmVsJywgJ25vb3BlbmVyIG5vcmVmZXJyZXInKTtcblx0XHRcdFx0JGJvZHkuZmluZCgnI3ByaW9yLWRlbGV0aW9uLWNvdW50JykudGV4dChtZXNzYWdlKTsgLy8gU3BhY2UgYmVmb3JlIGxvZyBsaW5rXG5cdFx0XHRcdCRib2R5LmZpbmQoJyNwcmlvci1kZWxldGlvbi1jb3VudCcpLmFwcGVuZChsaW5rKTtcblx0XHRcdH1cblx0XHR9KS5wb3N0KCk7XG5cdH07XG5cdFR3aW5rbGUuc3BlZWR5LmdlbmVyYXRlQ3NkTGlzdCA9IChsaXN0LCBtb2RlKSA9PiB7XG5cdFx0Ly8gbW9kZSBzd2l0Y2hlc1xuXHRcdGNvbnN0IGlzU3lzb3BNb2RlID0gVHdpbmtsZS5zcGVlZHkubW9kZS5pc1N5c29wKG1vZGUpO1xuXHRcdGNvbnN0IG11bHRpcGxlID0gVHdpbmtsZS5zcGVlZHkubW9kZS5pc011bHRpcGxlKG1vZGUpO1xuXHRcdGNvbnN0IGhhc1N1Ym1pdEJ1dHRvbiA9IFR3aW5rbGUuc3BlZWR5Lm1vZGUuaGFzU3VibWl0QnV0dG9uKG1vZGUpO1xuXHRcdGNvbnN0IG9wZW5TdWJncm91cEhhbmRsZXIgPSAoZSkgPT4ge1xuXHRcdFx0JChlLnRhcmdldC5mb3JtKS5maW5kKCdpbnB1dCcpLnByb3AoJ2Rpc2FibGVkJywgdHJ1ZSk7XG5cdFx0XHQkKGUudGFyZ2V0LmZvcm0pLmNoaWxkcmVuKCkuY3NzKCdjb2xvcicsICdncmF5Jyk7XG5cdFx0XHQkKGUudGFyZ2V0KS5wYXJlbnQoKS5jc3MoJ2NvbG9yJywgJ2JsYWNrJykuZmluZCgnaW5wdXQnKS5wcm9wKCdkaXNhYmxlZCcsIGZhbHNlKTtcblx0XHRcdCQoZS50YXJnZXQpLnBhcmVudCgpLmZpbmQoJ2lucHV0OnRleHQnKVswXS5mb2N1cygpO1xuXHRcdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHR9O1xuXHRcdGNvbnN0IHN1Ym1pdFN1Ymdyb3VwSGFuZGxlciA9IChlKSA9PiB7XG5cdFx0XHRjb25zdCBldmFsdWF0ZVR5cGUgPSBUd2lua2xlLnNwZWVkeS5tb2RlLmlzU3lzb3AobW9kZSkgPyAnZXZhbHVhdGVTeXNvcCcgOiAnZXZhbHVhdGVVc2VyJztcblx0XHRcdFR3aW5rbGUuc3BlZWR5LmNhbGxiYWNrW2V2YWx1YXRlVHlwZV0oZSk7XG5cdFx0XHRlLnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdH07XG5cdFx0cmV0dXJuIEFycmF5LnByb3RvdHlwZS5tYXAuY2FsbChsaXN0LCAoY3JpdEVsZW1lbnQpID0+IHtcblx0XHRcdGNvbnN0IGNyaXRlcmlvbiA9IHtcblx0XHRcdFx0Li4uY3JpdEVsZW1lbnQsXG5cdFx0XHR9O1xuXHRcdFx0aWYgKG11bHRpcGxlKSB7XG5cdFx0XHRcdGlmIChjcml0ZXJpb24uaGlkZVdoZW5NdWx0aXBsZSkge1xuXHRcdFx0XHRcdHJldHVybiBudWxsO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChjcml0ZXJpb24uaGlkZVN1Ymdyb3VwV2hlbk11bHRpcGxlKSB7XG5cdFx0XHRcdFx0Y3JpdGVyaW9uLnN1Ymdyb3VwID0gbnVsbDtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aWYgKGNyaXRlcmlvbi5oaWRlV2hlblNpbmdsZSkge1xuXHRcdFx0XHRcdHJldHVybiBudWxsO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChjcml0ZXJpb24uaGlkZVN1Ymdyb3VwV2hlblNpbmdsZSkge1xuXHRcdFx0XHRcdGNyaXRlcmlvbi5zdWJncm91cCA9IG51bGw7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmIChpc1N5c29wTW9kZSkge1xuXHRcdFx0XHRpZiAoY3JpdGVyaW9uLmhpZGVXaGVuU3lzb3ApIHtcblx0XHRcdFx0XHRyZXR1cm4gbnVsbDtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoY3JpdGVyaW9uLmhpZGVTdWJncm91cFdoZW5TeXNvcCkge1xuXHRcdFx0XHRcdGNyaXRlcmlvbi5zdWJncm91cCA9IG51bGw7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGlmIChjcml0ZXJpb24uaGlkZVdoZW5Vc2VyKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKGNyaXRlcmlvbi5oaWRlU3ViZ3JvdXBXaGVuVXNlcikge1xuXHRcdFx0XHRcdGNyaXRlcmlvbi5zdWJncm91cCA9IG51bGw7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmIChtdy5jb25maWcuZ2V0KCd3Z0lzUmVkaXJlY3QnKSAmJiBjcml0ZXJpb24uaGlkZVdoZW5SZWRpcmVjdCkge1xuXHRcdFx0XHRyZXR1cm4gbnVsbDtcblx0XHRcdH1cblx0XHRcdGlmIChcblx0XHRcdFx0Y3JpdGVyaW9uLnNob3dJbk5hbWVzcGFjZXMgJiZcblx0XHRcdFx0IWNyaXRlcmlvbi5zaG93SW5OYW1lc3BhY2VzLmluY2x1ZGVzKG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlTnVtYmVyJykpXG5cdFx0XHQpIHtcblx0XHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0XHR9IGVsc2UgaWYgKFxuXHRcdFx0XHRjcml0ZXJpb24uaGlkZUluTmFtZXNwYWNlcyAmJlxuXHRcdFx0XHRjcml0ZXJpb24uaGlkZUluTmFtZXNwYWNlcy5pbmNsdWRlcyhtdy5jb25maWcuZ2V0KCd3Z05hbWVzcGFjZU51bWJlcicpKVxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybiBudWxsO1xuXHRcdFx0fVxuXHRcdFx0aWYgKGNyaXRlcmlvbi5zdWJncm91cCAmJiAhaGFzU3VibWl0QnV0dG9uKSB7XG5cdFx0XHRcdGNyaXRlcmlvbi5zdWJncm91cCA9IGdlbmVyYXRlQXJyYXkoY3JpdGVyaW9uLnN1Ymdyb3VwLCB7XG5cdFx0XHRcdFx0dHlwZTogJ2J1dHRvbicsXG5cdFx0XHRcdFx0bmFtZTogJ3N1Ym1pdCcsXG5cdFx0XHRcdFx0bGFiZWw6IGlzU3lzb3BNb2RlID8gd2luZG93LndnVUxTKCfliKDpmaTpobXpnaInLCAn5Yiq6Zmk6aCB6Z2iJykgOiB3aW5kb3cud2dVTFMoJ+agh+iusOmhtemdoicsICfmqJnoqJjpoIHpnaInKSxcblx0XHRcdFx0XHRldmVudDogc3VibWl0U3ViZ3JvdXBIYW5kbGVyLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0Ly8gRklYTUU6IGRvZXMgdGhpcyBkbyBhbnl0aGluZz9cblx0XHRcdFx0Y3JpdGVyaW9uLmV2ZW50ID0gb3BlblN1Ymdyb3VwSGFuZGxlcjtcblx0XHRcdH1cblx0XHRcdGlmIChpc1N5c29wTW9kZSkge1xuXHRcdFx0XHRjb25zdCBvcmlnaW5hbEV2ZW50ID0gY3JpdGVyaW9uLmV2ZW50O1xuXHRcdFx0XHRjcml0ZXJpb24uZXZlbnQgPSAoZSkgPT4ge1xuXHRcdFx0XHRcdGlmIChtdWx0aXBsZSkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIG9yaWdpbmFsRXZlbnQoZSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGNvbnN0IG5vcm1hbGl6ZWRDcml0ZXJpb24gPSBUd2lua2xlLnNwZWVkeS5ub3JtYWxpemVIYXNoW2UudGFyZ2V0LnZhbHVlXTtcblx0XHRcdFx0XHQkYm9keVxuXHRcdFx0XHRcdFx0LmZpbmQoJ1tuYW1lPW9wZW51c2VydGFsa10nKVxuXHRcdFx0XHRcdFx0LnByb3AoXG5cdFx0XHRcdFx0XHRcdCdjaGVja2VkJyxcblx0XHRcdFx0XHRcdFx0VHdpbmtsZS5nZXRQcmVmKCdvcGVuVXNlclRhbGtQYWdlT25TcGVlZHlEZWxldGUnKS5pbmNsdWRlcyhub3JtYWxpemVkQ3JpdGVyaW9uKVxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRpZiAob3JpZ2luYWxFdmVudCkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIG9yaWdpbmFsRXZlbnQoZSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGNyaXRlcmlvbjtcblx0XHR9KTtcblx0fTtcblx0VHdpbmtsZS5zcGVlZHkuY3VzdG9tUmF0aW9uYWxlID0gW1xuXHRcdHtcblx0XHRcdGxhYmVsOiBg6Ieq5a6a5LmJ55CG55SxJHtNb3JlYml0cy51c2VySXNTeXNvcCA/ICfvvIjoh6rlrprkuYnliKDpmaTnkIbnlLHvvIknIDogJyd9YCxcblx0XHRcdHZhbHVlOiAncmVhc29uJyxcblx0XHRcdHRvb2x0aXA6ICfor6XpobXoh7PlsJHlupTor6XnrKblkIjkuIDmnaHlv6vpgJ/liKDpmaTnmoTmoIflh4bvvIzlubbkuJTmgqjlv4XpobvlnKjnkIbnlLHkuK3mj5DliLDjgIInLFxuXHRcdFx0c3ViZ3JvdXA6IHtcblx0XHRcdFx0bmFtZTogJ3JlYXNvbl8xJyxcblx0XHRcdFx0dHlwZTogJ2lucHV0Jyxcblx0XHRcdFx0bGFiZWw6ICfnkIbnlLHvvJonLFxuXHRcdFx0XHRzaXplOiA2MCxcblx0XHRcdH0sXG5cdFx0fSxcblx0XTtcblx0VHdpbmtsZS5zcGVlZHkuZmlsZUxpc3QgPSBbXG5cdFx0e1xuXHRcdFx0bGFiZWw6ICdGMe+8muaYjuaYvuS4jeespuWQiOacrOermeiRl+S9nOadg+aWuemSiOeahOaWh+S7ticsXG5cdFx0XHR2YWx1ZTogJ2YxJyxcblx0XHRcdHRvb2x0aXA6XG5cdFx0XHRcdCfljIXmi6zku6XkuIvmg4XlhrXvvJoxLuS4iuS8oOWQjjPlpKnlhoXku43nhLbmnaXmupDkuI3mmI7jgIHokZfkvZzmnYPkuI3mmI7nmoTmlofku7bjgIIyLuS4iuS8oOiAheWuo+ensOaLpeacie+8jOiAjOWcqOWFtuS7luadpea6kOaJvuWIsOeahOaWh+S7tuOAgjMu5paH5Lu25a6j56ew55Sx5p+Q5L2c6ICF5L6d5o2u5p+Q6Ieq55Sx6JGX5L2c5p2D5Y2P6K6u5Y+R5biD77yM5L2G5om+5LiN5Yiw6K+l6Ieq55Sx5Y2P6K6u55qE5aOw5piO44CCNC7lhbbku5bmmI7mmL7kvrXmnYPnmoTmlofku7bvvIzlj6/pmYTliqDkvrXmnYPnkIbnlLHjgIInLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0bGFiZWw6ICdGMu+8mumHjeWkjeS4lOS4jeWGjeiiq+S9v+eUqOeahOaWh+S7ticsXG5cdFx0XHR2YWx1ZTogJ2YyJyxcblx0XHRcdHRvb2x0aXA6XG5cdFx0XHRcdCfljIXmi6zku6XkuIvmg4XlhrXvvJrkuI7njrDmnInmlofku7blrozlhajnm7jlkIzvvIjmiJbkuI7njrDmnInmlofku7blhoXlrrnkuIDoh7TkvYblsLrlr7jovoPlsI/vvInvvIzkuJTmsqHmnInlrqLop4LpnIDopoHvvIjlpoLmn5DkupvlnLrlkIjpnIDkvb/nlKjlsI/lsLrlr7jlm77niYfvvInnmoTmlofku7bjgILmiJbmmK/ooqvmm7TliqDmuIXmmbDnmoTmlofku7bjgIFTVkfmoLzlvI/mlofku7bmiYDlj5bku6PnmoTmlofku7bjgILor7fmj5DmiqXogIXnoa7lrprmlofku7bmsqHmnInku7vkvZXpobXpnaLkvb/nlKjlkI7lho3mj5DmiqXliKDpmaTvvIzlubbpmYTms6jlr7nlupTotKjph4/mm7Tlpb3nmoTmlofku7blkI3jgIInLFxuXHRcdFx0c3ViZ3JvdXA6IHtcblx0XHRcdFx0bmFtZTogJ2YyX2ZpbGVuYW1lJyxcblx0XHRcdFx0dHlwZTogJ2lucHV0Jyxcblx0XHRcdFx0bGFiZWw6ICfmlrDmlofku7blkI3vvJonLFxuXHRcdFx0XHR0b29sdGlwOiAn5Y+v5LiN5ZCr4oCcRmlsZTrigJ3liY3nvIDjgIInLFxuXHRcdFx0fSxcblx0XHR9LFxuXHRdO1xuXHRUd2lua2xlLnNwZWVkeS5hcnRpY2xlTGlzdCA9IFtcblx0XHR7XG5cdFx0XHRsYWJlbDogJ0Ex77ya5YaF5a6556m65rOb5oiW5a6M5YWo5rKh5pyJ5YaF5a6544CCJyxcblx0XHRcdHZhbHVlOiAnYTEnLFxuXHRcdFx0dG9vbHRpcDpcblx0XHRcdFx0J+adoeebrueahOWGheWuueesvOe7n++8jOaIlueUmuiHs+agueacrOayoeacieaPkOWPiuadoeebruS4u+S9k++8jOS9v+adoeebruS4jeiDveeUqOS7peWMuuWIhuWFtuS7luS6i+eJqe+8m+aIluadoeebruWPquWMheaLrOWklumDqOmTvuaOpeOAgeWPguingeOAgeWPguiAg+adpea6kOOAgeWIhuexu+OAgeaooeadv++8jOiAjOayoeacieaWh+Wtl+aPj+i/sOOAgua2iOatp+S5iemhteOAgemHjeWumuWQkemhteS4jemAgueUqOatpOadoeOAguivt+azqOaEj+acieS6m+eUqOaIt+WPr+iDveS8muWkmuasoeS/neWtmO+8jOiLpeatpOexu+mhtemdoueahOacgOWQjuS4gOasoee8lui+keaXtumXtOi2hei/hzI05bCP5pe277yM5YiZ5Y+v5o+Q6K+35b+r6YCf5Yig6Zmk44CCJyxcblx0XHR9LFxuXHRcdHtcblx0XHRcdGxhYmVsOiAnQTLvvJrkuI7lhbbku5bmnaHnm67miJblhbbljoblj7LniYjmnKzph43lpI3vvIzkuJTkuI3pgILlkIjkvZzkuLrlhbbph43lrprlkJHjgIInLFxuXHRcdFx0dmFsdWU6ICdhMicsXG5cdFx0XHR0b29sdGlwOlxuXHRcdFx0XHQn5p2h55uu5Yib5bu65pe255qE5YaF5a6577yM5LiO5YW25LuW546w5pyJ5p2h55uu77yI5oiW5YW25Y6G5Y+y54mI5pys77yJ5YaF5a655a6M5YWo55u45ZCM5oiW6Z2e5bi455u45Ly877yM5LiU5ZCN56ew5LiN6YCC5ZCI5L2c5Li65ZCO6ICF55qE6YeN5a6a5ZCR44CC5LiN5YyF5ous5ouG5YiG44CB5ZCI5bm244CB6YeN57uE5ZCO5Lqn55Sf55qE5p2h55uu44CC5aaC5pyJ55aR6JmR77yM5Y+v6L2s5Lqk5Yig6Zmk6K6o6K6644CC6Iul5ZCO5Yib5bu655qE5p2h55uu5ZCN56ew5Y+v5L2c5Li66YeN5a6a5ZCR77yM5Y+v55u05o6l5pS55Li66YeN5a6a5ZCR77yb6Iul5YWI5Yib5bu655qE5p2h55uu5a6c5L2c5Li65ZCO5Yib5bu65p2h55uu55qE6YeN5a6a5ZCR77yM6K+35o+Q6K+356e75Yqo6K+35rGC44CCJyxcblx0XHRcdHN1Ymdyb3VwOiB7XG5cdFx0XHRcdG5hbWU6ICdhMl9wYWdlbmFtZScsXG5cdFx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRcdGxhYmVsOiAn546w5pyJ5p2h55uu5ZCN77yaJyxcblx0XHRcdFx0dG9vbHRpcDogJ+S4jeiHquWKqOWKoOS4iumTvuaOpe+8jOiLpemcgOimgeivt+iHquihjOWKoOS4iltbXV3jgIInLFxuXHRcdFx0XHRzaXplOiA2MCxcblx0XHRcdH0sXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogJ0Ez77ya6Z2e546w5Luj5rGJ6K+t5oiW57+76K+R5ouZ5Yqj55qE5p2h55uuJyxcblx0XHRcdHZhbHVlOiAnYTMnLFxuXHRcdFx0dG9vbHRpcDpcblx0XHRcdFx0J+adoeebruWGheWuuee7neWkp+mDqOWIhumdnueOsOS7o+axieivre+8jOWMheaLrOacque/u+ivkeeahOWkluivreOAgeaWueiogOWPiuaWh+iogOaWh++8m+aIlue/u+ivkei0qOmHj+S9juS4i++8jOS7peiHs+S6jumavuS7peeQhuino+aIluWHuueOsOi+g+WkmumUmeivr+OAgicsXG5cdFx0fSxcblx0XTtcblx0VHdpbmtsZS5zcGVlZHkuY2F0ZWdvcnlMaXN0ID0gW1xuXHRcdHtcblx0XHRcdGxhYmVsOiAnTzLvvJrnqbrliIbnsbvjgIInLFxuXHRcdFx0dmFsdWU6ICdvMicsXG5cdFx0XHR0b29sdGlwOiAn5rKh5pyJ5pS25b2V5Lu75L2V6aG16Z2i44CB5paH5Lu244CB5a2Q5YiG57G755qE5YiG57G744CCQ2F0ZWdvcnk66K+35Yu/5Yig6Zmk55qE5YiG57G75Lit55qE5YiG57G75LiN6YCC55So44CCJyxcblx0XHR9LFxuXHRdO1xuXHRUd2lua2xlLnNwZWVkeS5kcmFmdExpc3QgPSBbXG5cdFx0e1xuXHRcdFx0bGFiZWw6ICdPM++8muW6n+W8g+iNieeov+OAgicsXG5cdFx0XHR2YWx1ZTogJ28zJyxcblx0XHRcdHRvb2x0aXA6ICfojYnnqL/lkI3lrZfnqbrpl7TlhoXlha3kuKrmnIjlhoXml6DnvJbovpHnmoTpobXpnaLjgIInLFxuXHRcdH0sXG5cdF07XG5cdFR3aW5rbGUuc3BlZWR5LnVzZXJMaXN0ID0gW1xuXHRcdHtcblx0XHRcdGxhYmVsOiAnTzHvvJrnlKjmiLfor7fmsYLliKDpmaToh6rlt7HnmoTnlKjmiLfpobXjgIInLFxuXHRcdFx0dmFsdWU6ICdvMScsXG5cdFx0XHR0b29sdGlwOiAn566h55CG5ZGY6ZyA5p+l55yL57yW6L6R5Y6G5Y+y77yM56Gu6K6k6K+l6aG16Z2i5LiN5piv5LuO5YW25LuW5ZCN5a2X56m66Ze056e75Yqo6ICM5p2l44CCJyxcblx0XHR9LFxuXHRdO1xuXHRUd2lua2xlLnNwZWVkeS5nZW5lcmFsTGlzdCA9IFtcblx0XHR7XG5cdFx0XHRsYWJlbDogJ0cx77ya5piO5pi+6L+d5Y+N5rOV5b6L5rOV6KeE5oiW6L+d6IOM5YWs5bqP6Imv5L+X55qE6aG16Z2iJyxcblx0XHRcdHZhbHVlOiAnZzEnLFxuXHRcdFx0dG9vbHRpcDpcblx0XHRcdFx0J+aYjuaYvui/neWPjeacjeWKoeWZqOaJgOWcqOWcsOeahOazleW+i+azleinhOWPiuacieWFs+inhOWumu+8jOaIlueqgeegtOekvuS8muWFrOW6j+iJr+S/l+W6lee6v++8jOaMieeFp+S4reWNjuS6uuawkeWFseWSjOWbveS6kuiBlOe9keeuoeeQhuinhOWumuW6lOS6iOWIoOmZpOeahOmhtemdouOAgicsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogJ0cy77ya5rKh5pyJ5a6e6ZmF5YaF5a6555qE6aG16Z2iJyxcblx0XHRcdHZhbHVlOiAnZzInLFxuXHRcdFx0dG9vbHRpcDpcblx0XHRcdFx0J+S7heWMheaLrOaXoOaEj+S5ieWtl+espuS4suiAjOayoeacieWunumZheWGheWuueeahOmhtemdouOAgueUseeUqOaIt+acrOS6uuWIm+W7uueahOeUqOaIt+mhteOAgeeUqOaIt+iuqOiuuumhte+8jOWPiuS4k+S4uua1i+ivleaPkOS+m+eahOaymeebku+8jOS4jemAgueUqOatpOWHhuWImeOAgicsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogJ0cz77ya57qv57K556C05Z2PJyxcblx0XHRcdHZhbHVlOiAnZzMnLFxuXHRcdFx0dG9vbHRpcDpcblx0XHRcdFx0J+WMheaLrOS9huS4jemZkOS6juaYjuaYvueahOaBtuS9nOWJp+OAgemUmeivr+S/oeaBr+OAgeS6uui6q+aUu+WHu+etie+8jOS7peWPiua4heeQhuenu+WKqOegtOWdj+aXtueVmeS4i+eahOmHjeWumuWQkeOAguiLpeaUtuWIsOaIluWPkeeOsOS4pemHjeeahOS6uui6q+aUu+WHu+S4juivi+avge+8jOeuoeeQhuWRmOWPiuWFtuS7lueUqOaIt+W6lOmAmuefpeebkeedo+WRmOi/m+ihjOebkeedo+makOiXj+OAgicsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogJ0c077ya6YeN5paw5Yib5bu65bey6KKr5Yig6Zmk55qE6aG16Z2iJyxcblx0XHRcdHZhbHVlOiAnZzQnLFxuXHRcdFx0dG9vbHRpcDpcblx0XHRcdFx0J+iLpeeOsOaciemhtemdouS4juabvuWcqOWIoOmZpOiuqOiuuu+8iOWQq+mhtemdouWtmOW6n+iuqOiuuuOAgeaWh+S7tuWtmOW6n+iuqOiuuuWSjOS+teadg+WuoeaguO+8jOS4jeWQq+W/q+mAn+WIoOmZpO+8ieS4reiiq+WIoOmZpOWGheWuueebuOWQjOaIlumdnuW4uOebuOS8vO+8jOS4lOeOsOacieWGheWuueS7jeeEtumAgueUqOWIoOmZpOiuqOiuuuS4reeahOe7k+iuuu+8jOaXoOiuuuagh+mimOaYr+WQpuebuOWQjO+8jOmDvemAgueUqOacrOagh+WHhuOAguiLpeeOsOaciemhtemdouagh+mimOS4juW3suWIoOeJiOacrOS4jeS4gOiHtO+8jOWImeaPkOivt+mAn+WIoOiAheW6lOS4gOW5tuazqOaYjuW3suWIoOeJiOacrOeahOmhtemdouWQje+8m+iLpeivpemhtemdouS5i+WJjeiiq+W/q+mAn+WIoOmZpO+8jOivt+S7peebuOWQjOeQhueUsemHjeaWsOaPkOivt+mAn+WIoOOAguiLpeeOsOacieWGheWuueS4jemAgueUqOWIoOmZpOiuqOiuuuS4reeahOe7k+iuuu+8jOW6lOmHjeaWsOaPkOWHuuWIoOmZpOiuqOiuuuOAgicsXG5cdFx0XHRzdWJncm91cDogW1xuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ2c0X3BhZ2VuYW1lJyxcblx0XHRcdFx0XHR0eXBlOiAnaW5wdXQnLFxuXHRcdFx0XHRcdGxhYmVsOiAn5bey5Yig54mI5q2k6aG16Z2i5ZCN77yaJyxcblx0XHRcdFx0XHRzaXplOiA2MCxcblx0XHRcdFx0fSxcblx0XHRcdF0sXG5cdFx0XHRoaWRlU3ViZ3JvdXBXaGVuTXVsdGlwbGU6IHRydWUsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogJ0c177ya5Zug5oqA5pyv5Y6f5Zug5Yig6Zmk6aG16Z2iJyxcblx0XHRcdHZhbHVlOiAnZzUnLFxuXHRcdFx0dG9vbHRpcDpcblx0XHRcdFx0J+WMheaLrOS7peS4i+aDheW9ou+8muWboOenu+WKqOivt+axguiAjOWIoOmZpOmhtemdou+8m+S7peimhuebluWIoOmZpOmHjeWumuWQke+8m+WIoOmZpOaXoOeUqOeahE1lZGlhV2lraemhtemdou+8jOWPiuWFtuS7luaKgOacr+WboumYn+aIlueVjOmdoueuoeeQhuWRmOiupOS4uuacieW/heimgeaJp+ihjOeahOW/q+mAn+WIoOmZpOaDheW9ouOAgicsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogJ0c277ya5Y6f5L2c6ICF5o+Q6K+35Yig6Zmk5oiW5riF56m66aG16Z2i77yM5LiU6aG16Z2i5Y6f5L2c6ICF5LuF5pyJ5LiA5Lq6Jyxcblx0XHRcdHZhbHVlOiAnZzYnLFxuXHRcdFx0dG9vbHRpcDpcblx0XHRcdFx0J+mhtemdouWOn+S9nOiAheaMgeWQiOeQhueQhueUseaPkOWHuueahOW/q+mAn+WIoOmZpO+8m+aIlumhtemdouWOn+S9nOiAhe+8iOWunumZhei0oeeMruiAhe+8iea4heepuumhtemdou+8jOWFtuS7lueUqOaIt+aPkOS6pOeahOW/q+mAn+WIoOmZpOOAgumhtemdouWOn+S9nOiAhe+8iOWunumZhei0oeeMruiAhe+8ieS7heS4gOS6uuaXtua7oei2s+acrOWHhuWImeOAguiLpemhtemdouWunumZhei0oeeMruiAheWkmuS6juS4gOS6uu+8jOivt+aMgeWQiOeQhueQhueUseaPkOS6pOWIoOmZpOiuqOiuuuOAguWQjuS4gOaDheW9ouS4jeWMheaLrOeUqOaIt+mhteOAgeeUqOaIt+iuqOiuuumhte+8jOS4lOW6lOWcqOmhtemdouacgOWQjuS4gOasoee8lui+kTblsI/ml7blkI7mj5Dlh7rjgILooqvlr7zlhaXnmoTpobXpnaLvvIzlr7zlhaXogIXop4bkuLrljp/kvZzogIXjgIInLFxuXHRcdFx0c3ViZ3JvdXA6IHtcblx0XHRcdFx0bmFtZTogJ2c2X3JhdGlvbmFsZScsXG5cdFx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRcdGxhYmVsOiAn5Yig6Zmk5Y6f5Zug77yaJyxcblx0XHRcdFx0c2l6ZTogNjAsXG5cdFx0XHR9LFxuXHRcdFx0aGlkZVN1Ymdyb3VwV2hlblN5c29wOiB0cnVlLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0bGFiZWw6ICdHN++8muaYjuaYvueahOW5v+WRiuWuo+S8oCcsXG5cdFx0XHR2YWx1ZTogJ2c3Jyxcblx0XHRcdHRvb2x0aXA6XG5cdFx0XHRcdCflupTnlKjkuo7mmI7mmL7nmoTlub/lkYrlrqPkvKDvvIzmiJblj6rmnInnm7jlhbPkurrnianjgIHnu4Tnu4fnrYnkuovnianogZTns7vmlrnms5XvvIjljIXmi6zkvYbkuI3pmZDkuo7nlLXor53jgIHlnLDlnYDjgIHnlLXlrZDpgq7nrrHjgIHljbPml7bpgJrorq/ova/ku7bogZTns7vmlrnlvI/vvIjlpoJRUeWPt+OAgeW+ruS/oeWPt++8ieOAgeekvuS6pOWqkuS9k+mTvuaOpe+8ieOAguiLpeWuo+S8oOivreawlOS4jeaYjuaYvu+8jOW7uuiurui9rOS6pOWIoOmZpOiuqOiuuuOAgicsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogJ0c477ya5pyq5YiX5piO5Y+v6Z2g5p2l5rqQ5LiU6K+t6LCD6LSf6Z2i55qE55Sf6ICF5Lyg6K6wJyxcblx0XHRcdHZhbHVlOiAnZzgnLFxuXHRcdFx0dG9vbHRpcDogJ+acrOaDheWGteS4i+acieeahOmhtemdouS4pemHjeS+teeKr+S7luS6uuWQjeiqieadg++8jOacieaXtuWPr+iDveS+teeKr+makOengeadg++8jOWPr+iDvemcgOimgeaPkOivt+ebkeedo+OAgicsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogJ0c577ya5a2k56uL6aG16Z2iJyxcblx0XHRcdHZhbHVlOiAnZzknLFxuXHRcdFx0dG9vbHRpcDpcblx0XHRcdFx0J+WMheaLrOS7peS4i+WHoOenjeexu+Wei++8mjEu5rKh5pyJ5a+55bqU5paH5Lu255qE5paH5Lu26aG16Z2i77ybMi7msqHmnInlr7nlupTmr43pobXpnaLnmoTlrZDpobXpnaLvvIjnlKjmiLfpobXlrZDpobXpnaLpmaTlpJbvvInvvJszLuaMh+WQkeS4jeWtmOWcqOmhtemdoueahOmHjeWumuWQke+8mzQu5rKh5pyJ5a+55bqU5YaF5a656aG16Z2i55qE6K6o6K666aG177yI6K6o6K666aG15a2Y5qGj44CB55So5oi36K6o6K666aG177yM5Lul5Y+K5Zyo5Li76aG16Z2i5oyC5pyJe3tDU0QgUGxhY2Vob2xkZXJ9feaooeadv+eahOiuqOiuuumhtemZpOWklu+8ie+8mzUu5LiN5a2Y5Zyo5rOo5YaM55So5oi355qE55So5oi36aG15Y+K55So5oi36aG15a2Q6aG16Z2i77yI6ZqP55So5oi35pu05ZCN5Lqn55Sf55qE55So5oi36aG16YeN5a6a5ZCR6Zmk5aSW77yJ44CC6K+35Zyo5Yig6Zmk5pe25rOo5oSP5pyJ5peg5bCG5YaF5a6556e76Iez5LuW5aSE55qE5b+F6KaB44CCJyxcblx0XHR9LFxuXHRdO1xuXHRUd2lua2xlLnNwZWVkeS5yZWRpcmVjdExpc3QgPSBbXG5cdFx0e1xuXHRcdFx0bGFiZWw6ICdSMe+8muS4jeiDveWPkeaMpeWunumZheS9nOeUqOeahOmHjeWumuWQkeOAgicsXG5cdFx0XHR2YWx1ZTogJ3IxJyxcblx0XHRcdHRvb2x0aXA6XG5cdFx0XHRcdCfljIXmi6zku6XkuIvmg4XlhrXvvJoxLuaMh+WQkeacrOi6q+aIluW+queOr+eahOmHjeWumuWQke+8jOWmgkHihpJC4oaSQ+KGkuKApuKApuKGkkHmiJZB4oaSQe+8iOe5geeugOmHjeWumuWQkeS4jemAgueUqOatpOmhue+8ie+8mzIu5qC85byP6ZSZ6K+v55qE6YeN5a6a5ZCR77yM5YyF5ous5qCH6aKY5LuF5Li657mB5L2T44CB57mB566A5re355So44CB5raI5q2n5LmJ5L2/55So55qE5ous5byn5oiW56m65qC86ZSZ6K+v44CB6Ze06ZqU5Y+35L2/55So6ZSZ6K+v77yI5Zug57G75o6o566A5YyW5a2X5pyq5pS25b2V6Iez44CK6YCa55So6KeE6IyD5rGJ5a2X6KGo44CL5a+86Ie055qE57mB566A5re35p2C5oOF5b2i77yM5oiW57O757uf5peg5rOV6Ieq5Yqo6L+b6KGM57mB566A5aSE55CG55qE5oOF5b2i77yM5YiZ5LiN6YCC55So77yJ44CC6Iul6YeN5a6a5ZCR6aG16Z2i5qCH6aKY77yM5LiO5ZCI5LmO5ZG95ZCN5bi46KeE55qE55uu5qCH6aG16Z2i5qCH6aKY5LmL6Ze077yM5LuF5a2Y5Zyo57mB566A5a2X5L2T55qE5Yy65Yir77yM6ICM5LiN5a2Y5Zyo6K+N6K+t55So5rOV5Yy65Yir77yM5YiZ5LiN5L+d55WZ6K+l6YeN5a6a5ZCR44CC5Zug57O757uf5peg5rOV6Ieq5Yqo57mB566A6L2s5o2i6ICM5b+F6aG75L+d55WZ55qE6YeN5a6a5ZCR6aG16Z2i6Zmk5aSW44CC5a+55LqO5YW25LuW5pyq5YiX5Ye655qE5oOF5Ya177yM6Iul55So5oi36K6k5Li66K+l6YeN5a6a5ZCR5peg5rOV5Y+R5oyl5a6e6ZmF5L2c55So77yM5LiU5L6d5o2u5bi46K+G5rKh5pyJ5Lu75L2V5LqJ6K6u77yM5Y+v5Yet5ZCI55CG55CG55Sx5o+Q6K+36YCf5Yig77yM55Sx566h55CG5ZGY5Yik5pat44CC5oyH5ZCR5LiN5a2Y5Zyo6aG16Z2i55qE6YeN5a6a5ZCR77yM6YCC55SoRzXlh4bliJnjgIInLFxuXHRcdFx0c3ViZ3JvdXA6IHtcblx0XHRcdFx0bmFtZTogJ3IxX3R5cGUnLFxuXHRcdFx0XHR0eXBlOiAnc2VsZWN0Jyxcblx0XHRcdFx0bGFiZWw6ICfpgILnlKjnsbvlnovvvJonLFxuXHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6ICfor7fpgInmi6knLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICcnLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6ICfmjIflkJHmnKzouqvmiJblvqrnjq/nmoTph43lrprlkJEnLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICfmjIflkJHmnKzouqvmiJblvqrnjq/nmoTph43lrprlkJHjgIInLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6ICfmoIfpopjnuYHnroDmt7fnlKgnLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICfmoIfpopjnuYHnroDmt7fnlKjjgIInLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6ICfmtojmrafkuYnkvb/nlKjnmoTmi6zlj7fmiJbnqbrmoLzplJnor68nLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICfmtojmrafkuYnkvb/nlKjnmoTmi6zlj7fmiJbnqbrmoLzplJnor6/jgIInLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6ICfpl7TpmpTlj7fkvb/nlKjplJnor68nLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICfpl7TpmpTlj7fkvb/nlKjplJnor6/jgIInLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6ICflhbbku5bnkIbnlLHvvIjor7fli77pgInkuIrmlrnigJzlupTnlKjlpJrkuKrnkIbnlLHigJ3vvIzlubbloavlhpnoh6rlrprkuYnnkIbnlLHvvIknLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICcnLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdF0sXG5cdFx0XHR9LFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0bGFiZWw6ICdSMu+8muWQjeensOS4juWvvOWQkeebruagh+S7o+ihqOS6i+eJqeS4jeS4gOiHtOaIluS4jeWujOWFqOS4gOiHtOeahOmHjeWumuWQkeOAgicsXG5cdFx0XHR2YWx1ZTogJ3IyJyxcblx0XHRcdHRvb2x0aXA6XG5cdFx0XHRcdCfljIXmi6zkvYbkuI3pmZDkuo7ku6XkuIvmg4XlhrXvvJoxLueUseS7u+S9lemdnuadoeebrumhtemdou+8iOmZpOeUqOaIt+mhte+8ieWvvOWQkeadoeebrumhteeahOmHjeWumuWQke+8jOS7peWPiueUseadoeebrumhteWvvOWQkeS7u+S9lemdnuadoeebrumhtemdoueahOmHjeWumuWQkeOAgjIu5piO5pi+56yU6K+v55qE6YeN5a6a5ZCR77yM5aaC5Ye6546w5LiN5bi46KeB55qE6ZSZ5Yir5a2X562J44CC77yI5Yir56ew6YeN5a6a5ZCR5LiN6YCC55So5q2k6aG544CC6Iul5ZCr6ZSZ5Yir5a2X5oiW5pyJ56yU6K+v55qE6YeN5a6a5ZCR5L2/55So6aKR546H6auY77yM5q2k57G76YeN5a6a5ZCR5pyJ5Yqp5LqO5biu5Yqp55So5oi35a+75om+5Yiw5q2j56Gu55qE6aG16Z2i77yM5LiN6YCC55So5q2k5qCH5YeG44CC5pyJ5LqJ6K6u55qE5q2k57G76YeN5a6a5ZCR5a6c5o+Q5Lqk5Yig6Zmk6K6o6K6644CC77yJMy7mmI7mmL7kuI7lr7zlkJHnm67moIfmiYDmtrXnm5bnmoTkuLvpopjml6DlhbPvvIzmiJbmr5Tlr7zlkJHnm67moIfmiYDmtrXnm5bnmoTkuLvpopjmm7Tlub/ms5vnmoTph43lrprlkJHjgILvvIjoi6XkuI3mmI7mmL7vvIzlj6/mlLnkuLrmj5DkuqTliKDpmaTorqjorrrjgILvvIknLFxuXHRcdFx0c3ViZ3JvdXA6IHtcblx0XHRcdFx0bmFtZTogJ3IyX3R5cGUnLFxuXHRcdFx0XHR0eXBlOiAnc2VsZWN0Jyxcblx0XHRcdFx0bGFiZWw6ICfpgILnlKjnsbvlnovvvJonLFxuXHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6ICfor7fpgInmi6knLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICcnLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6ICfnlLHpnZ7mnaHnm67pobXpnaLvvIjpmaTnlKjmiLfpobXvvInlr7zlkJHmnaHnm67pobXnmoTph43lrprlkJEnLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICfnlLHpnZ7mnaHnm67pobXpnaLvvIjpmaTnlKjmiLfpobXvvInlr7zlkJHmnaHnm67pobXnmoTph43lrprlkJHjgIInLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6ICfnlLHmnaHnm67pobXlr7zlkJHpnZ7mnaHnm67pobXpnaLnmoTph43lrprlkJEnLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICfnlLHmnaHnm67pobXlr7zlkJHku7vkvZXpnZ7mnaHnm67pobXpnaLnmoTph43lrprlkJHjgIInLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6ICfmmI7mmL7nrJTor6/nmoTph43lrprlkJEnLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICfmmI7mmL7nrJTor6/nmoTph43lrprlkJHjgIInLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6ICfkuI7lr7zlkJHnm67moIfml6DlhbPmiJbmr5TlhbbojIPlm7Tmm7Tlub/ms5vnmoTph43lrprlkJEnLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICfkuI7lr7zlkJHnm67moIfml6DlhbPmiJbmr5TlhbbojIPlm7Tmm7Tlub/ms5vnmoTph43lrprlkJHjgIInLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6ICflhbbku5bnkIbnlLHvvIjor7fli77pgInkuIrmlrnigJzlupTnlKjlpJrkuKrnkIbnlLHigJ3vvIzlubbloavlhpnoh6rlrprkuYnnkIbnlLHvvIknLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICcnLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdF0sXG5cdFx0XHR9LFxuXHRcdH0sXG5cdF07XG5cdFR3aW5rbGUuc3BlZWR5Lm5vcm1hbGl6ZUhhc2ggPSB7XG5cdFx0cmVhc29uOiAnZGInLFxuXHRcdG11bHRpcGxlOiAnbXVsdGlwbGUnLFxuXHRcdCdtdWx0aXBsZS1maW5pc2gnOiAnbXVsdGlwbGUtZmluaXNoJyxcblx0XHRnMTogJ2cxJyxcblx0XHRnMjogJ2cyJyxcblx0XHRnMzogJ2czJyxcblx0XHRnNDogJ2c0Jyxcblx0XHRnNTogJ2c1Jyxcblx0XHRnNjogJ2c2Jyxcblx0XHRnNzogJ2c3Jyxcblx0XHRnODogJ2c4Jyxcblx0XHRnOTogJ2c5Jyxcblx0XHRhMTogJ2ExJyxcblx0XHRhMjogJ2EyJyxcblx0XHRhMzogJ2EzJyxcblx0XHRyMTogJ3IxJyxcblx0XHRyMjogJ3IyJyxcblx0XHRmMTogJ2YxJyxcblx0XHRmMjogJ2YyJyxcblx0XHRmMzogJ2YzJyxcblx0XHRmNDogJ2Y0Jyxcblx0XHRmNTogJ2Y1Jyxcblx0XHRvMTogJ28xJyxcblx0XHRvMjogJ28yJyxcblx0XHRvMzogJ28zJyxcblx0fTtcblx0VHdpbmtsZS5zcGVlZHkuY2FsbGJhY2tzID0ge1xuXHRcdGdldFRlbXBsYXRlQ29kZUFuZFBhcmFtczogKHBhcmFtcykgPT4ge1xuXHRcdFx0bGV0IGNvZGU7XG5cdFx0XHRsZXQgcGFyYW1ldGVycztcblx0XHRcdGxldCBpO1xuXHRcdFx0aWYgKHBhcmFtcy5ub3JtYWxpemVkcy5sZW5ndGggPiAxKSB7XG5cdFx0XHRcdGNvZGUgPSAne3tkZWxldGUnO1xuXHRcdFx0XHRwYXJhbXMudXRwYXJhbXMgPSB7fTtcblx0XHRcdFx0Zm9yIChjb25zdCBbaW5kZXgsIG5vcm1dIG9mIHBhcmFtcy5ub3JtYWxpemVkcy5lbnRyaWVzKCkpIHtcblx0XHRcdFx0XHRpZiAobm9ybSAhPT0gJ2RiJykge1xuXHRcdFx0XHRcdFx0Y29kZSArPSBgfCR7bm9ybS50b1VwcGVyQ2FzZSgpfWA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHBhcmFtZXRlcnMgPSBwYXJhbXMudGVtcGxhdGVQYXJhbXNbaW5kZXhdIHx8IFtdO1xuXHRcdFx0XHRcdGZvciAoY29uc3QgaV8gaW4gcGFyYW1ldGVycykge1xuXHRcdFx0XHRcdFx0aWYgKHR5cGVvZiBwYXJhbWV0ZXJzW2lfXSA9PT0gJ3N0cmluZycpIHtcblx0XHRcdFx0XHRcdFx0Y29kZSArPSBgfCR7cGFyYW1ldGVyc1tpX119YDtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cGFyYW1zLnV0cGFyYW1zID0ge1xuXHRcdFx0XHRcdFx0Li4ucGFyYW1zLnV0cGFyYW1zLFxuXHRcdFx0XHRcdFx0Li4uVHdpbmtsZS5zcGVlZHkuZ2V0VXNlclRhbGtQYXJhbWV0ZXJzKG5vcm0sIHBhcmFtZXRlcnMpLFxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdH1cblx0XHRcdFx0Y29kZSArPSAnfX0nO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cGFyYW1ldGVycyA9IHBhcmFtcy50ZW1wbGF0ZVBhcmFtc1swXSB8fCBbXTtcblx0XHRcdFx0Y29kZSA9ICd7e2RlbGV0ZSc7XG5cdFx0XHRcdGlmIChwYXJhbXMudmFsdWVzWzBdICE9PSAncmVhc29uJykge1xuXHRcdFx0XHRcdGNvZGUgKz0gYHwke3BhcmFtcy52YWx1ZXNbMF19YDtcblx0XHRcdFx0fVxuXHRcdFx0XHRmb3IgKGkgaW4gcGFyYW1ldGVycykge1xuXHRcdFx0XHRcdGlmICh0eXBlb2YgcGFyYW1ldGVyc1tpXSA9PT0gJ3N0cmluZycpIHtcblx0XHRcdFx0XHRcdGNvZGUgKz0gYHwke3BhcmFtZXRlcnNbaV19YDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0Y29kZSArPSAnfX0nO1xuXHRcdFx0XHRwYXJhbXMudXRwYXJhbXMgPSBUd2lua2xlLnNwZWVkeS5nZXRVc2VyVGFsa1BhcmFtZXRlcnMocGFyYW1zLm5vcm1hbGl6ZWRzWzBdLCBwYXJhbWV0ZXJzKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBbY29kZSwgcGFyYW1zLnV0cGFyYW1zXTtcblx0XHR9LFxuXHRcdHBhcnNlV2lraXRleHQ6ICh0aXRsZSwgd2lraXRleHQsIGNhbGxiYWNrKSA9PiB7XG5cdFx0XHRjb25zdCBxdWVyeSA9IHtcblx0XHRcdFx0YWN0aW9uOiAncGFyc2UnLFxuXHRcdFx0XHRwcm9wOiAndGV4dCcsXG5cdFx0XHRcdHBzdDogJ3RydWUnLFxuXHRcdFx0XHR0ZXh0OiB3aWtpdGV4dCxcblx0XHRcdFx0Y29udGVudG1vZGVsOiAnd2lraXRleHQnLFxuXHRcdFx0XHR0aXRsZSxcblx0XHRcdH07XG5cdFx0XHRjb25zdCBzdGF0dXNJbmRpY2F0b3IgPSBuZXcgTW9yZWJpdHMuc3RhdHVzKHdpbmRvdy53Z1VMUygn5p6E6YCg5Yig6Zmk55CG55SxJywgJ+ani+mAoOWIqumZpOeQhueUsScpKTtcblx0XHRcdGNvbnN0IGFwaSA9IG5ldyBNb3JlYml0cy53aWtpLmFwaShcblx0XHRcdFx0d2luZG93LndnVUxTKCfop6PmnpDliKDpmaTmqKHmnb8nLCAn6Kej5p6Q5Yiq6Zmk5qih5p2/JyksXG5cdFx0XHRcdHF1ZXJ5LFxuXHRcdFx0XHQoYXBpT2JqKSA9PiB7XG5cdFx0XHRcdFx0Y29uc3QgcmVhc29uID0gZGVjb2RlVVJJQ29tcG9uZW50KFxuXHRcdFx0XHRcdFx0JChhcGlPYmouZ2V0WE1MKCkucXVlcnlTZWxlY3RvcigndGV4dCcpLmNoaWxkTm9kZXNbMF0ubm9kZVZhbHVlKVxuXHRcdFx0XHRcdFx0XHQuZmluZCgnI2RlbGV0ZS1yZWFzb24nKVxuXHRcdFx0XHRcdFx0XHQudGV4dCgpXG5cdFx0XHRcdFx0XHRcdC5yZXBsYWNlKC9cXCsvZywgJyAnKVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0aWYgKHJlYXNvbikge1xuXHRcdFx0XHRcdFx0c3RhdHVzSW5kaWNhdG9yLmluZm8oJ+WujOaIkCcpO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRzdGF0dXNJbmRpY2F0b3Iud2Fybih3aW5kb3cud2dVTFMoJ+acquiDveS7juWIoOmZpOaooeadv+eUn+aIkOWIoOmZpOeQhueUsScsICfmnKrog73lvp7liKrpmaTmqKHmnb/nlJ/miJDliKrpmaTnkIbnlLEnKSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGNhbGxiYWNrKHJlYXNvbik7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdHN0YXR1c0luZGljYXRvclxuXHRcdFx0KTtcblx0XHRcdGFwaS5wb3N0KCk7XG5cdFx0fSxcblx0XHRzeXNvcDoge1xuXHRcdFx0bWFpbjogKHBhcmFtcykgPT4ge1xuXHRcdFx0XHRsZXQgcmVhc29uO1xuXHRcdFx0XHRpZiAoIXBhcmFtcy5ub3JtYWxpemVkcy5sZW5ndGggJiYgcGFyYW1zLm5vcm1hbGl6ZWRzWzBdID09PSAnZGInKSB7XG5cdFx0XHRcdFx0cmVhc29uID0gcHJvbXB0KHdpbmRvdy53Z1VMUygn6L6T5YWl5Yig6Zmk55CG55Sx77yaJywgJ+i8uOWFpeWIqumZpOeQhueUse+8micpLCAnJyk7XG5cdFx0XHRcdFx0VHdpbmtsZS5zcGVlZHkuY2FsbGJhY2tzLnN5c29wLmRlbGV0ZVBhZ2UocmVhc29uLCBwYXJhbXMpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGNvbnN0IFtjb2RlXSA9IFR3aW5rbGUuc3BlZWR5LmNhbGxiYWNrcy5nZXRUZW1wbGF0ZUNvZGVBbmRQYXJhbXMocGFyYW1zKTtcblx0XHRcdFx0XHRUd2lua2xlLnNwZWVkeS5jYWxsYmFja3MucGFyc2VXaWtpdGV4dChtdy5jb25maWcuZ2V0KCd3Z1BhZ2VOYW1lJyksIGNvZGUsIChkZWxldGVSZWFzb24pID0+IHtcblx0XHRcdFx0XHRcdGlmIChwYXJhbXMucHJvbXB0Rm9yU3VtbWFyeSkge1xuXHRcdFx0XHRcdFx0XHRkZWxldGVSZWFzb24gPSBwcm9tcHQoXG5cdFx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdFx0J+i+k+WFpeWIoOmZpOeQhueUse+8jOaIluWNleWHu+ehruWumuS7peaOpeWPl+iHquWKqOeUn+aIkOeahO+8micsXG5cdFx0XHRcdFx0XHRcdFx0XHQn6Ly45YWl5Yiq6Zmk55CG55Sx77yM5oiW6bue5pOK56K65a6a5Lul5o6l5Y+X6Ieq5YuV55Sf5oiQ55qE77yaJ1xuXHRcdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRcdFx0ZGVsZXRlUmVhc29uXG5cdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRUd2lua2xlLnNwZWVkeS5jYWxsYmFja3Muc3lzb3AuZGVsZXRlUGFnZShkZWxldGVSZWFzb24sIHBhcmFtcyk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRkZWxldGVQYWdlOiAocmVhc29uLCBwYXJhbXMpID0+IHtcblx0XHRcdFx0Y29uc3QgdGhpc3BhZ2UgPSBuZXcgTW9yZWJpdHMud2lraS5wYWdlKFxuXHRcdFx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnUGFnZU5hbWUnKSxcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+WIoOmZpOmhtemdoicsICfliKrpmaTpoIHpnaInKVxuXHRcdFx0XHQpO1xuXHRcdFx0XHRpZiAocmVhc29uID09PSBudWxsKSB7XG5cdFx0XHRcdFx0cmV0dXJuIE1vcmViaXRzLnN0YXR1cy5lcnJvcihcblx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn6K+i6Zeu55CG55SxJywgJ+ipouWVj+eQhueUsScpLFxuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfnlKjmiLflj5bmtojmk43kvZzjgIInLCAn5L2/55So6ICF5Y+W5raI5pON5L2c44CCJylcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHR9IGVsc2UgaWYgKCFyZWFzb24gfHwgIXJlYXNvbi50cmltKCkpIHtcblx0XHRcdFx0XHRyZXR1cm4gTW9yZWJpdHMuc3RhdHVzLmVycm9yKFxuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfor6Lpl67nkIbnlLEnLCAn6Kmi5ZWP55CG55SxJyksXG5cdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+S9oOS4jee7meaIkeeQhueUseKApuaIkeWwseKApuS4jeeuoeS6huKApicsICfkvaDkuI3ntabmiJHnkIbnlLHigKbmiJHlsLHigKbkuI3nrqHkuobigKYnKVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0Y29uc3QgZGVsZXRlTWFpbiA9ICgpID0+IHtcblx0XHRcdFx0XHR0aGlzcGFnZS5zZXRFZGl0U3VtbWFyeShyZWFzb24pO1xuXHRcdFx0XHRcdHRoaXNwYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdFx0XHR0aGlzcGFnZS5zZXRXYXRjaGxpc3QocGFyYW1zLndhdGNoKTtcblx0XHRcdFx0XHR0aGlzcGFnZS5kZWxldGVQYWdlKCgpID0+IHtcblx0XHRcdFx0XHRcdHRoaXNwYWdlLmdldFN0YXR1c0VsZW1lbnQoKS5pbmZvKCflrozmiJAnKTtcblx0XHRcdFx0XHRcdFR3aW5rbGUuc3BlZWR5LmNhbGxiYWNrcy5zeXNvcC5kZWxldGVUYWxrKHBhcmFtcyk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH07XG5cdFx0XHRcdC8vIGxvb2sgdXAgaW5pdGlhbCBjb250cmlidXRvci4gSWYgcHJvbXB0aW5nIHVzZXIgZm9yIGRlbGV0aW9uIHJlYXNvbiwganVzdCBkaXNwbGF5IGEgbGluay5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIG9wZW4gdGhlIHRhbGsgcGFnZSBkaXJlY3RseVxuXHRcdFx0XHRpZiAocGFyYW1zLm9wZW5Vc2VyVGFsaykge1xuXHRcdFx0XHRcdHRoaXNwYWdlLnNldENhbGxiYWNrUGFyYW1ldGVycyhwYXJhbXMpO1xuXHRcdFx0XHRcdHRoaXNwYWdlLmxvb2t1cENyZWF0aW9uKCgpID0+IHtcblx0XHRcdFx0XHRcdFR3aW5rbGUuc3BlZWR5LmNhbGxiYWNrcy5zeXNvcC5vcGVuVXNlclRhbGtQYWdlKHRoaXNwYWdlKTtcblx0XHRcdFx0XHRcdGRlbGV0ZU1haW4oKTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRkZWxldGVNYWluKCk7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRkZWxldGVUYWxrOiAocGFyYW1zKSA9PiB7XG5cdFx0XHRcdC8vIGRlbGV0ZSB0YWxrIHBhZ2Vcblx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdHBhcmFtcy5kZWxldGVUYWxrUGFnZSAmJlxuXHRcdFx0XHRcdHBhcmFtcy5ub3JtYWxpemVkICE9PSAnbzEnICYmXG5cdFx0XHRcdFx0IWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjYS10YWxrJykuY2xhc3NMaXN0LmNvbnRhaW5zKCduZXcnKVxuXHRcdFx0XHQpIHtcblx0XHRcdFx0XHRjb25zdCB0YWxrcGFnZSA9IG5ldyBNb3JlYml0cy53aWtpLnBhZ2UoXG5cdFx0XHRcdFx0XHRgJHtcblx0XHRcdFx0XHRcdFx0bXcuY29uZmlnLmdldCgnd2dGb3JtYXR0ZWROYW1lc3BhY2VzJylbbXcuY29uZmlnLmdldCgnd2dOYW1lc3BhY2VOdW1iZXInKSArIDFdXG5cdFx0XHRcdFx0XHR9OiR7bXcuY29uZmlnLmdldCgnd2dUaXRsZScpfWAsXG5cdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+WIoOmZpOiuqOiuuumhtScsICfliKrpmaToqI7oq5bpoIEnKVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0dGFsa3BhZ2Uuc2V0RWRpdFN1bW1hcnkoYFtbUVc6Q1NEI0c5fEc5XV06IOWtpOeri+mhtemdou+8muW3suWIoOmZpOmhtemdouKAnCR7TW9yZWJpdHMucGFnZU5hbWVOb3JtfeKAneeahOiuqOiuuumhtWApO1xuXHRcdFx0XHRcdHRhbGtwYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdFx0XHR0YWxrcGFnZS5kZWxldGVQYWdlKCk7XG5cdFx0XHRcdFx0Ly8gdGhpcyBpcyB1Z2x5LCBidXQgYmVjYXVzZSBvZiB0aGUgYXJjaGl0ZWN0dXJlIG9mIHdpa2kuYXBpLCBpdCBpcyBuZWVkZWRcblx0XHRcdFx0XHQvLyAob3RoZXJ3aXNlIHN1Y2Nlc3MvZmFpbHVyZSBtZXNzYWdlcyBmb3IgdGhlIHByZXZpb3VzIGFjdGlvbiB3b3VsZCBiZSBzdXBwcmVzc2VkKVxuXHRcdFx0XHRcdHNldFRpbWVvdXQoKCkgPT4ge1xuXHRcdFx0XHRcdFx0VHdpbmtsZS5zcGVlZHkuY2FsbGJhY2tzLnN5c29wLmRlbGV0ZVJlZGlyZWN0cyhwYXJhbXMpO1xuXHRcdFx0XHRcdH0sIDE4MDApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFR3aW5rbGUuc3BlZWR5LmNhbGxiYWNrcy5zeXNvcC5kZWxldGVSZWRpcmVjdHMocGFyYW1zKTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdGRlbGV0ZVJlZGlyZWN0czogKHBhcmFtcykgPT4ge1xuXHRcdFx0XHQvLyBkZWxldGUgcmVkaXJlY3RzXG5cdFx0XHRcdGlmIChwYXJhbXMuZGVsZXRlUmVkaXJlY3RzKSB7XG5cdFx0XHRcdFx0Y29uc3QgcXVlcnkgPSB7XG5cdFx0XHRcdFx0XHRhY3Rpb246ICdxdWVyeScsXG5cdFx0XHRcdFx0XHR0aXRsZXM6IG13LmNvbmZpZy5nZXQoJ3dnUGFnZU5hbWUnKSxcblx0XHRcdFx0XHRcdHByb3A6ICdyZWRpcmVjdHMnLFxuXHRcdFx0XHRcdFx0cmRsaW1pdDogNTAwMCwgLy8gNTAwIGlzIG1heCBmb3Igbm9ybWFsIHVzZXJzLCA1MDAwIGZvciBib3RzIGFuZCBzeXNvcHNcblx0XHRcdFx0XHR9O1xuXG5cdFx0XHRcdFx0Y29uc3QgcWl1d2VuX2FwaSA9IG5ldyBNb3JlYml0cy53aWtpLmFwaShcblx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn6I635Y+W6YeN5a6a5ZCR5YiX6KGo4oCmJywgJ+WPluW+l+mHjeaWsOWwjuWQkeWIl+ihqOKApicpLFxuXHRcdFx0XHRcdFx0cXVlcnksXG5cdFx0XHRcdFx0XHRUd2lua2xlLnNwZWVkeS5jYWxsYmFja3Muc3lzb3AuZGVsZXRlUmVkaXJlY3RzTWFpbixcblx0XHRcdFx0XHRcdG5ldyBNb3JlYml0cy5zdGF0dXMod2luZG93LndnVUxTKCfliKDpmaTph43lrprlkJEnLCAn5Yiq6Zmk6YeN5paw5bCO5ZCRJykpXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRxaXV3ZW5fYXBpLnBhcmFtcyA9IHBhcmFtcztcblx0XHRcdFx0XHRxaXV3ZW5fYXBpLnBvc3QoKTtcblx0XHRcdFx0fVxuXHRcdFx0XHQvLyBwcm9tcHQgZm9yIHByb3RlY3Qgb24gRzdcblx0XHRcdFx0bGV0ICRsaW5rO1xuXHRcdFx0XHRsZXQgJGJpZ3RleHQ7XG5cdFx0XHRcdGlmIChwYXJhbXMubm9ybWFsaXplZCA9PT0gJ2c3Jykge1xuXHRcdFx0XHRcdCRsaW5rID0gJCgnPGE+Jylcblx0XHRcdFx0XHRcdC5hdHRyKCdocmVmJywgJyMnKVxuXHRcdFx0XHRcdFx0LnRleHQod2luZG93LndnVUxTKCfljZXlh7vov5nph4zmlr3ooYzkv53miqQnLCAn6bue5pOK6YCZ6KOh5pa96KGM5L+d6K23JykpXG5cdFx0XHRcdFx0XHQuY3NzKHtcblx0XHRcdFx0XHRcdFx0J2ZvbnQtc2l6ZSc6ICcxMjUlJyxcblx0XHRcdFx0XHRcdFx0J2ZvbnQtd2VpZ2h0JzogJ2JvbGQnLFxuXHRcdFx0XHRcdFx0fSlcblx0XHRcdFx0XHRcdC5vbignY2xpY2snLCAoKSA9PiB7XG5cdFx0XHRcdFx0XHRcdE1vcmViaXRzLndpa2kuYWN0aW9uQ29tcGxldGVkLnJlZGlyZWN0ID0gbnVsbDtcblx0XHRcdFx0XHRcdFx0VHdpbmtsZS5zcGVlZHkuZGlhbG9nLmNsb3NlKCk7XG5cdFx0XHRcdFx0XHRcdG13LmNvbmZpZy5zZXQoJ3dnQXJ0aWNsZUlkJywgMCk7XG5cdFx0XHRcdFx0XHRcdFR3aW5rbGUucHJvdGVjdC5jYWxsYmFjaygpO1xuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0JGJpZ3RleHQgPSAkKCc8c3Bhbj4nKVxuXHRcdFx0XHRcdFx0LmNzcyh7XG5cdFx0XHRcdFx0XHRcdCdmb250LXNpemUnOiAnMTI1JScsXG5cdFx0XHRcdFx0XHRcdCdmb250LXdlaWdodCc6ICdib2xkJyxcblx0XHRcdFx0XHRcdH0pXG5cdFx0XHRcdFx0XHQudGV4dCh3aW5kb3cud2dVTFMoJ+eZvee6uOS/neaKpOivpemhtScsICfnmb3ntJnkv53orbfoqbLpoIEnKSk7XG5cdFx0XHRcdFx0TW9yZWJpdHMuc3RhdHVzLmluZm8oJGJpZ3RleHRbMF0sICRsaW5rWzBdKTtcblx0XHRcdFx0fVxuXHRcdFx0XHQvLyBwcm9tb3RlIFVubGluayB0b29sXG5cdFx0XHRcdGlmIChtdy5jb25maWcuZ2V0KCd3Z05hbWVzcGFjZU51bWJlcicpID09PSA2KSB7XG5cdFx0XHRcdFx0JGxpbmsgPSAkKCc8YT4nKVxuXHRcdFx0XHRcdFx0LmF0dHIoJ2hyZWYnLCAnIycpXG5cdFx0XHRcdFx0XHQudGV4dCh3aW5kb3cud2dVTFMoJ+WNleWHu+i/memHjOWJjeW+gOWPlua2iOmTvuWFpeW3peWFtycsICfpu57mk4rpgJnoo6HliY3lvoDlj5bmtojpgKPlhaXlt6XlhbcnKSlcblx0XHRcdFx0XHRcdC5jc3Moe1xuXHRcdFx0XHRcdFx0XHQnZm9udC13ZWlnaHQnOiAnYm9sZCcsXG5cdFx0XHRcdFx0XHR9KVxuXHRcdFx0XHRcdFx0Lm9uKCdjbGljaycsICgpID0+IHtcblx0XHRcdFx0XHRcdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQucmVkaXJlY3QgPSBudWxsO1xuXHRcdFx0XHRcdFx0XHRUd2lua2xlLnNwZWVkeS5kaWFsb2cuY2xvc2UoKTtcblx0XHRcdFx0XHRcdFx0VHdpbmtsZS51bmxpbmsuY2FsbGJhY2soXG5cdFx0XHRcdFx0XHRcdFx0YCR7d2luZG93LndnVUxTKCflj5bmtojlr7nlt7LliKDpmaTmlofku7YgJywgJ+WPlua2iOWwjeW3suWIqumZpOaqlOahiCAnKSArIE1vcmViaXRzLnBhZ2VOYW1lTm9ybX0g55qE5L2/55SoYFxuXHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0JGJpZ3RleHQgPSAkKCc8c3Bhbj4nKVxuXHRcdFx0XHRcdFx0LmNzcyh7XG5cdFx0XHRcdFx0XHRcdCdmb250LXdlaWdodCc6ICdib2xkJyxcblx0XHRcdFx0XHRcdH0pXG5cdFx0XHRcdFx0XHQudGV4dCh3aW5kb3cud2dVTFMoJ+WPlua2iOWvueW3suWIoOmZpOaWh+S7tueahOS9v+eUqCcsICflj5bmtojlsI3lt7LliKrpmaTmqpTmoYjnmoTkvb/nlKgnKSk7XG5cdFx0XHRcdFx0TW9yZWJpdHMuc3RhdHVzLmluZm8oJGJpZ3RleHRbMF0sICRsaW5rWzBdKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHQkbGluayA9ICQoJzxhPicpXG5cdFx0XHRcdFx0XHQuYXR0cignaHJlZicsICcjJylcblx0XHRcdFx0XHRcdC50ZXh0KHdpbmRvdy53Z1VMUygn5Y2V5Ye76L+Z6YeM5YmN5b6A5Y+W5raI6ZO+5YWl5bel5YW3JywgJ+m7nuaTiumAmeijoeWJjeW+gOWPlua2iOmAo+WFpeW3peWFtycpKVxuXHRcdFx0XHRcdFx0LmNzcyh7XG5cdFx0XHRcdFx0XHRcdCdmb250LXdlaWdodCc6ICdib2xkJyxcblx0XHRcdFx0XHRcdH0pXG5cdFx0XHRcdFx0XHQub24oJ2NsaWNrJywgKCkgPT4ge1xuXHRcdFx0XHRcdFx0XHRNb3JlYml0cy53aWtpLmFjdGlvbkNvbXBsZXRlZC5yZWRpcmVjdCA9IG51bGw7XG5cdFx0XHRcdFx0XHRcdFR3aW5rbGUuc3BlZWR5LmRpYWxvZy5jbG9zZSgpO1xuXHRcdFx0XHRcdFx0XHRUd2lua2xlLnVubGluay5jYWxsYmFjayhcblx0XHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+WPlua2iOWvueW3suWIoOmZpOmhtemdoiAnLCAn5Y+W5raI5bCN5bey5Yiq6Zmk6aCB6Z2iICcpICtcblx0XHRcdFx0XHRcdFx0XHRcdE1vcmViaXRzLnBhZ2VOYW1lTm9ybSArXG5cdFx0XHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJyDnmoTpk77mjqUnLCAnIOeahOmAo+e1kCcpXG5cdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHQkYmlndGV4dCA9ICQoJzxzcGFuPicpLnRleHQod2luZG93LndnVUxTKCflj5bmtojlr7nlt7LliKDpmaTpobXpnaLnmoTpk77mjqUnLCAn5Y+W5raI5bCN5bey5Yiq6Zmk6aCB6Z2i55qE6YCj57WQJykpLmNzcyh7XG5cdFx0XHRcdFx0XHQnZm9udC13ZWlnaHQnOiAnYm9sZCcsXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0TW9yZWJpdHMuc3RhdHVzLmluZm8oJGJpZ3RleHRbMF0sICRsaW5rWzBdKTtcblx0XHRcdFx0fVxuXHRcdFx0XHQkbGluayA9ICQoJzxhPicpXG5cdFx0XHRcdFx0LmF0dHIoJ2hyZWYnLCBtdy51dGlsLmdldFVybCgnU3BlY2lhbDpSYW5kb21JbkNhdGVnb3J5L+W/q+mAn+WIoOmZpOWAmemAiScpKVxuXHRcdFx0XHRcdC50ZXh0KHdpbmRvdy53Z1VMUygn5Y2V5Ye75YmN5b6A5LiL5LiA5Liq5b+r6YCf5Yig6Zmk5YCZ6YCJJywgJ+m7nuaTiuWJjeW+gOS4i+S4gOWAi+W/q+mAn+WIqumZpOWAmemBuCcpKTtcblx0XHRcdFx0TW9yZWJpdHMuc3RhdHVzLmluZm8oJ+W3peWFtycsICRsaW5rWzBdKTtcblx0XHRcdH0sXG5cdFx0XHRvcGVuVXNlclRhbGtQYWdlOiAocGFnZW9iaikgPT4ge1xuXHRcdFx0XHRwYWdlb2JqLmdldFN0YXR1c0VsZW1lbnQoKS51bmxpbmsoKTsgLy8gZG9uJ3QgbmVlZCBpdCBhbnltb3JlXG5cdFx0XHRcdGNvbnN0IHVzZXIgPSBwYWdlb2JqLmdldENyZWF0b3IoKTtcblx0XHRcdFx0Y29uc3QgcGFyYW1zID0gcGFnZW9iai5nZXRDYWxsYmFja1BhcmFtZXRlcnMoKTtcblx0XHRcdFx0Y29uc3QgcXVlcnkgPSB7XG5cdFx0XHRcdFx0YWN0aW9uOiAnZWRpdCcsXG5cdFx0XHRcdFx0cHJldmlldzogJ3llcycsXG5cdFx0XHRcdFx0dmFuYXJ0aWNsZTogTW9yZWJpdHMucGFnZU5hbWVOb3JtLFxuXHRcdFx0XHR9O1xuXHRcdFx0XHRjb25zdCB0aXRsZSA9IGBVc2VyIHRhbGs6JHt1c2VyfWA7XG5cdFx0XHRcdGlmIChcblx0XHRcdFx0XHRwYXJhbXMubm9ybWFsaXplZCA9PT0gJ2RiJyB8fFxuXHRcdFx0XHRcdFR3aW5rbGUuZ2V0UHJlZigncHJvbXB0Rm9yU3BlZWR5RGVsZXRpb25TdW1tYXJ5JykuaW5jbHVkZXMocGFyYW1zLm5vcm1hbGl6ZWQpXG5cdFx0XHRcdCkge1xuXHRcdFx0XHRcdC8vIHByb3ZpZGUgYSBsaW5rIHRvIHRoZSB1c2VyIHRhbGsgcGFnZVxuXHRcdFx0XHRcdGNvbnN0ICRsaW5rID0gJCgnPGE+Jylcblx0XHRcdFx0XHRcdC5hdHRyKHtcblx0XHRcdFx0XHRcdFx0aHJlZjogbXcudXRpbC5nZXRVcmwodGl0bGUsIHF1ZXJ5KSxcblx0XHRcdFx0XHRcdFx0dGFyZ2V0OiAnX2JsYW5rJyxcblx0XHRcdFx0XHRcdFx0cmVsOiAnbm9vcGVuZXIgbm9yZWZlcnJlcicsXG5cdFx0XHRcdFx0XHR9KVxuXHRcdFx0XHRcdFx0LmNzcyh7XG5cdFx0XHRcdFx0XHRcdCdmb250LXNpemUnOiAnMTI1JScsXG5cdFx0XHRcdFx0XHRcdCdmb250LXdlaWdodCc6ICdib2xkJyxcblx0XHRcdFx0XHRcdH0pXG5cdFx0XHRcdFx0XHQudGV4dCh3aW5kb3cud2dVTFMoJ+eCueatpOaJk+W8gFVzZXIgdGFsazonLCAn6bue5q2k5omT6ZaLVXNlciB0YWxrOicpICsgdXNlcik7XG5cdFx0XHRcdFx0Y29uc3QgJGJpZ3RleHQgPSAkKCc8c3Bhbj4nKVxuXHRcdFx0XHRcdFx0LmNzcyh7XG5cdFx0XHRcdFx0XHRcdCdmb250LXNpemUnOiAnMTI1JScsXG5cdFx0XHRcdFx0XHRcdCdmb250LXdlaWdodCc6ICdib2xkJyxcblx0XHRcdFx0XHRcdH0pXG5cdFx0XHRcdFx0XHQudGV4dCh3aW5kb3cud2dVTFMoJ+mAmuefpemhtemdouWIm+W7uuiAhScsICfpgJrnn6XpoIHpnaLlu7rnq4vogIUnKSk7XG5cdFx0XHRcdFx0TW9yZWJpdHMuc3RhdHVzLmluZm8oJGJpZ3RleHRbMF0sICRsaW5rWzBdKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHQvLyBvcGVuIHRoZSBpbml0aWFsIGNvbnRyaWJ1dG9yJ3MgdGFsayBwYWdlXG5cdFx0XHRcdFx0Y29uc3Qgc3RhdHVzSW5kaWNhdG9yID0gbmV3IE1vcmViaXRzLnN0YXR1cyhcblx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5omT5byA55So5oi3JywgJ+aJk+mWi+S9v+eUqOiAhScpICtcblx0XHRcdFx0XHRcdFx0dXNlciArXG5cdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn55qE6K6o6K666aG157yW6L6R56qX5Y+jJywgJ+eahOiojuirlumggee3qOi8r+imlueqlycpLFxuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfmiZPlvIDkuK3igKYnLCAn5omT6ZaL5Lit4oCmJylcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdHN3aXRjaCAoVHdpbmtsZS5nZXRQcmVmKCd1c2VyVGFsa1BhZ2VNb2RlJykpIHtcblx0XHRcdFx0XHRcdGNhc2UgJ3RhYic6XG5cdFx0XHRcdFx0XHRcdHdpbmRvdy5vcGVuKG13LnV0aWwuZ2V0VXJsKHRpdGxlLCBxdWVyeSksICdfYmxhbmsnLCAnbm9vcGVuZXIsbm9yZWZlcnJlcicpO1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdGNhc2UgJ2JsYW5rJzpcblx0XHRcdFx0XHRcdFx0d2luZG93Lm9wZW4oXG5cdFx0XHRcdFx0XHRcdFx0bXcudXRpbC5nZXRVcmwodGl0bGUsIHF1ZXJ5KSxcblx0XHRcdFx0XHRcdFx0XHQnX2JsYW5rJyxcblx0XHRcdFx0XHRcdFx0XHQnbm9vcGVuZXIsbm9yZWZlcnJlcixsb2NhdGlvbj1ubyx0b29sYmFyPW5vLHN0YXR1cz1ubyxkaXJlY3Rvcmllcz1ubyxzY3JvbGxiYXJzPXllcyx3aWR0aD0xMjAwLGhlaWdodD04MDAnXG5cdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0LyogY2FzZSAnd2luZG93JzogKi9cblx0XHRcdFx0XHRcdC8qIGZhbGxzIHRocm91Z2ggKi9cblx0XHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHRcdHdpbmRvdy5vcGVuKFxuXHRcdFx0XHRcdFx0XHRcdG13LnV0aWwuZ2V0VXJsKHRpdGxlLCBxdWVyeSksXG5cdFx0XHRcdFx0XHRcdFx0d2luZG93Lm5hbWUgPT09ICd0d2lua2xld2FybndpbmRvdycgPyAnX2JsYW5rJyA6ICd0d2lua2xld2FybndpbmRvdycsXG5cdFx0XHRcdFx0XHRcdFx0d2luZG93Lm5hbWUgPT09ICd0d2lua2xld2FybndpbmRvdydcblx0XHRcdFx0XHRcdFx0XHRcdD8gJ25vb3BlbmVyLG5vcmVmZXJyZXIsJ1xuXHRcdFx0XHRcdFx0XHRcdFx0OiAnJyArXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0J2xvY2F0aW9uPW5vLHRvb2xiYXI9bm8sc3RhdHVzPW5vLGRpcmVjdG9yaWVzPW5vLHNjcm9sbGJhcnM9eWVzLHdpZHRoPTEyMDAsaGVpZ2h0PTgwMCdcblx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHN0YXR1c0luZGljYXRvci5pbmZvKCflrozmiJAnKTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdGRlbGV0ZVJlZGlyZWN0c01haW46IChhcGlvYmopID0+IHtcblx0XHRcdFx0Y29uc3QgeG1sRG9jID0gYXBpb2JqLmdldFhNTCgpO1xuXHRcdFx0XHRjb25zdCAkc25hcHNob3QgPSAkKHhtbERvYykuZmluZCgncmVkaXJlY3RzIHJkJyk7XG5cdFx0XHRcdGNvbnN0IHRvdGFsID0gJHNuYXBzaG90Lmxlbmd0aDtcblx0XHRcdFx0Y29uc3Qgc3RhdHVzSW5kaWNhdG9yID0gYXBpb2JqLnN0YXRlbGVtO1xuXHRcdFx0XHRpZiAoIXRvdGFsKSB7XG5cdFx0XHRcdFx0c3RhdHVzSW5kaWNhdG9yLmluZm8od2luZG93LndnVUxTKCfmnKrlj5HnjrDph43lrprlkJEnLCAn5pyq55m854++6YeN5paw5bCO5ZCRJykpO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHRzdGF0dXNJbmRpY2F0b3Iuc3RhdHVzKCcwJScpO1xuXHRcdFx0XHRsZXQgY3VycmVudCA9IDA7XG5cdFx0XHRcdGNvbnN0IG9uc3VjY2VzcyA9IChhcGlvYmpJbm5lcikgPT4ge1xuXHRcdFx0XHRcdGNvbnN0IG5vdyA9IGAke051bWJlci5wYXJzZUludCgoMTAwICogKytjdXJyZW50KSAvIHRvdGFsLCAxMCl9JWA7XG5cdFx0XHRcdFx0c3RhdHVzSW5kaWNhdG9yLnVwZGF0ZShub3cpO1xuXHRcdFx0XHRcdGFwaW9iaklubmVyLnN0YXRlbGVtLnVubGluaygpO1xuXHRcdFx0XHRcdGlmIChjdXJyZW50ID49IHRvdGFsKSB7XG5cdFx0XHRcdFx0XHRzdGF0dXNJbmRpY2F0b3IuaW5mbyhgJHtub3d977yI5a6M5oiQ77yJYCk7XG5cdFx0XHRcdFx0XHRNb3JlYml0cy53aWtpLnJlbW92ZUNoZWNrcG9pbnQoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH07XG5cdFx0XHRcdE1vcmViaXRzLndpa2kuYWRkQ2hlY2twb2ludCgpO1xuXHRcdFx0XHQkc25hcHNob3QuZWFjaCgoX2tleSwgdmFsdWUpID0+IHtcblx0XHRcdFx0XHRjb25zdCB0aXRsZSA9ICQodmFsdWUpLmF0dHIoJ3RpdGxlJyk7XG5cdFx0XHRcdFx0Y29uc3QgcGFnZSA9IG5ldyBNb3JlYml0cy53aWtpLnBhZ2UoXG5cdFx0XHRcdFx0XHR0aXRsZSxcblx0XHRcdFx0XHRcdGAke3dpbmRvdy53Z1VMUygn5Yig6Zmk6YeN5a6a5ZCRIFwiJywgJ+WIqumZpOmHjeaWsOWwjuWQkSBcIicpICsgdGl0bGV9XCJgXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRwYWdlLnNldEVkaXRTdW1tYXJ5KGBbW1FXOkNTRCNHOXxHOV1dOiDlraTnq4vpobXpnaLvvJrph43lrprlkJHliLDlt7LliKDpmaTpobXpnaLigJwke01vcmViaXRzLnBhZ2VOYW1lTm9ybX3igJ1gKTtcblx0XHRcdFx0XHRwYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdFx0XHRwYWdlLmRlbGV0ZVBhZ2Uob25zdWNjZXNzKTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9LFxuXHRcdH0sXG5cdFx0dXNlcjoge1xuXHRcdFx0bWFpbjogKHBhZ2VvYmopID0+IHtcblx0XHRcdFx0Y29uc3Qgc3RhdGVsZW0gPSBwYWdlb2JqLmdldFN0YXR1c0VsZW1lbnQoKTtcblx0XHRcdFx0aWYgKCFwYWdlb2JqLmV4aXN0cygpKSB7XG5cdFx0XHRcdFx0c3RhdGVsZW0uZXJyb3Iod2luZG93LndnVUxTKCfpobXpnaLkuI3lrZjlnKjvvIzlj6/og73lt7LooqvliKDpmaQnLCAn6aCB6Z2i5LiN5a2Y5Zyo77yM5Y+v6IO95bey6KKr5Yiq6ZmkJykpO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHRsZXQgdGV4dCA9IHBhZ2VvYmouZ2V0UGFnZVRleHQoKTtcblx0XHRcdFx0Y29uc3QgcGFyYW1zID0gcGFnZW9iai5nZXRDYWxsYmFja1BhcmFtZXRlcnMoKTtcblx0XHRcdFx0c3RhdGVsZW0uc3RhdHVzKHdpbmRvdy53Z1VMUygn5qOA5p+l6aG16Z2i5bey5pyJ5qCH6K6w4oCmJywgJ+aqouafpemggemdouW3suacieaomeiomOKApicpKTtcblx0XHRcdFx0Ly8gY2hlY2sgZm9yIGV4aXN0aW5nIGRlbGV0aW9uIHRhZ3Ncblx0XHRcdFx0Y29uc3QgdGV4dE5vU2QgPSB0ZXh0LnJlcGxhY2UoXG5cdFx0XHRcdFx0L1xce1xce1xccyooZGIoLVxcdyopP3xkfGRlbGV0ZXxkZWxldGViZWNhdXNlfHNwZWVkeXxjc2R86YCf5YiqfOmAn+WIoHzlv6vliKB85b+r5YiqKVxccyooXFx8KD86XFx7XFx7W157fV0qXFx9XFx9fFtee31dKSopP1xcfVxcfVxccyovZ2ksXG5cdFx0XHRcdFx0Jydcblx0XHRcdFx0KTtcblx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdHRleHQgIT09IHRleHROb1NkICYmXG5cdFx0XHRcdFx0IWNvbmZpcm0oXG5cdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdCflnKjpobXpnaLkuIrmib7liLDlv6vpgJ/liKDpmaTmqKHmnb/vvIzopoHnp7vpmaTlubbliqDlhaXmlrDnmoTlkJfvvJ8nLFxuXHRcdFx0XHRcdFx0XHQn5Zyo6aCB6Z2i5LiK5om+5Yiw5b+r6YCf5Yiq6Zmk5qih5p2/77yM6KaB56e76Zmk5Lim5Yqg5YWl5paw55qE5ZeO77yfJ1xuXHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0c3RhdGVsZW0uZXJyb3Iod2luZG93LndnVUxTKCflv6vpgJ/liKDpmaTmqKHmnb/lt7Looqvnva7kuo7pobXpnaLkuK3jgIInLCAn5b+r6YCf5Yiq6Zmk5qih5p2/5bey6KKr572u5pa86aCB6Z2i5Lit44CCJykpO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHR0ZXh0ID0gdGV4dE5vU2Q7XG5cdFx0XHRcdGNvbnN0IGNvcHl2aW8gPSAvKD86XFx7XFx7XFxzKihjb3B5dmlvfOS+teadg3zkvrXmrIopW157fV0qP1xcfVxcfSkvaS5leGVjKHRleHQpO1xuXHRcdFx0XHRpZiAoXG5cdFx0XHRcdFx0Y29weXZpbyAmJlxuXHRcdFx0XHRcdCFjb25maXJtKFxuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHQn6JGX5L2c5p2D6aqM6K+B5qih5p2/5bey6KKr572u5LqO6aG16Z2i5Lit77yM5oKo5piv5ZCm5LuN5oOz5Yqg5YWl5LiA5Liq5b+r6YCf5Yig6Zmk5qih5p2/77yfJyxcblx0XHRcdFx0XHRcdFx0J+iRl+S9nOasiumpl+itieaooeadv+W3suiiq+e9ruaWvOmggemdouS4re+8jOaCqOaYr+WQpuS7jeaDs+WKoOWFpeS4gOWAi+W/q+mAn+WIqumZpOaooeadv++8nydcblx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHQpXG5cdFx0XHRcdCkge1xuXHRcdFx0XHRcdHN0YXRlbGVtLmVycm9yKHdpbmRvdy53Z1VMUygn6aG16Z2i5Lit5bey5pyJ6JGX5L2c5p2D6aqM6K+B5qih5p2/44CCJywgJ+mggemdouS4reW3suacieiRl+S9nOasiumpl+itieaooeadv+OAgicpKTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0Y29uc3QgeGZkID0gLyg/Olxce1xceyhbcnNhaWZ0Y212XWZkfG1kMXxwcm9wb3NlZCBkZWxldGlvbilbXnt9XSo/XFx9XFx9KS9pLmV4ZWModGV4dCk7XG5cdFx0XHRcdGlmIChcblx0XHRcdFx0XHR4ZmQgJiZcblx0XHRcdFx0XHQhY29uZmlybShcblx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5Yig6Zmk55u45YWz5qih5p2/e3snLCAn5Yiq6Zmk55u46Zec5qih5p2/e3snKSArXG5cdFx0XHRcdFx0XHRcdHhmZFsxXSArXG5cdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQnfX3lt7Looqvnva7kuo7pobXpnaLkuK3vvIzmgqjmmK/lkKbku43mg7PliqDlhaXkuIDkuKrlv6vpgJ/liKDpmaTmqKHmnb/vvJ8nLFxuXHRcdFx0XHRcdFx0XHRcdCd9feW3suiiq+e9ruaWvOmggemdouS4re+8jOaCqOaYr+WQpuS7jeaDs+WKoOWFpeS4gOWAi+W/q+mAn+WIqumZpOaooeadv++8nydcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0c3RhdGVsZW0uZXJyb3Iod2luZG93LndnVUxTKCfpobXpnaLlt7Looqvmj5DkuqToh7PlrZjlup/orqjorrrjgIInLCAn6aCB6Z2i5bey6KKr5o+Q5Lqk6Iez5a2Y5bui6KiO6KuW44CCJykpO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHQvLyBnaXZlbiB0aGUgcGFyYW1zLCBidWlsZHMgdGhlIHRlbXBsYXRlIGFuZCBhbHNvIGFkZHMgdGhlIHVzZXIgdGFsayBwYWdlIHBhcmFtZXRlcnMgdG8gdGhlIHBhcmFtcyB0aGF0IHdlcmUgcGFzc2VkIGluXG5cdFx0XHRcdC8vIHJldHVybnMgPT4gWzxzdHJpbmc+IHdpa2l0ZXh0LCA8b2JqZWN0PiB1dHBhcmFtc11cblx0XHRcdFx0Y29uc3QgYnVpbGREYXRhID0gVHdpbmtsZS5zcGVlZHkuY2FsbGJhY2tzLmdldFRlbXBsYXRlQ29kZUFuZFBhcmFtcyhwYXJhbXMpO1xuXHRcdFx0XHRsZXQgW2NvZGVdID0gYnVpbGREYXRhO1xuXHRcdFx0XHRbLCBwYXJhbXMudXRwYXJhbXNdID0gYnVpbGREYXRhO1xuXHRcdFx0XHRjb25zdCB0aGlzcGFnZSA9IG5ldyBNb3JlYml0cy53aWtpLnBhZ2UobXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpKTtcblx0XHRcdFx0Ly8gcGF0cm9sIHRoZSBwYWdlLCBpZiByZWFjaGVkIGZyb20gU3BlY2lhbDpOZXdQYWdlc1xuXHRcdFx0XHRpZiAoVHdpbmtsZS5nZXRQcmVmKCdtYXJrU3BlZWR5UGFnZXNBc1BhdHJvbGxlZCcpKSB7XG5cdFx0XHRcdFx0dGhpc3BhZ2UucGF0cm9sKCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gV3JhcCBTRCB0ZW1wbGF0ZSBpbiBub2luY2x1ZGUgdGFncyBpZiB3ZSBhcmUgaW4gdGVtcGxhdGUgc3BhY2UuXG5cdFx0XHRcdC8vIFdvbid0IHdvcmsgd2l0aCB1c2VyYm94ZXMgaW4gdXNlcnNwYWNlLCBvciBhbnkgb3RoZXIgdHJhbnNjbHVkZWQgcGFnZSBvdXRzaWRlIHRlbXBsYXRlIHNwYWNlXG5cdFx0XHRcdGlmIChtdy5jb25maWcuZ2V0KCd3Z05hbWVzcGFjZU51bWJlcicpID09PSAxMCkge1xuXHRcdFx0XHRcdC8vIFRlbXBsYXRlOlxuXHRcdFx0XHRcdGNvZGUgPSBgPG5vaW5jbHVkZT4ke2NvZGV9PC9ub2luY2x1ZGU+YDtcblx0XHRcdFx0fVxuXHRcdFx0XHQvLyBSZW1vdmUgdGFncyB0aGF0IGJlY29tZSBzdXBlcmZsdW91cyB3aXRoIHRoaXMgYWN0aW9uXG5cdFx0XHRcdHRleHQgPSB0ZXh0LnJlcGxhY2UoXG5cdFx0XHRcdFx0L1xce1xce1xccyooW05uXWV3IHVucmV2aWV3ZWQgYXJ0aWNsZXxbVXVdbnJldmlld2VkfFtVdV1zZXJzcGFjZSBkcmFmdClcXHMqKFxcfCg/Olxce1xce1tee31dKlxcfVxcfXxbXnt9XSkqKT9cXH1cXH1cXHMqL2csXG5cdFx0XHRcdFx0Jydcblx0XHRcdFx0KTtcblx0XHRcdFx0aWYgKG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlTnVtYmVyJykgPT09IDYpIHtcblx0XHRcdFx0XHQvLyByZW1vdmUgXCJtb3ZlIHRvIENvbW1vbnNcIiB0YWcgLSBkZWxldGlvbi10YWdnZWQgZmlsZXMgY2Fubm90IGJlIG1vdmVkIHRvIENvbW1vbnNcblx0XHRcdFx0XHR0ZXh0ID0gdGV4dC5yZXBsYWNlKFxuXHRcdFx0XHRcdFx0L1xce1xceyhtdGN8KGNvcHkgfG1vdmUgKT90byA/KHNoYXJlfGNvbW1vbnMpfG1vdmUgdG8gKHFpdXdlbiBzaGFyZXx3aWtpbWVkaWEgY29tbW9ucyl8Y29weSB0byAocWl1d2VuIHNoYXJlfHdpa2ltZWRpYSBjb21tb25zKSlbXn1dKlxcfVxcfS9naSxcblx0XHRcdFx0XHRcdCcnXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAocGFyYW1zLnJlcXVlc3RzYWx0KSB7XG5cdFx0XHRcdFx0Y29kZSA9IGB7e3NhbHR9fVxcbiR7Y29kZX1gO1xuXHRcdFx0XHR9XG5cdFx0XHRcdC8vIEdlbmVyYXRlIGVkaXQgc3VtbWFyeSBmb3IgZWRpdFxuXHRcdFx0XHRsZXQgZWRpdHN1bW1hcnk7XG5cdFx0XHRcdGlmIChwYXJhbXMubm9ybWFsaXplZHMubGVuZ3RoID4gMSkge1xuXHRcdFx0XHRcdGVkaXRzdW1tYXJ5ID0gd2luZG93LndnVUxTKCfor7fmsYLlv6vpgJ/liKDpmaTvvIgnLCAn6KuL5rGC5b+r6YCf5Yiq6Zmk77yIJyk7XG5cdFx0XHRcdFx0Zm9yIChjb25zdCBub3JtIG9mIHBhcmFtcy5ub3JtYWxpemVkcykge1xuXHRcdFx0XHRcdFx0aWYgKG5vcm0gIT09ICdkYicpIHtcblx0XHRcdFx0XHRcdFx0ZWRpdHN1bW1hcnkgKz0gYFtbUVc6Q1NEIyR7bm9ybS50b1VwcGVyQ2FzZSgpfXxDU0QgJHtub3JtLnRvVXBwZXJDYXNlKCl9XV3jgIFgO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRlZGl0c3VtbWFyeSA9IGVkaXRzdW1tYXJ5LnNsaWNlKDAsIE1hdGgubWF4KDAsIGVkaXRzdW1tYXJ5Lmxlbmd0aCAtIDEpKTsgLy8gcmVtb3ZlIHRyYWlsaW5nIGNvbW1hXG5cdFx0XHRcdFx0ZWRpdHN1bW1hcnkgKz0gJ++8iSc7XG5cdFx0XHRcdH0gZWxzZSBpZiAocGFyYW1zLm5vcm1hbGl6ZWRzWzBdID09PSAnZGInKSB7XG5cdFx0XHRcdFx0ZWRpdHN1bW1hcnkgPVxuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfor7fmsYJbW1FXOkNTRHzlv6vpgJ/liKDpmaRdXe+8micsICfoq4vmsYJbW1FXOkNTRHzlv6vpgJ/liKrpmaRdXe+8micpICtcblx0XHRcdFx0XHRcdHBhcmFtcy50ZW1wbGF0ZVBhcmFtc1swXVsnMSddO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGVkaXRzdW1tYXJ5ID0gYCR7d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+ivt+axguW/q+mAn+WIoOmZpCcsXG5cdFx0XHRcdFx0XHQn6KuL5rGC5b+r6YCf5Yiq6ZmkJ1xuXHRcdFx0XHRcdCl977yIW1tRVzpDU0QjJHtwYXJhbXMubm9ybWFsaXplZHNbMF0udG9VcHBlckNhc2UoKX18Q1NEICR7cGFyYW1zLm5vcm1hbGl6ZWRzWzBdLnRvVXBwZXJDYXNlKCl9XV3vvIlgO1xuXHRcdFx0XHR9XG5cdFx0XHRcdC8vIEJsYW5rIGF0dGFjayBwYWdlc1xuXHRcdFx0XHRpZiAocGFyYW1zLmJsYW5rKSB7XG5cdFx0XHRcdFx0dGV4dCA9IGNvZGU7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0Ly8gSW5zZXJ0IHRhZyBhZnRlciBzaG9ydCBkZXNjcmlwdGlvbiBvciBhbnkgaGF0bm90ZXNcblx0XHRcdFx0XHRjb25zdCBxaXV3ZW5fcGFnZSA9IG5ldyBNb3JlYml0cy53aWtpdGV4dC5wYWdlKHRleHQpO1xuXHRcdFx0XHRcdHRleHQgPSBxaXV3ZW5fcGFnZS5pbnNlcnRBZnRlclRlbXBsYXRlcyhgJHtjb2RlfVxcbmAsIFR3aW5rbGUuaGF0bm90ZVJlZ2V4KS5nZXRUZXh0KCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0cGFnZW9iai5zZXRQYWdlVGV4dCh0ZXh0KTtcblx0XHRcdFx0cGFnZW9iai5zZXRFZGl0U3VtbWFyeShlZGl0c3VtbWFyeSk7XG5cdFx0XHRcdHBhZ2VvYmouc2V0Q2hhbmdlVGFncyhUd2lua2xlLmNoYW5nZVRhZ3MpO1xuXHRcdFx0XHRwYWdlb2JqLnNldFdhdGNobGlzdChwYXJhbXMud2F0Y2gpO1xuXHRcdFx0XHRwYWdlb2JqLnNhdmUoVHdpbmtsZS5zcGVlZHkuY2FsbGJhY2tzLnVzZXIudGFnQ29tcGxldGUpO1xuXHRcdFx0fSxcblx0XHRcdHRhZ0NvbXBsZXRlOiAocGFnZW9iaikgPT4ge1xuXHRcdFx0XHRjb25zdCBwYXJhbXMgPSBwYWdlb2JqLmdldENhbGxiYWNrUGFyYW1ldGVycygpO1xuXHRcdFx0XHQvLyBOb3RpZmljYXRpb24gdG8gZmlyc3QgY29udHJpYnV0b3Jcblx0XHRcdFx0aWYgKHBhcmFtcy51c2VydGFsaykge1xuXHRcdFx0XHRcdGNvbnN0IGNhbGxiYWNrID0gKHBhZ2VPYmopID0+IHtcblx0XHRcdFx0XHRcdGxldCBpbml0aWFsQ29udHJpYiA9IHBhZ2VPYmouZ2V0Q3JlYXRvcigpO1xuXHRcdFx0XHRcdFx0Ly8gZGlzYWxsb3cgd2FybmluZyB5b3Vyc2VsZlxuXHRcdFx0XHRcdFx0aWYgKGluaXRpYWxDb250cmliID09PSBtdy5jb25maWcuZ2V0KCd3Z1VzZXJOYW1lJykpIHtcblx0XHRcdFx0XHRcdFx0TW9yZWJpdHMuc3RhdHVzLndhcm4oXG5cdFx0XHRcdFx0XHRcdFx0YOaCqO+8iCR7aW5pdGlhbENvbnRyaWJ9JHt3aW5kb3cud2dVTFMoJ++8ieWIm+W7uuS6huivpemhte+8jOi3s+i/h+mAmuefpScsICfvvInlu7rnq4vkuoboqbLpoIHvvIzot7PpgY7pgJrnn6UnKX1gXG5cdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdGluaXRpYWxDb250cmliID0gbnVsbDtcblx0XHRcdFx0XHRcdFx0Ly8gZG9uJ3Qgbm90aWZ5IHVzZXJzIHdoZW4gdGhlaXIgdXNlciB0YWxrIHBhZ2UgaXMgbm9taW5hdGVkXG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKFxuXHRcdFx0XHRcdFx0XHRpbml0aWFsQ29udHJpYiA9PT0gbXcuY29uZmlnLmdldCgnd2dUaXRsZScpICYmXG5cdFx0XHRcdFx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlTnVtYmVyJykgPT09IDNcblx0XHRcdFx0XHRcdCkge1xuXHRcdFx0XHRcdFx0XHRNb3JlYml0cy5zdGF0dXMud2Fybihcblx0XHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0XHQn6YCa55+l6aG16Z2i5Yib5bu66ICF77ya55So5oi35Yib5bu65LqG6Ieq5bex55qE6K6o6K666aG1Jyxcblx0XHRcdFx0XHRcdFx0XHRcdCfpgJrnn6XpoIHpnaLlu7rnq4vogIXvvJrkvb/nlKjogIXlu7rnq4vkuoboh6rlt7HnmoToqI7oq5bpoIEnXG5cdFx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRpbml0aWFsQ29udHJpYiA9IG51bGw7XG5cdFx0XHRcdFx0XHRcdC8vIHF1aWNrIGhhY2sgdG8gcHJldmVudCBleGNlc3NpdmUgdW53YW50ZWQgbm90aWZpY2F0aW9ucy4gU2hvdWxkIGFjdHVhbGx5IGJlIGNvbmZpZ3VyYWJsZSBvbiByZWNpcGllbnQgcGFnZS4uLlxuXHRcdFx0XHRcdFx0fSBlbHNlIGlmIChpbml0aWFsQ29udHJpYiA9PT0gJ0EyMDkzMDY0LWJvdCcgJiYgcGFyYW1zLm5vcm1hbGl6ZWRzWzBdID09PSAnZzE1Jykge1xuXHRcdFx0XHRcdFx0XHRNb3JlYml0cy5zdGF0dXMud2Fybihcblx0XHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0XHQn6YCa55+l6aG16Z2i5Yib5bu66ICF77ya55Sx5py65Zmo5Lq65Yib5bu677yM6Lez6L+H6YCa55+lJyxcblx0XHRcdFx0XHRcdFx0XHRcdCfpgJrnn6XpoIHpnaLlu7rnq4vogIXvvJrnlLHmqZ/lmajkurrlu7rnq4vvvIzot7PpgY7pgJrnn6UnXG5cdFx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRpbml0aWFsQ29udHJpYiA9IG51bGw7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRjb25zdCB0YWxrUGFnZU5hbWUgPSBgVXNlciB0YWxrOiR7aW5pdGlhbENvbnRyaWJ9YDtcblx0XHRcdFx0XHRcdFx0Y29uc3QgdXNlcnRhbGtwYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShcblx0XHRcdFx0XHRcdFx0XHR0YWxrUGFnZU5hbWUsXG5cdFx0XHRcdFx0XHRcdFx0YCR7d2luZG93LndnVUxTKCfpgJrnn6XpobXpnaLliJvlu7rogIXvvIgnLCAn6YCa55+l6aCB6Z2i5bu656uL6ICF77yIJykgKyBpbml0aWFsQ29udHJpYn3vvIlgXG5cdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdGxldCBub3RpZnl0ZXh0O1xuXHRcdFx0XHRcdFx0XHRub3RpZnl0ZXh0ID0gJ1xcbnt7Jy5jb25jYXQoJ3N1YnN0OicsIGBkYi1ub3RpY2V8dGFyZ2V0PSR7TW9yZWJpdHMucGFnZU5hbWVOb3JtfWApO1xuXHRcdFx0XHRcdFx0XHRub3RpZnl0ZXh0ICs9IFwifG5vd2VsY29tZT15ZXMnfX0tLX5+XCIuY29uY2F0KCd+ficpO1xuXHRcdFx0XHRcdFx0XHRsZXQgZWRpdHN1bW1hcnkgPSAn6YCa55+l77yaJztcblx0XHRcdFx0XHRcdFx0aWYgKHBhcmFtcy5ub3JtYWxpemVkcy5pbmNsdWRlcygnZzMnKSkge1xuXHRcdFx0XHRcdFx0XHRcdGVkaXRzdW1tYXJ5ICs9ICfkuIDmlLvlh7vmgKfpobXpnaInO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdC8vIG5vIGFydGljbGUgbmFtZSBpbiBzdW1tYXJ5IGZvciBHMTAgZGVsZXRpb25zXG5cdFx0XHRcdFx0XHRcdFx0ZWRpdHN1bW1hcnkgKz0gYOmhtemdoltbJHtNb3JlYml0cy5wYWdlTmFtZU5vcm19XV1gO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdGVkaXRzdW1tYXJ5ICs9ICflv6vpgJ/liKDpmaTmj5DlkI0nO1xuXHRcdFx0XHRcdFx0XHR1c2VydGFsa3BhZ2Uuc2V0QXBwZW5kVGV4dChub3RpZnl0ZXh0KTtcblx0XHRcdFx0XHRcdFx0dXNlcnRhbGtwYWdlLnNldEVkaXRTdW1tYXJ5KGVkaXRzdW1tYXJ5KTtcblx0XHRcdFx0XHRcdFx0dXNlcnRhbGtwYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdFx0XHRcdFx0dXNlcnRhbGtwYWdlLnNldENyZWF0ZU9wdGlvbigncmVjcmVhdGUnKTtcblx0XHRcdFx0XHRcdFx0dXNlcnRhbGtwYWdlLnNldEZvbGxvd1JlZGlyZWN0KHRydWUsIGZhbHNlKTtcblx0XHRcdFx0XHRcdFx0dXNlcnRhbGtwYWdlLmFwcGVuZCgpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0Ly8gYWRkIHRoaXMgbm9taW5hdGlvbiB0byB0aGUgdXNlcidzIHVzZXJzcGFjZSBsb2csIGlmIHRoZSB1c2VyIGhhcyBlbmFibGVkIGl0XG5cdFx0XHRcdFx0XHRpZiAocGFyYW1zLmxvZ25vbWluYXRpb24pIHtcblx0XHRcdFx0XHRcdFx0VHdpbmtsZS5zcGVlZHkuY2FsbGJhY2tzLnVzZXIuYWRkVG9Mb2cocGFyYW1zLCBpbml0aWFsQ29udHJpYik7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRjb25zdCB0aGlzcGFnZSA9IG5ldyBNb3JlYml0cy53aWtpLnBhZ2UoTW9yZWJpdHMucGFnZU5hbWVOb3JtKTtcblx0XHRcdFx0XHR0aGlzcGFnZS5sb29rdXBDcmVhdGlvbihjYWxsYmFjayk7XG5cdFx0XHRcdFx0Ly8gb3IsIGlmIG5vdCBub3RpZnlpbmcsIGFkZCB0aGlzIG5vbWluYXRpb24gdG8gdGhlIHVzZXIncyB1c2Vyc3BhY2UgbG9nIHdpdGhvdXQgdGhlIGluaXRpYWwgY29udHJpYnV0b3IncyBuYW1lXG5cdFx0XHRcdH0gZWxzZSBpZiAocGFyYW1zLmxvZ25vbWluYXRpb24pIHtcblx0XHRcdFx0XHRUd2lua2xlLnNwZWVkeS5jYWxsYmFja3MudXNlci5hZGRUb0xvZyhwYXJhbXMsIG51bGwpO1xuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXHRcdFx0Ly8gbm90ZTogdGhpcyBjb2RlIGlzIGFsc28gaW52b2tlZCBmcm9tIHR3aW5rbGVpbWFnZVxuXHRcdFx0Ly8gdGhlIHBhcmFtcyB1c2VkIGFyZTpcblx0XHRcdC8vICAgZm9yIENTRDogcGFyYW1zLnZhbHVlcywgcGFyYW1zLm5vcm1hbGl6ZWRzICAobm90ZTogbm9ybWFsaXplZHMgaXMgYW4gYXJyYXkpXG5cdFx0XHQvLyAgIGZvciBESTogcGFyYW1zLmZyb21ESSA9IHRydWUsIHBhcmFtcy50ZW1wbGF0ZW5hbWUsIHBhcmFtcy5ub3JtYWxpemVkICAobm90ZTogbm9ybWFsaXplZCBpcyBhIHN0cmluZylcblx0XHRcdGFkZFRvTG9nOiAocGFyYW1zLCBpbml0aWFsQ29udHJpYikgPT4ge1xuXHRcdFx0XHRjb25zdCB1c2wgPSBuZXcgTW9yZWJpdHMudXNlcnNwYWNlTG9nZ2VyKFR3aW5rbGUuZ2V0UHJlZignc3BlZWR5TG9nUGFnZU5hbWUnKSk7XG5cdFx0XHRcdHVzbC5pbml0aWFsVGV4dCA9IGDov5nmmK/or6XnlKjmiLfkvb/nlKhbW0g6VFd8VHdpbmtsZV1d55qE6YCf5Yig5qih5Z2X5YGa5Ye655qEW1tRVzpDU0R85b+r6YCf5Yig6ZmkXV3mj5DlkI3liJfooajjgIJcXG5cXG7oi6XmgqjkuI3lho3mg7Pkv53nlZnmraTml6Xlv5fvvIzor7flnKhbWyR7VHdpbmtsZS5nZXRQcmVmKFxuXHRcdFx0XHRcdCdjb25maWdQYWdlJ1xuXHRcdFx0XHQpfXzlj4LmlbDorr7nva5dXeS4reWFs+aOie+8jOW5tuS9v+eUqFtbUVc6Q1NEI08xfENTRCBPMV1d5o+Q5Lqk5b+r6YCf5Yig6Zmk44CCJHtcblx0XHRcdFx0XHRNb3JlYml0cy51c2VySXNTeXNvcCA/ICdcXG5cXG7mraTml6Xlv5flubbkuI3orrDlvZXnlKhUd2lua2xl55u05o6l5omn6KGM55qE5Yig6Zmk44CCJyA6ICcnXG5cdFx0XHRcdH1gO1xuXHRcdFx0XHRsZXQgYXBwZW5kVGV4dCA9IGAjIFtbOiR7TW9yZWJpdHMucGFnZU5hbWVOb3JtfV1d77yaYDtcblx0XHRcdFx0aWYgKHBhcmFtcy5mcm9tREkpIHtcblx0XHRcdFx0XHRhcHBlbmRUZXh0ICs9IGDlm77niYhbW1FXOkNTRCMke3BhcmFtcy5ub3JtYWxpemVkLnRvVXBwZXJDYXNlKCl9fENTRCAke3BhcmFtcy5ub3JtYWxpemVkLnRvVXBwZXJDYXNlKCl9XV3vvIh7e3RsfCR7XG5cdFx0XHRcdFx0XHRwYXJhbXMudGVtcGxhdGVuYW1lXG5cdFx0XHRcdFx0fX1977yJYDtcblx0XHRcdFx0fSBlbHNlIGlmIChwYXJhbXMubm9ybWFsaXplZHMubGVuZ3RoID4gMSkge1xuXHRcdFx0XHRcdGFwcGVuZFRleHQgKz0gJ+WkmuS4queQhueUse+8iCc7XG5cdFx0XHRcdFx0Zm9yIChjb25zdCBub3JtIG9mIHBhcmFtcy5ub3JtYWxpemVkcykge1xuXHRcdFx0XHRcdFx0YXBwZW5kVGV4dCArPSBgW1tRVzpDU0QjJHtub3JtLnRvVXBwZXJDYXNlKCl9fCR7bm9ybS50b1VwcGVyQ2FzZSgpfV1d44CBYDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0YXBwZW5kVGV4dCA9IGFwcGVuZFRleHQuc2xpY2UoMCwgTWF0aC5tYXgoMCwgYXBwZW5kVGV4dC5sZW5ndGggLSAxKSk7IC8vIHJlbW92ZSB0cmFpbGluZyBjb21tYVxuXHRcdFx0XHRcdGFwcGVuZFRleHQgKz0gJ++8iSc7XG5cdFx0XHRcdH0gZWxzZSBpZiAocGFyYW1zLm5vcm1hbGl6ZWRzWzBdID09PSAnZGInKSB7XG5cdFx0XHRcdFx0YXBwZW5kVGV4dCArPSAn6Ieq5a6a5LmJ55CG55SxJztcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRhcHBlbmRUZXh0ICs9IGBbW1FXOkNTRCMke3BhcmFtcy5ub3JtYWxpemVkc1swXS50b1VwcGVyQ2FzZSgpfXxDU0QgJHtwYXJhbXMubm9ybWFsaXplZHNbMF0udG9VcHBlckNhc2UoKX1dXWA7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHBhcmFtcy5yZXF1ZXN0c2FsdCkge1xuXHRcdFx0XHRcdGFwcGVuZFRleHQgKz0gd2luZG93LndnVUxTKCfvvJvor7fmsYLnmb3nurjkv53miqQnLCAn77yb6KuL5rGC55m957SZ5L+d6K23Jyk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKGluaXRpYWxDb250cmliKSB7XG5cdFx0XHRcdFx0YXBwZW5kVGV4dCArPSBg77yb6YCa55+le3t1c2VyfCR7aW5pdGlhbENvbnRyaWJ9fX1gO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGFwcGVuZFRleHQgKz0gJyB+ficuY29uY2F0KCd+JywgJ35+XFxuJyk7XG5cdFx0XHRcdHVzbC5jaGFuZ2VUYWdzID0gVHdpbmtsZS5jaGFuZ2VUYWdzO1xuXHRcdFx0XHR1c2wubG9nKFxuXHRcdFx0XHRcdGFwcGVuZFRleHQsXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKCforrDlvZXlr7lbWycsICfoqJjpjITlsI1bWycpICtcblx0XHRcdFx0XHRcdE1vcmViaXRzLnBhZ2VOYW1lTm9ybSArXG5cdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ11d55qE5b+r6YCf5Yig6Zmk5o+Q5ZCNJywgJ11d55qE5b+r6YCf5Yiq6Zmk5o+Q5ZCNJylcblx0XHRcdFx0KTtcblx0XHRcdH0sXG5cdFx0fSxcblx0fTtcblx0Ly8gdmFsaWRhdGUgc3ViZ3JvdXBzIGluIHRoZSBmb3JtIHBhc3NlZCBpbnRvIHRoZSBzcGVlZHkgZGVsZXRpb24gdGFnXG5cdFR3aW5rbGUuc3BlZWR5LmdldFBhcmFtZXRlcnMgPSAoZm9ybSwgdmFsdWVzKSA9PiB7XG5cdFx0bGV0IHBhcmFtZXRlcnMgPSBbXTtcblx0XHRmb3IgKGNvbnN0IHZhbHVlIG9mIHZhbHVlcykge1xuXHRcdFx0Y29uc3QgY3VycmVudFBhcmFtcyA9IFtdO1xuXHRcdFx0bGV0IHJlZGltYWdlO1xuXHRcdFx0c3dpdGNoICh2YWx1ZSkge1xuXHRcdFx0XHRjYXNlICdyZWFzb24nOlxuXHRcdFx0XHRcdGlmIChmb3JtWydjc2QucmVhc29uXzEnXSkge1xuXHRcdFx0XHRcdFx0Y29uc3QgZGJyYXRpb25hbGUgPSBmb3JtWydjc2QucmVhc29uXzEnXS52YWx1ZTtcblx0XHRcdFx0XHRcdGlmICghZGJyYXRpb25hbGUgfHwgIWRicmF0aW9uYWxlLnRyaW0oKSkge1xuXHRcdFx0XHRcdFx0XHR2b2lkIG13Lm5vdGlmeSh3aW5kb3cud2dVTFMoJ+iHquWumuS5ieeQhueUse+8muivt+aMh+WumueQhueUseOAgicsICfoh6roqILnkIbnlLHvvJroq4vmjIflrprnkIbnlLHjgIInKSwge1xuXHRcdFx0XHRcdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0XHRcdFx0XHR0YWc6ICd0d2lua2xlc3BlZWR5Jyxcblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRcdHBhcmFtZXRlcnMgPSBudWxsO1xuXHRcdFx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGN1cnJlbnRQYXJhbXNbJzEnXSA9IGRicmF0aW9uYWxlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAnYTInOlxuXHRcdFx0XHRcdGlmIChmb3JtWydjc2QuYTJfcGFnZW5hbWUnXSkge1xuXHRcdFx0XHRcdFx0Y29uc3Qgb3RoZXJwYWdlID0gZm9ybVsnY3NkLmEyX3BhZ2VuYW1lJ10udmFsdWU7XG5cdFx0XHRcdFx0XHRpZiAoIW90aGVycGFnZSB8fCAhb3RoZXJwYWdlLnRyaW0oKSkge1xuXHRcdFx0XHRcdFx0XHR2b2lkIG13Lm5vdGlmeShcblx0XHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ0NTRCBBMu+8muivt+aPkOS+m+eOsOacieadoeebrueahOWQjeensOOAgicsICdDU0QgQTLvvJroq4vmj5Dkvpvnj77mnInmop3nm67nmoTlkI3nqLHjgIInKSxcblx0XHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0XHR0eXBlOiAnd2FybicsXG5cdFx0XHRcdFx0XHRcdFx0XHR0YWc6ICd0d2lua2xlc3BlZWR5Jyxcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdHBhcmFtZXRlcnMgPSBudWxsO1xuXHRcdFx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGN1cnJlbnRQYXJhbXMucGFnZW5hbWUgPSBvdGhlcnBhZ2U7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlICdnNCc6XG5cdFx0XHRcdFx0aWYgKGZvcm1bJ2NzZC5nNF9wYWdlbmFtZSddKSB7XG5cdFx0XHRcdFx0XHRjb25zdCBwYWdlbmFtZSA9IGZvcm1bJ2NzZC5nNF9wYWdlbmFtZSddLnZhbHVlO1xuXHRcdFx0XHRcdFx0aWYgKCFwYWdlbmFtZSB8fCAhcGFnZW5hbWUudHJpbSgpKSB7XG5cdFx0XHRcdFx0XHRcdHZvaWQgbXcubm90aWZ5KHdpbmRvdy53Z1VMUygnQ1NEIEc077ya6K+35o+Q5L6b6aG16Z2i5ZCN56ew44CCJywgJ0NTRCBHNO+8muiri+aPkOS+m+mggemdouWQjeeoseOAgicpLCB7XG5cdFx0XHRcdFx0XHRcdFx0dHlwZTogJ3dhcm4nLFxuXHRcdFx0XHRcdFx0XHRcdHRhZzogJ3R3aW5rbGVzcGVlZHknLFxuXHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0cGFyYW1ldGVycyA9IG51bGw7XG5cdFx0XHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0Y3VycmVudFBhcmFtcy5wYWdlbmFtZSA9IHBhZ2VuYW1lO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAnZjInOlxuXHRcdFx0XHRcdGlmIChmb3JtWydjc2QuZjJfZmlsZW5hbWUnXSkge1xuXHRcdFx0XHRcdFx0cmVkaW1hZ2UgPSBmb3JtWydjc2QuZjJfZmlsZW5hbWUnXS52YWx1ZTtcblx0XHRcdFx0XHRcdGlmICghcmVkaW1hZ2UgfHwgIXJlZGltYWdlLnRyaW0oKSkge1xuXHRcdFx0XHRcdFx0XHR2b2lkIG13Lm5vdGlmeShcblx0XHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ0NTRCBGMu+8muivt+aPkOS+m+WPpuS4gOaWh+S7tueahOWQjeensOOAgicsICdDU0QgRjLvvJroq4vmj5Dkvpvlj6bkuIDmqpTmoYjnmoTlkI3nqLHjgIInKSxcblx0XHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0XHR0eXBlOiAnd2FybicsXG5cdFx0XHRcdFx0XHRcdFx0XHR0YWc6ICd0d2lua2xlc3BlZWR5Jyxcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdHBhcmFtZXRlcnMgPSBudWxsO1xuXHRcdFx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGN1cnJlbnRQYXJhbXMuZmlsZW5hbWUgPSByZWRpbWFnZS5yZXBsYWNlKFxuXHRcdFx0XHRcdFx0XHRuZXcgUmVnRXhwKGBeXFxcXHMqJHtNb3JlYml0cy5uYW1lc3BhY2VSZWdleCg2KX06YCwgJ2knKSxcblx0XHRcdFx0XHRcdFx0Jydcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlICdyMSc6XG5cdFx0XHRcdFx0aWYgKGZvcm1bJ2NzZC5yMV90eXBlJ10pIHtcblx0XHRcdFx0XHRcdGNvbnN0IHJlZGlydHlwZSA9IGZvcm1bJ2NzZC5yMV90eXBlJ10udmFsdWU7XG5cdFx0XHRcdFx0XHRpZiAoIXJlZGlydHlwZSkge1xuXHRcdFx0XHRcdFx0XHR2b2lkIG13Lm5vdGlmeSh3aW5kb3cud2dVTFMoJ0NTRCBSMe+8muivt+mAieaLqemAgueUqOexu+Wei+OAgicsICdDU0QgUjHvvJroq4vpgbjmk4fpgannlKjpoZ7liKXjgIInKSwge1xuXHRcdFx0XHRcdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0XHRcdFx0XHR0YWc6ICd0d2lua2xlc3BlZWR5Jyxcblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRcdHBhcmFtZXRlcnMgPSBudWxsO1xuXHRcdFx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGN1cnJlbnRQYXJhbXNbJzEnXSA9IHJlZGlydHlwZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgJ3IyJzpcblx0XHRcdFx0XHRpZiAoZm9ybVsnY3NkLnIyX3R5cGUnXSkge1xuXHRcdFx0XHRcdFx0Y29uc3QgcmVkaXJ0eXBlID0gZm9ybVsnY3NkLnIyX3R5cGUnXS52YWx1ZTtcblx0XHRcdFx0XHRcdGlmICghcmVkaXJ0eXBlKSB7XG5cdFx0XHRcdFx0XHRcdHZvaWQgbXcubm90aWZ5KHdpbmRvdy53Z1VMUygnQ1NEIFIy77ya6K+36YCJ5oup6YCC55So57G75Z6L44CCJywgJ0NTRCBSMu+8muiri+mBuOaTh+mBqeeUqOmhnuWIpeOAgicpLCB7XG5cdFx0XHRcdFx0XHRcdFx0dHlwZTogJ3dhcm4nLFxuXHRcdFx0XHRcdFx0XHRcdHRhZzogJ3R3aW5rbGVzcGVlZHknLFxuXHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0cGFyYW1ldGVycyA9IG51bGw7XG5cdFx0XHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0Y3VycmVudFBhcmFtc1snMSddID0gcmVkaXJ0eXBlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdHBhcmFtZXRlcnNbcGFyYW1ldGVycy5sZW5ndGhdID0gY3VycmVudFBhcmFtcztcblx0XHR9XG5cdFx0cmV0dXJuIHBhcmFtZXRlcnM7XG5cdH07XG5cdC8vIEZ1bmN0aW9uIGZvciBwcm9jZXNzaW5nIHRhbGsgcGFnZSBub3RpZmljYXRpb24gdGVtcGxhdGUgcGFyYW1ldGVyc1xuXHRUd2lua2xlLnNwZWVkeS5nZXRVc2VyVGFsa1BhcmFtZXRlcnMgPSAobm9ybWFsaXplZCkgPT4ge1xuXHRcdGNvbnN0IHV0cGFyYW1zID0gW107XG5cdFx0c3dpdGNoIChub3JtYWxpemVkKSB7XG5cdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRicmVhaztcblx0XHR9XG5cdFx0cmV0dXJuIHV0cGFyYW1zO1xuXHR9O1xuXHRUd2lua2xlLnNwZWVkeS5yZXNvbHZlQ3NkVmFsdWVzID0gKGUpID0+IHtcblx0XHRjb25zdCB2YWx1ZXMgPSAoZS50YXJnZXQuZm9ybSA/PyBlLnRhcmdldCkuZ2V0Q2hlY2tlZCgnY3NkJyk7XG5cdFx0aWYgKHZhbHVlcy5sZW5ndGggPT09IDApIHtcblx0XHRcdHZvaWQgbXcubm90aWZ5KHdpbmRvdy53Z1VMUygn6K+36YCJ5oup5LiA5Liq55CG5o2u77yBJywgJ+iri+mBuOaTh+S4gOWAi+eQhuaTmu+8gScpLCB7XG5cdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0dGFnOiAndHdpbmtsZXNwZWVkeScsXG5cdFx0XHR9KTtcblx0XHRcdHJldHVybiBudWxsO1xuXHRcdH1cblx0XHRyZXR1cm4gdmFsdWVzO1xuXHR9O1xuXHRUd2lua2xlLnNwZWVkeS5jYWxsYmFjay5ldmFsdWF0ZVN5c29wID0gKGUpID0+IHtcblx0XHRjb25zdCBmb3JtID0gZS50YXJnZXQuZm9ybSA/PyBlLnRhcmdldDtcblx0XHRpZiAoZS50YXJnZXQudHlwZSA9PT0gJ2NoZWNrYm94JyB8fCBlLnRhcmdldC50eXBlID09PSAndGV4dCcgfHwgZS50YXJnZXQudHlwZSA9PT0gJ3NlbGVjdCcpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0Y29uc3Qge3RhZ19vbmx5fSA9IGZvcm07XG5cdFx0aWYgKHRhZ19vbmx5ICYmIHRhZ19vbmx5LmNoZWNrZWQpIHtcblx0XHRcdFR3aW5rbGUuc3BlZWR5LmNhbGxiYWNrLmV2YWx1YXRlVXNlcihlKTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0Y29uc3QgdmFsdWVzID0gVHdpbmtsZS5zcGVlZHkucmVzb2x2ZUNzZFZhbHVlcyhlKTtcblx0XHRpZiAoIXZhbHVlcykge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRjb25zdCBub3JtYWxpemVkcyA9IHZhbHVlcy5tYXAoKHZhbHVlKSA9PiB7XG5cdFx0XHRyZXR1cm4gVHdpbmtsZS5zcGVlZHkubm9ybWFsaXplSGFzaFt2YWx1ZV07XG5cdFx0fSk7XG5cdFx0Ly8gYW5hbHlzZSBlYWNoIGNyaXRlcmlvbiB0byBkZXRlcm1pbmUgd2hldGhlciB0byB3YXRjaCB0aGUgcGFnZSwgcHJvbXB0IGZvciBzdW1tYXJ5LCBvciBvcGVuIHVzZXIgdGFsayBwYWdlXG5cdFx0bGV0IHdhdGNoUGFnZTtcblx0XHRsZXQgcHJvbXB0Rm9yU3VtbWFyeTtcblx0XHRmb3IgKGNvbnN0IG5vcm0gb2Ygbm9ybWFsaXplZHMpIHtcblx0XHRcdGlmIChUd2lua2xlLmdldFByZWYoJ3dhdGNoU3BlZWR5UGFnZXMnKS5pbmNsdWRlcyhub3JtKSkge1xuXHRcdFx0XHR3YXRjaFBhZ2UgPSBUd2lua2xlLmdldFByZWYoJ3dhdGNoU3BlZWR5RXhwaXJ5Jyk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoVHdpbmtsZS5nZXRQcmVmKCdwcm9tcHRGb3JTcGVlZHlEZWxldGlvblN1bW1hcnknKS5pbmNsdWRlcyhub3JtKSkge1xuXHRcdFx0XHRwcm9tcHRGb3JTdW1tYXJ5ID0gdHJ1ZTtcblx0XHRcdH1cblx0XHR9XG5cdFx0Y29uc3QgcGFyYW1zID0ge1xuXHRcdFx0dmFsdWVzLFxuXHRcdFx0bm9ybWFsaXplZHMsXG5cdFx0XHR3YXRjaDogd2F0Y2hQYWdlLFxuXHRcdFx0ZGVsZXRlVGFsa1BhZ2U6IGZvcm0udGFsa3BhZ2UgJiYgZm9ybS50YWxrcGFnZS5jaGVja2VkLFxuXHRcdFx0ZGVsZXRlUmVkaXJlY3RzOiBmb3JtLnJlZGlyZWN0cy5jaGVja2VkLFxuXHRcdFx0b3BlblVzZXJUYWxrOiBmb3JtLm9wZW51c2VydGFsay5jaGVja2VkLFxuXHRcdFx0cHJvbXB0Rm9yU3VtbWFyeSxcblx0XHRcdHRlbXBsYXRlUGFyYW1zOiBUd2lua2xlLnNwZWVkeS5nZXRQYXJhbWV0ZXJzKGZvcm0sIHZhbHVlcyksXG5cdFx0fTtcblx0XHRpZiAoIXBhcmFtcy50ZW1wbGF0ZVBhcmFtcykge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRNb3JlYml0cy5zaW1wbGVXaW5kb3cuc2V0QnV0dG9uc0VuYWJsZWQoZmFsc2UpO1xuXHRcdE1vcmViaXRzLnN0YXR1cy5pbml0KGZvcm0pO1xuXHRcdFR3aW5rbGUuc3BlZWR5LmNhbGxiYWNrcy5zeXNvcC5tYWluKHBhcmFtcyk7XG5cdH07XG5cdFR3aW5rbGUuc3BlZWR5LmNhbGxiYWNrLmV2YWx1YXRlVXNlciA9IChlKSA9PiB7XG5cdFx0Y29uc3QgZm9ybSA9IGUudGFyZ2V0LmZvcm0gPz8gZS50YXJnZXQ7XG5cdFx0aWYgKGUudGFyZ2V0LnR5cGUgPT09ICdjaGVja2JveCcgfHwgZS50YXJnZXQudHlwZSA9PT0gJ3RleHQnIHx8IGUudGFyZ2V0LnR5cGUgPT09ICdzZWxlY3QnKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdGNvbnN0IHZhbHVlcyA9IFR3aW5rbGUuc3BlZWR5LnJlc29sdmVDc2RWYWx1ZXMoZSk7XG5cdFx0aWYgKCF2YWx1ZXMpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0Ly8gY29uc3QgbXVsdGlwbGUgPSBmb3JtLm11bHRpcGxlLmNoZWNrZWQ7XG5cdFx0Y29uc3Qgbm9ybWFsaXplZHMgPSBbXTtcblx0XHRmb3IgKGNvbnN0IHZhbHVlIG9mIHZhbHVlcykge1xuXHRcdFx0Y29uc3Qgbm9ybSA9IFR3aW5rbGUuc3BlZWR5Lm5vcm1hbGl6ZUhhc2hbdmFsdWVdO1xuXHRcdFx0bm9ybWFsaXplZHNbbm9ybWFsaXplZHMubGVuZ3RoXSA9IG5vcm07XG5cdFx0fVxuXHRcdC8vIGFuYWx5c2UgZWFjaCBjcml0ZXJpb24gdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdG8gd2F0Y2ggdGhlIHBhZ2Uvbm90aWZ5IHRoZSBjcmVhdG9yXG5cdFx0bGV0IHdhdGNoUGFnZSA9IGZhbHNlO1xuXHRcdGZvciAoY29uc3Qgbm9ybSBvZiBub3JtYWxpemVkcykge1xuXHRcdFx0aWYgKFR3aW5rbGUuZ2V0UHJlZignd2F0Y2hTcGVlZHlQYWdlcycpLmluY2x1ZGVzKG5vcm0pKSB7XG5cdFx0XHRcdHdhdGNoUGFnZSA9IFR3aW5rbGUuZ2V0UHJlZignd2F0Y2hTcGVlZHlFeHBpcnknKTtcblx0XHRcdFx0Y29udGludWU7IC8vIGJyZWFrXG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0bGV0IG5vdGlmeXVzZXIgPSBmYWxzZTtcblx0XHRpZiAoZm9ybS5ub3RpZnkuY2hlY2tlZCkge1xuXHRcdFx0Zm9yIChjb25zdCBub3JtIG9mIG5vcm1hbGl6ZWRzKSB7XG5cdFx0XHRcdGlmIChUd2lua2xlLmdldFByZWYoJ25vdGlmeVVzZXJPblNwZWVkeURlbGV0aW9uTm9taW5hdGlvbicpLmluY2x1ZGVzKG5vcm0pKSB7XG5cdFx0XHRcdFx0bm90aWZ5dXNlciA9IHRydWU7XG5cdFx0XHRcdFx0Y29udGludWU7IC8vIGJyZWFrXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRsZXQgY3NkbG9nID0gZmFsc2U7XG5cdFx0aWYgKFR3aW5rbGUuZ2V0UHJlZignbG9nU3BlZWR5Tm9taW5hdGlvbnMnKSkge1xuXHRcdFx0Zm9yIChjb25zdCBub3JtIG9mIG5vcm1hbGl6ZWRzKSB7XG5cdFx0XHRcdGlmICghVHdpbmtsZS5nZXRQcmVmKCdub0xvZ09uU3BlZWR5Tm9taW5hdGlvbicpLmluY2x1ZGVzKG5vcm0pKSB7XG5cdFx0XHRcdFx0Y3NkbG9nID0gdHJ1ZTtcblx0XHRcdFx0XHRjb250aW51ZTsgLy8gYnJlYWtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGNvbnN0IHBhcmFtcyA9IHtcblx0XHRcdHZhbHVlcyxcblx0XHRcdG5vcm1hbGl6ZWRzLFxuXHRcdFx0d2F0Y2g6IHdhdGNoUGFnZSxcblx0XHRcdHVzZXJ0YWxrOiBub3RpZnl1c2VyLFxuXHRcdFx0bG9nbm9taW5hdGlvbjogY3NkbG9nLFxuXHRcdFx0Ymxhbms6IGZvcm0uYmxhbmsuY2hlY2tlZCxcblx0XHRcdHJlcXVlc3RzYWx0OiBmb3JtLnNhbHRpbmcuY2hlY2tlZCxcblx0XHRcdHRlbXBsYXRlUGFyYW1zOiBUd2lua2xlLnNwZWVkeS5nZXRQYXJhbWV0ZXJzKGZvcm0sIHZhbHVlcyksXG5cdFx0fTtcblx0XHRpZiAoIXBhcmFtcy50ZW1wbGF0ZVBhcmFtcykge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRNb3JlYml0cy5zaW1wbGVXaW5kb3cuc2V0QnV0dG9uc0VuYWJsZWQoZmFsc2UpO1xuXHRcdE1vcmViaXRzLnN0YXR1cy5pbml0KGZvcm0pO1xuXHRcdE1vcmViaXRzLndpa2kuYWN0aW9uQ29tcGxldGVkLnJlZGlyZWN0ID0gbXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpO1xuXHRcdE1vcmViaXRzLndpa2kuYWN0aW9uQ29tcGxldGVkLm5vdGljZSA9IHdpbmRvdy53Z1VMUygn5qCH6K6w5a6M5oiQJywgJ+aomeiomOWujOaIkCcpO1xuXHRcdGNvbnN0IHFpdXdlbl9wYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShtdy5jb25maWcuZ2V0KCd3Z1BhZ2VOYW1lJyksIHdpbmRvdy53Z1VMUygn5qCH6K6w6aG16Z2iJywgJ+aomeiomOmggemdoicpKTtcblx0XHRxaXV3ZW5fcGFnZS5zZXRDYWxsYmFja1BhcmFtZXRlcnMocGFyYW1zKTtcblx0XHRxaXV3ZW5fcGFnZS5sb2FkKFR3aW5rbGUuc3BlZWR5LmNhbGxiYWNrcy51c2VyLm1haW4pO1xuXHR9O1xuXHRUd2lua2xlLmFkZEluaXRDYWxsYmFjayhUd2lua2xlLnNwZWVkeSwgJ3NwZWVkeScpO1xufSkoalF1ZXJ5KTtcblxuZXhwb3J0IHt9O1xuIiwgIi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXRzLWNvbW1lbnRcbi8vIEB0cy1ub2NoZWNrXG4vKiEgVHdpbmtsZS5qcyAtIHR3aW5rbGVjb3B5dmlvLmpzICovXG4oZnVuY3Rpb24gdHdpbmtsZWNvcHl2aW8oKSB7XG5cdC8qKlxuXHQgKiB0d2lua2xlY29weXZpby5qczogQ29weXZpbyBtb2R1bGVcblx0ICogTW9kZSBvZiBpbnZvY2F0aW9uOlx0VGFiIChcIkNvcHl2aW9cIilcblx0ICogQWN0aXZlIG9uOiBFeGlzdGluZywgbm9uLXNwZWNpYWwgcGFnZXMsIGV4Y2VwdCBmb3IgZmlsZSBwYWdlc1xuXHQgKiB3aXRoIG5vIGxvY2FsIGZpbGUgd2hpY2ggYXJlIG5vdCByZWRpcmVjdHNcblx0ICogQ29uZmlnIGRpcmVjdGl2ZXMgaW46ICBUd2lua2xlQ29uZmlnXG5cdCAqL1xuXHRUd2lua2xlLmNvcHl2aW8gPSAoKSA9PiB7XG5cdFx0Ly8gRGlzYWJsZSBvbjpcblx0XHQvLyAqIHNwZWNpYWwgcGFnZXNcblx0XHQvLyAqIG5vbi1leGlzdGVudCBwYWdlc1xuXHRcdC8vICogbm9uLWxvY2FsIGZpbGVzLCB3aGV0aGVyIHRoZXJlIGlzIGEgbG9jYWwgcGFnZSBvciBub3QgKHVubmVlZGVkIGxvY2FsIHBhZ2VzIG9mIG5vbi1sb2NhbCBmaWxlcyBhcmUgZWxpZ2libGUgZm9yIENTRCBGMilcblx0XHQvLyAqIGZpbGUgcGFnZXMgd2l0aG91dCBhY3R1YWwgZmlsZXMgKHRoZXNlIGFyZSBlbGlnaWJsZSBmb3IgQ1NEIEc4KVxuXHRcdGlmIChcblx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlTnVtYmVyJykgPCAwIHx8XG5cdFx0XHQhbXcuY29uZmlnLmdldCgnd2dBcnRpY2xlSWQnKSB8fFxuXHRcdFx0KG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlTnVtYmVyJykgPT09IDYgJiZcblx0XHRcdFx0KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtdy1zaGFyZWR1cGxvYWQnKSB8fFxuXHRcdFx0XHRcdCghZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI213LWltYWdlcGFnZS1zZWN0aW9uLWZpbGVoaXN0b3J5JykgJiYgIU1vcmViaXRzLmlzUGFnZVJlZGlyZWN0KCkpKSlcblx0XHQpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0VHdpbmtsZS5hZGRQb3J0bGV0TGluayhcblx0XHRcdFR3aW5rbGUuY29weXZpby5jYWxsYmFjayxcblx0XHRcdHdpbmRvdy53Z1VMUygn5L615p2DJywgJ+S+teasiicpLFxuXHRcdFx0J3R3LWNvcHl2aW8nLFxuXHRcdFx0d2luZG93LndnVUxTKCfmj5DmiqXkvrXmnYPpobXpnaInLCAn5o+Q5aCx5L615qyK6aCB6Z2iJyksXG5cdFx0XHQnJ1xuXHRcdCk7XG5cdH07XG5cdFR3aW5rbGUuY29weXZpby5jYWxsYmFjayA9ICgpID0+IHtcblx0XHRjb25zdCBXaW5kb3cgPSBuZXcgTW9yZWJpdHMuc2ltcGxlV2luZG93KDYwMCwgMzUwKTtcblx0XHRXaW5kb3cuc2V0VGl0bGUod2luZG93LndnVUxTKCfmj5DmiqXkvrXmnYPpobXpnaInLCAn5o+Q5aCx5L615qyK6aCB6Z2iJykpO1xuXHRcdFdpbmRvdy5zZXRTY3JpcHROYW1lKCdUd2lua2xlJyk7XG5cdFx0V2luZG93LmFkZEZvb3Rlckxpbmsod2luZG93LndnVUxTKCfkvrXmnYPorr7nva4nLCAn5L615qyK6Kit5a6aJyksICdIOlRXL1BSRUYjY29weXZpbycpO1xuXHRcdFdpbmRvdy5hZGRGb290ZXJMaW5rKHdpbmRvdy53Z1VMUygnVHdpbmtsZeW4ruWKqScsICdUd2lua2xl6Kqq5piOJyksICdIOlRXL0RPQyNjb3B5dmlvJyk7XG5cdFx0Y29uc3QgZm9ybSA9IG5ldyBNb3JlYml0cy5xdWlja0Zvcm0oVHdpbmtsZS5jb3B5dmlvLmNhbGxiYWNrLmV2YWx1YXRlKTtcblx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAndGV4dGFyZWEnLFxuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5L615p2D5p2l5rqQ77yaJywgJ+S+teasiuS+hua6kO+8micpLFxuXHRcdFx0bmFtZTogJ3NvdXJjZScsXG5cdFx0fSk7XG5cdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdGxpc3Q6IFtcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQnQ1NEIEc0OiDmm77nu4/moLnmja7kvrXmnYPlrqHmoLjliKDpmaTlkI7lj4jph43mlrDliJvlu7rnmoTlhoXlrrknLFxuXHRcdFx0XHRcdFx0J0NTRCBHNDog5pu+57aT5qC55pOa5L615qyK5a+p5qC45Yiq6Zmk5b6M5Y+I6YeN5paw5bu656uL55qE5YWn5a65J1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0dmFsdWU6ICdnNCcsXG5cdFx0XHRcdFx0bmFtZTogJ2c0Jyxcblx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoJ+WQjOaXtuS7pUc05YeG5YiZ5o+Q5oql5b+r6YCf5Yig6ZmkJywgJ+WQjOaZguS7pUc05rqW5YmH5o+Q5aCx5b+r6YCf5Yiq6ZmkJyksXG5cdFx0XHRcdFx0c3ViZ3JvdXA6IFtcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0bmFtZTogJ2c0X3BhZ2VuYW1lJyxcblx0XHRcdFx0XHRcdFx0dHlwZTogJ2lucHV0Jyxcblx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5YmN5qyh5Yig6Zmk55qE6aG16Z2i5ZCN56ewJywgJ+WJjeasoeWIqumZpOeahOmggemdouWQjeeosScpLFxuXHRcdFx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+mAieWhq++8jOiLpeWJjeasoeWIoOmZpOeahOmhtemdouWQjeensOS4jeWQjO+8jOivt+aPkOS+mycsXG5cdFx0XHRcdFx0XHRcdFx0J+mBuOWhq++8jOiLpeWJjeasoeWIqumZpOeahOmggemdouWQjeeoseS4jeWQjO+8jOiri+aPkOS+mydcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+mAmuefpemhtemdouWIm+W7uuiAhScsICfpgJrnn6XpoIHpnaLlu7rnq4vogIUnKSxcblx0XHRcdFx0XHR2YWx1ZTogJ25vdGlmeScsXG5cdFx0XHRcdFx0bmFtZTogJ25vdGlmeScsXG5cdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+WcqOmhtemdouWIm+W7uuiAheiuqOiuuumhteS4iuaUvue9ruS4gOmAmuefpeaooeadv+OAgicsXG5cdFx0XHRcdFx0XHQn5Zyo6aCB6Z2i5bu656uL6ICF6KiO6KuW6aCB5LiK5pS+572u5LiA6YCa55+l5qih5p2/44CCJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0Y2hlY2tlZDogdHJ1ZSxcblx0XHRcdFx0fSxcblx0XHRcdF0sXG5cdFx0fSk7XG5cdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ3N1Ym1pdCcsXG5cdFx0fSk7XG5cdFx0Y29uc3QgcmVzdWx0ID0gZm9ybS5yZW5kZXIoKTtcblx0XHRXaW5kb3cuc2V0Q29udGVudChyZXN1bHQpO1xuXHRcdFdpbmRvdy5kaXNwbGF5KCk7XG5cdH07XG5cdFR3aW5rbGUuY29weXZpby5jYWxsYmFja3MgPSB7XG5cdFx0dHJ5VGFnZ2luZzogKHBhZ2VvYmopID0+IHtcblx0XHRcdC8vIOWFiOWwneivleagh+iusOmhtemdou+8jOiLpeWPkeeOsOW3sue7j+agh+iusOWImeWBnOatouaPkOaKpVxuXHRcdFx0Y29uc3QgdGV4dCA9IHBhZ2VvYmouZ2V0UGFnZVRleHQoKTtcblx0XHRcdGlmICh0ZXh0LmluY2x1ZGVzKCd7e0NvcHl2aW98JykpIHtcblx0XHRcdFx0TW9yZWJpdHMuc3RhdHVzLmVycm9yKFxuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn6ZSZ6K+vJywgJ+mMr+iqpCcpLFxuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfpobXpnaLlt7Lnu4/moIforrDkvrXmnYPvvIzor7fkurrlt6Xnoa7orqTmmK/lkKblt7Lnu4/mj5DmiqXjgIInLFxuXHRcdFx0XHRcdFx0J+mggemdouW3sue2k+aomeiomOS+teasiu+8jOiri+S6uuW3peeiuuiqjeaYr+WQpuW3sue2k+aPkOWgseOAgidcblx0XHRcdFx0XHQpXG5cdFx0XHRcdCk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRUd2lua2xlLmNvcHl2aW8uY2FsbGJhY2tzLnRhZ2dpbmdBcnRpY2xlKHBhZ2VvYmopO1xuXHRcdFx0XHQvLyBDb250cmlidXRvciBzcGVjaWZpYyBlZGl0c1xuXHRcdFx0XHRjb25zdCBxaXV3ZW5fcGFnZSA9IG5ldyBNb3JlYml0cy53aWtpLnBhZ2UobXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpKTtcblx0XHRcdFx0cWl1d2VuX3BhZ2Uuc2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKHBhZ2VvYmouZ2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKCkpO1xuXHRcdFx0XHRxaXV3ZW5fcGFnZS5sb29rdXBDcmVhdGlvbihUd2lua2xlLmNvcHl2aW8uY2FsbGJhY2tzLm1haW4pO1xuXHRcdFx0fVxuXHRcdH0sXG5cdFx0bWFpbjogKHBhZ2VvYmopID0+IHtcblx0XHRcdC8vIHRoaXMgaXMgY29taW5nIGluIGZyb20gbG9va3VwQ3JlYXRpb24uLi4hXG5cdFx0XHRjb25zdCBwYXJhbXMgPSBwYWdlb2JqLmdldENhbGxiYWNrUGFyYW1ldGVycygpO1xuXHRcdFx0Y29uc3QgaW5pdGlhbENvbnRyaWIgPSBwYWdlb2JqLmdldENyZWF0b3IoKTtcblx0XHRcdC8vIEFkZGluZyBkaXNjdXNzaW9uXG5cdFx0XHRjb25zdCBxaXV3ZW5fcGFnZSA9IG5ldyBNb3JlYml0cy53aWtpLnBhZ2UoXG5cdFx0XHRcdHBhcmFtcy5sb2dwYWdlLFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ+WKoOWFpeS+teadg+iusOW9lemhuScsICfliqDlhaXkvrXmrIroqJjpjITpoIUnKVxuXHRcdFx0KTtcblx0XHRcdHFpdXdlbl9wYWdlLnNldEZvbGxvd1JlZGlyZWN0KHRydWUpO1xuXHRcdFx0cWl1d2VuX3BhZ2Uuc2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKHBhcmFtcyk7XG5cdFx0XHRxaXV3ZW5fcGFnZS5sb2FkKFR3aW5rbGUuY29weXZpby5jYWxsYmFja3MuY29weXZpb0xpc3QpO1xuXHRcdFx0Ly8gTm90aWZpY2F0aW9uIHRvIGZpcnN0IGNvbnRyaWJ1dG9yXG5cdFx0XHRpZiAocGFyYW1zLm5vdGlmeSkge1xuXHRcdFx0XHRjb25zdCB1c2VydGFsa3BhZ2UgPSBuZXcgTW9yZWJpdHMud2lraS5wYWdlKFxuXHRcdFx0XHRcdGBVc2VyIHRhbGs6JHtpbml0aWFsQ29udHJpYn1gLFxuXHRcdFx0XHRcdGAke3dpbmRvdy53Z1VMUygn6YCa55+l6aG16Z2i5Yib5bu66ICF77yIJywgJ+mAmuefpemggemdouW7uueri+iAhe+8iCcpICsgaW5pdGlhbENvbnRyaWJ977yJYFxuXHRcdFx0XHQpO1xuXHRcdFx0XHRjb25zdCBub3RpZnl0ZXh0ID0gJ1xcbnt7Jy5jb25jYXQoJ3N1YnN0OicsIGBDb3B5dmlvTm90aWNlfCR7bXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpfX19YCk7XG5cdFx0XHRcdHVzZXJ0YWxrcGFnZS5zZXRBcHBlbmRUZXh0KG5vdGlmeXRleHQpO1xuXHRcdFx0XHR1c2VydGFsa3BhZ2Uuc2V0RWRpdFN1bW1hcnkoXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKCfpgJrnn6XvvJrpobXpnaJbWycsICfpgJrnn6XvvJrpoIHpnaJbWycpICtcblx0XHRcdFx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnUGFnZU5hbWUnKSArXG5cdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ11d55aR5Ly85L6154qv6JGX5L2c5p2DJywgJ11d55aR5Ly85L6154qv54mI5qyKJylcblx0XHRcdFx0KTtcblx0XHRcdFx0dXNlcnRhbGtwYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdFx0dXNlcnRhbGtwYWdlLnNldENyZWF0ZU9wdGlvbigncmVjcmVhdGUnKTtcblx0XHRcdFx0dXNlcnRhbGtwYWdlLnNldFdhdGNobGlzdChUd2lua2xlLmdldFByZWYoJ2NvcHl2aW9XYXRjaFVzZXInKSk7XG5cdFx0XHRcdHVzZXJ0YWxrcGFnZS5zZXRGb2xsb3dSZWRpcmVjdCh0cnVlLCBmYWxzZSk7XG5cdFx0XHRcdHVzZXJ0YWxrcGFnZS5hcHBlbmQoKTtcblx0XHRcdH1cblx0XHR9LFxuXHRcdHRhZ2dpbmdBcnRpY2xlOiAocGFnZW9iaikgPT4ge1xuXHRcdFx0Y29uc3QgcGFyYW1zID0gcGFnZW9iai5nZXRDYWxsYmFja1BhcmFtZXRlcnMoKTtcblx0XHRcdGNvbnN0IHJldmlzaW9uSWQgPVxuXHRcdFx0XHRtdy5jb25maWcuZ2V0KCd3Z1JldmlzaW9uSWQnKSB8fCBtdy5jb25maWcuZ2V0KCd3Z0RpZmZOZXdJZCcpIHx8IG13LmNvbmZpZy5nZXQoJ3dnQ3VyUmV2aXNpb25JZCcpO1xuXHRcdFx0bGV0IHRhZyA9ICd7eycuY29uY2F0KFxuXHRcdFx0XHQnc3Vic3Q6Jyxcblx0XHRcdFx0YENvcHl2aW8vYXV0b3x1cmw9JHtwYXJhbXMuc291cmNlXG5cdFx0XHRcdFx0LnJlcGxhY2UoL2h0dHAvZywgJyYjMTA0O3R0cCcpXG5cdFx0XHRcdFx0LnJlcGxhY2UoL1xcbisvZywgJ1xcbicpXG5cdFx0XHRcdFx0LnJlcGxhY2UoL15cXHMqKFteKl0pL2dtLCAnKiAkMScpXG5cdFx0XHRcdFx0LnJlcGxhY2UoL15cXCogJC9tLCAnJyl9fE9sZFJldmlzaW9uPSR7cmV2aXNpb25JZH19fWBcblx0XHRcdCk7XG5cdFx0XHRjb25zdCB0ZXh0ID0gcGFnZW9iai5nZXRQYWdlVGV4dCgpO1xuXHRcdFx0Y29uc3Qgb2xkY3NkID0gdGV4dC5tYXRjaCgvXFx7XFx7XFxzKihkYigtXFx3Kik/fGR8ZGVsZXRlKVxccyooXFx8KD86XFx7XFx7W157fV0qXFx9XFx9fFtee31dKSopP1xcfVxcfS9pKTtcblx0XHRcdGlmIChcblx0XHRcdFx0b2xkY3NkICYmXG5cdFx0XHRcdGNvbmZpcm0oXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+WcqOmhtemdouS4iuaJvuWIsOW/q+mAn+WIoOmZpOaooeadv++8jOimgeS/neeVmeWQl++8n1xcblxcbuW9k+mhtemdouWQjOaXtuS+teeKr+iRl+S9nOadg+WPiOespuWQiOW/q+mAn+WIoOmZpOagh+WHhuaXtu+8jOW6lOivpeS8mOWFiOi1sOW/q+mAn+WIoOmZpOeoi+W6j+OAglxcbuWNleWHu+KAnOehruiupOKAneS7peS/neeVmeW/q+mAn+WIoOmZpOaooeadv++8jOiLpeaCqOiupOS4uuW/q+mAn+WIoOmZpOeQhueUseS4jeWQiO+8jOWNleWHu+KAnOWPlua2iOKAneS7peenu+mZpOW/q+mAn+WIoOmZpOaooeadv+OAgicsXG5cdFx0XHRcdFx0XHQn5Zyo6aCB6Z2i5LiK5om+5Yiw5b+r6YCf5Yiq6Zmk5qih5p2/77yM6KaB5L+d55WZ5ZeO77yfXFxuXFxu55W26aCB6Z2i5ZCM5pmC5L6154qv54mI5qyK5Y+I56ym5ZCI5b+r6YCf5Yiq6Zmk5qiZ5rqW5pmC77yM5oeJ6Kmy5YSq5YWI6LWw5b+r6YCf5Yiq6Zmk56iL5bqP44CCXFxu6bue5pOK44CM56K66KqN44CN5Lul5L+d55WZ5b+r6YCf5Yiq6Zmk5qih5p2/77yM6Iul5oKo6KqN54K65b+r6YCf5Yiq6Zmk55CG55Sx5LiN5ZCI77yM6bue5pOK44CM5Y+W5raI44CN5Lul56e76Zmk5b+r6YCf5Yiq6Zmk5qih5p2/44CCJ1xuXHRcdFx0XHRcdClcblx0XHRcdFx0KVxuXHRcdFx0KSB7XG5cdFx0XHRcdHRhZyA9IGAke29sZGNzZFswXX1cXG4ke3RhZ31gO1xuXHRcdFx0fVxuXHRcdFx0aWYgKHBhcmFtcy5nNCkge1xuXHRcdFx0XHRsZXQgc3BlZWR5VGFnID0gJ3t7ZGVsZXRlJztcblx0XHRcdFx0c3BlZWR5VGFnICs9ICd8ZzQnO1xuXHRcdFx0XHRpZiAocGFyYW1zLmc0X3BhZ2VuYW1lKSB7XG5cdFx0XHRcdFx0c3BlZWR5VGFnICs9IGB8JHtwYXJhbXMuZzRfcGFnZW5hbWV9fGMxPVtbU3BlY2lhbDpVbmRlbGV0ZS8ke3BhcmFtcy5nNF9wYWdlbmFtZX1dXWA7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0c3BlZWR5VGFnICs9IGB8YzE9W1tTcGVjaWFsOlVuZGVsZXRlLyR7bXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpfV1dYDtcblx0XHRcdFx0fVxuXHRcdFx0XHRzcGVlZHlUYWcgKz0gJ319Jztcblx0XHRcdFx0dGFnID0gYCR7c3BlZWR5VGFnfVxcbiR7dGFnfWA7XG5cdFx0XHR9XG5cdFx0XHRwYWdlb2JqLnNldFBhZ2VUZXh0KHRhZyk7XG5cdFx0XHRwYWdlb2JqLnNldEVkaXRTdW1tYXJ5KHdpbmRvdy53Z1VMUygn5q2k6aG16Z2i55aR5Ly85L6154qv6JGX5L2c5p2DJywgJ+atpOmggemdoueWkeS8vOS+teeKr+eJiOasiicpKTtcblx0XHRcdHBhZ2VvYmouc2V0Q2hhbmdlVGFncyhUd2lua2xlLmNoYW5nZVRhZ3MpO1xuXHRcdFx0cGFnZW9iai5zZXRXYXRjaGxpc3QoVHdpbmtsZS5nZXRQcmVmKCdjb3B5dmlvV2F0Y2hQYWdlJykpO1xuXHRcdFx0Ly8gcGFnZW9iai5zZXRDcmVhdGVPcHRpb24oJ3JlY3JlYXRlJyk7XG5cdFx0XHRwYWdlb2JqLnNhdmUoKTtcblx0XHRcdGlmIChUd2lua2xlLmdldFByZWYoJ21hcmtDb3B5dmlvUGFnZXNBc1BhdHJvbGxlZCcpKSB7XG5cdFx0XHRcdHBhZ2VvYmoucGF0cm9sKCk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRjb3B5dmlvTGlzdDogKHBhZ2VvYmopID0+IHtcblx0XHRcdGNvbnN0IHRleHQgPSBwYWdlb2JqLmdldFBhZ2VUZXh0KCk7XG5cdFx0XHRsZXQgb3V0cHV0ID0gJyc7XG5cdFx0XHRjb25zdCBkYXRlID0gbmV3IERhdGUoKTtcblx0XHRcdGNvbnN0IGRhdGVIZWFkZXJSZWdleCA9IG5ldyBSZWdFeHAoXG5cdFx0XHRcdGBePT0rXFxcXHMqJHtkYXRlLmdldFVUQ01vbnRoKCkgKyAxfeaciCR7ZGF0ZS5nZXRVVENEYXRlKCl95pelXFxcXHMqPT0rYCxcblx0XHRcdFx0J21nJ1xuXHRcdFx0KTtcblx0XHRcdGlmICghZGF0ZUhlYWRlclJlZ2V4LmV4ZWModGV4dCkpIHtcblx0XHRcdFx0b3V0cHV0ID0gYFxcblxcbj09JHtkYXRlLmdldFVUQ01vbnRoKCkgKyAxfeaciCR7ZGF0ZS5nZXRVVENEYXRlKCl95pelPT1gO1xuXHRcdFx0fVxuXHRcdFx0b3V0cHV0ICs9ICdcXG57eycuY29uY2F0KCdzdWJzdDonLCBgQ29weXZpb1ZGRFJlY29yZHwke213LmNvbmZpZy5nZXQoJ3dnUGFnZU5hbWUnKX19fWApO1xuXHRcdFx0cGFnZW9iai5zZXRBcHBlbmRUZXh0KG91dHB1dCk7XG5cdFx0XHRwYWdlb2JqLnNldEVkaXRTdW1tYXJ5KGDliqDlhaVbWyR7bXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpfV1dYCk7XG5cdFx0XHRwYWdlb2JqLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdHBhZ2VvYmouc2V0Q3JlYXRlT3B0aW9uKCdyZWNyZWF0ZScpO1xuXHRcdFx0cGFnZW9iai5hcHBlbmQoKTtcblx0XHR9LFxuXHR9O1xuXHRUd2lua2xlLmNvcHl2aW8uY2FsbGJhY2suZXZhbHVhdGUgPSAoZSkgPT4ge1xuXHRcdGNvbnN0IHBhcmFtcyA9IE1vcmViaXRzLnF1aWNrRm9ybS5nZXRJbnB1dERhdGEoZS50YXJnZXQpO1xuXHRcdGlmICghcGFyYW1zLnNvdXJjZS50cmltKCkpIHtcblx0XHRcdHZvaWQgbXcubm90aWZ5KHdpbmRvdy53Z1VMUygn6K+35oyH5a6a5L615p2D5p2l5rqQJywgJ+iri+aMh+WumuS+teasiuS+hua6kCcpLCB7XG5cdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0dGFnOiAndHdpbmtsZWNvcHl2aW8nLFxuXHRcdFx0fSk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdE1vcmViaXRzLnNpbXBsZVdpbmRvdy5zZXRCdXR0b25zRW5hYmxlZChmYWxzZSk7XG5cdFx0TW9yZWJpdHMuc3RhdHVzLmluaXQoZS50YXJnZXQpO1xuXHRcdHBhcmFtcy5sb2dwYWdlID0gJ1FpdXdlbl90YWxrOuS+teadg+aPkOaKpSc7XG5cdFx0TW9yZWJpdHMud2lraS5hZGRDaGVja3BvaW50KCk7XG5cdFx0Ly8gVXBkYXRpbmcgZGF0YSBmb3IgdGhlIGFjdGlvbiBjb21wbGV0ZWQgZXZlbnRcblx0XHRNb3JlYml0cy53aWtpLmFjdGlvbkNvbXBsZXRlZC5yZWRpcmVjdCA9IG13LmNvbmZpZy5nZXQoJ3dnUGFnZU5hbWUnKTtcblx0XHRNb3JlYml0cy53aWtpLmFjdGlvbkNvbXBsZXRlZC5ub3RpY2UgPSB3aW5kb3cud2dVTFMoXG5cdFx0XHQn5o+Q5oql5a6M5oiQ77yM5bCG5Zyo5Yeg56eS5YaF5Yi35paw6aG16Z2iJyxcblx0XHRcdCfmj5DloLHlrozmiJDvvIzlsIflnKjlub7np5Llhafph43mlrDmlbTnkIbpoIHpnaInXG5cdFx0KTtcblx0XHQvLyBUYWdnaW5nIGZpbGVcblx0XHRjb25zdCBxaXV3ZW5fcGFnZSA9IG5ldyBNb3JlYml0cy53aWtpLnBhZ2UoXG5cdFx0XHRtdy5jb25maWcuZ2V0KCd3Z1BhZ2VOYW1lJyksXG5cdFx0XHR3aW5kb3cud2dVTFMoJ+WKoOWFpeS+teadg+aooeadv+WIsOmhtemdoicsICfliqDlhaXkvrXmrIrmqKHmnb/liLDpoIHpnaInKVxuXHRcdCk7XG5cdFx0cWl1d2VuX3BhZ2Uuc2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKHBhcmFtcyk7XG5cdFx0cWl1d2VuX3BhZ2UubG9hZChUd2lua2xlLmNvcHl2aW8uY2FsbGJhY2tzLnRyeVRhZ2dpbmcpO1xuXHRcdE1vcmViaXRzLndpa2kucmVtb3ZlQ2hlY2twb2ludCgpO1xuXHR9O1xuXHRUd2lua2xlLmFkZEluaXRDYWxsYmFjayhUd2lua2xlLmNvcHl2aW8sICdjb3B5dmlvJyk7XG59KSgpO1xuXG5leHBvcnQge307XG4iLCAiLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHMtY29tbWVudFxuLy8gQHRzLW5vY2hlY2tcbi8qISBUd2lua2xlLmpzIC0gdHdpbmtsZXhmZC5qcyAqL1xuKGZ1bmN0aW9uIHR3aW5rbGV4ZmQoKSB7XG5cdC8qKlxuXHQgKiB0d2lua2xleGZkLmpzOiBYRkQgbW9kdWxlXG5cdCAqIE1vZGUgb2YgaW52b2NhdGlvbjogVGFiIChcIlhGRFwiKVxuXHQgKiBBY3RpdmUgb246IEV4aXN0aW5nLCBub24tc3BlY2lhbCBwYWdlcyxcblx0ICogZXhjZXB0IGZvciBmaWxlIHBhZ2VzIHdpdGggbm8gbG9jYWwgZmlsZVxuXHQgKiB3aGljaCBhcmUgbm90IHJlZGlyZWN0c1xuXHQgKi9cblx0VHdpbmtsZS54ZmQgPSAoKSA9PiB7XG5cdFx0Ly8gRGlzYWJsZSBvbjpcblx0XHQvLyAqIHNwZWNpYWwgcGFnZXNcblx0XHQvLyAqIG5vbi1leGlzdGVudCBwYWdlc1xuXHRcdC8vICogbm9uLWxvY2FsIGZpbGVzLCB3aGV0aGVyIHRoZXJlIGlzIGEgbG9jYWwgcGFnZSBvciBub3QgKHVubmVlZGVkIGxvY2FsIHBhZ2VzIG9mIGZpbGVzIG9uIFNoYXJlIGFyZSBlbGlnaWJsZSBmb3IgQ1NEIEYyKVxuXHRcdC8vICogZmlsZSBwYWdlcyB3aXRob3V0IGFjdHVhbCBmaWxlc1xuXHRcdGlmIChcblx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlTnVtYmVyJykgPCAwIHx8XG5cdFx0XHQhbXcuY29uZmlnLmdldCgnd2dBcnRpY2xlSWQnKSB8fFxuXHRcdFx0KG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlTnVtYmVyJykgPT09IDYgJiZcblx0XHRcdFx0KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtdy1zaGFyZWR1cGxvYWQnKSB8fFxuXHRcdFx0XHRcdCghZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI213LWltYWdlcGFnZS1zZWN0aW9uLWZpbGVoaXN0b3J5JykgJiYgIU1vcmViaXRzLmlzUGFnZVJlZGlyZWN0KCkpKSlcblx0XHQpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0VHdpbmtsZS5hZGRQb3J0bGV0TGluayhcblx0XHRcdFR3aW5rbGUueGZkLmNhbGxiYWNrLFxuXHRcdFx0d2luZG93LndnVUxTKCfmj5DliKAnLCAn5o+Q5YiqJyksXG5cdFx0XHQndHcteGZkJyxcblx0XHRcdHdpbmRvdy53Z1VMUygn5o+Q5Lqk5Yig6Zmk6K6o6K66JywgJ+aPkOS6pOWIqumZpOiojuirlicpXG5cdFx0KTtcblx0fTtcblx0VHdpbmtsZS54ZmQuY3VycmVudFJhdGlvbmFsZSA9IG51bGw7XG5cdC8vIGVycm9yIGNhbGxiYWNrIG9uIE1vcmViaXRzLnN0YXR1cy5vYmplY3Rcblx0VHdpbmtsZS54ZmQucHJpbnRSYXRpb25hbGUgPSAoKSA9PiB7XG5cdFx0aWYgKFR3aW5rbGUueGZkLmN1cnJlbnRSYXRpb25hbGUpIHtcblx0XHRcdE1vcmViaXRzLnN0YXR1cy5wcmludFVzZXJUZXh0KFxuXHRcdFx0XHRUd2lua2xlLnhmZC5jdXJyZW50UmF0aW9uYWxlLFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0J+aCqOeahOeQhueUseW3suWcqOS4i+aWueaPkOS+m++8jOiLpeaCqOaDs+mHjeaWsOaPkOS6pO+8jOivt+WwhuWFtuWkjeWItuWIsOS4gOaWsOeql+WPo+S4re+8micsXG5cdFx0XHRcdFx0J+aCqOeahOeQhueUseW3suWcqOS4i+aWueaPkOS+m++8jOiLpeaCqOaDs+mHjeaWsOaPkOS6pO+8jOiri+Wwh+WFtuikh+ijveWIsOS4gOaWsOimlueql+S4re+8midcblx0XHRcdFx0KVxuXHRcdFx0KTtcblx0XHRcdC8vIG9ubHkgbmVlZCB0byBwcmludCB0aGUgcmF0aW9uYWxlIG9uY2Vcblx0XHRcdFR3aW5rbGUueGZkLmN1cnJlbnRSYXRpb25hbGUgPSBudWxsO1xuXHRcdH1cblx0fTtcblx0VHdpbmtsZS54ZmQuY2FsbGJhY2sgPSAoKSA9PiB7XG5cdFx0Y29uc3QgV2luZG93ID0gbmV3IE1vcmViaXRzLnNpbXBsZVdpbmRvdyg2MDAsIDM1MCk7XG5cdFx0V2luZG93LnNldFRpdGxlKHdpbmRvdy53Z1VMUygn5o+Q5Lqk5a2Y5bqf6K6o6K66JywgJ+aPkOS6pOWtmOW7ouiojuirlicpKTtcblx0XHRXaW5kb3cuc2V0U2NyaXB0TmFtZSgnVHdpbmtsZScpO1xuXHRcdFdpbmRvdy5hZGRGb290ZXJMaW5rKHdpbmRvdy53Z1VMUygn5o+Q5Yig6K6+572uJywgJ+aPkOWIquioreWumicpLCAnSDpUVy9QUkVGI3hmZCcpO1xuXHRcdFdpbmRvdy5hZGRGb290ZXJMaW5rKHdpbmRvdy53Z1VMUygnVHdpbmtsZeW4ruWKqScsICdUd2lua2xl6Kqq5piOJyksICdIOlRXL0RPQyN4ZmQnKTtcblx0XHRjb25zdCBmb3JtID0gbmV3IE1vcmViaXRzLnF1aWNrRm9ybShUd2lua2xlLnhmZC5jYWxsYmFjay5ldmFsdWF0ZSk7XG5cdFx0Y29uc3QgY2F0ZWdvcmllcyA9IGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdzZWxlY3QnLFxuXHRcdFx0bmFtZTogJ2NhdGVnb3J5Jyxcblx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+aPkOS6pOexu+Wei++8micsICfmj5DkuqTpoZ7liKXvvJonKSxcblx0XHRcdGV2ZW50OiBUd2lua2xlLnhmZC5jYWxsYmFjay5jaGFuZ2VfY2F0ZWdvcnksXG5cdFx0fSk7XG5cdFx0Y2F0ZWdvcmllcy5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ29wdGlvbicsXG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfpobXpnaLlrZjlup/orqjorronLCAn6aCB6Z2i5a2Y5bui6KiO6KuWJyksXG5cdFx0XHRzZWxlY3RlZDogbXcuY29uZmlnLmdldCgnd2dOYW1lc3BhY2VOdW1iZXInKSA9PT0gMCxcblx0XHRcdHZhbHVlOiAnYWZkJyxcblx0XHR9KTtcblx0XHRjYXRlZ29yaWVzLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnb3B0aW9uJyxcblx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+aWh+S7tuWtmOW6n+iuqOiuuicsICfmqpTmoYjlrZjlu6LoqI7oq5YnKSxcblx0XHRcdHNlbGVjdGVkOiBtdy5jb25maWcuZ2V0KCd3Z05hbWVzcGFjZU51bWJlcicpID09PSA2LFxuXHRcdFx0dmFsdWU6ICdmZmQnLFxuXHRcdH0pO1xuXHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRsaXN0OiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflpoLlj6/og73vvIzpgJrnn6XpobXpnaLliJvlu7rogIUnLCAn5aaC5Y+v6IO977yM6YCa55+l6aCB6Z2i5bu656uL6ICFJyksXG5cdFx0XHRcdFx0dmFsdWU6ICdub3RpZnknLFxuXHRcdFx0XHRcdG5hbWU6ICdub3RpZnknLFxuXHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCflnKjpobXpnaLliJvlu7rogIXorqjorrrpobXkuIrmlL7nva7kuIDpgJrnn6XmqKHmnb/jgIInLFxuXHRcdFx0XHRcdFx0J+WcqOmggemdouW7uueri+iAheiojuirlumggeS4iuaUvue9ruS4gOmAmuefpeaooeadv+OAgidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdGNoZWNrZWQ6IHRydWUsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0pO1xuXHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdmaWVsZCcsXG5cdFx0XHRsYWJlbDogJ+W3peS9nOWMuicsXG5cdFx0XHRuYW1lOiAnd29ya19hcmVhJyxcblx0XHR9KTtcblx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnc3VibWl0Jyxcblx0XHR9KTtcblx0XHRjb25zdCByZXN1bHQgPSBmb3JtLnJlbmRlcigpO1xuXHRcdFdpbmRvdy5zZXRDb250ZW50KHJlc3VsdCk7XG5cdFx0V2luZG93LmRpc3BsYXkoKTtcblx0XHQvLyBXZSBtdXN0IGluaXQgdGhlIGNvbnRyb2xzXG5cdFx0Y29uc3QgZXZ0ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50Jyk7XG5cdFx0ZXZ0LmluaXRFdmVudCgnY2hhbmdlJywgdHJ1ZSwgdHJ1ZSk7XG5cdFx0cmVzdWx0LmNhdGVnb3J5LmRpc3BhdGNoRXZlbnQoZXZ0KTtcblx0fTtcblx0VHdpbmtsZS54ZmQuY2FsbGJhY2suY2hhbmdlX2NhdGVnb3J5ID0gKGUpID0+IHtcblx0XHRjb25zdCB7dmFsdWV9ID0gZS50YXJnZXQ7XG5cdFx0Y29uc3Qge2Zvcm19ID0gZS50YXJnZXQ7XG5cdFx0Y29uc3QgW29sZF9hcmVhXSA9IE1vcmViaXRzLnF1aWNrRm9ybS5nZXRFbGVtZW50cyhlLnRhcmdldC5mb3JtLCAnd29ya19hcmVhJyk7XG5cdFx0bGV0IHdvcmtfYXJlYSA9IG51bGw7XG5cdFx0Y29uc3Qgb2xkcmVhc29udGV4dGJveCA9IGZvcm0ucXVlcnlTZWxlY3RvcigndGV4dGFyZWEnKTtcblx0XHRsZXQgb2xkcmVhc29uID0gb2xkcmVhc29udGV4dGJveCA/IG9sZHJlYXNvbnRleHRib3gudmFsdWUgOiAnJztcblx0XHRjb25zdCBhcHBlbmRSZWFzb25Cb3ggPSAoeGZkX2NhdCkgPT4ge1xuXHRcdFx0c3dpdGNoICh4ZmRfY2F0KSB7XG5cdFx0XHRcdGNhc2UgJ2Z3ZGNzZCc6XG5cdFx0XHRcdFx0b2xkcmVhc29uID0gZGVjb2RlVVJJQ29tcG9uZW50KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNkZWxldGUtcmVhc29uJykudGV4dENvbnRlbnQpLnJlcGxhY2UoXG5cdFx0XHRcdFx0XHQvXFwrL2csXG5cdFx0XHRcdFx0XHQnICdcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlICdmYW1lJzpcblx0XHRcdFx0XHRvbGRyZWFzb24gPSBUd2lua2xlLmdldFByZWYoJ2FmZEZhbWVEZWZhdWx0UmVhc29uJyk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgJ3N1YnN0dWInOlxuXHRcdFx0XHRcdG9sZHJlYXNvbiA9IFR3aW5rbGUuZ2V0UHJlZignYWZkU3Vic3R1YkRlZmF1bHRSZWFzb24nKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHR0eXBlOiAndGV4dGFyZWEnLFxuXHRcdFx0XHRuYW1lOiAneGZkcmVhc29uJyxcblx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5o+Q5Yig55CG55Sx77yaJywgJ+aPkOWIqueQhueUse+8micpLFxuXHRcdFx0XHR2YWx1ZTogb2xkcmVhc29uLFxuXHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0J+aCqOWPr+S7peS9v+eUqHdpa2l0ZXh077yMVHdpbmtsZeWwhuiHquWKqOS4uuaCqOWKoOWFpeetvuWQjeOAguiLpeaCqOS9v+eUqOaJuemHj+aPkOWIoOWKn+iDve+8jOWtmOW6n+iuqOiuuumhteWPquS8muS9v+eUqOesrOS4gOasoeaPkOS6pOeahOeQhueUse+8jOS9huS5i+WQjuaCqOS7jemcgOaPkOS+m+S7peeUqOS6juWIoOmZpOmAmuWRiuaooeadv+eahOWPguaVsOOAgicsXG5cdFx0XHRcdFx0J+aCqOWPr+S7peS9v+eUqHdpa2l0ZXh077yMVHdpbmtsZeWwh+iHquWLleeCuuaCqOWKoOWFpeewveWQjeOAguiLpeaCqOS9v+eUqOaJueasoeaPkOWIquWKn+iDve+8jOWtmOW7ouiojuirlumggeWPquacg+S9v+eUqOesrOS4gOasoeaPkOS6pOeahOeQhueUse+8jOS9huS5i+W+jOaCqOS7jemcgOaPkOS+m+S7peeUqOaWvOWIqumZpOmAmuWRiuaooeadv+eahOWPg+aVuOOAgidcblx0XHRcdFx0KSxcblx0XHRcdFx0cGxhY2Vob2xkZXI6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHQn5q2k5YC85Lqm5pi+56S65LqO6aG16Z2i55qE5Yig6Zmk6YCa5ZGK5qih5p2/5YaF77yM5pWF5Yqh5b+F5o+Q5L6b5q2k5YC877yM6YG/5YWN5L2/55So4oCc5ZCM5LiK4oCd562J55So6K+t44CCJyxcblx0XHRcdFx0XHQn5q2k5YC85Lqm6aGv56S65pa86aCB6Z2i55qE5Yiq6Zmk6YCa5ZGK5qih5p2/5YWn77yM5pWF5YuZ5b+F5o+Q5L6b5q2k5YC877yM6YG/5YWN5L2/55So44CM5ZCM5LiK44CN562J55So6Kqe44CCJ1xuXHRcdFx0XHQpLFxuXHRcdFx0fSk7XG5cdFx0XHQvLyBUT0RPIHBvc3NpYmxlIGZ1dHVyZSBcInByZXZpZXdcIiBsaW5rIGhlcmVcblx0XHR9O1xuXG5cdFx0c3dpdGNoICh2YWx1ZSkge1xuXHRcdFx0Y2FzZSAnYWZkJzoge1xuXHRcdFx0XHR3b3JrX2FyZWEgPSBuZXcgTW9yZWJpdHMucXVpY2tGb3JtLmVsZW1lbnQoe1xuXHRcdFx0XHRcdHR5cGU6ICdmaWVsZCcsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6aG16Z2i5a2Y5bqf6K6o6K66JywgJ+mggemdouWtmOW7ouiojuirlicpLFxuXHRcdFx0XHRcdG5hbWU6ICd3b3JrX2FyZWEnLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiAn5L2/55SoJmx0O25vaW5jbHVkZSZndDvljIXoo7nmqKHmnb8nLFxuXHRcdFx0XHRcdFx0XHR2YWx1ZTogJ25vaW5jbHVkZScsXG5cdFx0XHRcdFx0XHRcdG5hbWU6ICdub2luY2x1ZGUnLFxuXHRcdFx0XHRcdFx0XHRjaGVja2VkOlxuXHRcdFx0XHRcdFx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlTnVtYmVyJykgPT09IDEwICYmXG5cdFx0XHRcdFx0XHRcdFx0bXcuY29uZmlnLmdldCgnd2dQYWdlQ29udGVudE1vZGVsJykgIT09ICdTY3JpYnVudG8nLFxuXHRcdFx0XHRcdFx0XHQvLyBUZW1wbGF0ZSBuYW1lc3BhY2Vcblx0XHRcdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKCfkvb/lhbbkuI3kvJrlnKjooqvljIXlkKvml7blh7rnjrDjgIInLCAn5L2/5YW25LiN5pyD5Zyo6KKr5YyF5ZCr5pmC5Ye654++44CCJyksXG5cdFx0XHRcdFx0XHRcdGRpc2FibGVkOiBtdy5jb25maWcuZ2V0KCd3Z1BhZ2VDb250ZW50TW9kZWwnKSA9PT0gJ1NjcmlidW50bycsXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdF0sXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRjb25zdCBhZmRfY2F0ZWdvcnkgPSB3b3JrX2FyZWEuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnc2VsZWN0Jyxcblx0XHRcdFx0XHRuYW1lOiAneGZkY2F0Jyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfpgInmi6nmj5DliKDnsbvlnovvvJonLCAn6YG45pOH5o+Q5Yiq6aGe5Yil77yaJyksXG5cdFx0XHRcdFx0ZXZlbnQ6IFR3aW5rbGUueGZkLmNhbGxiYWNrLmNoYW5nZV9hZmRfY2F0ZWdvcnksXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRsZXQgYWZkX2NhdCA9ICdkZWxldGUnO1xuXHRcdFx0XHRpZiAoVHdpbmtsZS5nZXRQcmVmKCdhZmREZWZhdWx0Q2F0ZWdvcnknKSA9PT0gJ3NhbWUnKSB7XG5cdFx0XHRcdFx0aWYgKGxvY2FsU3RvcmFnZS5Ud2lua2xlX2FmZENhdGVnb3J5ID09PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0XHRcdGxvY2FsU3RvcmFnZS5Ud2lua2xlX2FmZENhdGVnb3J5ID0gJ2RlbGV0ZSc7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGFmZF9jYXQgPSBsb2NhbFN0b3JhZ2UuVHdpbmtsZV9hZmRDYXRlZ29yeTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0YWZkX2NhdGVnb3J5LmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ29wdGlvbicsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Yig6ZmkJywgJ+WIqumZpCcpLFxuXHRcdFx0XHRcdHZhbHVlOiAnZGVsZXRlJyxcblx0XHRcdFx0XHRzZWxlY3RlZDogYWZkX2NhdCA9PT0gJ2RlbGV0ZScsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRhZmRfY2F0ZWdvcnkuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnb3B0aW9uJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflkIjlubYnLCAn5ZCI5L21JyksXG5cdFx0XHRcdFx0dmFsdWU6ICdtZXJnZScsXG5cdFx0XHRcdFx0c2VsZWN0ZWQ6IGFmZF9jYXQgPT09ICdtZXJnZScsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRpZiAoVHdpbmtsZS5nZXRQcmVmKCdGd2RDc2RUb1hmZCcpKSB7XG5cdFx0XHRcdFx0YWZkX2NhdGVnb3J5LmFwcGVuZCh7XG5cdFx0XHRcdFx0XHR0eXBlOiAnb3B0aW9uJyxcblx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+i9rOS6pOiHquW/q+mAn+WIoOmZpOWAmemAiScsICfovYnkuqToh6rlv6vpgJ/liKrpmaTlgJnpgbgnKSxcblx0XHRcdFx0XHRcdHZhbHVlOiAnZndkY3NkJyxcblx0XHRcdFx0XHRcdHNlbGVjdGVkOiBhZmRfY2F0ID09PSAnZndkY3NkJyxcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fVxuXHRcdFx0XHRhZmRfY2F0ZWdvcnkuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnb3B0aW9uJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmibnph4/lhbPms6jluqbmj5DliKAnLCAn5om55qyh6Zec5rOo5bqm5o+Q5YiqJyksXG5cdFx0XHRcdFx0dmFsdWU6ICdmYW1lJyxcblx0XHRcdFx0XHRzZWxlY3RlZDogYWZkX2NhdCA9PT0gJ2ZhbWUnLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0YWZkX2NhdGVnb3J5LmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ29wdGlvbicsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5om56YeP5bCP5bCP5L2c5ZOB5o+Q5YigJywgJ+aJueasoeWwj+Wwj+S9nOWTgeaPkOWIqicpLFxuXHRcdFx0XHRcdHZhbHVlOiAnc3Vic3R1YicsXG5cdFx0XHRcdFx0c2VsZWN0ZWQ6IGFmZF9jYXQgPT09ICdzdWJzdHViJyxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGFmZF9jYXRlZ29yeS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdvcHRpb24nLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+aJuemHj+WFtuS7luaPkOWIoCcsICfmibnmrKHlhbbku5bmj5DliKonKSxcblx0XHRcdFx0XHR2YWx1ZTogJ2JhdGNoJyxcblx0XHRcdFx0XHRzZWxlY3RlZDogYWZkX2NhdCA9PT0gJ2JhdGNoJyxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHdvcmtfYXJlYS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRcdFx0bmFtZTogJ21lcmdlaW50bycsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5ZCI5bm25Yiw77yaJywgJ+WQiOS9teWIsO+8micpLFxuXHRcdFx0XHRcdGhpZGRlbjogdHJ1ZSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGFwcGVuZFJlYXNvbkJveChhZmRfY2F0KTtcblx0XHRcdFx0d29ya19hcmVhLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ3RleHRhcmVhJyxcblx0XHRcdFx0XHRuYW1lOiAnZndkY3NkcmVhc29uJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfovazkuqTnkIbnlLHvvJonLCAn6L2J5Lqk55CG55Sx77yaJyksXG5cdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+aCqOWPr+S7peS9v+eUqHdpa2l0ZXh077yMVHdpbmtsZeWwhuiHquWKqOS4uuaCqOWKoOWFpeetvuWQjeOAgicsXG5cdFx0XHRcdFx0XHQn5oKo5Y+v5Lul5L2/55Sod2lraXRleHTvvIxUd2lua2xl5bCH6Ieq5YuV54K65oKo5Yqg5YWl57C95ZCN44CCJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0aGlkZGVuOiB0cnVlLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0d29ya19hcmVhID0gd29ya19hcmVhLnJlbmRlcigpO1xuXHRcdFx0XHRvbGRfYXJlYS5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZCh3b3JrX2FyZWEsIG9sZF9hcmVhKTtcblx0XHRcdFx0Y29uc3QgZXZ0ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50Jyk7XG5cdFx0XHRcdGV2dC5pbml0RXZlbnQoJ2NoYW5nZScsIHRydWUsIHRydWUpO1xuXHRcdFx0XHRmb3JtLnhmZGNhdC5kaXNwYXRjaEV2ZW50KGV2dCk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdFx0Y2FzZSAnZmZkJzpcblx0XHRcdFx0d29ya19hcmVhID0gbmV3IE1vcmViaXRzLnF1aWNrRm9ybS5lbGVtZW50KHtcblx0XHRcdFx0XHR0eXBlOiAnZmllbGQnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+aWh+S7tuWtmOW6n+iuqOiuuicsICfmqpTmoYjlrZjlu6LoqI7oq5YnKSxcblx0XHRcdFx0XHRuYW1lOiAnd29ya19hcmVhJyxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGFwcGVuZFJlYXNvbkJveCgnZmZkJyk7XG5cdFx0XHRcdHdvcmtfYXJlYSA9IHdvcmtfYXJlYS5yZW5kZXIoKTtcblx0XHRcdFx0b2xkX2FyZWEucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQod29ya19hcmVhLCBvbGRfYXJlYSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0d29ya19hcmVhID0gbmV3IE1vcmViaXRzLnF1aWNrRm9ybS5lbGVtZW50KHtcblx0XHRcdFx0XHR0eXBlOiAnZmllbGQnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+acquWumuS5iScsICfmnKrlrprnvqknKSxcblx0XHRcdFx0XHRuYW1lOiAnd29ya19hcmVhJyxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHdvcmtfYXJlYSA9IHdvcmtfYXJlYS5yZW5kZXIoKTtcblx0XHRcdFx0b2xkX2FyZWEucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQod29ya19hcmVhLCBvbGRfYXJlYSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdH1cblx0XHQvLyBSZXR1cm4gdG8gY2hlY2tlZCBzdGF0ZSB3aGVuIHN3aXRjaGluZ1xuXHRcdGZvcm0ubm90aWZ5LmNoZWNrZWQgPSB0cnVlO1xuXHRcdGZvcm0ubm90aWZ5LmRpc2FibGVkID0gZmFsc2U7XG5cdH07XG5cdFR3aW5rbGUueGZkLmNhbGxiYWNrLmNoYW5nZV9hZmRfY2F0ZWdvcnkgPSAoZSkgPT4ge1xuXHRcdHN3aXRjaCAoZS50YXJnZXQudmFsdWUpIHtcblx0XHRcdGNhc2UgJ21lcmdlJzpcblx0XHRcdFx0ZS50YXJnZXQuZm9ybS5tZXJnZWludG8ucGFyZW50RWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2hpZGRlbicpO1xuXHRcdFx0XHRlLnRhcmdldC5mb3JtLmZ3ZGNzZHJlYXNvbi5wYXJlbnRFbGVtZW50LnNldEF0dHJpYnV0ZSgnaGlkZGVuJywgJycpO1xuXHRcdFx0XHRlLnRhcmdldC5mb3JtLm1lcmdlaW50by5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLmlubmVySFRNTCA9IHdpbmRvdy53Z1VMUygn5ZCI5bm25Yiw77yaJywgJ+WQiOS9teWIsO+8micpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ2Z3ZGNzZCc6XG5cdFx0XHRcdGUudGFyZ2V0LmZvcm0ubWVyZ2VpbnRvLnBhcmVudEVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCdoaWRkZW4nKTtcblx0XHRcdFx0ZS50YXJnZXQuZm9ybS5md2Rjc2RyZWFzb24ucGFyZW50RWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2hpZGRlbicpO1xuXHRcdFx0XHRlLnRhcmdldC5mb3JtLm1lcmdlaW50by5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLmlubmVySFRNTCA9ICfmj5DkuqTkurrvvJonO1xuXHRcdFx0XHRlLnRhcmdldC5mb3JtLnhmZHJlYXNvbi52YWx1ZSA9IGRlY29kZVVSSUNvbXBvbmVudChcblx0XHRcdFx0XHRkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZGVsZXRlLXJlYXNvbicpLnRleHRDb250ZW50XG5cdFx0XHRcdCkucmVwbGFjZSgvXFwrL2csICcgJyk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnZmFtZSc6XG5cdFx0XHRcdGUudGFyZ2V0LmZvcm0ubWVyZ2VpbnRvLnBhcmVudEVsZW1lbnQuc2V0QXR0cmlidXRlKCdoaWRkZW4nLCAnJyk7XG5cdFx0XHRcdGUudGFyZ2V0LmZvcm0uZndkY3NkcmVhc29uLnBhcmVudEVsZW1lbnQuc2V0QXR0cmlidXRlKCdoaWRkZW4nLCAnJyk7XG5cdFx0XHRcdGUudGFyZ2V0LmZvcm0ueGZkcmVhc29uLnZhbHVlID0gVHdpbmtsZS5nZXRQcmVmKCdhZmRGYW1lRGVmYXVsdFJlYXNvbicpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ3N1YnN0dWInOlxuXHRcdFx0XHRlLnRhcmdldC5mb3JtLm1lcmdlaW50by5wYXJlbnRFbGVtZW50LnNldEF0dHJpYnV0ZSgnaGlkZGVuJywgJycpO1xuXHRcdFx0XHRlLnRhcmdldC5mb3JtLmZ3ZGNzZHJlYXNvbi5wYXJlbnRFbGVtZW50LnNldEF0dHJpYnV0ZSgnaGlkZGVuJywgJycpO1xuXHRcdFx0XHRlLnRhcmdldC5mb3JtLnhmZHJlYXNvbi52YWx1ZSA9IFR3aW5rbGUuZ2V0UHJlZignYWZkU3Vic3R1YkRlZmF1bHRSZWFzb24nKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRlLnRhcmdldC5mb3JtLm1lcmdlaW50by5wYXJlbnRFbGVtZW50LnNldEF0dHJpYnV0ZSgnaGlkZGVuJywgJycpO1xuXHRcdFx0XHRlLnRhcmdldC5mb3JtLmZ3ZGNzZHJlYXNvbi5wYXJlbnRFbGVtZW50LnNldEF0dHJpYnV0ZSgnaGlkZGVuJywgJycpO1xuXHRcdH1cblx0XHRpZiAoVHdpbmtsZS5nZXRQcmVmKCdhZmREZWZhdWx0Q2F0ZWdvcnknKSA9PT0gJ3NhbWUnKSB7XG5cdFx0XHRsb2NhbFN0b3JhZ2UuVHdpbmtsZV9hZmRDYXRlZ29yeSA9IGUudGFyZ2V0LnZhbHVlO1xuXHRcdH1cblx0fTtcblx0VHdpbmtsZS54ZmQuY2FsbGJhY2tzID0ge1xuXHRcdGFmZDoge1xuXHRcdFx0bWFpbjogKHRhZ2dpbmdfcGFnZSkgPT4ge1xuXHRcdFx0XHRjb25zdCBwYXJhbXMgPSB0YWdnaW5nX3BhZ2UuZ2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKCk7XG5cdFx0XHRcdFR3aW5rbGUueGZkLmNhbGxiYWNrcy5hZmQudGFnZ2luZ0FydGljbGUodGFnZ2luZ19wYWdlKTtcblx0XHRcdFx0Ly8gQWRkaW5nIGRpc2N1c3Npb25cblx0XHRcdFx0Y29uc3QgZGlzY3Vzc2lvbl9wYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShcblx0XHRcdFx0XHRwYXJhbXMubG9ncGFnZSxcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+WKoOWFpeiuqOiuuuWIsOW9k+aXpeWIl+ihqCcsICfliqDlhaXoqI7oq5bliLDnlbbml6XliJfooagnKVxuXHRcdFx0XHQpO1xuXHRcdFx0XHRkaXNjdXNzaW9uX3BhZ2Uuc2V0Rm9sbG93UmVkaXJlY3QodHJ1ZSk7XG5cdFx0XHRcdGRpc2N1c3Npb25fcGFnZS5zZXRDYWxsYmFja1BhcmFtZXRlcnMocGFyYW1zKTtcblx0XHRcdFx0ZGlzY3Vzc2lvbl9wYWdlLmxvYWQoVHdpbmtsZS54ZmQuY2FsbGJhY2tzLmFmZC50b2RheXNMaXN0KTtcblx0XHRcdFx0Ly8gTm90aWZpY2F0aW9uIHRvIGZpcnN0IGNvbnRyaWJ1dG9yXG5cdFx0XHRcdGlmIChwYXJhbXMubm90aWZ5KSB7XG5cdFx0XHRcdFx0Ly8gRGlzYWxsb3cgd2FybmluZyB5b3Vyc2VsZlxuXHRcdFx0XHRcdGlmIChwYXJhbXMuY3JlYXRvciA9PT0gbXcuY29uZmlnLmdldCgnd2dVc2VyTmFtZScpKSB7XG5cdFx0XHRcdFx0XHRNb3JlYml0cy5zdGF0dXMud2Fybihcblx0XHRcdFx0XHRcdFx0YCR7d2luZG93LndnVUxTKCfpgJrnn6XpobXpnaLliJvlu7rogIXvvIgnLCAn6YCa55+l6aCB6Z2i5bu656uL6ICF77yIJykgKyBwYXJhbXMuY3JlYXRvcn3vvIlgLFxuXHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+aCqOWIm+W7uuS6huivpemhte+8jOi3s+i/h+mAmuefpScsICfmgqjlu7rnq4vkuoboqbLpoIHvvIzot7PpgY7pgJrnn6UnKVxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdHBhcmFtcy5jcmVhdG9yID0gbnVsbDtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0Y29uc3QgdGFsa1BhZ2VOYW1lID0gYFVzZXIgdGFsazoke3BhcmFtcy5jcmVhdG9yfWA7XG5cdFx0XHRcdFx0XHRjb25zdCB1c2VydGFsa3BhZ2UgPSBuZXcgTW9yZWJpdHMud2lraS5wYWdlKFxuXHRcdFx0XHRcdFx0XHR0YWxrUGFnZU5hbWUsXG5cdFx0XHRcdFx0XHRcdGAke3dpbmRvdy53Z1VMUygn6YCa55+l6aG16Z2i5Yib5bu66ICF77yIJywgJ+mAmuefpemggemdouW7uueri+iAhe+8iCcpICsgcGFyYW1zLmNyZWF0b3J977yJYFxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdGNvbnN0IG5vdGlmeXRleHQgPSAnXFxue3snXG5cdFx0XHRcdFx0XHRcdC5jb25jYXQoJ3N1YnN0OicpXG5cdFx0XHRcdFx0XHRcdC5jb25jYXQoYEFGRE5vdGV8JHtNb3JlYml0cy5wYWdlTmFtZU5vcm19fX0tLX5+YCwgJ35+Jyk7XG5cdFx0XHRcdFx0XHR1c2VydGFsa3BhZ2Uuc2V0QXBwZW5kVGV4dChub3RpZnl0ZXh0KTtcblx0XHRcdFx0XHRcdHVzZXJ0YWxrcGFnZS5zZXRFZGl0U3VtbWFyeShg6YCa55+l77ya6aG16Z2iW1ske01vcmViaXRzLnBhZ2VOYW1lTm9ybX1dXeWtmOW6n+iuqOiuuuaPkOWQjWApO1xuXHRcdFx0XHRcdFx0dXNlcnRhbGtwYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdFx0XHRcdHVzZXJ0YWxrcGFnZS5zZXRDcmVhdGVPcHRpb24oJ3JlY3JlYXRlJyk7XG5cdFx0XHRcdFx0XHR1c2VydGFsa3BhZ2Uuc2V0V2F0Y2hsaXN0KFR3aW5rbGUuZ2V0UHJlZigneGZkV2F0Y2hVc2VyJykpO1xuXHRcdFx0XHRcdFx0dXNlcnRhbGtwYWdlLnNldEZvbGxvd1JlZGlyZWN0KHRydWUsIGZhbHNlKTtcblx0XHRcdFx0XHRcdHVzZXJ0YWxrcGFnZS5hcHBlbmQoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Ly8gYWRkIHRoaXMgbm9taW5hdGlvbiB0byB0aGUgdXNlcidzIHVzZXJzcGFjZSBsb2csIGlmIHRoZSB1c2VyIGhhcyBlbmFibGVkIGl0XG5cdFx0XHRcdFx0aWYgKHBhcmFtcy5sb2dub21pbmF0aW9uKSB7XG5cdFx0XHRcdFx0XHRUd2lua2xlLnhmZC5jYWxsYmFja3MuYWRkVG9Mb2cocGFyYW1zLCBwYXJhbXMuY3JlYXRvcik7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdC8vIG9yLCBpZiBub3Qgbm90aWZ5aW5nLCBhZGQgdGhpcyBub21pbmF0aW9uIHRvIHRoZSB1c2VyJ3MgdXNlcnNwYWNlIGxvZyB3aXRob3V0IHRoZSBpbml0aWFsIGNvbnRyaWJ1dG9yJ3MgbmFtZVxuXHRcdFx0XHR9IGVsc2UgaWYgKHBhcmFtcy5sb2dub21pbmF0aW9uKSB7XG5cdFx0XHRcdFx0VHdpbmtsZS54ZmQuY2FsbGJhY2tzLmFkZFRvTG9nKHBhcmFtcywgbnVsbCk7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHR0YWdnaW5nQXJ0aWNsZTogKHBhZ2VvYmopID0+IHtcblx0XHRcdFx0bGV0IHRleHQgPSBwYWdlb2JqLmdldFBhZ2VUZXh0KCk7XG5cdFx0XHRcdGNvbnN0IHBhcmFtcyA9IHBhZ2VvYmouZ2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKCk7XG5cdFx0XHRcdGxldCB0YWcgPSBge3t2ZmR8JHtNb3JlYml0cy5zdHJpbmcuZm9ybWF0UmVhc29uVGV4dChwYXJhbXMueGZkcmVhc29uKX1gO1xuXHRcdFx0XHRpZiAoTW9yZWJpdHMuaXNQYWdlUmVkaXJlY3QoKSkge1xuXHRcdFx0XHRcdHRhZyArPSAnfHInO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHRhZyArPSAnfGRhdGU9e3snLmNvbmNhdCgnc3Vic3Q6JywgJyN0aW1lOlkvbS9kfX19fScpO1xuXHRcdFx0XHRpZiAocGFyYW1zLm5vaW5jbHVkZSkge1xuXHRcdFx0XHRcdHRhZyA9IGA8bm9pbmNsdWRlPiR7dGFnfTwvbm9pbmNsdWRlPmA7XG5cdFx0XHRcdFx0Ly8g5Y+q5pyJ6KGo5qC86ZyA6KaB5Y2V54us5Yqg5Zue6L2m77yM5YW25LuW5oOF5Ya15Yqg5Zue6L2m5Lya56C05Z2P5qih5p2/44CCXG5cdFx0XHRcdFx0aWYgKHRleHQuaW5kZXhPZigne3wnKSA9PT0gMCkge1xuXHRcdFx0XHRcdFx0dGFnICs9ICdcXG4nO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR0YWcgKz0gJ1xcbic7XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gVGhlbiwgdGVzdCBpZiB0aGVyZSBhcmUgc3BlZWR5IGRlbGV0aW9uLXJlbGF0ZWQgdGVtcGxhdGVzIG9uIHRoZSBhcnRpY2xlLlxuXHRcdFx0XHRjb25zdCB0ZXh0Tm9TZCA9IHRleHQucmVwbGFjZShcblx0XHRcdFx0XHQvXFx7XFx7XFxzKihkYigtXFx3Kik/fGR8ZGVsZXRlfCg/Omhhbmd8aG9sZClbLSBdP29uKVxccyooXFx8KD86XFx7XFx7W157fV0qXFx9XFx9fFtee31dKSopP1xcfVxcfVxccyovZ2ksXG5cdFx0XHRcdFx0Jydcblx0XHRcdFx0KTtcblx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdHRleHQgIT09IHRleHROb1NkICYmXG5cdFx0XHRcdFx0Y29uZmlybShcblx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5Zyo6aG16Z2i5LiK5om+5Yiw5b+r6YCf5Yig6Zmk5qih5p2/77yM6KaB56e76Zmk5ZCX77yfJywgJ+WcqOmggemdouS4iuaJvuWIsOW/q+mAn+WIqumZpOaooeadv++8jOimgeenu+mZpOWXju+8nycpXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpIHtcblx0XHRcdFx0XHR0ZXh0ID0gdGV4dE5vU2Q7XG5cdFx0XHRcdH1cblx0XHRcdFx0Y29uc3QgdGV4dE5vTm90TWFuZGFyaW4gPSB0ZXh0LnJlcGxhY2UoXG5cdFx0XHRcdFx0L1xce1xce1xccyooTm90TWFuZGFyaW58Tm90Y2hpbmVzZXzpnZ7kuK3mlod86Z2e54++5Luj5ryi6KqefOmdnueOsOS7o+axieivrXzpnZ7nj77ku6PmqJnmupbmvKLoqp586Z2e546w5Luj5qCH5YeG5rGJ6K+tKVxccyooXFx8KD86XFx7XFx7W157fV0qXFx9XFx9fFtee31dKSopP1xcfVxcfVxccyovZ2ksXG5cdFx0XHRcdFx0Jydcblx0XHRcdFx0KTtcblx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdHRleHQgIT09IHRleHROb05vdE1hbmRhcmluICYmXG5cdFx0XHRcdFx0Y29uZmlybShcblx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0J+WcqOmhtemdouS4iuaJvuWIsOmdnueOsOS7o+agh+WHhuaxieivreaooeadv++8jOimgeenu+mZpOWQl++8nycsXG5cdFx0XHRcdFx0XHRcdCflnKjpoIHpnaLkuIrmib7liLDpnZ7nj77ku6PmqJnmupbmvKLoqp7mqKHmnb/vvIzopoHnp7vpmaTll47vvJ8nXG5cdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpIHtcblx0XHRcdFx0XHR0ZXh0ID0gdGV4dE5vTm90TWFuZGFyaW47XG5cdFx0XHRcdH1cblx0XHRcdFx0Y29uc3QgdGV4dE5vQWZjID0gdGV4dC5yZXBsYWNlKC97e1xccypBRkMgc3VibWlzc2lvblxccypcXHxcXHMqXFx8W159XSo/fX1cXHMqL2dpLCAnJyk7XG5cdFx0XHRcdGlmIChcblx0XHRcdFx0XHR0ZXh0ICE9PSB0ZXh0Tm9BZmMgJiZcblx0XHRcdFx0XHRjb25maXJtKHdpbmRvdy53Z1VMUygn5Zyo6aG16Z2i5LiK5om+5YiwQUZD5o+Q5Lqk5qih5p2/77yM6KaB56e76Zmk5ZCX77yfJywgJ+WcqOmggemdouS4iuaJvuWIsEFGQ+aPkOS6pOaooeadv++8jOimgeenu+mZpOWXju+8nycpKVxuXHRcdFx0XHQpIHtcblx0XHRcdFx0XHR0ZXh0ID0gdGV4dE5vQWZjO1xuXHRcdFx0XHR9XG5cdFx0XHRcdC8vIE1hcmsgdGhlIHBhZ2UgYXMgcGF0cm9sbGVkLCBpZiB3YW50ZWRcblx0XHRcdFx0aWYgKFR3aW5rbGUuZ2V0UHJlZignbWFya1hmZFBhZ2VzQXNQYXRyb2xsZWQnKSkge1xuXHRcdFx0XHRcdHBhZ2VvYmoucGF0cm9sKCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gSW5zZXJ0IHRhZyBhZnRlciBzaG9ydCBkZXNjcmlwdGlvbiBvciBhbnkgaGF0bm90ZXNcblx0XHRcdFx0Y29uc3QgcWl1d2VuX3BhZ2UgPSBuZXcgTW9yZWJpdHMud2lraXRleHQucGFnZSh0ZXh0KTtcblx0XHRcdFx0dGV4dCA9IHFpdXdlbl9wYWdlLmluc2VydEFmdGVyVGVtcGxhdGVzKHRhZywgVHdpbmtsZS5oYXRub3RlUmVnZXgpLmdldFRleHQoKTtcblx0XHRcdFx0cGFnZW9iai5zZXRQYWdlVGV4dCh0ZXh0KTtcblx0XHRcdFx0cGFnZW9iai5zZXRFZGl0U3VtbWFyeShcblx0XHRcdFx0XHRgJHt3aW5kb3cud2dVTFMoJ+mhtemdouWtmOW6n+iuqOiuuu+8mltbJywgJ+mggemdouWtmOW7ouiojuirlu+8mltbJykgKyBwYXJhbXMubG9ncGFnZX0jJHtNb3JlYml0cy5wYWdlTmFtZU5vcm19XV1gXG5cdFx0XHRcdCk7XG5cdFx0XHRcdHBhZ2VvYmouc2V0Q2hhbmdlVGFncyhUd2lua2xlLmNoYW5nZVRhZ3MpO1xuXHRcdFx0XHRwYWdlb2JqLnNldFdhdGNobGlzdChUd2lua2xlLmdldFByZWYoJ3hmZFdhdGNoUGFnZScpKTtcblx0XHRcdFx0cGFnZW9iai5zYXZlKCk7XG5cdFx0XHR9LFxuXHRcdFx0dG9kYXlzTGlzdDogKHBhZ2VvYmopID0+IHtcblx0XHRcdFx0bGV0IHRleHQgPSBwYWdlb2JqLmdldFBhZ2VUZXh0KCk7XG5cdFx0XHRcdGNvbnN0IHBhcmFtcyA9IHBhZ2VvYmouZ2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKCk7XG5cdFx0XHRcdGxldCB0eXBlID0gJyc7XG5cdFx0XHRcdGxldCB0byA9ICcnO1xuXHRcdFx0XHRzd2l0Y2ggKHBhcmFtcy54ZmRjYXQpIHtcblx0XHRcdFx0XHRjYXNlICdmd2Rjc2QnOlxuXHRcdFx0XHRcdGNhc2UgJ21lcmdlJzpcblx0XHRcdFx0XHRcdHRvID0gcGFyYW1zLm1lcmdlaW50bztcblx0XHRcdFx0XHQvKiBGYWxsIHRocm91Z2ggKi9cblx0XHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdFx0dHlwZSA9IHBhcmFtcy54ZmRjYXQ7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0XHRsZXQgYXBwZW5kID0gdHJ1ZTtcblx0XHRcdFx0c3dpdGNoICh0eXBlKSB7XG5cdFx0XHRcdFx0Y2FzZSAnZmFtZSc6XG5cdFx0XHRcdFx0Y2FzZSAnc3Vic3R1Yic6XG5cdFx0XHRcdFx0Y2FzZSAnYmF0Y2gnOiB7XG5cdFx0XHRcdFx0XHRjb25zdCBjb21tZW50VGV4dCA9IGA8IS0tIFR3aW5rbGU6IFVzZXI6JHttdy5jb25maWcuZ2V0KFxuXHRcdFx0XHRcdFx0XHQnd2dVc2VyTmFtZSdcblx0XHRcdFx0XHRcdCl9IOeahCAke3R5cGV9IOaPkOWIoOaPkuWFpeeCue+8jOivt+WLv+abtOaUueaIluenu+mZpOatpOihjO+8jOmZpOmdnuS4jeWGjeS6juatpOmhtemdouaPkOWIoCAtLT5gO1xuXHRcdFx0XHRcdFx0bGV0IG5ld1RleHQgPSBgPT09W1s6JHtNb3JlYml0cy5wYWdlTmFtZU5vcm19XV09PT1gO1xuXHRcdFx0XHRcdFx0aWYgKHR5cGUgPT09ICdmYW1lJykge1xuXHRcdFx0XHRcdFx0XHRuZXdUZXh0ICs9IGBcXG57e0ZpbmRzb3VyY2VzfCR7TW9yZWJpdHMucGFnZU5hbWVOb3JtfX19YDtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmICh0ZXh0LmluY2x1ZGVzKGNvbW1lbnRUZXh0KSkge1xuXHRcdFx0XHRcdFx0XHR0ZXh0ID0gdGV4dC5yZXBsYWNlKGNvbW1lbnRUZXh0LCBgJHtuZXdUZXh0fVxcblxcbiR7Y29tbWVudFRleHR9YCk7XG5cdFx0XHRcdFx0XHRcdHBhZ2VvYmouc2V0UGFnZVRleHQodGV4dCk7XG5cdFx0XHRcdFx0XHRcdGFwcGVuZCA9IGZhbHNlO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0Y29uc3Qgc2FmZXN1YnN0ID0gJ3NhZmVzdWJzdCc7XG5cdFx0XHRcdFx0XHRcdGNvbnN0IGFwcGVuZFRleHQgPSBgXFxue3ske3NhZmVzdWJzdH0ke2A6U2FmZUFmZEhlYWR9fVxcbiR7XG5cdFx0XHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcdFx0ZmFtZTogJz09IDMw5aSp5ZCO5LuN5oyC5pyJe3t0bHxub3RhYmlsaXR5fX3mqKHmnb/nmoTmnaHnm64gPT1cXG48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZTogc21hbGxlcjtcIj7vvIjlt7LmjIJbW1RlbXBsYXRlOm5vdGFiaWxpdHl85LiN56ym5pS25b2V5qCH5YeG5qih5p2/XV0zMOWkqe+8iTwvc3Bhbj4nLFxuXHRcdFx0XHRcdFx0XHRcdFx0c3Vic3R1Yjpcblx0XHRcdFx0XHRcdFx0XHRcdFx0Jz09IDMw5aSp5ZCO5LuN5oyC5pyJe3t0bHxzdWJzdHVifX3mqKHmnb/nmoTmnaHnm64gPT1cXG48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZTogc21hbGxlcjtcIj7vvIjlt7LmjIJbW1RlbXBsYXRlOnN1YnN0dWJ85bCP5bCP5p2h55uu5qih5p2/XV0zMOWkqe+8iTwvc3Bhbj4nLFxuXHRcdFx0XHRcdFx0XHRcdFx0YmF0Y2g6ICc9PSDmibnph4/mj5DliKAgPT0nLFxuXHRcdFx0XHRcdFx0XHRcdH1bdHlwZV1cblx0XHRcdFx0XHRcdFx0fVxcbiR7bmV3VGV4dH1cXG5cXG4ke2NvbW1lbnRUZXh0fVxcbi0tLS1cXG465bu66K6u77ya5Yig6Zmk5YmN6L+w6aG16Z2i77yb55CG55Sx77yaJHtNb3JlYml0cy5zdHJpbmcuZm9ybWF0UmVhc29uVGV4dChcblx0XHRcdFx0XHRcdFx0XHRwYXJhbXMueGZkcmVhc29uXG5cdFx0XHRcdFx0XHRcdCl9XFxu5o+Q5oql5Lul5LiKJHtcblx0XHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0XHRmYW1lOiAnPHU+5LiN56ym5ZCI5pS25b2V5qCH5YeGPC91PuadoeebricsXG5cdFx0XHRcdFx0XHRcdFx0XHRzdWJzdHViOiAnPHU+6ZW/5bqm6L+H55+tPC91PuadoeebricsXG5cdFx0XHRcdFx0XHRcdFx0XHRiYXRjaDogJ+mhtemdoicsXG5cdFx0XHRcdFx0XHRcdFx0fVt0eXBlXVxuXHRcdFx0XHRcdFx0XHR955qE5rGC6Ze757yW6ICF5Y+K5pe26Ze077yaPGJyIGlkPVwibm8tbmV3LXRpdGxlXCI+fn5gLmNvbmNhdCgnfn4nKX1gO1xuXHRcdFx0XHRcdFx0XHRwYWdlb2JqLnNldEFwcGVuZFRleHQoYXBwZW5kVGV4dCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHRcdHBhZ2VvYmouc2V0QXBwZW5kVGV4dChcblx0XHRcdFx0XHRcdFx0J1xcbnt7Jy5jb25jYXQoXG5cdFx0XHRcdFx0XHRcdFx0J3N1YnN0OicsXG5cdFx0XHRcdFx0XHRcdFx0YERSSXRlbXxUeXBlPSR7dHlwZX18RFJhcnRpY2xlcz0ke1xuXHRcdFx0XHRcdFx0XHRcdFx0TW9yZWJpdHMucGFnZU5hbWVOb3JtXG5cdFx0XHRcdFx0XHRcdFx0fXxSZWFzb249JHtNb3JlYml0cy5zdHJpbmcuZm9ybWF0UmVhc29uVGV4dChwYXJhbXMueGZkcmVhc29uKX0ke1xuXHRcdFx0XHRcdFx0XHRcdFx0cGFyYW1zLmZ3ZGNzZHJlYXNvbi50cmltKCkgPT09ICcnID8gJycgOiBgPGJyPlxcbui9rOS6pOeQhueUse+8miR7cGFyYW1zLmZ3ZGNzZHJlYXNvbn1gXG5cdFx0XHRcdFx0XHRcdFx0fXxUbz0ke3RvfX19fn5gLmNvbmNhdCgnfn4nKVxuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdFx0cGFnZW9iai5zZXRFZGl0U3VtbWFyeShg5Yqg5YWlW1ske01vcmViaXRzLnBhZ2VOYW1lTm9ybX1dXWApO1xuXHRcdFx0XHRwYWdlb2JqLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdFx0cGFnZW9iai5zZXRXYXRjaGxpc3QoVHdpbmtsZS5nZXRQcmVmKCd4ZmRXYXRjaERpc2N1c3Npb24nKSk7XG5cdFx0XHRcdHBhZ2VvYmouc2V0Q3JlYXRlT3B0aW9uKCdyZWNyZWF0ZScpO1xuXHRcdFx0XHRpZiAoYXBwZW5kKSB7XG5cdFx0XHRcdFx0cGFnZW9iai5hcHBlbmQoKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRwYWdlb2JqLnNhdmUoKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRUd2lua2xlLnhmZC5jdXJyZW50UmF0aW9uYWxlID0gbnVsbDtcblx0XHRcdH0sXG5cdFx0XHRsb29rdXBDcmVhdGlvbjogKHRhcmdldF9wYWdlKSA9PiB7XG5cdFx0XHRcdHRhcmdldF9wYWdlLmdldFN0YXR1c0VsZW1lbnQoKS5pbmZvKCflrozmiJAnKTtcblx0XHRcdFx0Y29uc3QgcGFyYW1zID0gdGFyZ2V0X3BhZ2UuZ2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKCk7XG5cdFx0XHRcdHBhcmFtcy5jcmVhdG9yID0gdGFyZ2V0X3BhZ2UuZ2V0Q3JlYXRvcigpO1xuXHRcdFx0XHQvLyBUYWdnaW5nIHBhZ2Vcblx0XHRcdFx0Y29uc3QgdGFnZ2luZ19wYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShcblx0XHRcdFx0XHRtdy5jb25maWcuZ2V0KCd3Z1BhZ2VOYW1lJyksXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKCfliqDlhaXlrZjlup/orqjorrrmqKHmnb/liLDpobXpnaInLCAn5Yqg5YWl5a2Y5bui6KiO6KuW5qih5p2/5Yiw6aCB6Z2iJylcblx0XHRcdFx0KTtcblx0XHRcdFx0dGFnZ2luZ19wYWdlLnNldEZvbGxvd1JlZGlyZWN0KGZhbHNlKTtcblx0XHRcdFx0dGFnZ2luZ19wYWdlLnNldENhbGxiYWNrUGFyYW1ldGVycyhwYXJhbXMpO1xuXHRcdFx0XHR0YWdnaW5nX3BhZ2UubG9hZChUd2lua2xlLnhmZC5jYWxsYmFja3MuYWZkLnRyeVRhZ2dpbmcpO1xuXHRcdFx0fSxcblx0XHRcdHRyeVRhZ2dpbmc6ICh0YWdnaW5nX3BhZ2UpID0+IHtcblx0XHRcdFx0Y29uc3Qgc3RhdGVsZW0gPSB0YWdnaW5nX3BhZ2UuZ2V0U3RhdHVzRWxlbWVudCgpO1xuXHRcdFx0XHQvLyBkZWZhdWx0cyB0byAvZG9jIGZvciBsdWEgbW9kdWxlcywgd2hpY2ggbWF5IG5vdCBleGlzdFxuXHRcdFx0XHRpZiAoIXRhZ2dpbmdfcGFnZS5leGlzdHMoKSkge1xuXHRcdFx0XHRcdHN0YXRlbGVtLmVycm9yKHdpbmRvdy53Z1VMUygn6aG16Z2i5LiN5a2Y5Zyo77yM5Y+v6IO95bey6KKr5Yig6ZmkJywgJ+mggemdouS4jeWtmOWcqO+8jOWPr+iDveW3suiiq+WIqumZpCcpKTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0Y29uc3QgdGV4dCA9IHRhZ2dpbmdfcGFnZS5nZXRQYWdlVGV4dCgpO1xuXHRcdFx0XHRjb25zdCB4ZmQgPSAvKD86XFx7XFx7KFtyc2FpZnRjbXZdZmR8bWQxfHByb3Bvc2VkIGRlbGV0aW9uKVtee31dKj9cXH1cXH0pL2kuZXhlYyh0ZXh0KTtcblx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdHhmZCAmJlxuXHRcdFx0XHRcdCFjb25maXJtKFxuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfliKDpmaTnm7jlhbPmqKHmnb97eycsICfliKrpmaTnm7jpl5zmqKHmnb97eycpICtcblx0XHRcdFx0XHRcdFx0eGZkWzFdICtcblx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCd9feW3suiiq+e9ruS6jumhtemdouS4re+8jOaCqOaYr+WQpuS7jeaDs+e7p+e7reaPkOaKpe+8nycsXG5cdFx0XHRcdFx0XHRcdFx0J3195bey6KKr572u5pa86aCB6Z2i5Lit77yM5oKo5piv5ZCm5LuN5oOz57m857qM5o+Q5aCx77yfJ1xuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpIHtcblx0XHRcdFx0XHRzdGF0ZWxlbS5lcnJvcih3aW5kb3cud2dVTFMoJ+mhtemdouW3suiiq+aPkOS6pOiHs+WtmOW6n+iuqOiuuuOAgicsICfpoIHpnaLlt7Looqvmj5DkuqToh7PlrZjlu6LoqI7oq5bjgIInKSk7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGNvbnN0IGNvcHl2aW8gPSAvKD86XFx7XFx7XFxzKihjb3B5dmlvKVtee31dKj9cXH1cXH0pL2kuZXhlYyh0ZXh0KTtcblx0XHRcdFx0aWYgKGNvcHl2aW8pIHtcblx0XHRcdFx0XHRzdGF0ZWxlbS5lcnJvcih3aW5kb3cud2dVTFMoJ+mhtemdouS4reW3suacieiRl+S9nOadg+mqjOivgeaooeadv+OAgicsICfpoIHpnaLkuK3lt7LmnInokZfkvZzmrIrpqZforYnmqKHmnb/jgIInKSk7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdFR3aW5rbGUueGZkLmNhbGxiYWNrcy5hZmQubWFpbih0YWdnaW5nX3BhZ2UpO1xuXHRcdFx0fSxcblx0XHR9LFxuXHRcdGZmZDoge1xuXHRcdFx0bWFpbjogKHRhZ2dpbmdfcGFnZSkgPT4ge1xuXHRcdFx0XHRjb25zdCBwYXJhbXMgPSB0YWdnaW5nX3BhZ2UuZ2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKCk7XG5cdFx0XHRcdFR3aW5rbGUueGZkLmNhbGxiYWNrcy5mZmQudGFnZ2luZ0ltYWdlKHRhZ2dpbmdfcGFnZSk7XG5cdFx0XHRcdC8vIEFkZGluZyBkaXNjdXNzaW9uXG5cdFx0XHRcdGNvbnN0IHFpdXdlbl9wYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShcblx0XHRcdFx0XHRwYXJhbXMubG9ncGFnZSxcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+WKoOWFpeiuqOiuuuWIsOW9k+aXpeWIl+ihqCcsICfliqDlhaXoqI7oq5bliLDnlbbml6XliJfooagnKVxuXHRcdFx0XHQpO1xuXHRcdFx0XHRxaXV3ZW5fcGFnZS5zZXRGb2xsb3dSZWRpcmVjdCh0cnVlKTtcblx0XHRcdFx0cWl1d2VuX3BhZ2Uuc2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKHBhcmFtcyk7XG5cdFx0XHRcdHFpdXdlbl9wYWdlLmxvYWQoVHdpbmtsZS54ZmQuY2FsbGJhY2tzLmZmZC50b2RheXNMaXN0KTtcblx0XHRcdFx0Ly8gTm90aWZpY2F0aW9uIHRvIGZpcnN0IGNvbnRyaWJ1dG9yXG5cdFx0XHRcdGlmIChwYXJhbXMubm90aWZ5KSB7XG5cdFx0XHRcdFx0Ly8gRGlzYWxsb3cgd2FybmluZyB5b3Vyc2VsZlxuXHRcdFx0XHRcdGlmIChwYXJhbXMuY3JlYXRvciA9PT0gbXcuY29uZmlnLmdldCgnd2dVc2VyTmFtZScpKSB7XG5cdFx0XHRcdFx0XHRNb3JlYml0cy5zdGF0dXMud2Fybihcblx0XHRcdFx0XHRcdFx0YCR7d2luZG93LndnVUxTKCfpgJrnn6XpobXpnaLliJvlu7rogIXvvIgnLCAn6YCa55+l6aCB6Z2i5bu656uL6ICF77yIJykgKyBwYXJhbXMuY3JlYXRvcn3vvIlgLFxuXHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+aCqOWIm+W7uuS6huivpemhte+8jOi3s+i/h+mAmuefpScsICfmgqjlu7rnq4vkuoboqbLpoIHvvIzot7PpgY7pgJrnn6UnKVxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Y29uc3QgdGFsa1BhZ2VOYW1lID0gYFVzZXIgdGFsazoke3BhcmFtcy5jcmVhdG9yfWA7XG5cdFx0XHRcdFx0Y29uc3QgdXNlcnRhbGtwYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShcblx0XHRcdFx0XHRcdHRhbGtQYWdlTmFtZSxcblx0XHRcdFx0XHRcdGAke3dpbmRvdy53Z1VMUygn6YCa55+l6aG16Z2i5Yib5bu66ICF77yIJywgJ+mAmuefpemggemdouW7uueri+iAhe+8iCcpICsgcGFyYW1zLmNyZWF0b3J977yJYFxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0Y29uc3Qgbm90aWZ5dGV4dCA9ICdcXG57eycuY29uY2F0KCdzdWJzdDonLCBgaWR3fEZpbGU6JHttdy5jb25maWcuZ2V0KCd3Z1RpdGxlJyl9fX1gLCAnLS1+ficsICd+ficpO1xuXHRcdFx0XHRcdHVzZXJ0YWxrcGFnZS5zZXRBcHBlbmRUZXh0KG5vdGlmeXRleHQpO1xuXHRcdFx0XHRcdHVzZXJ0YWxrcGFnZS5zZXRFZGl0U3VtbWFyeShg6YCa55+l77ya5paH5Lu2W1ske01vcmViaXRzLnBhZ2VOYW1lTm9ybX1dXeWtmOW6n+iuqOiuuuaPkOWQjWApO1xuXHRcdFx0XHRcdHVzZXJ0YWxrcGFnZS5zZXRDaGFuZ2VUYWdzKFR3aW5rbGUuY2hhbmdlVGFncyk7XG5cdFx0XHRcdFx0dXNlcnRhbGtwYWdlLnNldENyZWF0ZU9wdGlvbigncmVjcmVhdGUnKTtcblx0XHRcdFx0XHR1c2VydGFsa3BhZ2Uuc2V0V2F0Y2hsaXN0KFR3aW5rbGUuZ2V0UHJlZigneGZkV2F0Y2hVc2VyJykpO1xuXHRcdFx0XHRcdHVzZXJ0YWxrcGFnZS5zZXRGb2xsb3dSZWRpcmVjdCh0cnVlLCBmYWxzZSk7XG5cdFx0XHRcdFx0dXNlcnRhbGtwYWdlLmFwcGVuZCgpO1xuXHRcdFx0XHRcdC8vIGFkZCB0aGlzIG5vbWluYXRpb24gdG8gdGhlIHVzZXIncyB1c2Vyc3BhY2UgbG9nLCBpZiB0aGUgdXNlciBoYXMgZW5hYmxlZCBpdFxuXHRcdFx0XHRcdGlmIChwYXJhbXMubG9nbm9taW5hdGlvbikge1xuXHRcdFx0XHRcdFx0VHdpbmtsZS54ZmQuY2FsbGJhY2tzLmFkZFRvTG9nKHBhcmFtcywgcGFyYW1zLmNyZWF0b3IpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHQvLyBvciwgaWYgbm90IG5vdGlmeWluZywgYWRkIHRoaXMgbm9taW5hdGlvbiB0byB0aGUgdXNlcidzIHVzZXJzcGFjZSBsb2cgd2l0aG91dCB0aGUgaW5pdGlhbCBjb250cmlidXRvcidzIG5hbWVcblx0XHRcdFx0fSBlbHNlIGlmIChwYXJhbXMubG9nbm9taW5hdGlvbikge1xuXHRcdFx0XHRcdFR3aW5rbGUueGZkLmNhbGxiYWNrcy5hZGRUb0xvZyhwYXJhbXMsIG51bGwpO1xuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXHRcdFx0dGFnZ2luZ0ltYWdlOiAocGFnZW9iaikgPT4ge1xuXHRcdFx0XHRjb25zdCB0ZXh0ID0gcGFnZW9iai5nZXRQYWdlVGV4dCgpO1xuXHRcdFx0XHRjb25zdCBwYXJhbXMgPSBwYWdlb2JqLmdldENhbGxiYWNrUGFyYW1ldGVycygpO1xuXHRcdFx0XHRwYWdlb2JqLnNldFBhZ2VUZXh0KFxuXHRcdFx0XHRcdGB7e2lmZHwke01vcmViaXRzLnN0cmluZy5mb3JtYXRSZWFzb25UZXh0KHBhcmFtcy54ZmRyZWFzb24pfXxkYXRlPXt7YC5jb25jYXQoXG5cdFx0XHRcdFx0XHQnc3Vic3Q6Jyxcblx0XHRcdFx0XHRcdGAjdGltZTpjfX19fVxcbiR7dGV4dH1gXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpO1xuXHRcdFx0XHRwYWdlb2JqLnNldEVkaXRTdW1tYXJ5KFxuXHRcdFx0XHRcdGAke3dpbmRvdy53Z1VMUygn5paH5Lu25a2Y5bqf6K6o6K6677yaW1snLCAn5qqU5qGI5a2Y5bui6KiO6KuW77yaW1snKSArIHBhcmFtcy5sb2dwYWdlfSMke01vcmViaXRzLnBhZ2VOYW1lTm9ybX1dXWBcblx0XHRcdFx0KTtcblx0XHRcdFx0cGFnZW9iai5zZXRDaGFuZ2VUYWdzKFR3aW5rbGUuY2hhbmdlVGFncyk7XG5cdFx0XHRcdHBhZ2VvYmouc2V0V2F0Y2hsaXN0KFR3aW5rbGUuZ2V0UHJlZigneGZkV2F0Y2hQYWdlJykpO1xuXHRcdFx0XHRwYWdlb2JqLnNldENyZWF0ZU9wdGlvbigncmVjcmVhdGUnKTsgLy8gaXQgbWlnaHQgYmUgcG9zc2libGUgZm9yIGEgZmlsZSB0byBleGlzdCB3aXRob3V0IGEgZGVzY3JpcHRpb24gcGFnZVxuXHRcdFx0XHRwYWdlb2JqLnNhdmUoKTtcblx0XHRcdH0sXG5cdFx0XHR0b2RheXNMaXN0OiAocGFnZW9iaikgPT4ge1xuXHRcdFx0XHQvLyBjb25zdCB0ZXh0ID0gcGFnZW9iai5nZXRQYWdlVGV4dCgpO1xuXHRcdFx0XHRjb25zdCBwYXJhbXMgPSBwYWdlb2JqLmdldENhbGxiYWNrUGFyYW1ldGVycygpO1xuXHRcdFx0XHRwYWdlb2JqLnNldEFwcGVuZFRleHQoXG5cdFx0XHRcdFx0J1xcbnt7Jy5jb25jYXQoXG5cdFx0XHRcdFx0XHQnc3Vic3Q6Jyxcblx0XHRcdFx0XHRcdGBJZmRJdGVtfEZpbGVuYW1lPSR7bXcuY29uZmlnLmdldCgnd2dUaXRsZScpfXxVcGxvYWRlcj0ke1xuXHRcdFx0XHRcdFx0XHRwYXJhbXMuY3JlYXRvclxuXHRcdFx0XHRcdFx0fXxSZWFzb249JHtNb3JlYml0cy5zdHJpbmcuZm9ybWF0UmVhc29uVGV4dChwYXJhbXMueGZkcmVhc29uKX19fS0tfn5gLmNvbmNhdCgnfn4nKVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KTtcblx0XHRcdFx0cGFnZW9iai5zZXRFZGl0U3VtbWFyeShg5Yqg5YWlW1ske01vcmViaXRzLnBhZ2VOYW1lTm9ybX1dXWApO1xuXHRcdFx0XHRwYWdlb2JqLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdFx0cGFnZW9iai5zZXRXYXRjaGxpc3QoVHdpbmtsZS5nZXRQcmVmKCd4ZmRXYXRjaERpc2N1c3Npb24nKSk7XG5cdFx0XHRcdHBhZ2VvYmouc2V0Q3JlYXRlT3B0aW9uKCdyZWNyZWF0ZScpO1xuXHRcdFx0XHRwYWdlb2JqLmFwcGVuZCgoKSA9PiB7XG5cdFx0XHRcdFx0VHdpbmtsZS54ZmQuY3VycmVudFJhdGlvbmFsZSA9IG51bGw7IC8vIGFueSBlcnJvcnMgZnJvbSBub3cgb24gZG8gbm90IG5lZWQgdG8gcHJpbnQgdGhlIHJhdGlvbmFsZSwgYXMgaXQgaXMgc2FmZWx5IHNhdmVkIG9uLXdpa2lcblx0XHRcdFx0fSk7XG5cdFx0XHR9LFxuXG5cdFx0XHRsb29rdXBDcmVhdGlvbjogKHRhcmdldF9wYWdlKSA9PiB7XG5cdFx0XHRcdHRhcmdldF9wYWdlLmdldFN0YXR1c0VsZW1lbnQoKS5pbmZvKCflrozmiJAnKTtcblx0XHRcdFx0Y29uc3QgcGFyYW1zID0gdGFyZ2V0X3BhZ2UuZ2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKCk7XG5cdFx0XHRcdHBhcmFtcy5jcmVhdG9yID0gdGFyZ2V0X3BhZ2UuZ2V0Q3JlYXRvcigpO1xuXHRcdFx0XHQvLyBUYWdnaW5nIGZpbGVcblx0XHRcdFx0Y29uc3QgdGFnZ2luZ19wYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShcblx0XHRcdFx0XHRtdy5jb25maWcuZ2V0KCd3Z1BhZ2VOYW1lJyksXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKCfliqDlhaXlrZjlup/orqjorrrmqKHmnb/liLDmlofku7bmj4/ov7DpobUnLCAn5Yqg5YWl5a2Y5bui6KiO6KuW5qih5p2/5Yiw5qqU5qGI5o+P6L+w6aCBJylcblx0XHRcdFx0KTtcblx0XHRcdFx0dGFnZ2luZ19wYWdlLnNldEZvbGxvd1JlZGlyZWN0KGZhbHNlKTtcblx0XHRcdFx0dGFnZ2luZ19wYWdlLnNldENhbGxiYWNrUGFyYW1ldGVycyhwYXJhbXMpO1xuXHRcdFx0XHR0YWdnaW5nX3BhZ2UubG9hZChUd2lua2xlLnhmZC5jYWxsYmFja3MuZmZkLnRyeVRhZ2dpbmcpO1xuXHRcdFx0fSxcblx0XHRcdHRyeVRhZ2dpbmc6ICh0YWdnaW5nX3BhZ2UpID0+IHtcblx0XHRcdFx0Y29uc3Qgc3RhdGVsZW0gPSB0YWdnaW5nX3BhZ2UuZ2V0U3RhdHVzRWxlbWVudCgpO1xuXHRcdFx0XHRpZiAoIXRhZ2dpbmdfcGFnZS5leGlzdHMoKSkge1xuXHRcdFx0XHRcdHN0YXRlbGVtLmVycm9yKHdpbmRvdy53Z1VMUygn6aG16Z2i5LiN5a2Y5Zyo77yM5Y+v6IO95bey6KKr5Yig6ZmkJywgJ+mggemdouS4jeWtmOWcqO+8jOWPr+iDveW3suiiq+WIqumZpCcpKTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0Y29uc3QgdGV4dCA9IHRhZ2dpbmdfcGFnZS5nZXRQYWdlVGV4dCgpO1xuXHRcdFx0XHRjb25zdCB4ZmQgPSAvKD86XFx7XFx7KFtyc2FpZnRjbXZdZmR8bWQxfHByb3Bvc2VkIGRlbGV0aW9uKVtee31dKj9cXH1cXH0pL2kuZXhlYyh0ZXh0KTtcblx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdHhmZCAmJlxuXHRcdFx0XHRcdCFjb25maXJtKFxuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfliKDpmaTnm7jlhbPmqKHmnb97eycsICfliKrpmaTnm7jpl5zmqKHmnb97eycpICtcblx0XHRcdFx0XHRcdFx0eGZkWzFdICtcblx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCd9feW3suiiq+e9ruS6jumhtemdouS4re+8jOaCqOaYr+WQpuS7jeaDs+e7p+e7reaPkOaKpe+8nycsXG5cdFx0XHRcdFx0XHRcdFx0J3195bey6KKr572u5pa86aCB6Z2i5Lit77yM5oKo5piv5ZCm5LuN5oOz57m857qM5o+Q5aCx77yfJ1xuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpIHtcblx0XHRcdFx0XHRzdGF0ZWxlbS5lcnJvcih3aW5kb3cud2dVTFMoJ+mhtemdouW3suiiq+aPkOS6pOiHs+WtmOW6n+iuqOiuuuOAgicsICfpoIHpnaLlt7Looqvmj5DkuqToh7PlrZjlu6LoqI7oq5bjgIInKSk7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdFR3aW5rbGUueGZkLmNhbGxiYWNrcy5mZmQubWFpbih0YWdnaW5nX3BhZ2UpO1xuXHRcdFx0fSxcblx0XHR9LFxuXHRcdGFkZFRvTG9nOiAocGFyYW1zLCBpbml0aWFsQ29udHJpYikgPT4ge1xuXHRcdFx0Y29uc3QgZWRpdHN1bW1hcnkgPVxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ+iusOW9leWvuVtbJywgJ+iomOmMhOWwjVtbJykgK1xuXHRcdFx0XHRNb3JlYml0cy5wYWdlTmFtZU5vcm0gK1xuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ11d55qE5a2Y5bqf6K6o6K665o+Q5ZCNJywgJ11d55qE5a2Y5bui6KiO6KuW5o+Q5ZCNJyk7XG5cdFx0XHRjb25zdCB1c2wgPSBuZXcgTW9yZWJpdHMudXNlcnNwYWNlTG9nZ2VyKFR3aW5rbGUuZ2V0UHJlZigneGZkTG9nUGFnZU5hbWUnKSk7XG5cdFx0XHR1c2wuaW5pdGlhbFRleHQgPSB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdGDov5nmmK/or6XnlKjmiLfkvb/nlKhbW0g6VFd8VHdpbmtsZV1d55qE5o+Q5Yig5qih5Z2X5YGa5Ye655qEW1tRVzpYRkR85a2Y5bqf6K6o6K66XV3mj5DlkI3liJfooajjgIJcXG5cXG7oi6XmgqjkuI3lho3mg7Pkv53nlZnmraTml6Xlv5fvvIzor7flnKhbWyR7VHdpbmtsZS5nZXRQcmVmKFxuXHRcdFx0XHRcdCdjb25maWdQYWdlJ1xuXHRcdFx0XHQpfXzlj4LmlbDorr7nva5dXeS4reWFs+aOie+8jOW5tuS9v+eUqFtbUVc6Q1NEI08xfENTRCBPMV1d5o+Q5Lqk5b+r6YCf5Yig6Zmk44CCYCxcblx0XHRcdFx0YOmAmeaYr+ipsuS9v+eUqOiAheS9v+eUqFtbSDpUV3xUd2lua2xlXV3nmoTmj5DliKrmqKHloYrlgZrlh7rnmoRbW1FXOlhGRHzlrZjlu6LoqI7oq5ZdXeaPkOWQjeWIl+ihqOOAglxcblxcbuiLpeaCqOS4jeWGjeaDs+S/neeVmeatpOaXpeiqjO+8jOiri+WcqFtbJHtUd2lua2xlLmdldFByZWYoXG5cdFx0XHRcdFx0J2NvbmZpZ1BhZ2UnXG5cdFx0XHRcdCl9fOWBj+WlveioreWuml1d5Lit6Zec5o6J77yM5Lim5L2/55SoW1tRVzpDU0QjTzF8Q1NEIE8xXV3mj5DkuqTlv6vpgJ/liKrpmaTjgIJgXG5cdFx0XHQpO1xuXHRcdFx0bGV0IHhmZENhdE5hbWU7XG5cdFx0XHRzd2l0Y2ggKHBhcmFtcy54ZmRjYXQpIHtcblx0XHRcdFx0Y2FzZSAnZGVsZXRlJzpcblx0XHRcdFx0XHR4ZmRDYXROYW1lID0gd2luZG93LndnVUxTKCfliKDpmaQnLCAn5Yiq6ZmkJyk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgJ21lcmdlJzpcblx0XHRcdFx0XHR4ZmRDYXROYW1lID0gd2luZG93LndnVUxTKCflkIjlubbliLAnLCAn5ZCI5L215YiwJyk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgJ2Z3ZGNzZCc6XG5cdFx0XHRcdFx0eGZkQ2F0TmFtZSA9IHdpbmRvdy53Z1VMUygn6L2s5Lqk6Ieq5b+r6YCf5Yig6Zmk5YCZ6YCJJywgJ+i9ieS6pOiHquW/q+mAn+WIqumZpOWAmemBuCcpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlICdmYW1lJzpcblx0XHRcdFx0XHR4ZmRDYXROYW1lID0gd2luZG93LndnVUxTKCfmibnph4/lhbPms6jluqbmj5DliKAnLCAn5om55qyh6Zec5rOo5bqm5o+Q5YiqJyk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgJ3N1YnN0dWInOlxuXHRcdFx0XHRcdHhmZENhdE5hbWUgPSB3aW5kb3cud2dVTFMoJ+aJuemHj+Wwj+Wwj+S9nOWTgeaPkOWIoCcsICfmibnmrKHlsI/lsI/kvZzlk4Hmj5DliKonKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAnYmF0Y2gnOlxuXHRcdFx0XHRcdHhmZENhdE5hbWUgPSB3aW5kb3cud2dVTFMoJ+aJuemHj+WFtuS7luaPkOWIoCcsICfmibnmrKHlhbbku5bmj5DliKonKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHR4ZmRDYXROYW1lID0gd2luZG93LndnVUxTKCfmlofku7blrZjlup/orqjorronLCAn5qqU5qGI5a2Y5bui6KiO6KuWJyk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHQvLyBJZiBhIGxvZ2dlZCBmaWxlIGlzIGRlbGV0ZWQgYnV0IGV4aXN0cyBvbiByZW1vdGUgcmVwbywgdGhlIHdpa2lsaW5rIHdpbGwgYmUgYmx1ZSwgc28gcHJvdmlkZSBhIGxpbmsgdG8gdGhlIGxvZ1xuXHRcdFx0bGV0IGFwcGVuZFRleHQgPSBgIyBbWzoke01vcmViaXRzLnBhZ2VOYW1lTm9ybX1dXWA7XG5cdFx0XHRpZiAobXcuY29uZmlnLmdldCgnd2dOYW1lc3BhY2VOdW1iZXInKSA9PT0gNikge1xuXHRcdFx0XHRhcHBlbmRUZXh0ICs9IGDvvIhbe3tmdWxsdXJsOlNwZWNpYWw6TG9nfHBhZ2U9JHttdy51dGlsLndpa2lVcmxlbmNvZGUoXG5cdFx0XHRcdFx0bXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpXG5cdFx0XHRcdCl9fX0gJHt3aW5kb3cud2dVTFMoJ+aXpeW/lycsICfml6XoqownKX1d77yJYDtcblx0XHRcdH1cblx0XHRcdGFwcGVuZFRleHQgKz0gYO+8miR7eGZkQ2F0TmFtZX1gO1xuXHRcdFx0aWYgKHBhcmFtcy54ZmRjYXQgPT09ICdtZXJnZScpIHtcblx0XHRcdFx0YXBwZW5kVGV4dCArPSBgW1s6JHtwYXJhbXMubWVyZ2VpbnRvfV1dYDtcblx0XHRcdH1cblx0XHRcdGFwcGVuZFRleHQgKz0gJ+OAgic7XG5cdFx0XHRpZiAocGFyYW1zLnhmZHJlYXNvbikge1xuXHRcdFx0XHRhcHBlbmRUZXh0ICs9IGAnJycke1xuXHRcdFx0XHRcdHBhcmFtcy54ZmRjYXQgPT09ICdmd2Rjc2QnID8gd2luZG93LndnVUxTKCfljp/liKDpmaTnkIbmja4nLCAn5Y6f5Yiq6Zmk55CG5pOaJykgOiB3aW5kb3cud2dVTFMoJ+eQhuaNricsICfnkIbmk5onKVxuXHRcdFx0XHR9Jycn77yaJHtNb3JlYml0cy5zdHJpbmcuZm9ybWF0UmVhc29uRm9yTG9nKHBhcmFtcy54ZmRyZWFzb24pfWA7XG5cdFx0XHRcdGFwcGVuZFRleHQgPSBNb3JlYml0cy5zdHJpbmcuYXBwZW5kUHVuY3R1YXRpb24oYXBwZW5kVGV4dCk7XG5cdFx0XHR9XG5cdFx0XHRpZiAocGFyYW1zLmZ3ZGNzZHJlYXNvbikge1xuXHRcdFx0XHRhcHBlbmRUZXh0ICs9IGAnJycke1xuXHRcdFx0XHRcdHBhcmFtcy54ZmRjYXQgPT09ICdmd2Rjc2QnID8gd2luZG93LndnVUxTKCfovazkuqTnkIbmja4nLCAn6L2J5Lqk55CG5pOaJykgOiB3aW5kb3cud2dVTFMoJ+eQhuaNricsICfnkIbmk5onKVxuXHRcdFx0XHR9Jycn77yaJHtNb3JlYml0cy5zdHJpbmcuZm9ybWF0UmVhc29uRm9yTG9nKHBhcmFtcy5md2Rjc2RyZWFzb24pfWA7XG5cdFx0XHRcdGFwcGVuZFRleHQgPSBNb3JlYml0cy5zdHJpbmcuYXBwZW5kUHVuY3R1YXRpb24oYXBwZW5kVGV4dCk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoaW5pdGlhbENvbnRyaWIpIHtcblx0XHRcdFx0YXBwZW5kVGV4dCArPSBg77yb6YCa55+le3t1c2VyfCR7aW5pdGlhbENvbnRyaWJ9fX1gO1xuXHRcdFx0fVxuXHRcdFx0YXBwZW5kVGV4dCArPSAnIH5+Jy5jb25jYXQoJ35+JywgJ35cXG4nKTtcblx0XHRcdHVzbC5jaGFuZ2VUYWdzID0gVHdpbmtsZS5jaGFuZ2VUYWdzO1xuXHRcdFx0dXNsLmxvZyhhcHBlbmRUZXh0LCBlZGl0c3VtbWFyeSk7XG5cdFx0fSxcblx0fTtcblx0VHdpbmtsZS54ZmQuY2FsbGJhY2suZXZhbHVhdGUgPSAoZSkgPT4ge1xuXHRcdGNvbnN0IHBhcmFtcyA9IE1vcmViaXRzLnF1aWNrRm9ybS5nZXRJbnB1dERhdGEoZS50YXJnZXQpO1xuXHRcdGlmIChwYXJhbXMueGZkY2F0ID09PSAnbWVyZ2UnICYmIHBhcmFtcy5tZXJnZWludG8udHJpbSgpID09PSAnJykge1xuXHRcdFx0dm9pZCBtdy5ub3RpZnkod2luZG93LndnVUxTKCfor7fmj5DkvpvlkIjlubbnm67moIfvvIEnLCAn6KuL5o+Q5L6b5ZCI5L2155uu5qiZ77yBJyksIHtcblx0XHRcdFx0dHlwZTogJ3dhcm4nLFxuXHRcdFx0XHR0YWc6ICd0d2lua2xleGZkJyxcblx0XHRcdH0pO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRNb3JlYml0cy5zaW1wbGVXaW5kb3cuc2V0QnV0dG9uc0VuYWJsZWQoZmFsc2UpO1xuXHRcdE1vcmViaXRzLnN0YXR1cy5pbml0KGUudGFyZ2V0KTtcblx0XHRUd2lua2xlLnhmZC5jdXJyZW50UmF0aW9uYWxlID0gcGFyYW1zLnhmZHJlYXNvbjtcblx0XHRNb3JlYml0cy5zdGF0dXMub25FcnJvcihUd2lua2xlLnhmZC5wcmludFJhdGlvbmFsZSk7XG5cdFx0aWYgKCFwYXJhbXMuY2F0ZWdvcnkpIHtcblx0XHRcdE1vcmViaXRzLnN0YXR1cy5lcnJvcign6ZSZ6K+vJywgJ+acquWumuS5ieeahOWKqOS9nCcpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRsZXQgdGFyZ2V0X3BhZ2U7XG5cdFx0Y29uc3QgZGF0ZSA9IG5ldyBNb3JlYml0cy5kYXRlKCk7IC8vIFhYWDogYXZvaWQgdXNlIG9mIGNsaWVudCBjbG9jaywgc3RpbGwgdXNlZCBieSBUZkQsIEZmRCBhbmQgQ2ZEXG5cdFx0c3dpdGNoIChwYXJhbXMuY2F0ZWdvcnkpIHtcblx0XHRcdGNhc2UgJ2FmZCc6XG5cdFx0XHRcdC8vIEFGRFxuXHRcdFx0XHRwYXJhbXMubG9ncGFnZSA9IGBRaXV3ZW5fdGFsazrlrZjlup/orqjorrov6K6w5b2VLyR7ZGF0ZS5mb3JtYXQoJ1lZWVkvTU0vREQnLCAndXRjJyl9YDtcblx0XHRcdFx0cGFyYW1zLmxvZ25vbWluYXRpb24gPVxuXHRcdFx0XHRcdFR3aW5rbGUuZ2V0UHJlZignbG9nWGZkTm9taW5hdGlvbnMnKSAmJlxuXHRcdFx0XHRcdCFUd2lua2xlLmdldFByZWYoJ25vTG9nT25YZmROb21pbmF0aW9uJykuaW5jbHVkZXMocGFyYW1zLnhmZGNhdCk7XG5cdFx0XHRcdE1vcmViaXRzLndpa2kuYWRkQ2hlY2twb2ludCgpO1xuXHRcdFx0XHQvLyBVcGRhdGluZyBkYXRhIGZvciB0aGUgYWN0aW9uIGNvbXBsZXRlZCBldmVudFxuXHRcdFx0XHRNb3JlYml0cy53aWtpLmFjdGlvbkNvbXBsZXRlZC5yZWRpcmVjdCA9IHBhcmFtcy5sb2dwYWdlO1xuXHRcdFx0XHRNb3JlYml0cy53aWtpLmFjdGlvbkNvbXBsZXRlZC5ub3RpY2UgPSB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0J+aPkOWQjeWujOaIkO+8jOmHjeWumuWQkeWIsOiuqOiuuumhtScsXG5cdFx0XHRcdFx0J+aPkOWQjeWujOaIkO+8jOmHjeaWsOWwjuWQkeWIsOiojuirlumggSdcblx0XHRcdFx0KTtcblx0XHRcdFx0Ly8gTG9va3VwIGNyZWF0aW9uXG5cdFx0XHRcdHRhcmdldF9wYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShcblx0XHRcdFx0XHRtdy5jb25maWcuZ2V0KCd3Z1BhZ2VOYW1lJyksXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKCfojrflj5bpobXpnaLliJvlu7rkv6Hmga8nLCAn5Y+W5b6X6aCB6Z2i5bu656uL6LOH6KiKJylcblx0XHRcdFx0KTtcblx0XHRcdFx0dGFyZ2V0X3BhZ2Uuc2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKHBhcmFtcyk7XG5cdFx0XHRcdGlmIChtdy5jb25maWcuZ2V0KCd3Z1BhZ2VDb250ZW50TW9kZWwnKSA9PT0gJ3dpa2l0ZXh0Jykge1xuXHRcdFx0XHRcdHRhcmdldF9wYWdlLnNldExvb2t1cE5vblJlZGlyZWN0Q3JlYXRvcih0cnVlKTsgLy8gTG9vayBmb3IgYXV0aG9yIG9mIGZpcnN0IG5vbi1yZWRpcmVjdCByZXZpc2lvblxuXHRcdFx0XHR9XG5cblx0XHRcdFx0dGFyZ2V0X3BhZ2UubG9va3VwQ3JlYXRpb24oVHdpbmtsZS54ZmQuY2FsbGJhY2tzLmFmZC5sb29rdXBDcmVhdGlvbik7XG5cdFx0XHRcdE1vcmViaXRzLndpa2kucmVtb3ZlQ2hlY2twb2ludCgpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ2ZmZCc6IHtcblx0XHRcdFx0Ly8gRkZEXG5cdFx0XHRcdHBhcmFtcy5sb2dwYWdlID0gYFFpdXdlbl90YWxrOuWtmOW6n+iuqOiuui/orrDlvZUvJHtkYXRlLmZvcm1hdCgnWVlZWS9NTS9ERCcsICd1dGMnKX1gO1xuXHRcdFx0XHRwYXJhbXMubG9nbm9taW5hdGlvbiA9XG5cdFx0XHRcdFx0VHdpbmtsZS5nZXRQcmVmKCdsb2dYZmROb21pbmF0aW9ucycpICYmICFUd2lua2xlLmdldFByZWYoJ25vTG9nT25YZmROb21pbmF0aW9uJykuaW5jbHVkZXMoJ2ZmZCcpO1xuXHRcdFx0XHRNb3JlYml0cy53aWtpLmFkZENoZWNrcG9pbnQoKTtcblx0XHRcdFx0Ly8gVXBkYXRpbmcgZGF0YSBmb3IgdGhlIGFjdGlvbiBjb21wbGV0ZWQgZXZlbnRcblx0XHRcdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQucmVkaXJlY3QgPSBwYXJhbXMubG9ncGFnZTtcblx0XHRcdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQubm90aWNlID0gd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdCfmj5DlkI3lrozmiJDvvIzph43lrprlkJHliLDorqjorrrpobUnLFxuXHRcdFx0XHRcdCfmj5DlkI3lrozmiJDvvIzph43mlrDlsI7lkJHliLDoqI7oq5bpoIEnXG5cdFx0XHRcdCk7XG5cdFx0XHRcdC8vIExvb2t1cCBjcmVhdGlvblxuXHRcdFx0XHRjb25zdCBxaXV3ZW5fcGFnZSA9IG5ldyBNb3JlYml0cy53aWtpLnBhZ2UoXG5cdFx0XHRcdFx0bXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpLFxuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn6I635Y+W6aG16Z2i5Yib5bu65L+h5oGvJywgJ+WPluW+l+mggemdouW7uueri+izh+ioiicpXG5cdFx0XHRcdCk7XG5cdFx0XHRcdHFpdXdlbl9wYWdlLnNldENhbGxiYWNrUGFyYW1ldGVycyhwYXJhbXMpO1xuXHRcdFx0XHRxaXV3ZW5fcGFnZS5zZXRMb29rdXBOb25SZWRpcmVjdENyZWF0b3IodHJ1ZSk7IC8vIExvb2sgZm9yIGF1dGhvciBvZiBmaXJzdCBub24tcmVkaXJlY3QgcmV2aXNpb25cblx0XHRcdFx0cWl1d2VuX3BhZ2UubG9va3VwQ3JlYXRpb24oVHdpbmtsZS54ZmQuY2FsbGJhY2tzLmZmZC5sb29rdXBDcmVhdGlvbik7XG5cdFx0XHRcdE1vcmViaXRzLndpa2kucmVtb3ZlQ2hlY2twb2ludCgpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdHZvaWQgbXcubm90aWZ5KCd0d2lua2xleGZk77ya5pyq5a6a5LmJ55qE57G75YirJywge1xuXHRcdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0XHR0YWc6ICd0d2lua2xleGZkJyxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdH1cblx0fTtcblx0VHdpbmtsZS5hZGRJbml0Q2FsbGJhY2soVHdpbmtsZS54ZmQsICd4ZmQnKTtcbn0pKCk7XG5cbmV4cG9ydCB7fTtcbiIsICIvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10cy1jb21tZW50XG4vLyBAdHMtbm9jaGVja1xuLyohIFR3aW5rbGUuanMgLSB0d2lua2xlaW1hZ2UuanMgKi9cbihmdW5jdGlvbiB0d2lua2xlaW1hZ2UoKSB7XG5cdC8qKlxuXHQgKiB0d2lua2xlaW1hZ2UuanM6IEltYWdlIENTRCBtb2R1bGVcblx0ICogTW9kZSBvZiBpbnZvY2F0aW9uOiBUYWIgKFwiRElcIilcblx0ICogQWN0aXZlIG9uOiBMb2NhbCBub25yZWRpcmVjdCBmaWxlIHBhZ2VzIChub3Qgb24gU2hhcmUpXG5cdCAqL1xuXHRUd2lua2xlLmltYWdlID0gKCkgPT4ge1xuXHRcdGlmIChcblx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlTnVtYmVyJykgPT09IDYgJiZcblx0XHRcdCFkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbXctc2hhcmVkdXBsb2FkJykgJiZcblx0XHRcdGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtdy1pbWFnZXBhZ2Utc2VjdGlvbi1maWxlaGlzdG9yeScpXG5cdFx0KSB7XG5cdFx0XHRUd2lua2xlLmFkZFBvcnRsZXRMaW5rKFxuXHRcdFx0XHRUd2lua2xlLmltYWdlLmNhbGxiYWNrLFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ+WbvuadgycsICflnJbmrIonKSxcblx0XHRcdFx0J3R3LWRpJyxcblx0XHRcdFx0d2luZG93LndnVUxTKCfmj5DkuqTmlofku7blv6vpgJ/liKDpmaQnLCAn5o+Q5Lqk5qqU5qGI5b+r6YCf5Yiq6ZmkJylcblx0XHRcdCk7XG5cdFx0fVxuXHR9O1xuXHRUd2lua2xlLmltYWdlLmNhbGxiYWNrID0gKCkgPT4ge1xuXHRcdGNvbnN0IFdpbmRvdyA9IG5ldyBNb3JlYml0cy5zaW1wbGVXaW5kb3coNjAwLCAzMzApO1xuXHRcdFdpbmRvdy5zZXRUaXRsZSh3aW5kb3cud2dVTFMoJ+aWh+S7tuW/q+mAn+WIoOmZpOWAmemAiScsICfmqpTmoYjlv6vpgJ/liKrpmaTlgJnpgbgnKSk7XG5cdFx0V2luZG93LnNldFNjcmlwdE5hbWUoJ1R3aW5rbGUnKTtcblx0XHRXaW5kb3cuYWRkRm9vdGVyTGluayh3aW5kb3cud2dVTFMoJ+W/q+mAn+WIoOmZpOaWuemSiCcsICflv6vpgJ/liKrpmaTmlrnph50nKSwgJ1FXOkNTRCcpO1xuXHRcdFdpbmRvdy5hZGRGb290ZXJMaW5rKHdpbmRvdy53Z1VMUygn5Zu+5p2D6K6+572uJywgJ+WcluasiuioreWumicpLCAnSDpUVy9QUkVGI2ltYWdlJyk7XG5cdFx0V2luZG93LmFkZEZvb3Rlckxpbmsod2luZG93LndnVUxTKCdUd2lua2xl5biu5YqpJywgJ1R3aW5rbGXoqqrmmI4nKSwgJ0g6VFcvRE9DI2ltYWdlJyk7XG5cdFx0Y29uc3QgZm9ybSA9IG5ldyBNb3JlYml0cy5xdWlja0Zvcm0oVHdpbmtsZS5pbWFnZS5jYWxsYmFjay5ldmFsdWF0ZSk7XG5cdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdGxpc3Q6IFtcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+mAmuefpeS4iuS8oOiAhScsICfpgJrnn6XkuIrlgrPogIUnKSxcblx0XHRcdFx0XHR2YWx1ZTogJ25vdGlmeScsXG5cdFx0XHRcdFx0bmFtZTogJ25vdGlmeScsXG5cdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+iLpeaCqOWcqOagh+iusOWQjOS4gOeUqOaIt+eahOW+iOWkmuaWh+S7tu+8jOivt+WPlua2iOatpOWkjemAieahhuS7pemBv+WFjeWPkemAgei/h+Wkmua2iOaBr+OAgkNTRCBGNeawuOi/nOS4jeS8mumAmuefpeOAgicsXG5cdFx0XHRcdFx0XHQn6Iul5oKo5Zyo5qiZ6KiY5ZCM5LiA5L2/55So6ICF55qE5b6I5aSa5qqU5qGI77yM6KuL5Y+W5raI5q2k5qC45Y+W5pa55aGK5Lul6YG/5YWN55m86YCB6YGO5aSa6KiK5oGv44CCQ1NEIEY15rC46YGg5LiN5pyD6YCa55+l44CCJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0Y2hlY2tlZDogVHdpbmtsZS5nZXRQcmVmKCdub3RpZnlVc2VyT25EZWxpJyksXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0pO1xuXHRcdGNvbnN0IGZpZWxkID0gZm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ2ZpZWxkJyxcblx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+mcgOimgeeahOWKqOS9nCcsICfpnIDopoHnmoTli5XkvZwnKSxcblx0XHR9KTtcblx0XHRmaWVsZC5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ3JhZGlvJyxcblx0XHRcdG5hbWU6ICd0eXBlJyxcblx0XHRcdGxpc3Q6IFtcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+aYjuaYvuS+teadg+S5i+aWh+S7tu+8iENTRCBGMe+8iScsICfmmI7poa/kvrXmrIrkuYvmqpTmoYjvvIhDU0QgRjHvvIknKSxcblx0XHRcdFx0XHR2YWx1ZTogJ25vIHBlcm1pc3Npb24nLFxuXHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfkuIrkvKDogIXlrqPnp7Dmi6XmnInvvIzogIzlnKjlhbbku5bmnaXmupDmib7liLDnmoTmlofku7bvvIzmiJbku47kvrXmnYPnmoTmnaXmupDojrflj5bnmoTmlofku7bjgIInLFxuXHRcdFx0XHRcdFx0J+S4iuWCs+iAheWuo+eoseaTgeacie+8jOiAjOWcqOWFtuS7luS+hua6kOaJvuWIsOeahOaqlOahiO+8jOaIluW+nuS+teasiueahOS+hua6kOWPluW+l+eahOaqlOahiOOAgidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdHN1Ymdyb3VwOiB7XG5cdFx0XHRcdFx0XHRuYW1lOiAnZjFfc291cmNlJyxcblx0XHRcdFx0XHRcdHR5cGU6ICd0ZXh0YXJlYScsXG5cdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfkvrXmnYPmnaXmupDvvJonLCAn5L615qyK5L6G5rqQ77yaJyksXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+adpea6kOS4jeaYju+8iENTRCBGM++8iScsICfkvobmupDkuI3mmI7vvIhDU0QgRjPvvIknKSxcblx0XHRcdFx0XHR2YWx1ZTogJ25vIHNvdXJjZScsXG5cdFx0XHRcdFx0Y2hlY2tlZDogdHJ1ZSxcblx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoJ+acrOaWh+S7tuW5tuacquazqOaYjuWOn+Wni+WHuuWkhCcsICfmnKzmqpTmoYjkuKbmnKroqLvmmI7ljp/lp4vlh7romZUnKSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+acquefpeiRl+S9nOadg+S/oeaBr++8iENTRCBGM++8iScsICfmnKrnn6XokZfkvZzmrIros4foqIrvvIhDU0QgRjPvvIknKSxcblx0XHRcdFx0XHR2YWx1ZTogJ25vIGxpY2Vuc2UnLFxuXHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUygn5pys5paH5Lu257y65bCR6JGX5L2c5p2D5L+h5oGvJywgJ+acrOaqlOahiOe8uuWwkeiRl+S9nOasiuizh+ioiicpLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6JGX5L2c5p2D5peg5rOV6KKr5p+l6K+B77yIQ1NEIEYz77yJJywgJ+iRl+S9nOasiueEoeazleiiq+afpeitie+8iENTRCBGM++8iScpLFxuXHRcdFx0XHRcdHZhbHVlOiAnbm8gbGljZW5zZScsXG5cdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKCfmnKzmlofku7blo7Dnp7DnmoTokZfkvZzmnYPkv6Hmga/ml6Dms5Xooqvmn6Xor4EnLCAn5pys5qqU5qGI6IGy56ix55qE6JGX5L2c5qyK6LOH6KiK54Sh5rOV6KKr5p+l6K2JJyksXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflj6/ooqvmm7/ku6PnmoTpnZ7oh6rnlLHokZfkvZzmnYPmlofku7bvvIhDU0QgRjTvvIknLCAn5Y+v6KKr5pu/5Luj55qE6Z2e6Ieq55Sx6JGX5L2c5qyK5qqU5qGI77yIQ1NEIEY077yJJyksXG5cdFx0XHRcdFx0dmFsdWU6ICdyZXBsYWNlYWJsZSBmYWlyIHVzZScsXG5cdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+aWh+S7tuS7heeUqOS6juaPj+i/sOOAgeivhuWIq+aIluivhOiuuuaWh+S7tuS4reWxleekuueahOS6i+eJqe+8jOaIluS7heeUqOS9nOaPkuWbvu+8jOS4lOa7oei2s+S7peS4i+Wbm+S4quadoeS7tuS5i+S4gOOAguiLpee7meWHuuS6huWFtuS7luWQiOeQhuS9v+eUqOS+neaNru+8jOS4jemAgueUqOacrOadoeOAguWmguWvueaWh+S7tueahOWPr+abv+S7o+aAp+WtmOWcqOS6ieiuru+8jOW6lOS6pOaWh+S7tuWtmOW6n+iuqOiuuuWkhOeQhuOAguacrOadoeS5n+S4jemAgueUqOS6juato+WcqOaIluabvue7j+eUseaWh+S7tuWtmOW6n+iuqOiuuuWkhOeQhui/h+eahOaWh+S7tuOAgicsXG5cdFx0XHRcdFx0XHQn5qqU5qGI5YOF55So5pa85o+P6L+w44CB6L6o6K2Y5oiW6KmV6KuW5qqU5qGI5Lit5bGV56S655qE5LqL54mp77yM5oiW5YOF55So5L2c5o+S5ZyW77yM5LiU5ru/6Laz5Lul5LiL5Zub5YCL5qKd5Lu25LmL5LiA44CC6Iul57Wm5Ye65LqG5YW25LuW5ZCI55CG5L2/55So5L6d5pOa77yM5LiN6YGp55So5pys5qKd44CC5aaC5bCN5qqU5qGI55qE5Y+v5pu/5Luj5oCn5a2Y5Zyo54it6K2w77yM5oeJ5Lqk5qqU5qGI5a2Y5bui6KiO6KuW6JmV55CG44CC5pys5qKd5Lmf5LiN6YGp55So5pa85q2j5Zyo5oiW5pu+57aT55Sx5qqU5qGI5a2Y5bui6KiO6KuW6JmV55CG6YGO55qE5qqU5qGI44CCJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0c3ViZ3JvdXA6IHtcblx0XHRcdFx0XHRcdG5hbWU6ICdmNF90eXBlJyxcblx0XHRcdFx0XHRcdHR5cGU6ICdzZWxlY3QnLFxuXHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6YCC55So57G75Z6L77yaJywgJ+mBqeeUqOmhnuWIpe+8micpLFxuXHRcdFx0XHRcdFx0c3R5bGU6ICd3aWR0aDogODUlOycsXG5cdFx0XHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHR0eXBlOiAnb3B0aW9uJyxcblx0XHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfor7fpgInmi6knLCAn6KuL6YG45pOHJyksXG5cdFx0XHRcdFx0XHRcdFx0dmFsdWU6ICcnLFxuXHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0dHlwZTogJ29wdGlvbicsXG5cdFx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHRcdCfmnInlhbbku5boh6rnlLHokZfkvZzmnYPmlofku7blsZXnpLrnm7jlkIznmoTkuovniaknLFxuXHRcdFx0XHRcdFx0XHRcdFx0J+acieWFtuS7luiHqueUseiRl+S9nOasiuaqlOahiOWxleekuuebuOWQjOeahOS6i+eJqSdcblx0XHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0XHRcdHZhbHVlOiAnMScsXG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHR0eXBlOiAnb3B0aW9uJyxcblx0XHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdFx0J+aWh+S7tuaPj+i/sOeahOaYr+WcqOS4luaIluWBh+WumuWcqOS4luS6uueJqeOAgeS7jeeEtuWtmOWcqOeahOW7uuetkeOAgeWupOWklumbleWhkeaIluS7jeeEtuWcqOWUrueahOWVhuWTge+8jOS4lOmihOiuoeiHquihjOaLjeaRhOeahOeFp+eJh+S4jeWPl+S7luS6uuiRl+S9nOadg+S/neaKpCcsXG5cdFx0XHRcdFx0XHRcdFx0XHQn5qqU5qGI5o+P6L+w55qE5piv5Zyo5LiW5oiW5YGH5a6a5Zyo5LiW5Lq654mp44CB5LuN54S25a2Y5Zyo55qE5bu656+J44CB5a6k5aSW6ZuV5aGR5oiW5LuN54S25Zyo5ZSu55qE5ZWG5ZOB77yM5LiU6aCQ6KiI6Ieq6KGM5ouN5pSd55qE55u454mH5LiN5Y+X5LuW5Lq66JGX5L2c5qyK5L+d6K23J1xuXHRcdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRcdFx0dmFsdWU6ICcyJyxcblx0XHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcdHR5cGU6ICdvcHRpb24nLFxuXHRcdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+aWh+S7tuS4uuWPr+iHquihjOe7mOWItueahOWcsOWbvuaIluWbvuihqCcsICfmqpTmoYjngrrlj6/oh6rooYznuaroo73nmoTlnLDlnJbmiJblnJbooagnKSxcblx0XHRcdFx0XHRcdFx0XHR2YWx1ZTogJzMnLFxuXHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0dHlwZTogJ29wdGlvbicsXG5cdFx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHRcdCfmlofku7bmnaXoh6rllYbkuJrlm77niYfmnLrmnoTvvIjlpoJHZXR0ee+8iScsXG5cdFx0XHRcdFx0XHRcdFx0XHQn5qqU5qGI5L6G6Ieq5ZWG5qWt5ZyW54mH5qmf5qeL77yI5aaCR2V0dHnvvIknXG5cdFx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdFx0XHR2YWx1ZTogJzQnLFxuXHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfmsqHmnInooqvmnaHnm67kvb/nlKjnmoTpnZ7oh6rnlLHokZfkvZzmnYPmlofku7bvvIhDU0QgRjXvvIknLFxuXHRcdFx0XHRcdFx0J+aykuacieiiq+aineebruS9v+eUqOeahOmdnuiHqueUseiRl+S9nOasiuaqlOahiO+8iENTRCBGNe+8iSdcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdHZhbHVlOiAnb3JwaGFuZWQgZmFpciB1c2UnLFxuXHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfmnKzmlofku7bkuLrpnZ7oh6rnlLHokZfkvZzmnYPkuJTmsqHmnInooqvmnaHnm67kvb/nlKgnLFxuXHRcdFx0XHRcdFx0J+acrOaqlOahiOeCuumdnuiHqueUseiRl+S9nOasiuS4lOaykuacieiiq+aineebruS9v+eUqCdcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfmsqHmnInloavlhpnku7vkvZXlkIjnkIbkvb/nlKjkvp3mja7nmoTpnZ7oh6rnlLHokZfkvZzmnYPmlofku7bvvIhDU0QgRjXvvIknLFxuXHRcdFx0XHRcdFx0J+aykuacieWhq+Wvq+S7u+S9leWQiOeQhuS9v+eUqOS+neaTmueahOmdnuiHqueUseiRl+S9nOasiuaqlOahiO+8iENTRCBGNe+8iSdcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdHZhbHVlOiAnbm8gZmFpciB1c2UgcmF0aW9uYWxlJyxcblx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn5LiN6YCC55So5LqO5pyJ5LqJ6K6u5L2G5a6M5pW055qE5ZCI55CG5L2/55So5L6d5o2u44CC6Iul6Z2e6Ieq55Sx6JGX5L2c5p2D5paH5Lu25Y+q5pyJ6YOo5YiG5p2h55uu55qE5L2/55So5L6d5o2u77yM5L2G5ZCM5pe26KKr5L2/55So5LqO5pyq5o+Q5L6b5ZCI55CG5L2/55So5L6d5o2u55qE5p2h55uu77yM5YiZ5pys5pa56ZKI5Lmf5LiN6YCC55So44CCJyxcblx0XHRcdFx0XHRcdCfkuI3pgannlKjmlrzmnInniK3orbDkvYblrozmlbTnmoTlkIjnkIbkvb/nlKjkvp3mk5rjgILoi6XpnZ7oh6rnlLHokZfkvZzmrIrmqpTmoYjlj6rmnInpg6jliIbmop3nm67nmoTkvb/nlKjkvp3mk5rvvIzkvYblkIzmmYLooqvkvb/nlKjmlrzmnKrmj5DkvpvlkIjnkIbkvb/nlKjkvp3mk5rnmoTmop3nm67vvIzliYfmnKzmlrnph53kuZ/kuI3pgannlKjjgIInXG5cdFx0XHRcdFx0KSxcblx0XHRcdFx0fSxcblx0XHRcdF0sXG5cdFx0fSk7XG5cdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ3N1Ym1pdCcsXG5cdFx0fSk7XG5cdFx0Y29uc3QgcmVzdWx0ID0gZm9ybS5yZW5kZXIoKTtcblx0XHRXaW5kb3cuc2V0Q29udGVudChyZXN1bHQpO1xuXHRcdFdpbmRvdy5kaXNwbGF5KCk7XG5cdFx0Ly8gV2UgbXVzdCBpbml0IHRoZSBwYXJhbWV0ZXJzXG5cdFx0Y29uc3QgZXZ0ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50Jyk7XG5cdFx0ZXZ0LmluaXRFdmVudCgnY2hhbmdlJywgdHJ1ZSwgdHJ1ZSk7XG5cdFx0cmVzdWx0LnR5cGVbMF0uZGlzcGF0Y2hFdmVudChldnQpO1xuXHR9O1xuXHRUd2lua2xlLmltYWdlLmNhbGxiYWNrLmV2YWx1YXRlID0gKGV2ZW50KSA9PiB7XG5cdFx0bGV0IHR5cGU7XG5cdFx0bGV0IG5vdGlmeSA9IGV2ZW50LnRhcmdldC5ub3RpZnkuY2hlY2tlZDtcblx0XHRjb25zdCB0eXBlcyA9IGV2ZW50LnRhcmdldC50eXBlO1xuXHRcdGZvciAoY29uc3QgdHlwZV8gb2YgdHlwZXMpIHtcblx0XHRcdGlmICh0eXBlXy5jaGVja2VkKSB7XG5cdFx0XHRcdHR5cGUgPSB0eXBlXy52YWx1ZXM7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRsZXQgY3NkY3JpdDtcblx0XHRzd2l0Y2ggKHR5cGUpIHtcblx0XHRcdGNhc2UgJ25vIHNvdXJjZSc6XG5cdFx0XHRcdGNzZGNyaXQgPSAnZjMnO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ25vIGxpY2Vuc2UnOlxuXHRcdFx0XHRjc2Rjcml0ID0gJ2YzJztcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlICdvcnBoYW5lZCBmYWlyIHVzZSc6XG5cdFx0XHRcdGNzZGNyaXQgPSAnZjUnO1xuXHRcdFx0XHRub3RpZnkgPSBmYWxzZTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlICdubyBwZXJtaXNzaW9uJzpcblx0XHRcdFx0Y3NkY3JpdCA9ICdmMSc7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnbm8gZmFpciB1c2UgcmF0aW9uYWxlJzpcblx0XHRcdFx0Y3NkY3JpdCA9ICdmNSc7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAncmVwbGFjZWFibGUgZmFpciB1c2UnOlxuXHRcdFx0XHRjc2Rjcml0ID0gJ2Y0Jztcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ1R3aW5rbGUuaW1hZ2UuY2FsbGJhY2suZXZhbHVhdGXvvJrmnKrnn6XmnaHmrL4nKTtcblx0XHR9XG5cdFx0Y29uc3QgbG9nbm9taW5hdGlvbiA9XG5cdFx0XHRUd2lua2xlLmdldFByZWYoJ2xvZ1NwZWVkeU5vbWluYXRpb25zJykgJiZcblx0XHRcdCFUd2lua2xlLmdldFByZWYoJ25vTG9nT25TcGVlZHlOb21pbmF0aW9uJykuaW5jbHVkZXMoY3NkY3JpdC50b0xvd2VyQ2FzZSgpKTtcblx0XHRjb25zdCB0ZW1wbGF0ZW5hbWUgPSB0eXBlO1xuXHRcdGNvbnN0IHBhcmFtcyA9IHtcblx0XHRcdHR5cGUsXG5cdFx0XHR0ZW1wbGF0ZW5hbWUsXG5cdFx0XHRub3JtYWxpemVkOiBjc2Rjcml0LFxuXHRcdFx0bG9nbm9taW5hdGlvbixcblx0XHR9O1xuXHRcdGlmIChjc2Rjcml0ID09PSAnZjEnKSB7XG5cdFx0XHRwYXJhbXMuZjFfc291cmNlID0gZXZlbnQudGFyZ2V0Wyd0eXBlLmYxX3NvdXJjZSddLnZhbHVlO1xuXHRcdH1cblx0XHRpZiAoY3NkY3JpdCA9PT0gJ2Y0Jykge1xuXHRcdFx0Y29uc3QgZjRfdHlwZSA9IGV2ZW50LnRhcmdldFsndHlwZS5mNF90eXBlJ10udmFsdWU7XG5cdFx0XHRpZiAoIWY0X3R5cGUpIHtcblx0XHRcdFx0dm9pZCBtdy5ub3RpZnkod2luZG93LndnVUxTKCdDU0QgRjTvvJror7fpgInmi6npgILnlKjnsbvlnovjgIInLCAnQ1NEIEY077ya6KuL6YG45pOH6YGp55So6aGe5Yil44CCJyksIHtcblx0XHRcdFx0XHR0eXBlOiAnd2FybicsXG5cdFx0XHRcdFx0dGFnOiAndHdpbmtsZWltYWdlJyxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH1cblx0XHRcdHBhcmFtcy5mNF90eXBlID0gZjRfdHlwZTtcblx0XHR9XG5cdFx0TW9yZWJpdHMuc2ltcGxlV2luZG93LnNldEJ1dHRvbnNFbmFibGVkKGZhbHNlKTtcblx0XHRNb3JlYml0cy5zdGF0dXMuaW5pdChldmVudC50YXJnZXQpO1xuXHRcdE1vcmViaXRzLndpa2kuYWN0aW9uQ29tcGxldGVkLnJlZGlyZWN0ID0gbXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpO1xuXHRcdE1vcmViaXRzLndpa2kuYWN0aW9uQ29tcGxldGVkLm5vdGljZSA9IHdpbmRvdy53Z1VMUygn5qCH6K6w5a6M5oiQJywgJ+aomeiomOWujOaIkCcpO1xuXHRcdC8vIFRhZ2dpbmcgaW1hZ2Vcblx0XHRjb25zdCBxaXV3ZW5fcGFnZSA9IG5ldyBNb3JlYml0cy53aWtpLnBhZ2UoXG5cdFx0XHRtdy5jb25maWcuZ2V0KCd3Z1BhZ2VOYW1lJyksXG5cdFx0XHR3aW5kb3cud2dVTFMoJ+WKoOWFpeWIoOmZpOagh+iusCcsICfliqDlhaXliKrpmaTmqJnoqJgnKVxuXHRcdCk7XG5cdFx0cWl1d2VuX3BhZ2Uuc2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKHBhcmFtcyk7XG5cdFx0cWl1d2VuX3BhZ2UubG9hZChUd2lua2xlLmltYWdlLmNhbGxiYWNrcy50YWdnaW5nSW1hZ2UpO1xuXHRcdC8vIE5vdGlmeWluZyB1cGxvYWRlclxuXHRcdGlmIChub3RpZnkpIHtcblx0XHRcdHFpdXdlbl9wYWdlLmxvb2t1cENyZWF0aW9uKFR3aW5rbGUuaW1hZ2UuY2FsbGJhY2tzLnVzZXJOb3RpZmljYXRpb24pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBhZGQgdG8gQ1NEIGxvZyBpZiBkZXNpcmVkXG5cdFx0XHRpZiAobG9nbm9taW5hdGlvbikge1xuXHRcdFx0XHRwYXJhbXMuZnJvbURJID0gdHJ1ZTtcblx0XHRcdFx0VHdpbmtsZS5zcGVlZHkuY2FsbGJhY2tzLnVzZXIuYWRkVG9Mb2cocGFyYW1zLCBudWxsKTtcblx0XHRcdH1cblx0XHRcdC8vIE5vIGF1dG8tbm90aWZpY2F0aW9uLCBkaXNwbGF5IHdoYXQgd2FzIGdvaW5nIHRvIGJlIGFkZGVkLlxuXHRcdFx0aWYgKHR5cGUgIT09ICdvcnBoYW5lZCBmYWlyIHVzZScpIHtcblx0XHRcdFx0Y29uc3Qgbm90ZURhdGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwcmUnKTtcblx0XHRcdFx0bm90ZURhdGEuYXBwZW5kQ2hpbGQoXG5cdFx0XHRcdFx0ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXG5cdFx0XHRcdFx0XHQne3snLmNvbmNhdCgnc3Vic3Q6JywgYFVwbG9hZHZpb25vdGljZXwke01vcmViaXRzLnBhZ2VOYW1lTm9ybX19fS0tfn5gLCAnfn4nKVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KTtcblx0XHRcdFx0TW9yZWJpdHMuc3RhdHVzLmluZm8oJ+aPkOekuicsIFtcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+i/meS6m+WGheWuueW6lOi0tOi/m+S4iuS8oOiAheWvueivnemhte+8micsICfpgJnkupvlhaflrrnmh4nosrzpgLLkuIrlgrPogIXoqI7oq5bpoIHvvJonKSxcblx0XHRcdFx0XHRub3RlRGF0YSxcblx0XHRcdFx0XSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRUd2lua2xlLmltYWdlLmNhbGxiYWNrcyA9IHtcblx0XHR0YWdnaW5nSW1hZ2U6IChwYWdlb2JqKSA9PiB7XG5cdFx0XHRsZXQgdGV4dCA9IHBhZ2VvYmouZ2V0UGFnZVRleHQoKTtcblx0XHRcdGNvbnN0IHBhcmFtcyA9IHBhZ2VvYmouZ2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKCk7XG5cdFx0XHQvLyByZW1vdmUgdGFnIC0gZGVsZXRpb24tdGFnZ2VkIGZpbGVzIGNhbm5vdCBiZSBtb3ZlZFxuXHRcdFx0dGV4dCA9IHRleHQucmVwbGFjZShcblx0XHRcdFx0L1xce1xceyhtdGN8KGNvcHkgfG1vdmUgKT90byA/KHNoYXJlfGNvbW1vbnMpfG1vdmUgdG8gKHFpdXdlbiBzaGFyZXx3aWtpbWVkaWEgY29tbW9ucyl8Y29weSB0byAocWl1d2VuIHNoYXJlfHdpa2ltZWRpYSBjb21tb25zKSlbXn1dKlxcfVxcfS9naSxcblx0XHRcdFx0Jydcblx0XHRcdCk7XG5cdFx0XHQvLyBBZGRpbmcgZGlzY3Vzc2lvblxuXHRcdFx0aWYgKHBhcmFtcy50eXBlICE9PSAnb3JwaGFuZWQgZmFpciB1c2UnKSB7XG5cdFx0XHRcdGNvbnN0IHFpdXdlbl9wYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShcblx0XHRcdFx0XHQnUWl1d2VuX3RhbGs65a2Y5bqf6K6o6K66L+aWh+S7tuW/q+mAn+WIoOmZpOaPkOaKpScsXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKCfliqDlhaXlv6vpgJ/liKDpmaTorrDlvZXpobknLCAn5Yqg5YWl5b+r6YCf5Yiq6Zmk6KiY6YyE6aCFJylcblx0XHRcdFx0KTtcblx0XHRcdFx0cWl1d2VuX3BhZ2Uuc2V0Rm9sbG93UmVkaXJlY3QodHJ1ZSk7XG5cdFx0XHRcdHFpdXdlbl9wYWdlLnNldENhbGxiYWNrUGFyYW1ldGVycyhwYXJhbXMpO1xuXHRcdFx0XHRxaXV3ZW5fcGFnZS5sb2FkKFR3aW5rbGUuaW1hZ2UuY2FsbGJhY2tzLmltYWdlTGlzdCk7XG5cdFx0XHR9XG5cdFx0XHRsZXQgdGFnID0gJyc7XG5cdFx0XHRzd2l0Y2ggKHBhcmFtcy50eXBlKSB7XG5cdFx0XHRcdGNhc2UgJ29ycGhhbmVkIGZhaXIgdXNlJzpcblx0XHRcdFx0XHR0YWcgPSAne3snLmNvbmNhdCgnc3Vic3Q6JywgJ29ycGhhbmVkIGZhaXIgdXNlfX1cXG4nKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAnbm8gcGVybWlzc2lvbic6XG5cdFx0XHRcdFx0dGFnID0gJ3t7Jy5jb25jYXQoXG5cdFx0XHRcdFx0XHQnc3Vic3Q6Jyxcblx0XHRcdFx0XHRcdGAke3BhcmFtcy50ZW1wbGF0ZW5hbWV9L2F1dG98MT0ke3BhcmFtcy5mMV9zb3VyY2Vcblx0XHRcdFx0XHRcdFx0LnJlcGxhY2UoL2h0dHAvZywgJyYjMTA0O3R0cCcpXG5cdFx0XHRcdFx0XHRcdC5yZXBsYWNlKC9cXG4rL2csICdcXG4nKVxuXHRcdFx0XHRcdFx0XHQucmVwbGFjZSgvXlxccyooW14qXSkvZ20sICcqICQxJylcblx0XHRcdFx0XHRcdFx0LnJlcGxhY2UoL15cXCogJC9tLCAnJyl9fX1cXG5gXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAncmVwbGFjZWFibGUgZmFpciB1c2UnOlxuXHRcdFx0XHRcdHRhZyA9ICd7eycuY29uY2F0KCdzdWJzdDonLCBgJHtwYXJhbXMudGVtcGxhdGVuYW1lfS9hdXRvfDE9JHtwYXJhbXMuZjRfdHlwZX19fVxcbmApO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdHRhZyA9ICd7eycuY29uY2F0KCdzdWJzdDonLCBgJHtwYXJhbXMudGVtcGxhdGVuYW1lfS9hdXRvfX1cXG5gKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdGNvbnN0IHRleHROb1NkID0gdGV4dC5yZXBsYWNlKFxuXHRcdFx0XHQvXFx7XFx7XFxzKihkYigtXFx3Kik/fGR8ZGVsZXRlfCg/Omhhbmd8aG9sZClbLSBdP29uKVxccyooXFx8KD86XFx7XFx7W157fV0qXFx9XFx9fFtee31dKSopP1xcfVxcfVxccyovZ2ksXG5cdFx0XHRcdCcnXG5cdFx0XHQpO1xuXHRcdFx0aWYgKFxuXHRcdFx0XHR0ZXh0ICE9PSB0ZXh0Tm9TZCAmJlxuXHRcdFx0XHRjb25maXJtKHdpbmRvdy53Z1VMUygn5Zyo6aG16Z2i5LiK5om+5Yiw5b+r6YCf5Yig6Zmk5qih5p2/77yM6KaB56e76Zmk5ZCX77yfJywgJ+WcqOmggemdouS4iuaJvuWIsOW/q+mAn+WIqumZpOaooeadv++8jOimgeenu+mZpOWXju+8nycpKVxuXHRcdFx0KSB7XG5cdFx0XHRcdHRleHQgPSB0ZXh0Tm9TZDtcblx0XHRcdH1cblx0XHRcdHBhZ2VvYmouc2V0UGFnZVRleHQodGFnICsgdGV4dCk7XG5cdFx0XHRsZXQgZWRpdFN1bW1hcnkgPSB3aW5kb3cud2dVTFMoJ+ivt+axguW/q+mAn+WIoOmZpO+8iCcsICfoq4vmsYLlv6vpgJ/liKrpmaTvvIgnKTtcblx0XHRcdGVkaXRTdW1tYXJ5ICs9IGBbW1FXOkNTRCMke3BhcmFtcy5ub3JtYWxpemVkLnRvVXBwZXJDYXNlKCl9fENTRCAke3BhcmFtcy5ub3JtYWxpemVkLnRvVXBwZXJDYXNlKCl9XV1gO1xuXHRcdFx0ZWRpdFN1bW1hcnkgKz0gJ++8iSc7XG5cdFx0XHRwYWdlb2JqLnNldEVkaXRTdW1tYXJ5KGVkaXRTdW1tYXJ5KTtcblx0XHRcdHBhZ2VvYmouc2V0Q2hhbmdlVGFncyhUd2lua2xlLmNoYW5nZVRhZ3MpO1xuXHRcdFx0cGFnZW9iai5zZXRXYXRjaGxpc3QoVHdpbmtsZS5nZXRQcmVmKCdkZWxpV2F0Y2hQYWdlJykpO1xuXHRcdFx0cGFnZW9iai5zZXRDcmVhdGVPcHRpb24oJ25vY3JlYXRlJyk7XG5cdFx0XHRwYWdlb2JqLnNhdmUoKTtcblx0XHR9LFxuXHRcdHVzZXJOb3RpZmljYXRpb246IChwYWdlb2JqKSA9PiB7XG5cdFx0XHRjb25zdCBwYXJhbXMgPSBwYWdlb2JqLmdldENhbGxiYWNrUGFyYW1ldGVycygpO1xuXHRcdFx0Y29uc3QgaW5pdGlhbENvbnRyaWIgPSBwYWdlb2JqLmdldENyZWF0b3IoKTtcblx0XHRcdC8vIGRpc2FsbG93IHdhcm5pbmcgeW91cnNlbGZcblx0XHRcdGlmIChpbml0aWFsQ29udHJpYiA9PT0gbXcuY29uZmlnLmdldCgnd2dVc2VyTmFtZScpKSB7XG5cdFx0XHRcdHBhZ2VvYmpcblx0XHRcdFx0XHQuZ2V0U3RhdHVzRWxlbWVudCgpXG5cdFx0XHRcdFx0Lndhcm4oYOaCqO+8iCR7aW5pdGlhbENvbnRyaWJ977yJJHt3aW5kb3cud2dVTFMoJ+WIm+W7uuS6huivpemhte+8jOi3s+i/h+mAmuefpScsICflu7rnq4vkuoboqbLpoIHvvIzot7PpgY7pgJrnn6UnKX1gKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGNvbnN0IHRhbGtQYWdlTmFtZSA9IGBVc2VyIHRhbGs6JHtpbml0aWFsQ29udHJpYn1gO1xuXHRcdFx0XHRjb25zdCB1c2VydGFsa3BhZ2UgPSBuZXcgTW9yZWJpdHMud2lraS5wYWdlKFxuXHRcdFx0XHRcdHRhbGtQYWdlTmFtZSxcblx0XHRcdFx0XHRgJHt3aW5kb3cud2dVTFMoJ+mAmuefpeS4iuS8oOiAhScsICfpgJrnn6XkuIrlgrPogIUnKX3vvIgke2luaXRpYWxDb250cmlife+8iWBcblx0XHRcdFx0KTtcblx0XHRcdFx0Y29uc3Qgbm90aWZ5dGV4dCA9ICdcXG57eycuY29uY2F0KFxuXHRcdFx0XHRcdCdzdWJzdDonLFxuXHRcdFx0XHRcdGBEaS0ke3BhcmFtcy50ZW1wbGF0ZW5hbWV9LW5vdGljZXwxPSR7TW9yZWJpdHMucGFnZU5hbWVOb3JtfX19LS1+fmAsXG5cdFx0XHRcdFx0J35+J1xuXHRcdFx0XHQpO1xuXHRcdFx0XHR1c2VydGFsa3BhZ2Uuc2V0QXBwZW5kVGV4dChub3RpZnl0ZXh0KTtcblx0XHRcdFx0dXNlcnRhbGtwYWdlLnNldEVkaXRTdW1tYXJ5KFxuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn6YCa55+l77ya5paH5Lu2W1snLCAn6YCa55+l77ya5qqU5qGIW1snKSArXG5cdFx0XHRcdFx0XHRNb3JlYml0cy5wYWdlTmFtZU5vcm0gK1xuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCddXeW/q+mAn+WIoOmZpOaPkOWQjScsICddXeW/q+mAn+WIqumZpOaPkOWQjScpXG5cdFx0XHRcdCk7XG5cdFx0XHRcdHVzZXJ0YWxrcGFnZS5zZXRDaGFuZ2VUYWdzKFR3aW5rbGUuY2hhbmdlVGFncyk7XG5cdFx0XHRcdHVzZXJ0YWxrcGFnZS5zZXRDcmVhdGVPcHRpb24oJ3JlY3JlYXRlJyk7XG5cdFx0XHRcdHVzZXJ0YWxrcGFnZS5zZXRXYXRjaGxpc3QoVHdpbmtsZS5nZXRQcmVmKCdkZWxpV2F0Y2hVc2VyJykpO1xuXHRcdFx0XHR1c2VydGFsa3BhZ2Uuc2V0Rm9sbG93UmVkaXJlY3QodHJ1ZSwgZmFsc2UpO1xuXHRcdFx0XHR1c2VydGFsa3BhZ2UuYXBwZW5kKCk7XG5cdFx0XHR9XG5cdFx0XHQvLyBhZGQgdGhpcyBub21pbmF0aW9uIHRvIHRoZSB1c2VyJ3MgdXNlcnNwYWNlIGxvZywgaWYgdGhlIHVzZXIgaGFzIGVuYWJsZWQgaXRcblx0XHRcdGlmIChwYXJhbXMubG9nbm9taW5hdGlvbikge1xuXHRcdFx0XHRwYXJhbXMuZnJvbURJID0gdHJ1ZTtcblx0XHRcdFx0VHdpbmtsZS5zcGVlZHkuY2FsbGJhY2tzLnVzZXIuYWRkVG9Mb2cocGFyYW1zLCBpbml0aWFsQ29udHJpYik7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRpbWFnZUxpc3Q6IChwYWdlb2JqKSA9PiB7XG5cdFx0XHRjb25zdCB0ZXh0ID0gcGFnZW9iai5nZXRQYWdlVGV4dCgpO1xuXHRcdFx0Ly8gY29uc3QgcGFyYW1zID0gcGFnZW9iai5nZXRDYWxsYmFja1BhcmFtZXRlcnMoKTtcblx0XHRcdHBhZ2VvYmouc2V0UGFnZVRleHQoYCR7dGV4dH1cXG4qIFtbOiR7TW9yZWJpdHMucGFnZU5hbWVOb3JtfV1dLS1+fmAuY29uY2F0KCd+ficpKTtcblx0XHRcdHBhZ2VvYmouc2V0RWRpdFN1bW1hcnkoYOWKoOWFpVtbJHtNb3JlYml0cy5wYWdlTmFtZU5vcm19XV1gKTtcblx0XHRcdHBhZ2VvYmouc2V0Q2hhbmdlVGFncyhUd2lua2xlLmNoYW5nZVRhZ3MpO1xuXHRcdFx0cGFnZW9iai5zZXRDcmVhdGVPcHRpb24oJ3JlY3JlYXRlJyk7XG5cdFx0XHRwYWdlb2JqLnNhdmUoKTtcblx0XHR9LFxuXHR9O1xuXHRUd2lua2xlLmFkZEluaXRDYWxsYmFjayhUd2lua2xlLmltYWdlLCAnaW1hZ2UnKTtcbn0pKCk7XG5cbmV4cG9ydCB7fTtcbiIsICIvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10cy1jb21tZW50XG4vLyBAdHMtbm9jaGVja1xuaW1wb3J0IHthcGl9IGZyb20gJy4vYXBpJztcblxuLyohIFR3aW5rbGUuanMgLSB0d2lua2xlcHJvdGVjdC5qcyAqL1xuKGZ1bmN0aW9uIHR3aW5rbGVwcm90ZWN0KCQpIHtcblx0Y29uc3QgJGJvZHkgPSAkKCdib2R5Jyk7XG5cdC8qKlxuXHQgKiB0d2lua2xlcHJvdGVjdC5qczogUHJvdGVjdC9SUFAgbW9kdWxlXG5cdCAqIE1vZGUgb2YgaW52b2NhdGlvbjogVGFiIChcIlBQXCIvXCJSUFBcIilcblx0ICogQWN0aXZlIG9uOiBOb24tc3BlY2lhbCwgbm9uLU1lZGlhV2lraSBwYWdlc1xuXHQgKi9cblx0Ly8gTm90ZTogYSBsb3Qgb2YgY29kZSBpbiB0aGlzIG1vZHVsZSBpcyByZS11c2VkL2NhbGxlZCBieSBiYXRjaHByb3RlY3QuXG5cdFR3aW5rbGUucHJvdGVjdCA9ICgpID0+IHtcblx0XHRpZiAobXcuY29uZmlnLmdldCgnd2dOYW1lc3BhY2VOdW1iZXInKSA8IDAgfHwgbXcuY29uZmlnLmdldCgnd2dOYW1lc3BhY2VOdW1iZXInKSA9PT0gOCkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRUd2lua2xlLmFkZFBvcnRsZXRMaW5rKFxuXHRcdFx0VHdpbmtsZS5wcm90ZWN0LmNhbGxiYWNrLFxuXHRcdFx0d2luZG93LndnVUxTKCfkv53miqQnLCAn5L+d6K23JyksXG5cdFx0XHQndHctcnBwJyxcblx0XHRcdE1vcmViaXRzLnVzZXJJc1N5c29wID8gd2luZG93LndnVUxTKCfkv53miqTpobXpnaInLCAn5L+d6K236aCB6Z2iJykgOiB3aW5kb3cud2dVTFMoJ+ivt+axguS/neaKpOmhtemdoicsICfoq4vmsYLkv53orbfpoIHpnaInKVxuXHRcdCk7XG5cdH07XG5cdFR3aW5rbGUucHJvdGVjdC5jYWxsYmFjayA9ICgpID0+IHtcblx0XHRjb25zdCBXaW5kb3cgPSBuZXcgTW9yZWJpdHMuc2ltcGxlV2luZG93KDYyMCwgNTMwKTtcblx0XHRXaW5kb3cuc2V0VGl0bGUoXG5cdFx0XHRNb3JlYml0cy51c2VySXNTeXNvcFxuXHRcdFx0XHQ/IHdpbmRvdy53Z1VMUygn5pa96KGM5oiW6K+35rGC5L+d5oqk6aG16Z2iJywgJ+aWveihjOaIluiri+axguS/neitt+mggemdoicpXG5cdFx0XHRcdDogd2luZG93LndnVUxTKCfor7fmsYLkv53miqTpobXpnaInLCAn6KuL5rGC5L+d6K236aCB6Z2iJylcblx0XHQpO1xuXHRcdFdpbmRvdy5zZXRTY3JpcHROYW1lKCdUd2lua2xlJyk7XG5cdFx0V2luZG93LmFkZEZvb3Rlckxpbmsod2luZG93LndnVUxTKCfkv53miqTmlrnpkognLCAn5L+d6K235pa56YedJyksICdRVzpQUk9UJyk7XG5cdFx0V2luZG93LmFkZEZvb3Rlckxpbmsod2luZG93LndnVUxTKCfkv53miqTorr7nva4nLCAn5L+d6K236Kit5a6aJyksICdIOlRXL1BSRUYjcHJvdGVjdCcpO1xuXHRcdFdpbmRvdy5hZGRGb290ZXJMaW5rKHdpbmRvdy53Z1VMUygnVHdpbmtsZeW4ruWKqScsICdUd2lua2xl6Kqq5piOJyksICdIOlRXL0RPQyNwcm90ZWN0Jyk7XG5cdFx0Y29uc3QgZm9ybSA9IG5ldyBNb3JlYml0cy5xdWlja0Zvcm0oVHdpbmtsZS5wcm90ZWN0LmNhbGxiYWNrLmV2YWx1YXRlKTtcblx0XHRjb25zdCBhY3Rpb25maWVsZCA9IGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdmaWVsZCcsXG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmk43kvZznsbvlnosnLCAn5pON5L2c6aGe5YilJyksXG5cdFx0fSk7XG5cdFx0aWYgKE1vcmViaXRzLnVzZXJJc1N5c29wKSB7XG5cdFx0XHRhY3Rpb25maWVsZC5hcHBlbmQoe1xuXHRcdFx0XHR0eXBlOiAncmFkaW8nLFxuXHRcdFx0XHRuYW1lOiAnYWN0aW9udHlwZScsXG5cdFx0XHRcdGV2ZW50OiBUd2lua2xlLnByb3RlY3QuY2FsbGJhY2suY2hhbmdlQWN0aW9uLFxuXHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5L+d5oqk6aG16Z2iJywgJ+S/neitt+mggemdoicpLFxuXHRcdFx0XHRcdFx0dmFsdWU6ICdwcm90ZWN0Jyxcblx0XHRcdFx0XHRcdGNoZWNrZWQ6IHRydWUsXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XSxcblx0XHRcdH0pO1xuXHRcdH1cblx0XHRhY3Rpb25maWVsZC5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ3JhZGlvJyxcblx0XHRcdG5hbWU6ICdhY3Rpb250eXBlJyxcblx0XHRcdGV2ZW50OiBUd2lua2xlLnByb3RlY3QuY2FsbGJhY2suY2hhbmdlQWN0aW9uLFxuXHRcdFx0bGlzdDogW1xuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6K+35rGC5L+d5oqk6aG16Z2iJywgJ+iri+axguS/neitt+mggemdoicpLFxuXHRcdFx0XHRcdHZhbHVlOiAncmVxdWVzdCcsXG5cdFx0XHRcdFx0dG9vbHRpcDpcblx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn6Iul5oKo5oOz5ZyoUVc6UkZQUOivt+axguS/neaKpOatpOmhtScsICfoi6Xmgqjmg7PlnKhRVzpSRlBQ6KuL5rGC5L+d6K235q2k6aCBJykgK1xuXHRcdFx0XHRcdFx0KE1vcmViaXRzLnVzZXJJc1N5c29wID8gJ+iAjOS4jeaYr+iHquihjOWujOaIkOOAgicgOiAn44CCJyksXG5cdFx0XHRcdFx0Y2hlY2tlZDogIU1vcmViaXRzLnVzZXJJc1N5c29wLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn55So5L+d5oqk5qih5p2/5qCH6K6w5q2k6aG1JywgJ+eUqOS/neitt+aooeadv+aomeiomOatpOmggScpLFxuXHRcdFx0XHRcdHZhbHVlOiAndGFnJyxcblx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoJ+WPr+S7peeUqOatpOS4uumhtemdouWKoOS4iuWQiOmAgueahOS/neaKpOaooeadv+OAgicsICflj6/ku6XnlKjmraTngrrpoIHpnaLliqDkuIrlkIjpgannmoTkv53orbfmqKHmnb/jgIInKSxcblx0XHRcdFx0XHRkaXNhYmxlZDogbXcuY29uZmlnLmdldCgnd2dBcnRpY2xlSWQnKSA9PT0gMCB8fCBtdy5jb25maWcuZ2V0KCd3Z1BhZ2VDb250ZW50TW9kZWwnKSA9PT0gJ1NjcmlidW50bycsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0pO1xuXHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdmaWVsZCcsXG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfpu5jorqQnLCAn6aCQ6KitJyksXG5cdFx0XHRuYW1lOiAnZmllbGRfcHJlc2V0Jyxcblx0XHR9KTtcblx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnZmllbGQnLFxuXHRcdFx0bGFiZWw6ICcxJyxcblx0XHRcdG5hbWU6ICdmaWVsZDEnLFxuXHRcdH0pO1xuXHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdmaWVsZCcsXG5cdFx0XHRsYWJlbDogJzInLFxuXHRcdFx0bmFtZTogJ2ZpZWxkMicsXG5cdFx0fSk7XG5cdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ3N1Ym1pdCcsXG5cdFx0fSk7XG5cdFx0Y29uc3QgcmVzdWx0ID0gZm9ybS5yZW5kZXIoKTtcblx0XHRXaW5kb3cuc2V0Q29udGVudChyZXN1bHQpO1xuXHRcdFdpbmRvdy5kaXNwbGF5KCk7XG5cdFx0Ly8gV2UgbXVzdCBpbml0IHRoZSBjb250cm9sc1xuXHRcdGNvbnN0IGV2dCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdFdmVudCcpO1xuXHRcdGV2dC5pbml0RXZlbnQoJ2NoYW5nZScsIHRydWUsIHRydWUpO1xuXHRcdHJlc3VsdC5hY3Rpb250eXBlWzBdLmRpc3BhdGNoRXZlbnQoZXZ0KTtcblx0XHQvLyBnZXQgY3VycmVudCBwcm90ZWN0aW9uIGxldmVsIGFzeW5jaHJvbm91c2x5XG5cdFx0VHdpbmtsZS5wcm90ZWN0LmZldGNoUHJvdGVjdGlvbkxldmVsKCk7XG5cdH07XG5cdC8vIEN1c3RvbWl6YWJsZSBuYW1lc3BhY2UgYW5kIEZsYWdnZWRSZXZzIHNldHRpbmdzXG5cdC8vIEluIHRoZW9yeSBpdCdkIGJlIG5pY2UgdG8gaGF2ZSByZXN0cmljdGlvbmxldmVscyBkZWZpbmVkIGhlcmUsXG5cdC8vIGJ1dCB0aG9zZSBhcmUgb25seSBhdmFpbGFibGUgdmlhIGEgc2l0ZWluZm8gcXVlcnlcblx0Ly8gTGltaXQgdGVtcGxhdGUgZWRpdG9yOyBhIFR3aW5rbGUgcmVzdHJpY3Rpb24sIG5vdCBhIHNpdGUgc2V0dGluZ1xuXHRjb25zdCBpc1RlbXBsYXRlID0gbXcuY29uZmlnLmdldCgnd2dOYW1lc3BhY2VOdW1iZXInKSA9PT0gMTAgfHwgbXcuY29uZmlnLmdldCgnd2dOYW1lc3BhY2VOdW1iZXInKSA9PT0gODI4O1xuXHQvLyBDb250YWlucyB0aGUgY3VycmVudCBwcm90ZWN0aW9uIGxldmVsIGluIGFuIG9iamVjdFxuXHQvLyBPbmNlIGZpbGxlZCwgaXQgd2lsbCBsb29rIHNvbWV0aGluZyBsaWtlOlxuXHQvLyB7IGVkaXQ6IHsgbGV2ZWw6IFwic3lzb3BcIiwgZXhwaXJ5OiA8c29tZSBkYXRlPiwgY2FzY2FkZTogdHJ1ZSB9LCAuLi4gfVxuXHRUd2lua2xlLnByb3RlY3QuY3VycmVudFByb3RlY3Rpb25MZXZlbHMgPSB7fTtcblx0VHdpbmtsZS5wcm90ZWN0LnByZXZpb3VzUHJvdGVjdGlvbkxldmVscyA9IHt9O1xuXHRUd2lua2xlLnByb3RlY3QuZmV0Y2hQcm90ZWN0aW9uTGV2ZWwgPSAoKSA9PiB7XG5cdFx0Y29uc3QgcGFyYW1zID0ge1xuXHRcdFx0Zm9ybWF0OiAnanNvbicsXG5cdFx0XHRpbmRleHBhZ2VpZHM6IHRydWUsXG5cdFx0XHRhY3Rpb246ICdxdWVyeScsXG5cdFx0XHRsaXN0OiAnbG9nZXZlbnRzJyxcblx0XHRcdGxldHlwZTogJ3Byb3RlY3QnLFxuXHRcdFx0bGV0aXRsZTogbXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpLFxuXHRcdFx0cHJvcDogJ2luZm8nLFxuXHRcdFx0aW5wcm9wOiAncHJvdGVjdGlvbnx3YXRjaGVkJyxcblx0XHRcdHRpdGxlczogbXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpLFxuXHRcdH07XG5cdFx0dm9pZCBhcGkuZ2V0KHBhcmFtcykudGhlbigocHJvdGVjdERhdGEpID0+IHtcblx0XHRcdGNvbnN0IFtwYWdlaWRdID0gcHJvdGVjdERhdGEucXVlcnkucGFnZWlkcztcblx0XHRcdGNvbnN0IHBhZ2UgPSBwcm90ZWN0RGF0YS5xdWVyeS5wYWdlc1twYWdlaWRdO1xuXHRcdFx0Y29uc3QgY3VycmVudCA9IHt9O1xuXHRcdFx0Y29uc3QgcHJldmlvdXMgPSB7fTtcblx0XHRcdC8vIFNhdmUgcmVxdWVzdGVkIHBhZ2UncyB3YXRjaGVkIHN0YXR1cyBmb3IgbGF0ZXIgaW4gY2FzZSBuZWVkZWQgd2hlbiBmaWxpbmcgcmVxdWVzdFxuXHRcdFx0VHdpbmtsZS5wcm90ZWN0LndhdGNoZWQgPSBwYWdlLndhdGNobGlzdGV4cGlyeSB8fCBwYWdlLndhdGNoZWQgPT09ICcnO1xuXHRcdFx0Zm9yIChjb25zdCBwcm90ZWN0aW9uIG9mIHBhZ2UucHJvdGVjdGlvbikge1xuXHRcdFx0XHRpZiAocHJvdGVjdGlvbi50eXBlICE9PSAnYWZ0Jykge1xuXHRcdFx0XHRcdGN1cnJlbnRbcHJvdGVjdGlvbi50eXBlXSA9IHtcblx0XHRcdFx0XHRcdGxldmVsOiBwcm90ZWN0aW9uLmxldmVsLFxuXHRcdFx0XHRcdFx0ZXhwaXJ5OiBwcm90ZWN0aW9uLmV4cGlyeSxcblx0XHRcdFx0XHRcdGNhc2NhZGU6IHByb3RlY3Rpb24uY2FzY2FkZSA9PT0gJycsXG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0Ly8gT25seSB1c2UgdGhlIGxvZyBleGNlcHQgdW5wcm90ZWN0XG5cdFx0XHRpZiAocHJvdGVjdERhdGEucXVlcnkubG9nZXZlbnRzLmxlbmd0aCA+PSAxICYmIHByb3RlY3REYXRhLnF1ZXJ5LmxvZ2V2ZW50c1swXS5hY3Rpb24gIT09ICd1bnByb3RlY3QnKSB7XG5cdFx0XHRcdFtUd2lua2xlLnByb3RlY3QucHJldmlvdXNQcm90ZWN0aW9uTG9nXSA9IHByb3RlY3REYXRhLnF1ZXJ5LmxvZ2V2ZW50cztcblx0XHRcdH0gZWxzZSBpZiAocHJvdGVjdERhdGEucXVlcnkubG9nZXZlbnRzLmxlbmd0aCA+PSAyKSB7XG5cdFx0XHRcdFssIFR3aW5rbGUucHJvdGVjdC5wcmV2aW91c1Byb3RlY3Rpb25Mb2ddID0gcHJvdGVjdERhdGEucXVlcnkubG9nZXZlbnRzO1xuXHRcdFx0fVxuXHRcdFx0aWYgKFR3aW5rbGUucHJvdGVjdC5wcmV2aW91c1Byb3RlY3Rpb25Mb2cpIHtcblx0XHRcdFx0Zm9yIChjb25zdCBwcm90ZWN0aW9uIG9mIFR3aW5rbGUucHJvdGVjdC5wcmV2aW91c1Byb3RlY3Rpb25Mb2cucGFyYW1zLmRldGFpbHMpIHtcblx0XHRcdFx0XHRpZiAocHJvdGVjdGlvbi50eXBlICE9PSAnYWZ0Jykge1xuXHRcdFx0XHRcdFx0cHJldmlvdXNbcHJvdGVjdGlvbi50eXBlXSA9IHtcblx0XHRcdFx0XHRcdFx0bGV2ZWw6IHByb3RlY3Rpb24ubGV2ZWwsXG5cdFx0XHRcdFx0XHRcdGV4cGlyeTogcHJvdGVjdGlvbi5leHBpcnksXG5cdFx0XHRcdFx0XHRcdGNhc2NhZGU6IHByb3RlY3Rpb24uY2FzY2FkZSA9PT0gJycsXG5cdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0Ly8gc2hvdyB0aGUgcHJvdGVjdGlvbiBsZXZlbCBhbmQgbG9nIGluZm9cblx0XHRcdFR3aW5rbGUucHJvdGVjdC5oYXNQcm90ZWN0TG9nID0gISFwcm90ZWN0RGF0YS5xdWVyeS5sb2dldmVudHMubGVuZ3RoO1xuXHRcdFx0VHdpbmtsZS5wcm90ZWN0LmN1cnJlbnRQcm90ZWN0aW9uTGV2ZWxzID0gY3VycmVudDtcblx0XHRcdFR3aW5rbGUucHJvdGVjdC5wcmV2aW91c1Byb3RlY3Rpb25MZXZlbHMgPSBwcmV2aW91cztcblx0XHRcdFR3aW5rbGUucHJvdGVjdC5jYWxsYmFjay5zaG93TG9nQW5kQ3VycmVudFByb3RlY3RJbmZvKCk7XG5cdFx0fSk7XG5cdH07XG5cdFR3aW5rbGUucHJvdGVjdC5jYWxsYmFjay5zaG93TG9nQW5kQ3VycmVudFByb3RlY3RJbmZvID0gKCkgPT4ge1xuXHRcdGNvbnN0IGN1cnJlbnRseVByb3RlY3RlZCA9IE9iamVjdC5rZXlzKFR3aW5rbGUucHJvdGVjdC5jdXJyZW50UHJvdGVjdGlvbkxldmVscykubGVuZ3RoICE9PSAwO1xuXHRcdGlmIChUd2lua2xlLnByb3RlY3QuaGFzUHJvdGVjdExvZyB8fCBUd2lua2xlLnByb3RlY3QuaGFzU3RhYmxlTG9nKSB7XG5cdFx0XHRjb25zdCAkbGlua01hcmt1cCA9ICQoJzxzcGFuPicpO1xuXHRcdFx0aWYgKFR3aW5rbGUucHJvdGVjdC5oYXNQcm90ZWN0TG9nKSB7XG5cdFx0XHRcdCRsaW5rTWFya3VwLmFwcGVuZChcblx0XHRcdFx0XHQkKFxuXHRcdFx0XHRcdFx0YDxhIHJlbD1cIm5vb3BlbmVyXCIgdGFyZ2V0PVwiX2JsYW5rXCIgaHJlZj1cIiR7bXcudXRpbC5nZXRVcmwoJ1NwZWNpYWw6TG9nJywge1xuXHRcdFx0XHRcdFx0XHRhY3Rpb246ICd2aWV3Jyxcblx0XHRcdFx0XHRcdFx0cGFnZTogbXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpLFxuXHRcdFx0XHRcdFx0XHR0eXBlOiAncHJvdGVjdCcsXG5cdFx0XHRcdFx0XHR9KX1cIj4ke3dpbmRvdy53Z1VMUygn5L+d5oqk5pel5b+XJywgJ+S/neitt+aXpeiqjCcpfTwvYT5gXG5cdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRUd2lua2xlLnByb3RlY3QuaGFzU3RhYmxlTG9nID8gJCgnPHNwYW4+JykuaHRtbCgnICZidWxsOyAnKSA6IG51bGxcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHRcdE1vcmViaXRzLnN0YXR1cy5pbml0KCRib2R5LmZpbmQoJ2RpdltuYW1lPVwiaGFzcHJvdGVjdGxvZ1wiXSBzcGFuJylbMF0pO1xuXHRcdFx0TW9yZWJpdHMuc3RhdHVzLndhcm4oXG5cdFx0XHRcdGN1cnJlbnRseVByb3RlY3RlZFxuXHRcdFx0XHRcdD8gd2luZG93LndnVUxTKCflhYjliY3kv53miqQnLCAn5YWI5YmN5L+d6K23Jylcblx0XHRcdFx0XHQ6IFtcblx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfmraTpobXpnaLmm77lnKgnLCAn5q2k6aCB6Z2i5pu+5ZyoJyksXG5cdFx0XHRcdFx0XHRcdCQoXG5cdFx0XHRcdFx0XHRcdFx0YDxiPiR7bmV3IE1vcmViaXRzLmRhdGUoVHdpbmtsZS5wcm90ZWN0LnByZXZpb3VzUHJvdGVjdGlvbkxvZy50aW1lc3RhbXApLmNhbGVuZGFyKFxuXHRcdFx0XHRcdFx0XHRcdFx0J3V0Yydcblx0XHRcdFx0XHRcdFx0XHQpfTwvYj5gXG5cdFx0XHRcdFx0XHRcdClbMF0sXG5cdFx0XHRcdFx0XHRcdGDooqske1R3aW5rbGUucHJvdGVjdC5wcmV2aW91c1Byb3RlY3Rpb25Mb2cudXNlcn0ke3dpbmRvdy53Z1VMUygn5L+d5oqkJywgJ+S/neittycpfe+8mmAsXG5cdFx0XHRcdFx0XHRcdC4uLlR3aW5rbGUucHJvdGVjdC5mb3JtYXRQcm90ZWN0aW9uRGVzY3JpcHRpb24oVHdpbmtsZS5wcm90ZWN0LnByZXZpb3VzUHJvdGVjdGlvbkxldmVscyksXG5cdFx0XHRcdFx0XHRdLFxuXHRcdFx0XHQkbGlua01hcmt1cFswXVxuXHRcdFx0KTtcblx0XHR9XG5cdFx0TW9yZWJpdHMuc3RhdHVzLmluaXQoJGJvZHkuZmluZCgnZGl2W25hbWU9XCJjdXJyZW50cHJvdFwiXSBzcGFuJylbMF0pO1xuXHRcdGxldCBwcm90ZWN0aW9uTm9kZSA9IFtdO1xuXHRcdGxldCBzdGF0dXNMZXZlbCA9ICdpbmZvJztcblx0XHRwcm90ZWN0aW9uTm9kZSA9IFR3aW5rbGUucHJvdGVjdC5mb3JtYXRQcm90ZWN0aW9uRGVzY3JpcHRpb24oVHdpbmtsZS5wcm90ZWN0LmN1cnJlbnRQcm90ZWN0aW9uTGV2ZWxzKTtcblx0XHRpZiAoY3VycmVudGx5UHJvdGVjdGVkKSB7XG5cdFx0XHRzdGF0dXNMZXZlbCA9ICd3YXJuJztcblx0XHR9XG5cdFx0TW9yZWJpdHMuc3RhdHVzW3N0YXR1c0xldmVsXSh3aW5kb3cud2dVTFMoJ+W9k+WJjeS/neaKpOetiee6pycsICfnm67liY3kv53orbfnrYnntJonKSwgcHJvdGVjdGlvbk5vZGUpO1xuXHR9O1xuXHRUd2lua2xlLnByb3RlY3QuY2FsbGJhY2suY2hhbmdlQWN0aW9uID0gKGUpID0+IHtcblx0XHRsZXQgZmllbGRfcHJlc2V0O1xuXHRcdGxldCBmaWVsZDE7XG5cdFx0bGV0IGZpZWxkMjtcblx0XHRzd2l0Y2ggKGUudGFyZ2V0LnZhbHVlcykge1xuXHRcdFx0Y2FzZSAncHJvdGVjdCc6XG5cdFx0XHRcdGZpZWxkX3ByZXNldCA9IG5ldyBNb3JlYml0cy5xdWlja0Zvcm0uZWxlbWVudCh7XG5cdFx0XHRcdFx0dHlwZTogJ2ZpZWxkJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfpu5jorqQnLCAn6aCQ6KitJyksXG5cdFx0XHRcdFx0bmFtZTogJ2ZpZWxkX3ByZXNldCcsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRmaWVsZF9wcmVzZXQuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnc2VsZWN0Jyxcblx0XHRcdFx0XHRuYW1lOiAnY2F0ZWdvcnknLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+mAieaLqem7mOiupO+8micsICfpgbjmk4fpoJDoqK3vvJonKSxcblx0XHRcdFx0XHRldmVudDogVHdpbmtsZS5wcm90ZWN0LmNhbGxiYWNrLmNoYW5nZVByZXNldCxcblx0XHRcdFx0XHRsaXN0OiBtdy5jb25maWcuZ2V0KCd3Z0FydGljbGVJZCcpXG5cdFx0XHRcdFx0XHQ/IFR3aW5rbGUucHJvdGVjdC5wcm90ZWN0aW9uVHlwZXNBZG1pblxuXHRcdFx0XHRcdFx0OiBUd2lua2xlLnByb3RlY3QucHJvdGVjdGlvblR5cGVzQ3JlYXRlLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0ZmllbGQyID0gbmV3IE1vcmViaXRzLnF1aWNrRm9ybS5lbGVtZW50KHtcblx0XHRcdFx0XHR0eXBlOiAnZmllbGQnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+S/neaKpOmAiemhuScsICfkv53orbfpgbjpoIUnKSxcblx0XHRcdFx0XHRuYW1lOiAnZmllbGQyJyxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGZpZWxkMi5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0XHRcdG5hbWU6ICdjdXJyZW50cHJvdCcsXG5cdFx0XHRcdFx0bGFiZWw6ICcgJyxcblx0XHRcdFx0fSk7IC8vIGhvbGRzIHRoZSBjdXJyZW50IHByb3RlY3Rpb24gbGV2ZWwsIGFzIGZpbGxlZCBvdXQgYnkgdGhlIGFzeW5jIGNhbGxiYWNrXG5cdFx0XHRcdGZpZWxkMi5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0XHRcdG5hbWU6ICdoYXNwcm90ZWN0bG9nJyxcblx0XHRcdFx0XHRsYWJlbDogJyAnLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0Ly8gZm9yIGV4aXN0aW5nIHBhZ2VzXG5cdFx0XHRcdGlmIChtdy5jb25maWcuZ2V0KCd3Z0FydGljbGVJZCcpKSB7XG5cdFx0XHRcdFx0ZmllbGQyLmFwcGVuZCh7XG5cdFx0XHRcdFx0XHR0eXBlOiAnY2hlY2tib3gnLFxuXHRcdFx0XHRcdFx0ZXZlbnQ6IFR3aW5rbGUucHJvdGVjdC5mb3JtZXZlbnRzLmVkaXRtb2RpZnksXG5cdFx0XHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfkv67mlLnnvJbovpHmnYPpmZAnLCAn5L+u5pS557eo6Lyv5qyK6ZmQJyksXG5cdFx0XHRcdFx0XHRcdFx0bmFtZTogJ2VkaXRtb2RpZnknLFxuXHRcdFx0XHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHRcdCfoi6XmraTpobnlhbPpl63vvIznvJbovpHmnYPpmZDlsIbkuI3kvJrkv67mlLnjgIInLFxuXHRcdFx0XHRcdFx0XHRcdFx0J+iLpeatpOmghemXnOmWie+8jOe3qOi8r+asiumZkOWwh+S4jeacg+S/ruaUueOAgidcblx0XHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0XHRcdGNoZWNrZWQ6IHRydWUsXG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRdLFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdGZpZWxkMi5hcHBlbmQoe1xuXHRcdFx0XHRcdFx0dHlwZTogJ3NlbGVjdCcsXG5cdFx0XHRcdFx0XHRuYW1lOiAnZWRpdGxldmVsJyxcblx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+e8lui+keadg+mZkO+8micsICfnt6jovK/mrIrpmZDvvJonKSxcblx0XHRcdFx0XHRcdGV2ZW50OiBUd2lua2xlLnByb3RlY3QuZm9ybWV2ZW50cy5lZGl0bGV2ZWwsXG5cdFx0XHRcdFx0XHRsaXN0OiBUd2lua2xlLnByb3RlY3QucHJvdGVjdGlvbkxldmVscy5maWx0ZXIoXG5cdFx0XHRcdFx0XHRcdC8vIEZpbHRlciBURSBvdXRzaWRlIG9mIHRlbXBsYXRlcyBhbmQgbW9kdWxlc1xuXHRcdFx0XHRcdFx0XHQobGV2ZWwpID0+IHtcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gaXNUZW1wbGF0ZSB8fCBsZXZlbC52YWx1ZSAhPT0gJ3RlbXBsYXRlZWRpdG9yJztcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRmaWVsZDIuYXBwZW5kKHtcblx0XHRcdFx0XHRcdHR5cGU6ICdzZWxlY3QnLFxuXHRcdFx0XHRcdFx0bmFtZTogJ2VkaXRleHBpcnknLFxuXHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn57uI5q2i5pe26Ze077yaJywgJ+e1guatouaZgumWk++8micpLFxuXHRcdFx0XHRcdFx0ZXZlbnQ6IChldmVudCkgPT4ge1xuXHRcdFx0XHRcdFx0XHRpZiAoZXZlbnQudGFyZ2V0LnZhbHVlID09PSAnY3VzdG9tJykge1xuXHRcdFx0XHRcdFx0XHRcdFR3aW5rbGUucHJvdGVjdC5kb0N1c3RvbUV4cGlyeShldmVudC50YXJnZXQpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdCQoJ2lucHV0W25hbWU9c21hbGxdJywgJChldmVudC50YXJnZXQpLmNsb3Nlc3QoJ2Zvcm0nKSlbMF0uY2hlY2tlZCA9XG5cdFx0XHRcdFx0XHRcdFx0ZXZlbnQudGFyZ2V0LnNlbGVjdGVkSW5kZXggPj0gNDsgLy8gMSBtb250aFxuXHRcdFx0XHRcdFx0fSxcblxuXHRcdFx0XHRcdFx0Ly8gZGVmYXVsdCBleHBpcnkgc2VsZWN0aW9uICgyIGRheXMpIGlzIGNvbmRpdGlvbmFsbHkgc2V0IGluIFR3aW5rbGUucHJvdGVjdC5jYWxsYmFjay5jaGFuZ2VQcmVzZXRcblx0XHRcdFx0XHRcdGxpc3Q6IFR3aW5rbGUucHJvdGVjdC5wcm90ZWN0aW9uTGVuZ3Rocyxcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRmaWVsZDIuYXBwZW5kKHtcblx0XHRcdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdFx0XHRldmVudDogVHdpbmtsZS5wcm90ZWN0LmZvcm1ldmVudHMubW92ZW1vZGlmeSxcblx0XHRcdFx0XHRcdGxpc3Q6IFtcblx0XHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+S/ruaUueenu+WKqOadg+mZkCcsICfkv67mlLnnp7vli5XmrIrpmZAnKSxcblx0XHRcdFx0XHRcdFx0XHRuYW1lOiAnbW92ZW1vZGlmeScsXG5cdFx0XHRcdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdFx0J+iLpeatpOmhueiiq+WFs+mXre+8jOenu+WKqOadg+mZkOWwhuS4jeiiq+S/ruaUueOAgicsXG5cdFx0XHRcdFx0XHRcdFx0XHQn6Iul5q2k6aCF6KKr6Zec6ZaJ77yM56e75YuV5qyK6ZmQ5bCH5LiN6KKr5L+u5pS544CCJ1xuXHRcdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRcdFx0Y2hlY2tlZDogdHJ1ZSxcblx0XHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdF0sXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0ZmllbGQyLmFwcGVuZCh7XG5cdFx0XHRcdFx0XHR0eXBlOiAnc2VsZWN0Jyxcblx0XHRcdFx0XHRcdG5hbWU6ICdtb3ZlbGV2ZWwnLFxuXHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn56e75Yqo5p2D6ZmQ77yaJywgJ+enu+WLleasiumZkO+8micpLFxuXHRcdFx0XHRcdFx0ZXZlbnQ6IFR3aW5rbGUucHJvdGVjdC5mb3JtZXZlbnRzLm1vdmVsZXZlbCxcblx0XHRcdFx0XHRcdGxpc3Q6IFR3aW5rbGUucHJvdGVjdC5wcm90ZWN0aW9uTGV2ZWxzLmZpbHRlcihcblx0XHRcdFx0XHRcdFx0Ly8gQXV0b2NvbmZpcm1lZCBpcyByZXF1aXJlZCBmb3IgYSBtb3ZlLCByZWR1bmRhbnRcblx0XHRcdFx0XHRcdFx0KGxldmVsKSA9PiB7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIChcblx0XHRcdFx0XHRcdFx0XHRcdGxldmVsLnZhbHVlICE9PSAnYXV0b2NvbmZpcm1lZCcgJiYgKGlzVGVtcGxhdGUgfHwgbGV2ZWwudmFsdWUgIT09ICd0ZW1wbGF0ZWVkaXRvcicpXG5cdFx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRmaWVsZDIuYXBwZW5kKHtcblx0XHRcdFx0XHRcdHR5cGU6ICdzZWxlY3QnLFxuXHRcdFx0XHRcdFx0bmFtZTogJ21vdmVleHBpcnknLFxuXHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn57uI5q2i5pe26Ze077yaJywgJ+e1guatouaZgumWk++8micpLFxuXHRcdFx0XHRcdFx0ZXZlbnQ6IChldmVudCkgPT4ge1xuXHRcdFx0XHRcdFx0XHRpZiAoZXZlbnQudGFyZ2V0LnZhbHVlID09PSAnY3VzdG9tJykge1xuXHRcdFx0XHRcdFx0XHRcdFR3aW5rbGUucHJvdGVjdC5kb0N1c3RvbUV4cGlyeShldmVudC50YXJnZXQpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0Ly8gZGVmYXVsdCBleHBpcnkgc2VsZWN0aW9uICgyIGRheXMpIGlzIGNvbmRpdGlvbmFsbHkgc2V0IGluIFR3aW5rbGUucHJvdGVjdC5jYWxsYmFjay5jaGFuZ2VQcmVzZXRcblx0XHRcdFx0XHRcdGxpc3Q6IFR3aW5rbGUucHJvdGVjdC5wcm90ZWN0aW9uTGVuZ3Rocyxcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHQvLyBmb3Igbm9uLWV4aXN0aW5nIHBhZ2VzXG5cdFx0XHRcdFx0ZmllbGQyLmFwcGVuZCh7XG5cdFx0XHRcdFx0XHR0eXBlOiAnc2VsZWN0Jyxcblx0XHRcdFx0XHRcdG5hbWU6ICdjcmVhdGVsZXZlbCcsXG5cdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfliJvlu7rmnYPpmZDvvJonLCAn5bu656uL5qyK6ZmQ77yaJyksXG5cdFx0XHRcdFx0XHRldmVudDogVHdpbmtsZS5wcm90ZWN0LmZvcm1ldmVudHMuY3JlYXRlbGV2ZWwsXG5cdFx0XHRcdFx0XHRsaXN0OiBUd2lua2xlLnByb3RlY3QucHJvdGVjdGlvbkxldmVscy5maWx0ZXIoXG5cdFx0XHRcdFx0XHRcdC8vIEZpbHRlciBURSBhbHdheXMsIGFuZCBhdXRvY29uZmlybWVkIGluIG1haW5zcGFjZVxuXHRcdFx0XHRcdFx0XHQobGV2ZWwpID0+IHtcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gbGV2ZWwudmFsdWUgIT09ICd0ZW1wbGF0ZWVkaXRvcic7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0ZmllbGQyLmFwcGVuZCh7XG5cdFx0XHRcdFx0XHR0eXBlOiAnc2VsZWN0Jyxcblx0XHRcdFx0XHRcdG5hbWU6ICdjcmVhdGVleHBpcnknLFxuXHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn57uI5q2i5pe26Ze077yaJywgJ+e1guatouaZgumWk++8micpLFxuXHRcdFx0XHRcdFx0ZXZlbnQ6IChldmVudCkgPT4ge1xuXHRcdFx0XHRcdFx0XHRpZiAoZXZlbnQudGFyZ2V0LnZhbHVlID09PSAnY3VzdG9tJykge1xuXHRcdFx0XHRcdFx0XHRcdFR3aW5rbGUucHJvdGVjdC5kb0N1c3RvbUV4cGlyeShldmVudC50YXJnZXQpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0Ly8gZGVmYXVsdCBleHBpcnkgc2VsZWN0aW9uIChpbmRlZmluaXRlKSBpcyBjb25kaXRpb25hbGx5IHNldCBpbiBUd2lua2xlLnByb3RlY3QuY2FsbGJhY2suY2hhbmdlUHJlc2V0XG5cdFx0XHRcdFx0XHRsaXN0OiBUd2lua2xlLnByb3RlY3QucHJvdGVjdGlvbkxlbmd0aHMsXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZmllbGQyLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdG5hbWU6ICdjbG9zZScsXG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+agh+iusOivt+axguS/neaKpOmhtemdouS4reeahOivt+axgicsICfmqJnoqJjoq4vmsYLkv53orbfpoIHpnaLkuK3nmoToq4vmsYInKSxcblx0XHRcdFx0XHRcdFx0Y2hlY2tlZDogdHJ1ZSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGZpZWxkMi5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICd0ZXh0YXJlYScsXG5cdFx0XHRcdFx0bmFtZTogJ3Byb3RlY3RSZWFzb24nLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+eQhueUse+8iOS/neaKpOaXpeW/l++8ie+8micsICfnkIbnlLHvvIjkv53orbfml6XoqozvvInvvJonKSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGlmICghbXcuY29uZmlnLmdldCgnd2dBcnRpY2xlSWQnKSB8fCBtdy5jb25maWcuZ2V0KCd3Z1BhZ2VDb250ZW50TW9kZWwnKSA9PT0gJ1NjcmlidW50bycpIHtcblx0XHRcdFx0XHQvLyB0YWdnaW5nIGlzbid0IHJlbGV2YW50IGZvciBub24tZXhpc3Rpbmcgb3IgbW9kdWxlIHBhZ2VzXG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdC8qIGZhbGxzIHRocm91Z2ggKi9cblx0XHRcdGNhc2UgJ3RhZyc6XG5cdFx0XHRcdGZpZWxkMSA9IG5ldyBNb3JlYml0cy5xdWlja0Zvcm0uZWxlbWVudCh7XG5cdFx0XHRcdFx0dHlwZTogJ2ZpZWxkJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmoIforrDpgInpobknLCAn5qiZ6KiY6YG46aCFJyksXG5cdFx0XHRcdFx0bmFtZTogJ2ZpZWxkMScsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRmaWVsZDEuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnZGl2Jyxcblx0XHRcdFx0XHRuYW1lOiAnY3VycmVudHByb3QnLFxuXHRcdFx0XHRcdGxhYmVsOiAnICcsXG5cdFx0XHRcdH0pOyAvLyBob2xkcyB0aGUgY3VycmVudCBwcm90ZWN0aW9uIGxldmVsLCBhcyBmaWxsZWQgb3V0IGJ5IHRoZSBhc3luYyBjYWxsYmFja1xuXHRcdFx0XHRmaWVsZDEuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnZGl2Jyxcblx0XHRcdFx0XHRuYW1lOiAnaGFzcHJvdGVjdGxvZycsXG5cdFx0XHRcdFx0bGFiZWw6ICcgJyxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGZpZWxkMS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdzZWxlY3QnLFxuXHRcdFx0XHRcdG5hbWU6ICd0YWd0eXBlJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfpgInmi6nkv53miqTmqKHmnb/vvJonLCAn6YG45pOH5L+d6K235qih5p2/77yaJyksXG5cdFx0XHRcdFx0bGlzdDogVHdpbmtsZS5wcm90ZWN0LnByb3RlY3Rpb25UYWdzLFxuXHRcdFx0XHRcdGV2ZW50OiBUd2lua2xlLnByb3RlY3QuZm9ybWV2ZW50cy50YWd0eXBlLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0ZmllbGQxLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdG5hbWU6ICdzbWFsbCcsXG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+S9v+eUqOWbvuagh++8iHNtYWxsPXllc++8iScsICfkvb/nlKjlnJbnpLrvvIhzbWFsbD15ZXPvvIknKSxcblx0XHRcdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCflsIbnu5nmqKHmnb/liqDkuIp8c21hbGw9eWVz5Y+C5pWw77yM5pi+56S65oiQ5Y+z5LiK6KeS55qE5LiA5oqK5oyC6ZSB44CCJyxcblx0XHRcdFx0XHRcdFx0XHQn5bCH57Wm5qih5p2/5Yqg5LiKfHNtYWxsPXllc+WPg+aVuO+8jOmhr+ekuuaIkOWPs+S4iuinkueahOS4gOaKiuaOm+mOluOAgidcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdG5hbWU6ICdub2luY2x1ZGUnLFxuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfnlKgmbHQ7bm9pbmNsdWRlJmd0O+WMheijueS/neaKpOaooeadvycsICfnlKgmbHQ7bm9pbmNsdWRlJmd0O+WMheijueS/neitt+aooeadvycpLFxuXHRcdFx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+WwhuS/neaKpOaooeadv+WMheijueWcqCZsdDtub2luY2x1ZGUmZ3Q75LitJyxcblx0XHRcdFx0XHRcdFx0XHQn5bCH5L+d6K235qih5p2/5YyF6KO55ZyoJmx0O25vaW5jbHVkZSZndDvkuK0nXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRcdGNoZWNrZWQ6IG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlTnVtYmVyJykgPT09IDEwLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0bmFtZTogJ3Nob3dleHBpcnknLFxuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflnKjmqKHmnb/mmL7npLrliLDmnJ/ml7bpl7QnLCAn5Zyo5qih5p2/6aGv56S65Yiw5pyf5pmC6ZaTJyksXG5cdFx0XHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUygn5bCG57uZ5qih5p2/5Yqg5LiKfGV4cGlyeeWPguaVsCcsICflsIfntabmqKHmnb/liqDkuIp8ZXhwaXJ55Y+D5pW4JyksXG5cdFx0XHRcdFx0XHRcdGNoZWNrZWQ6IHRydWUsXG5cdFx0XHRcdFx0XHRcdGhpZGRlbjogZS50YXJnZXQudmFsdWVzID09PSAndGFnJyxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAncmVxdWVzdCc6XG5cdFx0XHRcdGZpZWxkX3ByZXNldCA9IG5ldyBNb3JlYml0cy5xdWlja0Zvcm0uZWxlbWVudCh7XG5cdFx0XHRcdFx0dHlwZTogJ2ZpZWxkJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfkv53miqTnsbvlnosnLCAn5L+d6K236aGe5YilJyksXG5cdFx0XHRcdFx0bmFtZTogJ2ZpZWxkX3ByZXNldCcsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRmaWVsZF9wcmVzZXQuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnc2VsZWN0Jyxcblx0XHRcdFx0XHRuYW1lOiAnY2F0ZWdvcnknLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+exu+Wei+WSjOeQhueUse+8micsICfpoZ7liKXlkoznkIbnlLHvvJonKSxcblx0XHRcdFx0XHRldmVudDogVHdpbmtsZS5wcm90ZWN0LmNhbGxiYWNrLmNoYW5nZVByZXNldCxcblx0XHRcdFx0XHRsaXN0OiBtdy5jb25maWcuZ2V0KCd3Z0FydGljbGVJZCcpXG5cdFx0XHRcdFx0XHQ/IFR3aW5rbGUucHJvdGVjdC5wcm90ZWN0aW9uVHlwZXNcblx0XHRcdFx0XHRcdDogVHdpbmtsZS5wcm90ZWN0LnByb3RlY3Rpb25UeXBlc0NyZWF0ZSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGZpZWxkMSA9IG5ldyBNb3JlYml0cy5xdWlja0Zvcm0uZWxlbWVudCh7XG5cdFx0XHRcdFx0dHlwZTogJ2ZpZWxkJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfpgInpobknLCAn6YG46aCFJyksXG5cdFx0XHRcdFx0bmFtZTogJ2ZpZWxkMScsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRmaWVsZDEuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnZGl2Jyxcblx0XHRcdFx0XHRuYW1lOiAnY3VycmVudHByb3QnLFxuXHRcdFx0XHRcdGxhYmVsOiAnICcsXG5cdFx0XHRcdH0pOyAvLyBob2xkcyB0aGUgY3VycmVudCBwcm90ZWN0aW9uIGxldmVsLCBhcyBmaWxsZWQgb3V0IGJ5IHRoZSBhc3luYyBjYWxsYmFja1xuXHRcdFx0XHRmaWVsZDEuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnZGl2Jyxcblx0XHRcdFx0XHRuYW1lOiAnaGFzcHJvdGVjdGxvZycsXG5cdFx0XHRcdFx0bGFiZWw6ICcgJyxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGZpZWxkMS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdzZWxlY3QnLFxuXHRcdFx0XHRcdG5hbWU6ICdleHBpcnknLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+aXtumVv++8micsICfmmYLplbfvvJonKSxcblx0XHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiAnJyxcblx0XHRcdFx0XHRcdFx0c2VsZWN0ZWQ6IHRydWUsXG5cdFx0XHRcdFx0XHRcdHZhbHVlOiAnJyxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+S4tOaXticsICfoh6jmmYInKSxcblx0XHRcdFx0XHRcdFx0dmFsdWU6ICd0ZW1wb3JhcnknLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0bGFiZWw6ICfmsLjkuYUnLFxuXHRcdFx0XHRcdFx0XHR2YWx1ZTogJ2luZmluaXR5Jyxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGZpZWxkMS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICd0ZXh0YXJlYScsXG5cdFx0XHRcdFx0bmFtZTogJ3JlYXNvbicsXG5cdFx0XHRcdFx0bGFiZWw6ICfnkIbnlLHvvJonLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHR2b2lkIG13Lm5vdGlmeSh3aW5kb3cud2dVTFMoJ+i/meeOqeaEj+WEv+iiq+a1t+ixmuWQg+aOieS6hu+8gScsICfpgJnnjqnmhI/lhZLooqvmtbfosZrlkIPmjonkuobvvIEnKSwge1xuXHRcdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0XHR0YWc6ICd0d2lua2xlcHJvdGVjdCcsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRicmVhaztcblx0XHR9XG5cdFx0bGV0IG9sZGZpZWxkO1xuXHRcdGlmIChmaWVsZF9wcmVzZXQpIHtcblx0XHRcdFtvbGRmaWVsZF0gPSAkKGUudGFyZ2V0LmZvcm0pLmZpbmQoJ2ZpZWxkc2V0W25hbWU9XCJmaWVsZF9wcmVzZXRcIl0nKTtcblx0XHRcdG9sZGZpZWxkLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKGZpZWxkX3ByZXNldC5yZW5kZXIoKSwgb2xkZmllbGQpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQkKGUudGFyZ2V0LmZvcm0pLmZpbmQoJ2ZpZWxkc2V0W25hbWU9XCJmaWVsZF9wcmVzZXRcIl0nKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xuXHRcdH1cblx0XHRpZiAoZmllbGQxKSB7XG5cdFx0XHRbb2xkZmllbGRdID0gJChlLnRhcmdldC5mb3JtKS5maW5kKCdmaWVsZHNldFtuYW1lPVwiZmllbGQxXCJdJyk7XG5cdFx0XHRvbGRmaWVsZC5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChmaWVsZDEucmVuZGVyKCksIG9sZGZpZWxkKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0JChlLnRhcmdldC5mb3JtKS5maW5kKCdmaWVsZHNldFtuYW1lPVwiZmllbGQxXCJdJykuY3NzKCdkaXNwbGF5JywgJ25vbmUnKTtcblx0XHR9XG5cdFx0aWYgKGZpZWxkMikge1xuXHRcdFx0W29sZGZpZWxkXSA9ICQoZS50YXJnZXQuZm9ybSkuZmluZCgnZmllbGRzZXRbbmFtZT1cImZpZWxkMlwiXScpO1xuXHRcdFx0b2xkZmllbGQucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoZmllbGQyLnJlbmRlcigpLCBvbGRmaWVsZCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdCQoZS50YXJnZXQuZm9ybSkuZmluZCgnZmllbGRzZXRbbmFtZT1cImZpZWxkMlwiXScpLmNzcygnZGlzcGxheScsICdub25lJyk7XG5cdFx0fVxuXHRcdGlmIChlLnRhcmdldC52YWx1ZXMgPT09ICdwcm90ZWN0Jykge1xuXHRcdFx0Ly8gZmFrZSBhIGNoYW5nZSBldmVudCBvbiB0aGUgcHJlc2V0IGRyb3Bkb3duXG5cdFx0XHRjb25zdCBldnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnRXZlbnQnKTtcblx0XHRcdGV2dC5pbml0RXZlbnQoJ2NoYW5nZScsIHRydWUsIHRydWUpO1xuXHRcdFx0ZS50YXJnZXQuZm9ybS5jYXRlZ29yeS5kaXNwYXRjaEV2ZW50KGV2dCk7XG5cdFx0XHQvLyByZWR1Y2UgdmVydGljYWwgaGVpZ2h0IG9mIGRpYWxvZ1xuXHRcdFx0JChlLnRhcmdldC5mb3JtKS5maW5kKCdmaWVsZHNldFtuYW1lPVwiZmllbGQyXCJdIHNlbGVjdCcpLnBhcmVudCgpLmNzcyh7XG5cdFx0XHRcdGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuXHRcdFx0XHRtYXJnaW5SaWdodDogJzAuNWVtJyxcblx0XHRcdH0pO1xuXHRcdH1cblx0XHQvLyByZS1hZGQgcHJvdGVjdGlvbiBsZXZlbCBhbmQgbG9nIGluZm8sIGlmIGl0J3MgYXZhaWxhYmxlXG5cdFx0VHdpbmtsZS5wcm90ZWN0LmNhbGxiYWNrLnNob3dMb2dBbmRDdXJyZW50UHJvdGVjdEluZm8oKTtcblx0fTtcblx0Ly8gTk9URTogVGhpcyBmdW5jdGlvbiBpcyB1c2VkIGJ5IGJhdGNocHJvdGVjdCBhcyB3ZWxsXG5cdFR3aW5rbGUucHJvdGVjdC5mb3JtZXZlbnRzID0ge1xuXHRcdGVkaXRtb2RpZnk6IChlKSA9PiB7XG5cdFx0XHRlLnRhcmdldC5mb3JtLmVkaXRsZXZlbC5kaXNhYmxlZCA9ICFlLnRhcmdldC5jaGVja2VkO1xuXHRcdFx0ZS50YXJnZXQuZm9ybS5lZGl0ZXhwaXJ5LmRpc2FibGVkID0gIWUudGFyZ2V0LmNoZWNrZWQgfHwgZS50YXJnZXQuZm9ybS5lZGl0bGV2ZWwudmFsdWUgPT09ICdhbGwnO1xuXHRcdFx0ZS50YXJnZXQuZm9ybS5lZGl0bGV2ZWwuc3R5bGUuY29sb3IgPSBlLnRhcmdldC5jaGVja2VkID8gJycgOiAndHJhbnNwYXJlbnQnO1xuXHRcdFx0ZS50YXJnZXQuZm9ybS5lZGl0ZXhwaXJ5LnN0eWxlLmNvbG9yID0gZS50YXJnZXQuY2hlY2tlZCA/ICcnIDogJ3RyYW5zcGFyZW50Jztcblx0XHR9LFxuXHRcdGVkaXRsZXZlbDogKGUpID0+IHtcblx0XHRcdGUudGFyZ2V0LmZvcm0uZWRpdGV4cGlyeS5kaXNhYmxlZCA9IGUudGFyZ2V0LnZhbHVlID09PSAnYWxsJztcblx0XHR9LFxuXHRcdG1vdmVtb2RpZnk6IChlKSA9PiB7XG5cdFx0XHQvLyBzeW5jIG1vdmUgc2V0dGluZ3Mgd2l0aCBlZGl0IHNldHRpbmdzIGlmIGFwcGxpY2FibGVcblx0XHRcdGlmIChlLnRhcmdldC5mb3JtLm1vdmVsZXZlbC5kaXNhYmxlZCAmJiAhZS50YXJnZXQuZm9ybS5lZGl0bGV2ZWwuZGlzYWJsZWQpIHtcblx0XHRcdFx0ZS50YXJnZXQuZm9ybS5tb3ZlbGV2ZWwudmFsdWUgPSBlLnRhcmdldC5mb3JtLmVkaXRsZXZlbC52YWx1ZTtcblx0XHRcdFx0ZS50YXJnZXQuZm9ybS5tb3ZlZXhwaXJ5LnZhbHVlID0gZS50YXJnZXQuZm9ybS5lZGl0ZXhwaXJ5LnZhbHVlO1xuXHRcdFx0fSBlbHNlIGlmIChlLnRhcmdldC5mb3JtLmVkaXRsZXZlbC5kaXNhYmxlZCkge1xuXHRcdFx0XHRlLnRhcmdldC5mb3JtLm1vdmVsZXZlbC52YWx1ZSA9ICdzeXNvcCc7XG5cdFx0XHRcdGUudGFyZ2V0LmZvcm0ubW92ZWV4cGlyeS52YWx1ZSA9ICdpbmZpbml0eSc7XG5cdFx0XHR9XG5cdFx0XHRlLnRhcmdldC5mb3JtLm1vdmVsZXZlbC5kaXNhYmxlZCA9ICFlLnRhcmdldC5jaGVja2VkO1xuXHRcdFx0ZS50YXJnZXQuZm9ybS5tb3ZlZXhwaXJ5LmRpc2FibGVkID0gIWUudGFyZ2V0LmNoZWNrZWQgfHwgZS50YXJnZXQuZm9ybS5tb3ZlbGV2ZWwudmFsdWUgPT09ICdhbGwnO1xuXHRcdFx0ZS50YXJnZXQuZm9ybS5tb3ZlbGV2ZWwuc3R5bGUuY29sb3IgPSBlLnRhcmdldC5jaGVja2VkID8gJycgOiAndHJhbnNwYXJlbnQnO1xuXHRcdFx0ZS50YXJnZXQuZm9ybS5tb3ZlZXhwaXJ5LnN0eWxlLmNvbG9yID0gZS50YXJnZXQuY2hlY2tlZCA/ICcnIDogJ3RyYW5zcGFyZW50Jztcblx0XHR9LFxuXHRcdG1vdmVsZXZlbDogKGUpID0+IHtcblx0XHRcdGUudGFyZ2V0LmZvcm0ubW92ZWV4cGlyeS5kaXNhYmxlZCA9IGUudGFyZ2V0LnZhbHVlID09PSAnYWxsJztcblx0XHR9LFxuXHRcdGNyZWF0ZWxldmVsOiAoZSkgPT4ge1xuXHRcdFx0ZS50YXJnZXQuZm9ybS5jcmVhdGVleHBpcnkuZGlzYWJsZWQgPSBlLnRhcmdldC52YWx1ZSA9PT0gJ2FsbCc7XG5cdFx0fSxcblx0XHR0YWd0eXBlOiAoZSkgPT4ge1xuXHRcdFx0ZS50YXJnZXQuZm9ybS5zbWFsbC5kaXNhYmxlZCA9IGUudGFyZ2V0LnZhbHVlID09PSAnbm9uZScgfHwgZS50YXJnZXQudmFsdWUgPT09ICdub29wJztcblx0XHRcdGUudGFyZ2V0LmZvcm0ubm9pbmNsdWRlLmRpc2FibGVkID0gZS50YXJnZXQudmFsdWUgPT09ICdub25lJyB8fCBlLnRhcmdldC52YWx1ZSA9PT0gJ25vb3AnO1xuXHRcdFx0ZS50YXJnZXQuZm9ybS5zaG93ZXhwaXJ5LmRpc2FibGVkID0gZS50YXJnZXQudmFsdWUgPT09ICdub25lJyB8fCBlLnRhcmdldC52YWx1ZSA9PT0gJ25vb3AnO1xuXHRcdH0sXG5cdH07XG5cdFR3aW5rbGUucHJvdGVjdC5kb0N1c3RvbUV4cGlyeSA9ICh0YXJnZXQpID0+IHtcblx0XHRjb25zdCBjdXN0b20gPSBwcm9tcHQoXG5cdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdCfovpPlhaXoh6rlrprkuYnnu4jmraLml7bpl7TjgIJcXG7mgqjlj6/ku6Xkvb/nlKjnm7jlr7nml7bpl7TvvIzlpoLigJwxIG1pbnV0ZeKAneaIluKAnDE5IGRheXPigJ3vvIzmiJbnu53lr7nml7bpl7TigJx5eXl5bW1kZGhobW3igJ3vvIjlpoLigJwyMDA2MDIwMTE0MDXigJ3mmK8yMDA25bm0MDLmnIgwMeaXpTE077yaMDXvvIhVVEPvvInvvIknLFxuXHRcdFx0XHQn6Ly45YWl6Ieq6KiC57WC5q2i5pmC6ZaT44CCXFxu5oKo5Y+v5Lul5L2/55So55u45bCN5pmC6ZaT77yM5aaC44CMMSBtaW51dGXjgI3miJbjgIwxOSBkYXlz44CN77yM5oiW57WV5bCN5pmC6ZaT44CMeXl5eW1tZGRoaG1t44CN77yI5aaC44CMMjAwNjAyMDExNDA144CN5pivMjAwNuW5tDAy5pyIMDHml6UxNO+8mjA177yIVVRD77yJ77yJJ1xuXHRcdFx0KSxcblx0XHRcdCcnXG5cdFx0KTtcblx0XHRpZiAoY3VzdG9tKSB7XG5cdFx0XHRjb25zdCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcblx0XHRcdG9wdGlvbi5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgY3VzdG9tKTtcblx0XHRcdG9wdGlvbi50ZXh0Q29udGVudCA9IGN1c3RvbTtcblx0XHRcdHRhcmdldC5hcHBlbmRDaGlsZChvcHRpb24pO1xuXHRcdFx0dGFyZ2V0LnZhbHVlID0gY3VzdG9tO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0YXJnZXQuc2VsZWN0ZWRJbmRleCA9IDA7XG5cdFx0fVxuXHR9O1xuXHQvLyBOT1RFOiBUaGlzIGxpc3QgaXMgdXNlZCBieSBiYXRjaHByb3RlY3QgYXMgd2VsbFxuXHRUd2lua2xlLnByb3RlY3QucHJvdGVjdGlvbkxldmVscyA9IFtcblx0XHR7XG5cdFx0XHRsYWJlbDogJ+WFqOmDqCcsXG5cdFx0XHR2YWx1ZTogJ2FsbCcsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfku4XlhYHorrjoh6rliqjnoa7orqTnlKjmiLcnLCAn5YOF5YWB6Kix6Ieq5YuV56K66KqN5L2/55So6ICFJyksXG5cdFx0XHR2YWx1ZTogJ2F1dG9jb25maXJtZWQnLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5LuF5qih5p2/57yW6L6R5ZGY5ZKM566h55CG5ZGYJywgJ+WDheaooeadv+e3qOi8r+WToeWSjOeuoeeQhuWToScpLFxuXHRcdFx0dmFsdWU6ICd0ZW1wbGF0ZWVkaXRvcicsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfku4XnrqHnkIblkZgnLCAn5YOF566h55CG5ZOhJyksXG5cdFx0XHR2YWx1ZTogJ3N5c29wJyxcblx0XHRcdHNlbGVjdGVkOiB0cnVlLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5LuF5YWB6K646LWE5rex55So5oi3JywgJ+WDheWFgeioseizh+a3seeUqOaIticpLFxuXHRcdFx0dmFsdWU6ICdyZXZpc2lvbnByb3RlY3RlZCcsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfku4XlhYHorrjoo4HlhrPlp5TlkZgnLCAn5YOF5YWB6Kix6KOB5rG65aeU5ZOhJyksXG5cdFx0XHR2YWx1ZTogJ29mZmljaWFscHJvdGVjdGVkJyxcblx0XHR9LFxuXHRdO1xuXHQvLyBkZWZhdWx0IGV4cGlyeSBzZWxlY3Rpb24gaXMgY29uZGl0aW9uYWxseSBzZXQgaW4gVHdpbmtsZS5wcm90ZWN0LmNhbGxiYWNrLmNoYW5nZVByZXNldFxuXHQvLyBOT1RFOiBUaGlzIGxpc3QgaXMgdXNlZCBieSBiYXRjaHByb3RlY3QgYXMgd2VsbFxuXHRUd2lua2xlLnByb3RlY3QucHJvdGVjdGlvbkxlbmd0aHMgPSBbXG5cdFx0e1xuXHRcdFx0bGFiZWw6ICcx5aSpJyxcblx0XHRcdHZhbHVlOiAnMSBkYXknLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0bGFiZWw6ICcz5aSpJyxcblx0XHRcdHZhbHVlOiAnMyBkYXlzJyxcblx0XHR9LFxuXHRcdHtcblx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJzHlkagnLCAnMemAsScpLFxuXHRcdFx0dmFsdWU6ICcxIHdlZWsnLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygnMuWRqCcsICcy6YCxJyksXG5cdFx0XHR2YWx1ZTogJzIgd2Vla3MnLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygnMeS4quaciCcsICcx5YCL5pyIJyksXG5cdFx0XHR2YWx1ZTogJzEgbW9udGgnLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygnM+S4quaciCcsICcz5YCL5pyIJyksXG5cdFx0XHR2YWx1ZTogJzMgbW9udGhzJyxcblx0XHR9LFxuXHRcdHtcblx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJzbkuKrmnIgnLCAnNuWAi+aciCcpLFxuXHRcdFx0dmFsdWU6ICc2IG1vbnRocycsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogJzHlubQnLFxuXHRcdFx0dmFsdWU6ICcxIHllYXInLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5peg6ZmQ5pyfJywgJ+eEoemZkOacnycpLFxuXHRcdFx0dmFsdWU6ICdpbmZpbml0eScsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfoh6rlrprkuYnigKbigKYnLCAn6Ieq6KiC4oCm4oCmJyksXG5cdFx0XHR2YWx1ZTogJ2N1c3RvbScsXG5cdFx0fSxcblx0XTtcblx0VHdpbmtsZS5wcm90ZWN0LnByb3RlY3Rpb25UeXBlc0FkbWluID0gW1xuXHRcdHtcblx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+ino+mZpOS/neaKpCcsICfop6PpmaTkv53orbcnKSxcblx0XHRcdHZhbHVlOiAndW5wcm90ZWN0Jyxcblx0XHR9LFxuXHRcdHtcblx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WFqOS/neaKpCcsICflhajkv53orbcnKSxcblx0XHRcdGxpc3Q6IFtcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+W4uOinhO+8iOWFqO+8iScsICfluLjopo/vvIjlhajvvIknKSxcblx0XHRcdFx0XHR2YWx1ZTogJ3BwLXByb3RlY3RlZCcsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfkuonorq7jgIHnvJbovpHmiJjvvIjlhajvvIknLCAn54it6K2w44CB57eo6Lyv5oiw77yI5YWo77yJJyksXG5cdFx0XHRcdFx0dmFsdWU6ICdwcC1kaXNwdXRlJyxcblx0XHRcdFx0fSxcblx0XHRcdF0sXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmqKHmnb/kv53miqQnLCAn5qih5p2/5L+d6K23JyksXG5cdFx0XHRsaXN0OiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfpq5jpo47pmanmqKHmnb/vvIjmqKHmnb/vvIknLCAn6auY6aKo6Zqq5qih5p2/77yI5qih5p2/77yJJyksXG5cdFx0XHRcdFx0dmFsdWU6ICdwcC10ZW1wbGF0ZScsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Y2K5L+d5oqkJywgJ+WNiuS/neittycpLFxuXHRcdFx0bGlzdDogW1xuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5bi46KeE77yI5Y2K77yJJywgJ+W4uOimj++8iOWNiu+8iScpLFxuXHRcdFx0XHRcdHZhbHVlOiAncHAtc2VtaS1wcm90ZWN0ZWQnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5oyB57ut56C05Z2P77yI5Y2K77yJJywgJ+aMgee6jOegtOWjnu+8iOWNiu+8iScpLFxuXHRcdFx0XHRcdHZhbHVlOiAncHAtc2VtaS12YW5kYWxpc20nLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6L+d5Y+N55Sf6ICF5Lyg6K6w5pa56ZKI77yI5Y2K77yJJywgJ+mBleWPjeeUn+iAheWCs+iomOaWuemHne+8iOWNiu+8iScpLFxuXHRcdFx0XHRcdHZhbHVlOiAncHAtc2VtaS1ibHAnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5YKA5YSh56C05Z2P77yI5Y2K77yJJywgJ+WCgOWEoeegtOWjnu+8iOWNiu+8iScpLFxuXHRcdFx0XHRcdHZhbHVlOiAncHAtc2VtaS1zb2NrJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+mrmOmjjumZqeaooeadv++8iOWNiu+8iScsICfpq5jpoqjpmqrmqKHmnb/vvIjljYrvvIknKSxcblx0XHRcdFx0XHR2YWx1ZTogJ3BwLXNlbWktdGVtcGxhdGUnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6KKr5bCB56aB55So5oi35rul55So6K6o6K666aG177yI5Y2K77yJJywgJ+iiq+WwgeemgeS9v+eUqOiAhea/q+eUqOiojuirlumgge+8iOWNiu+8iScpLFxuXHRcdFx0XHRcdHZhbHVlOiAncHAtc2VtaS11c2VydGFsaycsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn56e75Yqo5L+d5oqkJywgJ+enu+WLleS/neittycpLFxuXHRcdFx0bGlzdDogW1xuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5bi46KeE77yI56e75Yqo77yJJywgJ+W4uOimj++8iOenu+WLle+8iScpLFxuXHRcdFx0XHRcdHZhbHVlOiAncHAtbW92ZScsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfkuonorq7jgIHnp7vliqjmiJjvvIjnp7vliqjvvIknLCAn54it6K2w44CB56e75YuV5oiw77yI56e75YuV77yJJyksXG5cdFx0XHRcdFx0dmFsdWU6ICdwcC1tb3ZlLWRpc3B1dGUnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn56e75Yqo56C05Z2P77yI56e75Yqo77yJJywgJ+enu+WLleegtOWjnu+8iOenu+WLle+8iScpLFxuXHRcdFx0XHRcdHZhbHVlOiAncHAtbW92ZS12YW5kYWxpc20nLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6auY6aOO6Zmp6aG16Z2i77yI56e75Yqo77yJJywgJ+mrmOmiqOmaqumggemdou+8iOenu+WLle+8iScpLFxuXHRcdFx0XHRcdHZhbHVlOiAncHAtbW92ZS1pbmRlZicsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdF0uZmlsdGVyKFxuXHRcdChcblx0XHRcdC8vIEZpbHRlciBmb3IgdGVtcGxhdGVzXG5cdFx0XHR7bGFiZWx9XG5cdFx0KSA9PiB7XG5cdFx0XHRyZXR1cm4gaXNUZW1wbGF0ZSB8fCAobGFiZWwgIT09ICfmqKHmnb/kv53miqQnICYmIGxhYmVsICE9PSAn5qih5p2/5L+d6K23Jyk7XG5cdFx0fVxuXHQpO1xuXHRUd2lua2xlLnByb3RlY3QucHJvdGVjdGlvblR5cGVzQ3JlYXRlT25seSA9IFtcblx0XHR7XG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfnmb3nurjkv53miqQnLCAn55m957SZ5L+d6K23JyksXG5cdFx0XHRsaXN0OiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfluLjop4TvvIjnmb3nurjvvIknLCAn5bi46KaP77yI55m957SZ77yJJyksXG5cdFx0XHRcdFx0dmFsdWU6ICdwcC1jcmVhdGUnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5aSa5qyh6YeN5aSN5Yib5bu677yI55m957q477yJJywgJ+WkmuasoemHjeikh+W7uueri++8iOeZvee0me+8iScpLFxuXHRcdFx0XHRcdHZhbHVlOiAncHAtY3JlYXRlLXJlcGVhdCcsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmjIHnu63noLTlnY/vvIjnmb3nurjvvIknLCAn5oyB57qM56C05aOe77yI55m957SZ77yJJyksXG5cdFx0XHRcdFx0dmFsdWU6ICdwcC1jcmVhdGUtdmFuZGFsaXNtJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+W3suWwgeemgeeUqOaIt+eahOeUqOaIt+mhte+8iOeZvee6uO+8iScsICflt7LlsIHnpoHkvb/nlKjogIXnmoTkvb/nlKjogIXpoIHvvIjnmb3ntJnvvIknKSxcblx0XHRcdFx0XHR2YWx1ZTogJ3BwLWNyZWF0ZS11c2VycGFnZScsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdF07XG5cdFR3aW5rbGUucHJvdGVjdC5wcm90ZWN0aW9uVHlwZXMgPSBbXG5cdFx0Li4uVHdpbmtsZS5wcm90ZWN0LnByb3RlY3Rpb25UeXBlc0FkbWluLFxuXHRcdC4uLlR3aW5rbGUucHJvdGVjdC5wcm90ZWN0aW9uVHlwZXNDcmVhdGVPbmx5LFxuXHRdO1xuXHRUd2lua2xlLnByb3RlY3QucHJvdGVjdGlvblR5cGVzQ3JlYXRlID0gW1xuXHRcdHtcblx0XHRcdGxhYmVsOiAn6Kej6Zmk5L+d5oqkJyxcblx0XHRcdHZhbHVlOiAndW5wcm90ZWN0Jyxcblx0XHR9LFxuXHRcdC4uLlR3aW5rbGUucHJvdGVjdC5wcm90ZWN0aW9uVHlwZXNDcmVhdGVPbmx5LFxuXHRdO1xuXHQvLyBOT1RJQ0U6IGtlZXAgdGhpcyBzeW5jaGVkIHdpdGggW1tNZWRpYVdpa2k6UHJvdGVjdC1kcm9wZG93bl1dXG5cdC8vIGV4cGlyeSB3aWxsIG92ZXJyaWRlIGFueSBkZWZhdWx0c1xuXHRUd2lua2xlLnByb3RlY3QucHJvdGVjdGlvblByZXNldHNJbmZvID0ge1xuXHRcdCdwcC1wcm90ZWN0ZWQnOiB7XG5cdFx0XHRlZGl0OiAnc3lzb3AnLFxuXHRcdFx0bW92ZTogJ3N5c29wJyxcblx0XHRcdHJlYXNvbjogbnVsbCxcblx0XHR9LFxuXHRcdCdwcC1kaXNwdXRlJzoge1xuXHRcdFx0ZWRpdDogJ3N5c29wJyxcblx0XHRcdG1vdmU6ICdzeXNvcCcsXG5cdFx0XHRyZWFzb246IHdpbmRvdy53Z1VMUygn57yW6L6R5oiYJywgJ+e3qOi8r+aIsCcpLFxuXHRcdH0sXG5cdFx0J3BwLXRlbXBsYXRlJzoge1xuXHRcdFx0ZWRpdDogJ3RlbXBsYXRlZWRpdG9yJyxcblx0XHRcdG1vdmU6ICd0ZW1wbGF0ZWVkaXRvcicsXG5cdFx0XHRleHBpcnk6ICdpbmZpbml0eScsXG5cdFx0XHRyZWFzb246IHdpbmRvdy53Z1VMUygnW1tRVzpIUlR86auY6aOO6Zmp5qih5p2/XV0nLCAnW1tRVzpIUlR86auY6aKo6Zqq5qih5p2/XV0nKSxcblx0XHRcdHRlbXBsYXRlOiAnbm9vcCcsXG5cdFx0fSxcblx0XHQncHAtdmFuZGFsaXNtJzoge1xuXHRcdFx0ZWRpdDogJ3N5c29wJyxcblx0XHRcdG1vdmU6ICdzeXNvcCcsXG5cdFx0XHRyZWFzb246IHdpbmRvdy53Z1VMUygn6KKr6Ieq5Yqo56Gu6K6k55So5oi356C05Z2PJywgJ+iiq+iHquWLleeiuuiqjeS9v+eUqOiAheegtOWjnicpLFxuXHRcdH0sXG5cdFx0J3BwLXNvY2snOiB7XG5cdFx0XHRlZGl0OiAnc3lzb3AnLFxuXHRcdFx0bW92ZTogJ3N5c29wJyxcblx0XHRcdHJlYXNvbjogd2luZG93LndnVUxTKCfmjIHnu63nmoTlgoDlhKHnoLTlnY8nLCAn5oyB57qM55qE5YKA5YSh56C05aOeJyksXG5cdFx0fSxcblx0XHQncHAtc2VtaS12YW5kYWxpc20nOiB7XG5cdFx0XHRlZGl0OiAnYXV0b2NvbmZpcm1lZCcsXG5cdFx0XHRyZWFzb246IHdpbmRvdy53Z1VMUygn6KKr5paw55So5oi356C05Z2PJywgJ+iiq+aWsOS9v+eUqOiAheegtOWjnicpLFxuXHRcdFx0dGVtcGxhdGU6ICdwcC12YW5kYWxpc20nLFxuXHRcdH0sXG5cdFx0J3BwLXNlbWktYmxwJzoge1xuXHRcdFx0ZWRpdDogJ2F1dG9jb25maXJtZWQnLFxuXHRcdFx0cmVhc29uOiB3aW5kb3cud2dVTFMoJ+aWsOeUqOaIt+i/neWPjeeUn+iAheS8oOiusOaWuemSiCcsICfmlrDkvb/nlKjogIXpgZXlj43nlJ/ogIXlgrPoqJjmlrnph50nKSxcblx0XHR9LFxuXHRcdCdwcC1zZW1pLXVzZXJ0YWxrJzoge1xuXHRcdFx0ZWRpdDogJ2F1dG9jb25maXJtZWQnLFxuXHRcdFx0cmVhc29uOiB3aW5kb3cud2dVTFMoJ+iiq+WwgeemgeeUqOaIt+a7peeUqOWFtuiuqOiuuumhtScsICfooqvlsIHnpoHkvb/nlKjogIXmv6vnlKjlhbboqI7oq5bpoIEnKSxcblx0XHR9LFxuXHRcdCdwcC1zZW1pLXRlbXBsYXRlJzoge1xuXHRcdFx0Ly8gcmVtb3ZlZCBmb3Igbm93XG5cdFx0XHRlZGl0OiAnYXV0b2NvbmZpcm1lZCcsXG5cdFx0XHRleHBpcnk6ICdpbmZpbml0eScsXG5cdFx0XHRyZWFzb246IHdpbmRvdy53Z1VMUygnW1tRVzpIUlR86auY6aOO6Zmp5qih5p2/XV0nLCAnW1tRVzpIUlR86auY6aKo6Zqq5qih5p2/XV0nKSxcblx0XHRcdHRlbXBsYXRlOiAnbm9vcCcsXG5cdFx0fSxcblx0XHQncHAtc2VtaS1zb2NrJzoge1xuXHRcdFx0ZWRpdDogJ2F1dG9jb25maXJtZWQnLFxuXHRcdFx0cmVhc29uOiB3aW5kb3cud2dVTFMoJ+aMgee7reeahOWCgOWEoeegtOWdjycsICfmjIHnuoznmoTlgoDlhKHnoLTlo54nKSxcblx0XHRcdHRlbXBsYXRlOiAncHAtc29jaycsXG5cdFx0fSxcblx0XHQncHAtc2VtaS1wcm90ZWN0ZWQnOiB7XG5cdFx0XHRlZGl0OiAnYXV0b2NvbmZpcm1lZCcsXG5cdFx0XHRyZWFzb246IG51bGwsXG5cdFx0XHR0ZW1wbGF0ZTogJ3BwLXByb3RlY3RlZCcsXG5cdFx0fSxcblx0XHQncHAtbW92ZSc6IHtcblx0XHRcdG1vdmU6ICdzeXNvcCcsXG5cdFx0XHRyZWFzb246IG51bGwsXG5cdFx0fSxcblx0XHQncHAtbW92ZS1kaXNwdXRlJzoge1xuXHRcdFx0bW92ZTogJ3N5c29wJyxcblx0XHRcdHJlYXNvbjogd2luZG93LndnVUxTKCfpobXpnaLnp7vliqjmiJgnLCAn6aCB6Z2i56e75YuV5oiwJyksXG5cdFx0fSxcblx0XHQncHAtbW92ZS12YW5kYWxpc20nOiB7XG5cdFx0XHRtb3ZlOiAnc3lzb3AnLFxuXHRcdFx0cmVhc29uOiB3aW5kb3cud2dVTFMoJ+enu+WKqOegtOWdjycsICfnp7vli5XnoLTlo54nKSxcblx0XHR9LFxuXHRcdCdwcC1tb3ZlLWluZGVmJzoge1xuXHRcdFx0bW92ZTogJ3N5c29wJyxcblx0XHRcdGV4cGlyeTogJ2luZmluaXR5Jyxcblx0XHRcdHJlYXNvbjogd2luZG93LndnVUxTKCfpq5jpo47pmanpobXpnaInLCAn6auY6aKo6Zqq6aCB6Z2iJyksXG5cdFx0fSxcblx0XHR1bnByb3RlY3Q6IHtcblx0XHRcdGVkaXQ6ICdhbGwnLFxuXHRcdFx0bW92ZTogJ2FsbCcsXG5cdFx0XHRjcmVhdGU6ICdhbGwnLFxuXHRcdFx0cmVhc29uOiBudWxsLFxuXHRcdFx0dGVtcGxhdGU6ICdub25lJyxcblx0XHR9LFxuXHRcdCdwcC1jcmVhdGUnOiB7XG5cdFx0XHRjcmVhdGU6ICdhdXRvY29uZmlybWVkJyxcblx0XHRcdHJlYXNvbjogbnVsbCxcblx0XHR9LFxuXHRcdCdwcC1jcmVhdGUtcmVwZWF0Jzoge1xuXHRcdFx0Y3JlYXRlOiAnYXV0b2NvbmZpcm1lZCcsXG5cdFx0XHRyZWFzb246IHdpbmRvdy53Z1VMUygn5aSa5qyh6YeN5aSN5Yib5bu6JywgJ+WkmuasoemHjeikh+W7uueriycpLFxuXHRcdH0sXG5cdFx0J3BwLWNyZWF0ZS12YW5kYWxpc20nOiB7XG5cdFx0XHRjcmVhdGU6ICdhdXRvY29uZmlybWVkJyxcblx0XHRcdHJlYXNvbjogd2luZG93LndnVUxTKCfooqvmlrDnlKjmiLfnoLTlnY8nLCAn6KKr5paw5L2/55So6ICF56C05aOeJyksXG5cdFx0fSxcblx0XHQncHAtY3JlYXRlLXVzZXJwYWdlJzoge1xuXHRcdFx0Y3JlYXRlOiAnc3lzb3AnLFxuXHRcdFx0ZXhwaXJ5OiAnaW5maW5pdHknLFxuXHRcdFx0cmVhc29uOiB3aW5kb3cud2dVTFMoJ+iiq+awuOS5heWwgeemgeeahOeUqOaIt+mhtScsICfooqvmsLjkuYXlsIHnpoHnmoTkvb/nlKjogIXpoIHpnaInKSxcblx0XHR9LFxuXHR9O1xuXHRUd2lua2xlLnByb3RlY3QucHJvdGVjdGlvblRhZ3MgPSBbXG5cdFx0e1xuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5peg77yI56e76Zmk546w5pyJ5qih5p2/77yJJywgJ+eEoe+8iOenu+mZpOePvuacieaooeadv++8iScpLFxuXHRcdFx0dmFsdWU6ICdub25lJyxcblx0XHR9LFxuXHRcdHtcblx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+aXoO+8iOS4jeenu+mZpOeOsOacieaooeadv++8iScsICfnhKHvvIjkuI3np7vpmaTnj77mnInmqKHmnb/vvIknKSxcblx0XHRcdHZhbHVlOiAnbm9vcCcsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogJ+mAmueUqOaooeadvycsXG5cdFx0XHRsaXN0OiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogYHt7cHAtZGlzcHV0ZX19OiAke3dpbmRvdy53Z1VMUygn5LqJ6K6uJywgJ+eIreitsCcpfWAsXG5cdFx0XHRcdFx0dmFsdWU6ICdwcC1kaXNwdXRlJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiBge3twcC12YW5kYWxpc219fTogJHt3aW5kb3cud2dVTFMoJ+egtOWdjycsICfnoLTlo54nKX1gLFxuXHRcdFx0XHRcdHZhbHVlOiAncHAtdmFuZGFsaXNtJyxcblx0XHRcdFx0XHRzZWxlY3RlZDogdHJ1ZSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiAne3twcC1zb2NrfX06IOWCgOWEoScsXG5cdFx0XHRcdFx0dmFsdWU6ICdwcC1zb2NrJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiBge3twcC10ZW1wbGF0ZX19OiAke3dpbmRvdy53Z1VMUygn6auY6aOO6Zmp5qih5p2/JywgJ+mrmOmiqOmaquaooeadvycpfWAsXG5cdFx0XHRcdFx0dmFsdWU6ICdwcC10ZW1wbGF0ZScsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogYHt7cHAtcHJvdGVjdGVkfX06ICR7d2luZG93LndnVUxTKCfluLjop4QnLCAn5bi46KaPJyl9YCxcblx0XHRcdFx0XHR2YWx1ZTogJ3BwLXByb3RlY3RlZCcsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Y2K5L+d5oqk5qih5p2/JywgJ+WNiuS/neitt+aooeadvycpLFxuXHRcdFx0bGlzdDogW1xuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IGB7e3BwLXNlbWktdXNlcnRhbGt9fTogJHt3aW5kb3cud2dVTFMoJ+WwgeemgeeahOeUqOaItycsICflsIHnpoHnmoTkvb/nlKjogIUnKX1gLFxuXHRcdFx0XHRcdHZhbHVlOiAncHAtc2VtaS11c2VydGFsaycsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogYHt7cHAtc2VtaS1ibHB9fTogJHt3aW5kb3cud2dVTFMoJ+eUn+iAheS8oOiusCcsICfnlJ/ogIXlgrPoqJgnKX1gLFxuXHRcdFx0XHRcdHZhbHVlOiAncHAtc2VtaS1ibHAnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IGB7e3BwLXNlbWktaW5kZWZ9fTogJHt3aW5kb3cud2dVTFMoJ+mVv+acnycsICfplbfmnJ8nKX1gLFxuXHRcdFx0XHRcdHZhbHVlOiAncHAtc2VtaS1pbmRlZicsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn56e75Yqo5L+d5oqk5qih5p2/JywgJ+enu+WLleS/neitt+aooeadvycpLFxuXHRcdFx0bGlzdDogW1xuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IGB7e3BwLW1vdmUtZGlzcHV0ZX19OiAke3dpbmRvdy53Z1VMUygn5LqJ6K6uJywgJ+eIreitsCcpfWAsXG5cdFx0XHRcdFx0dmFsdWU6ICdwcC1tb3ZlLWRpc3B1dGUnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IGB7e3BwLW1vdmUtdmFuZGFsaXNtfX06ICR7d2luZG93LndnVUxTKCfnoLTlnY8nLCAn56C05aOeJyl9YCxcblx0XHRcdFx0XHR2YWx1ZTogJ3BwLW1vdmUtdmFuZGFsaXNtJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiBge3twcC1tb3ZlLWluZGVmfX06ICR7d2luZG93LndnVUxTKCfplb/mnJ8nLCAn6ZW35pyfJyl9YCxcblx0XHRcdFx0XHR2YWx1ZTogJ3BwLW1vdmUtaW5kZWYnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IGB7e3BwLW1vdmV9fTogJHt3aW5kb3cud2dVTFMoJ+W4uOinhCcsICfluLjopo8nKX1gLFxuXHRcdFx0XHRcdHZhbHVlOiAncHAtbW92ZScsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdF07XG5cdFR3aW5rbGUucHJvdGVjdC5jYWxsYmFjay5jaGFuZ2VQcmVzZXQgPSAoZSkgPT4ge1xuXHRcdGNvbnN0IHtmb3JtfSA9IGUudGFyZ2V0O1xuXHRcdGNvbnN0IGFjdGlvbnR5cGVzID0gZm9ybS5hY3Rpb250eXBlO1xuXHRcdGxldCBhY3Rpb250eXBlO1xuXHRcdGZvciAoY29uc3QgYWN0aW9uX3R5cGVfdmFsdWUgb2YgYWN0aW9udHlwZXMpIHtcblx0XHRcdGlmICghYWN0aW9uX3R5cGVfdmFsdWUuY2hlY2tlZCkge1xuXHRcdFx0XHRjb250aW51ZTtcblx0XHRcdH1cblx0XHRcdGFjdGlvbnR5cGUgPSBhY3Rpb25fdHlwZV92YWx1ZS52YWx1ZXM7XG5cdFx0XHRicmVhaztcblx0XHR9XG5cdFx0aWYgKGFjdGlvbnR5cGUgPT09ICdwcm90ZWN0Jykge1xuXHRcdFx0Ly8gYWN0dWFsbHkgcHJvdGVjdGluZyB0aGUgcGFnZVxuXHRcdFx0Y29uc3QgaXRlbSA9IFR3aW5rbGUucHJvdGVjdC5wcm90ZWN0aW9uUHJlc2V0c0luZm9bZm9ybS5jYXRlZ29yeS52YWx1ZV07XG5cdFx0XHRpZiAobXcuY29uZmlnLmdldCgnd2dBcnRpY2xlSWQnKSkge1xuXHRcdFx0XHRpZiAoaXRlbS5lZGl0KSB7XG5cdFx0XHRcdFx0Zm9ybS5lZGl0bW9kaWZ5LmNoZWNrZWQgPSB0cnVlO1xuXHRcdFx0XHRcdFR3aW5rbGUucHJvdGVjdC5mb3JtZXZlbnRzLmVkaXRtb2RpZnkoe1xuXHRcdFx0XHRcdFx0dGFyZ2V0OiBmb3JtLmVkaXRtb2RpZnksXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0Zm9ybS5lZGl0bGV2ZWwudmFsdWUgPSBpdGVtLmVkaXQ7XG5cdFx0XHRcdFx0VHdpbmtsZS5wcm90ZWN0LmZvcm1ldmVudHMuZWRpdGxldmVsKHtcblx0XHRcdFx0XHRcdHRhcmdldDogZm9ybS5lZGl0bGV2ZWwsXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0Zm9ybS5lZGl0bW9kaWZ5LmNoZWNrZWQgPSBmYWxzZTtcblx0XHRcdFx0XHRUd2lua2xlLnByb3RlY3QuZm9ybWV2ZW50cy5lZGl0bW9kaWZ5KHtcblx0XHRcdFx0XHRcdHRhcmdldDogZm9ybS5lZGl0bW9kaWZ5LFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChpdGVtLm1vdmUpIHtcblx0XHRcdFx0XHRmb3JtLm1vdmVtb2RpZnkuY2hlY2tlZCA9IHRydWU7XG5cdFx0XHRcdFx0VHdpbmtsZS5wcm90ZWN0LmZvcm1ldmVudHMubW92ZW1vZGlmeSh7XG5cdFx0XHRcdFx0XHR0YXJnZXQ6IGZvcm0ubW92ZW1vZGlmeSxcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRmb3JtLm1vdmVsZXZlbC52YWx1ZSA9IGl0ZW0ubW92ZTtcblx0XHRcdFx0XHRUd2lua2xlLnByb3RlY3QuZm9ybWV2ZW50cy5tb3ZlbGV2ZWwoe1xuXHRcdFx0XHRcdFx0dGFyZ2V0OiBmb3JtLm1vdmVsZXZlbCxcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRmb3JtLm1vdmVtb2RpZnkuY2hlY2tlZCA9IGZhbHNlO1xuXHRcdFx0XHRcdFR3aW5rbGUucHJvdGVjdC5mb3JtZXZlbnRzLm1vdmVtb2RpZnkoe1xuXHRcdFx0XHRcdFx0dGFyZ2V0OiBmb3JtLm1vdmVtb2RpZnksXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0Zm9ybS5lZGl0ZXhwaXJ5LnZhbHVlID0gaXRlbS5leHBpcnkgfHwgJzEgd2Vlayc7XG5cdFx0XHRcdGZvcm0ubW92ZWV4cGlyeS52YWx1ZSA9IGl0ZW0uZXhwaXJ5IHx8ICcxIHdlZWsnO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aWYgKGl0ZW0uY3JlYXRlKSB7XG5cdFx0XHRcdFx0Zm9ybS5jcmVhdGVsZXZlbC52YWx1ZSA9IGl0ZW0uY3JlYXRlO1xuXHRcdFx0XHRcdFR3aW5rbGUucHJvdGVjdC5mb3JtZXZlbnRzLmNyZWF0ZWxldmVsKHtcblx0XHRcdFx0XHRcdHRhcmdldDogZm9ybS5jcmVhdGVsZXZlbCxcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRmb3JtLmNyZWF0ZWV4cGlyeS52YWx1ZSA9IGl0ZW0uY3JlYXRlZXhwaXJ5IHx8ICcxIHdlZWsnO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGZvcm0uY3JlYXRlZXhwaXJ5LnZhbHVlID0gaXRlbS5leHBpcnkgfHwgJzEgd2Vlayc7XG5cdFx0XHR9XG5cdFx0XHRjb25zdCByZWFzb25GaWVsZCA9IGFjdGlvbnR5cGUgPT09ICdwcm90ZWN0JyA/IGZvcm0ucHJvdGVjdFJlYXNvbiA6IGZvcm0ucmVhc29uO1xuXHRcdFx0aWYgKGl0ZW0ucmVhc29uKSB7XG5cdFx0XHRcdHJlYXNvbkZpZWxkLnZhbHVlID0gaXRlbS5yZWFzb247XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZWFzb25GaWVsZC52YWx1ZSA9ICcnO1xuXHRcdFx0fVxuXHRcdFx0Ly8gc29ydCBvdXQgdGFnZ2luZyBvcHRpb25zLCBkaXNhYmxlZCBpZiBub25leGlzdGVudCBvciBsdWFcblx0XHRcdGlmIChtdy5jb25maWcuZ2V0KCd3Z0FydGljbGVJZCcpICYmIG13LmNvbmZpZy5nZXQoJ3dnUGFnZUNvbnRlbnRNb2RlbCcpICE9PSAnU2NyaWJ1bnRvJykge1xuXHRcdFx0XHRpZiAoZm9ybS5jYXRlZ29yeS52YWx1ZSA9PT0gJ3VucHJvdGVjdCcpIHtcblx0XHRcdFx0XHRmb3JtLnRhZ3R5cGUudmFsdWUgPSAnbm9uZSc7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0Zm9ybS50YWd0eXBlLnZhbHVlID0gaXRlbS50ZW1wbGF0ZSA/PyBmb3JtLmNhdGVnb3J5LnZhbHVlO1xuXHRcdFx0XHR9XG5cdFx0XHRcdFR3aW5rbGUucHJvdGVjdC5mb3JtZXZlbnRzLnRhZ3R5cGUoe1xuXHRcdFx0XHRcdHRhcmdldDogZm9ybS50YWd0eXBlLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0aWYgKC90ZW1wbGF0ZS8udGVzdChmb3JtLmNhdGVnb3J5LnZhbHVlKSkge1xuXHRcdFx0XHRcdGZvcm0ubm9pbmNsdWRlLmNoZWNrZWQgPSB0cnVlO1xuXHRcdFx0XHR9IGVsc2UgaWYgKG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlTnVtYmVyJykgIT09IDEwKSB7XG5cdFx0XHRcdFx0Zm9ybS5ub2luY2x1ZGUuY2hlY2tlZCA9IGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSBlbHNlIGlmIChmb3JtLmNhdGVnb3J5LnZhbHVlID09PSAndW5wcm90ZWN0Jykge1xuXHRcdFx0Ly8gUlBQIHJlcXVlc3Rcblx0XHRcdGZvcm0uZXhwaXJ5LnZhbHVlID0gJyc7XG5cdFx0XHRmb3JtLmV4cGlyeS5kaXNhYmxlZCA9IHRydWU7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGZvcm0uZXhwaXJ5LnZhbHVlID0gJyc7XG5cdFx0XHRmb3JtLmV4cGlyeS5kaXNhYmxlZCA9IGZhbHNlO1xuXHRcdH1cblx0fTtcblx0VHdpbmtsZS5wcm90ZWN0LmNhbGxiYWNrLmV2YWx1YXRlID0gKGUpID0+IHtcblx0XHRjb25zdCBmb3JtID0gZS50YXJnZXQ7XG5cdFx0Y29uc3QgaW5wdXQgPSBNb3JlYml0cy5xdWlja0Zvcm0uZ2V0SW5wdXREYXRhKGZvcm0pO1xuXHRcdGxldCB0YWdwYXJhbXM7XG5cdFx0aWYgKFxuXHRcdFx0aW5wdXQuYWN0aW9udHlwZSA9PT0gJ3RhZycgfHxcblx0XHRcdChpbnB1dC5hY3Rpb250eXBlID09PSAncHJvdGVjdCcgJiZcblx0XHRcdFx0bXcuY29uZmlnLmdldCgnd2dBcnRpY2xlSWQnKSAmJlxuXHRcdFx0XHRtdy5jb25maWcuZ2V0KCd3Z1BhZ2VDb250ZW50TW9kZWwnKSAhPT0gJ1NjcmlidW50bycpXG5cdFx0KSB7XG5cdFx0XHR0YWdwYXJhbXMgPSB7XG5cdFx0XHRcdHRhZzogaW5wdXQudGFndHlwZSxcblx0XHRcdFx0cmVhc29uOlxuXHRcdFx0XHRcdChpbnB1dC50YWd0eXBlID09PSAncHAtcHJvdGVjdGVkJyB8fFxuXHRcdFx0XHRcdFx0aW5wdXQudGFndHlwZSA9PT0gJ3BwLXNlbWktcHJvdGVjdGVkJyB8fFxuXHRcdFx0XHRcdFx0aW5wdXQudGFndHlwZSA9PT0gJ3BwLW1vdmUnKSAmJlxuXHRcdFx0XHRcdGlucHV0LnByb3RlY3RSZWFzb25cblx0XHRcdFx0XHRcdD8gaW5wdXQucHJvdGVjdFJlYXNvblxuXHRcdFx0XHRcdFx0OiBudWxsLFxuXHRcdFx0XHRzaG93ZXhwaXJ5OiBpbnB1dC5hY3Rpb250eXBlID09PSAncHJvdGVjdCcgPyBpbnB1dC5zaG93ZXhwaXJ5IDogbnVsbCxcblx0XHRcdFx0c21hbGw6IGlucHV0LnNtYWxsLFxuXHRcdFx0XHRub2luY2x1ZGU6IGlucHV0Lm5vaW5jbHVkZSxcblx0XHRcdH07XG5cdFx0XHRpZiAoaW5wdXQuYWN0aW9udHlwZSA9PT0gJ3Byb3RlY3QnKSB7XG5cdFx0XHRcdGlmIChpbnB1dC5lZGl0bW9kaWZ5KSB7XG5cdFx0XHRcdFx0dGFncGFyYW1zLmV4cGlyeSA9IGlucHV0LmVkaXRleHBpcnk7XG5cdFx0XHRcdH0gZWxzZSBpZiAoaW5wdXQubW92ZW1vZGlmeSkge1xuXHRcdFx0XHRcdHRhZ3BhcmFtcy5leHBpcnkgPSBpbnB1dC5tb3ZlZXhwaXJ5O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGNvbnN0IGNsb3NlcGFyYW1zID0ge307XG5cdFx0aWYgKGlucHV0LmNsb3NlKSB7XG5cdFx0XHRpZiAoaW5wdXQuY2F0ZWdvcnkgPT09ICd1bnByb3RlY3QnKSB7XG5cdFx0XHRcdGNsb3NlcGFyYW1zLnR5cGUgPSAndW5wcm90ZWN0Jztcblx0XHRcdH0gZWxzZSBpZiAobXcuY29uZmlnLmdldCgnd2dBcnRpY2xlSWQnKSkge1xuXHRcdFx0XHRpZiAoaW5wdXQuZWRpdG1vZGlmeSkge1xuXHRcdFx0XHRcdHN3aXRjaCAoaW5wdXQuZWRpdGxldmVsKSB7XG5cdFx0XHRcdFx0XHRjYXNlICdvZmZpY2lhbHByb3RlY3RlZCc6XG5cdFx0XHRcdFx0XHRcdGNsb3NlcGFyYW1zLnR5cGUgPSAnb2ZmaWNpYWxwcm90ZWN0ZWQnO1xuXHRcdFx0XHRcdFx0XHRjbG9zZXBhcmFtcy5leHBpcnkgPSBpbnB1dC5lZGl0ZXhwaXJ5O1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdGNhc2UgJ3JldmlzaW9ucHJvdGVjdGVkJzpcblx0XHRcdFx0XHRcdFx0Y2xvc2VwYXJhbXMudHlwZSA9ICdyZXZpc2lvbnByb3RlY3RlZCc7XG5cdFx0XHRcdFx0XHRcdGNsb3NlcGFyYW1zLmV4cGlyeSA9IGlucHV0LmVkaXRleHBpcnk7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0Y2FzZSAnc3lzb3AnOlxuXHRcdFx0XHRcdFx0XHRjbG9zZXBhcmFtcy50eXBlID0gJ2Z1bGwnO1xuXHRcdFx0XHRcdFx0XHRjbG9zZXBhcmFtcy5leHBpcnkgPSBpbnB1dC5lZGl0ZXhwaXJ5O1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdGNhc2UgJ3RlbXBsYXRlZWRpdG9yJzpcblx0XHRcdFx0XHRcdFx0Y2xvc2VwYXJhbXMudHlwZSA9ICd0ZW1wJztcblx0XHRcdFx0XHRcdFx0Y2xvc2VwYXJhbXMuZXhwaXJ5ID0gaW5wdXQuZWRpdGV4cGlyeTtcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRjYXNlICdhdXRvY29uZmlybWVkJzpcblx0XHRcdFx0XHRcdFx0Y2xvc2VwYXJhbXMudHlwZSA9ICdzZW1pJztcblx0XHRcdFx0XHRcdFx0Y2xvc2VwYXJhbXMuZXhwaXJ5ID0gaW5wdXQuZWRpdGV4cGlyeTtcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHQvLyBObyBkZWZhdWx0XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9IGVsc2UgaWYgKFxuXHRcdFx0XHRcdGlucHV0Lm1vdmVtb2RpZnkgJiZcblx0XHRcdFx0XHRbJ29mZmljaWFscHJvdGVjdGVkJywgJ3JldmlzaW9ucHJvdGVjdGVkJywgJ3N5c29wJywgJ3RlbXBsYXRlZWRpdG9yJ10uaW5jbHVkZXMoaW5wdXQubW92ZWxldmVsKVxuXHRcdFx0XHQpIHtcblx0XHRcdFx0XHRjbG9zZXBhcmFtcy50eXBlID0gJ21vdmUnO1xuXHRcdFx0XHRcdGNsb3NlcGFyYW1zLmV4cGlyeSA9IGlucHV0Lm1vdmVleHBpcnk7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSBpZiAoaW5wdXQuY3JlYXRlbGV2ZWwgIT09ICdhbGwnKSB7XG5cdFx0XHRcdGNsb3NlcGFyYW1zLnR5cGUgPSAnc2FsdCc7XG5cdFx0XHRcdGNsb3NlcGFyYW1zLmV4cGlyeSA9IGlucHV0LmNyZWF0ZWV4cGlyeTtcblx0XHRcdH1cblx0XHR9XG5cdFx0c3dpdGNoIChpbnB1dC5hY3Rpb250eXBlKSB7XG5cdFx0XHRjYXNlICdwcm90ZWN0Jzoge1xuXHRcdFx0XHQvLyBwcm90ZWN0IHRoZSBwYWdlXG5cdFx0XHRcdE1vcmViaXRzLndpa2kuYWN0aW9uQ29tcGxldGVkLnJlZGlyZWN0ID0gbXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpO1xuXHRcdFx0XHRNb3JlYml0cy53aWtpLmFjdGlvbkNvbXBsZXRlZC5ub3RpY2UgPSB3aW5kb3cud2dVTFMoJ+S/neaKpOWujOaIkCcsICfkv53orbflrozmiJAnKTtcblx0XHRcdFx0bGV0IHN0YXR1c0luaXRlZCA9IGZhbHNlO1xuXHRcdFx0XHRsZXQgdGhpc3BhZ2U7XG5cdFx0XHRcdGNvbnN0IGFsbERvbmUgPSAoKSA9PiB7XG5cdFx0XHRcdFx0aWYgKHRoaXNwYWdlKSB7XG5cdFx0XHRcdFx0XHR0aGlzcGFnZS5nZXRTdGF0dXNFbGVtZW50KCkuaW5mbygn5a6M5oiQJyk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICh0YWdwYXJhbXMpIHtcblx0XHRcdFx0XHRcdFR3aW5rbGUucHJvdGVjdC5jYWxsYmFja3MudGFnZ2luZ1BhZ2VJbml0aWFsKHRhZ3BhcmFtcyk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmIChjbG9zZXBhcmFtcyAmJiBjbG9zZXBhcmFtcy50eXBlKSB7XG5cdFx0XHRcdFx0XHRjb25zdCBycHBQYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShcblx0XHRcdFx0XHRcdFx0J1FpdXdlbl90YWxrOumhtemdouS/neaKpOivt+axgicsXG5cdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5YWz6Zet6K+35rGCJywgJ+mXnOmWieiri+axgicpXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0cnBwUGFnZS5zZXRGb2xsb3dSZWRpcmVjdCh0cnVlKTtcblx0XHRcdFx0XHRcdHJwcFBhZ2Uuc2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKGNsb3NlcGFyYW1zKTtcblx0XHRcdFx0XHRcdHJwcFBhZ2UubG9hZChUd2lua2xlLnByb3RlY3QuY2FsbGJhY2tzLmNsb3NlUmVxdWVzdCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXHRcdFx0XHRjb25zdCBwcm90ZWN0SXQgPSAobmV4dCkgPT4ge1xuXHRcdFx0XHRcdHRoaXNwYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShcblx0XHRcdFx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnUGFnZU5hbWUnKSxcblx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5L+d5oqk6aG16Z2iJywgJ+S/neitt+mggemdoicpXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRpZiAobXcuY29uZmlnLmdldCgnd2dBcnRpY2xlSWQnKSkge1xuXHRcdFx0XHRcdFx0aWYgKGlucHV0LmVkaXRtb2RpZnkpIHtcblx0XHRcdFx0XHRcdFx0dGhpc3BhZ2Uuc2V0RWRpdFByb3RlY3Rpb24oaW5wdXQuZWRpdGxldmVsLCBpbnB1dC5lZGl0ZXhwaXJ5KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmIChpbnB1dC5tb3ZlbW9kaWZ5KSB7XG5cdFx0XHRcdFx0XHRcdC8vIEVuc3VyZSBhIGxldmVsIGhhcyBhY3R1YWxseSBiZWVuIGNob3NlblxuXHRcdFx0XHRcdFx0XHRpZiAoaW5wdXQubW92ZWxldmVsKSB7XG5cdFx0XHRcdFx0XHRcdFx0dGhpc3BhZ2Uuc2V0TW92ZVByb3RlY3Rpb24oaW5wdXQubW92ZWxldmVsLCBpbnB1dC5tb3ZlZXhwaXJ5KTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHR2b2lkIG13Lm5vdGlmeSh3aW5kb3cud2dVTFMoJ+aCqOmcgOimgemAieaLqeS/neaKpOWxgue6p++8gScsICfmgqjpnIDopoHpgbjmk4fkv53orbflsaTntJrvvIEnKSwge1xuXHRcdFx0XHRcdFx0XHRcdFx0dHlwZTogJ3dhcm4nLFxuXHRcdFx0XHRcdFx0XHRcdFx0dGFnOiAndHdpbmtsZXByb3RlY3QnLFxuXHRcdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0dGhpc3BhZ2Uuc2V0V2F0Y2hsaXN0KFR3aW5rbGUuZ2V0UHJlZignd2F0Y2hQcm90ZWN0ZWRQYWdlcycpKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0dGhpc3BhZ2Uuc2V0Q3JlYXRlUHJvdGVjdGlvbihpbnB1dC5jcmVhdGVsZXZlbCwgaW5wdXQuY3JlYXRlZXhwaXJ5KTtcblx0XHRcdFx0XHRcdHRoaXNwYWdlLnNldFdhdGNobGlzdChmYWxzZSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmIChpbnB1dC5wcm90ZWN0UmVhc29uKSB7XG5cdFx0XHRcdFx0XHR0aGlzcGFnZS5zZXRFZGl0U3VtbWFyeShpbnB1dC5wcm90ZWN0UmVhc29uKTtcblx0XHRcdFx0XHRcdHRoaXNwYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0dm9pZCBtdy5ub3RpZnkoXG5cdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn5oKo5b+F6aG76L6T5YWl5L+d5oqk55CG55Sx77yM6L+Z5bCG6KKr6K6w5b2V5Zyo5L+d5oqk5pel5b+X5Lit44CCJyxcblx0XHRcdFx0XHRcdFx0XHQn5oKo5b+F6aCI6Ly45YWl5L+d6K2355CG55Sx77yM6YCZ5bCH6KKr6KiY6YyE5Zyo5L+d6K235pel6KqM5Lit44CCJ1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0dHlwZTogJ3dhcm4nLFxuXHRcdFx0XHRcdFx0XHRcdHRhZzogJ3R3aW5rbGVwcm90ZWN0Jyxcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKCFzdGF0dXNJbml0ZWQpIHtcblx0XHRcdFx0XHRcdE1vcmViaXRzLnNpbXBsZVdpbmRvdy5zZXRCdXR0b25zRW5hYmxlZChmYWxzZSk7XG5cdFx0XHRcdFx0XHRNb3JlYml0cy5zdGF0dXMuaW5pdChmb3JtKTtcblx0XHRcdFx0XHRcdHN0YXR1c0luaXRlZCA9IHRydWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHRoaXNwYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdFx0XHR0aGlzcGFnZS5wcm90ZWN0KG5leHQpO1xuXHRcdFx0XHR9O1xuXHRcdFx0XHRpZiAoaW5wdXQuZWRpdG1vZGlmeSB8fCBpbnB1dC5tb3ZlbW9kaWZ5IHx8ICFtdy5jb25maWcuZ2V0KCd3Z0FydGljbGVJZCcpKSB7XG5cdFx0XHRcdFx0cHJvdGVjdEl0KGFsbERvbmUpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHZvaWQgbXcubm90aWZ5KFxuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHQn6K+35ZGK6K+JVHdpbmtsZeimgeWBmuS7gOS5iO+8gVxcbuiLpeaCqOWPquaYr+aDs+agh+iusOivpemhte+8jOivt+mAieaLqeS4iumdoueahOKAnOeUqOS/neaKpOaooeadv+agh+iusOatpOmhteKAnemAiemhueOAgicsXG5cdFx0XHRcdFx0XHRcdCfoq4vlkYroqLRUd2lua2xl6KaB5YGa5LuA6bq877yBXFxu6Iul5oKo5Y+q5piv5oOz5qiZ6KiY6Kmy6aCB77yM6KuL6YG45pOH5LiK6Z2i55qE44CM55So5L+d6K235qih5p2/5qiZ6KiY5q2k6aCB44CN6YG46aCF44CCJ1xuXHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0dHlwZTogJ3dhcm4nLFxuXHRcdFx0XHRcdFx0XHR0YWc6ICd0d2lua2xlcHJvdGVjdCcsXG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0fVxuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdGNhc2UgJ3RhZyc6XG5cdFx0XHRcdC8vIGFwcGx5IGEgcHJvdGVjdGlvbiB0ZW1wbGF0ZVxuXHRcdFx0XHRNb3JlYml0cy5zaW1wbGVXaW5kb3cuc2V0QnV0dG9uc0VuYWJsZWQoZmFsc2UpO1xuXHRcdFx0XHRNb3JlYml0cy5zdGF0dXMuaW5pdChmb3JtKTtcblx0XHRcdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQucmVkaXJlY3QgPSBtdy5jb25maWcuZ2V0KCd3Z1BhZ2VOYW1lJyk7XG5cdFx0XHRcdE1vcmViaXRzLndpa2kuYWN0aW9uQ29tcGxldGVkLmZvbGxvd1JlZGlyZWN0ID0gZmFsc2U7XG5cdFx0XHRcdE1vcmViaXRzLndpa2kuYWN0aW9uQ29tcGxldGVkLm5vdGljZSA9IHdpbmRvdy53Z1VMUygn5qCH6K6w5a6M5oiQJywgJ+aomeiomOWujOaIkCcpO1xuXHRcdFx0XHRUd2lua2xlLnByb3RlY3QuY2FsbGJhY2tzLnRhZ2dpbmdQYWdlSW5pdGlhbCh0YWdwYXJhbXMpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ3JlcXVlc3QnOiB7XG5cdFx0XHRcdC8vIGZpbGUgcmVxdWVzdCBhdCBSRlBQXG5cdFx0XHRcdGxldCB0eXBlbmFtZTtcblx0XHRcdFx0bGV0IHR5cGVyZWFzb247XG5cdFx0XHRcdHN3aXRjaCAoaW5wdXQuY2F0ZWdvcnkpIHtcblx0XHRcdFx0XHRjYXNlICdwcC1kaXNwdXRlJzpcblx0XHRcdFx0XHRjYXNlICdwcC1wcm90ZWN0ZWQnOlxuXHRcdFx0XHRcdFx0dHlwZW5hbWUgPSB3aW5kb3cud2dVTFMoJ+WFqOS/neaKpCcsICflhajkv53orbcnKTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdGNhc2UgJ3BwLXRlbXBsYXRlJzpcblx0XHRcdFx0XHRcdHR5cGVuYW1lID0gd2luZG93LndnVUxTKCfmqKHmnb/kv53miqQnLCAn5qih5p2/5L+d6K23Jyk7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRjYXNlICdwcC12YW5kYWxpc20nOlxuXHRcdFx0XHRcdGNhc2UgJ3BwLXNlbWktZGlzcnVwdGl2ZSc6XG5cdFx0XHRcdFx0Y2FzZSAncHAtc2VtaS11bnNvdXJjZWQnOlxuXHRcdFx0XHRcdGNhc2UgJ3BwLXNlbWktdmFuZGFsaXNtJzpcblx0XHRcdFx0XHRjYXNlICdwcC1zZW1pLXVzZXJ0YWxrJzpcblx0XHRcdFx0XHRjYXNlICdwcC1zZW1pLXRlbXBsYXRlJzogLy8gcmVtb3ZlZCBmb3Igbm93XG5cdFx0XHRcdFx0Y2FzZSAncHAtc2VtaS1zb2NrJzpcblx0XHRcdFx0XHRjYXNlICdwcC1zZW1pLWJscCc6XG5cdFx0XHRcdFx0Y2FzZSAncHAtc2VtaS1wcm90ZWN0ZWQnOlxuXHRcdFx0XHRcdFx0dHlwZW5hbWUgPSB3aW5kb3cud2dVTFMoJ+WNiuS/neaKpCcsICfljYrkv53orbcnKTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdGNhc2UgJ3BwLW1vdmUnOlxuXHRcdFx0XHRcdGNhc2UgJ3BwLW1vdmUtZGlzcHV0ZSc6XG5cdFx0XHRcdFx0Y2FzZSAncHAtbW92ZS1pbmRlZic6XG5cdFx0XHRcdFx0Y2FzZSAncHAtbW92ZS12YW5kYWxpc20nOlxuXHRcdFx0XHRcdFx0dHlwZW5hbWUgPSB3aW5kb3cud2dVTFMoJ+enu+WKqOS/neaKpCcsICfnp7vli5Xkv53orbcnKTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdGNhc2UgJ3BwLWNyZWF0ZSc6XG5cdFx0XHRcdFx0Y2FzZSAncHAtY3JlYXRlLW9mZmVuc2l2ZSc6XG5cdFx0XHRcdFx0Y2FzZSAncHAtY3JlYXRlLWJscCc6XG5cdFx0XHRcdFx0Y2FzZSAncHAtY3JlYXRlLXNhbHQnOlxuXHRcdFx0XHRcdGNhc2UgJ3BwLWNyZWF0ZS11c2VycGFnZSc6XG5cdFx0XHRcdFx0Y2FzZSAncHAtY3JlYXRlLXJlcGVhdCc6XG5cdFx0XHRcdFx0Y2FzZSAncHAtY3JlYXRlLXZhbmRhbGlzbSc6XG5cdFx0XHRcdFx0XHR0eXBlbmFtZSA9IHdpbmRvdy53Z1VMUygn55m957q45L+d5oqkJywgJ+eZvee0meS/neittycpO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0LyogY2FzZSAndW5wcm90ZWN0JzogKi9cblx0XHRcdFx0XHQvKiBmYWxscyB0aHJvdWdoICovXG5cdFx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHRcdHR5cGVuYW1lID0gd2luZG93LndnVUxTKCfop6PpmaTkv53miqQnLCAn6Kej6Zmk5L+d6K23Jyk7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0XHRzd2l0Y2ggKGlucHV0LmNhdGVnb3J5KSB7XG5cdFx0XHRcdFx0Y2FzZSAncHAtZGlzcHV0ZSc6XG5cdFx0XHRcdFx0XHR0eXBlcmVhc29uID0gd2luZG93LndnVUxTKCfkuonorq7jgIHnvJbovpHmiJgnLCAn54it6K2w44CB57eo6Lyv5oiwJyk7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRjYXNlICdwcC12YW5kYWxpc20nOlxuXHRcdFx0XHRcdGNhc2UgJ3BwLXNlbWktdmFuZGFsaXNtJzpcblx0XHRcdFx0XHRjYXNlICdwcC1jcmVhdGUtdmFuZGFsaXNtJzpcblx0XHRcdFx0XHRcdHR5cGVyZWFzb24gPSB3aW5kb3cud2dVTFMoJ+aMgee7reegtOWdjycsICfmjIHnuoznoLTlo54nKTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdGNhc2UgJ3BwLXRlbXBsYXRlJzpcblx0XHRcdFx0XHRjYXNlICdwcC1zZW1pLXRlbXBsYXRlJzpcblx0XHRcdFx0XHRcdC8vIHJlbW92ZWQgZm9yIG5vd1xuXHRcdFx0XHRcdFx0dHlwZXJlYXNvbiA9IHdpbmRvdy53Z1VMUygn6auY6aOO6Zmp5qih5p2/JywgJ+mrmOmiqOmaquaooeadvycpO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0Y2FzZSAncHAtY3JlYXRlLXVzZXJwYWdlJzpcblx0XHRcdFx0XHRcdHR5cGVyZWFzb24gPSB3aW5kb3cud2dVTFMoJ+iiq+awuOS5heWwgeemgeeahOeUqOaIt+mhtScsICfooqvmsLjkuYXlsIHpjpbnmoTkvb/nlKjogIXpoIHpnaInKTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdGNhc2UgJ3BwLXNlbWktdXNlcnRhbGsnOlxuXHRcdFx0XHRcdFx0dHlwZXJlYXNvbiA9IHdpbmRvdy53Z1VMUygn5bey5bCB56aB55So5oi355qE6K6o6K666aG1JywgJ+W3suWwgemOluS9v+eUqOiAheeahOiojuirlumggScpO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0Y2FzZSAncHAtc2VtaS1zb2NrJzpcblx0XHRcdFx0XHRcdHR5cGVyZWFzb24gPSB3aW5kb3cud2dVTFMoJ+WCgOWEoeegtOWdjycsICflgoDlhKHnoLTlo54nKTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdGNhc2UgJ3BwLXNlbWktYmxwJzpcblx0XHRcdFx0XHRcdHR5cGVyZWFzb24gPSB3aW5kb3cud2dVTFMoJ+i/neWPjeeUn+iAheS8oOiusOaWuemSiCcsICfpgZXlj43nlJ/ogIXlgrPoqJjmlrnph50nKTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdGNhc2UgJ3BwLW1vdmUtZGlzcHV0ZSc6XG5cdFx0XHRcdFx0XHR0eXBlcmVhc29uID0gd2luZG93LndnVUxTKCfkuonorq7jgIHnp7vliqjmiJgnLCAn54it6K2w44CB56e75YuV5oiwJyk7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRjYXNlICdwcC1tb3ZlLXZhbmRhbGlzbSc6XG5cdFx0XHRcdFx0XHR0eXBlcmVhc29uID0gd2luZG93LndnVUxTKCfnp7vliqjnoLTlnY8nLCAn56e75YuV56C05aOeJyk7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRjYXNlICdwcC1tb3ZlLWluZGVmJzpcblx0XHRcdFx0XHRcdHR5cGVyZWFzb24gPSB3aW5kb3cud2dVTFMoJ+mrmOmjjumZqemhtemdoicsICfpq5jpoqjpmqrpoIHpnaInKTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdGNhc2UgJ3BwLWNyZWF0ZS1yZXBlYXQnOlxuXHRcdFx0XHRcdFx0dHlwZXJlYXNvbiA9IHdpbmRvdy53Z1VMUygn5aSa5qyh6YeN5aSN5Yib5bu6JywgJ+WkmuasoemHjeikh+W7uueriycpO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHRcdHR5cGVyZWFzb24gPSAnJztcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGxldCByZWFzb24gPSB0eXBlcmVhc29uO1xuXHRcdFx0XHRpZiAoaW5wdXQucmVhc29uICE9PSAnJykge1xuXHRcdFx0XHRcdGlmICh0eXBlcmVhc29uICE9PSAnJykge1xuXHRcdFx0XHRcdFx0cmVhc29uICs9ICfvvJonO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZWFzb24gKz0gaW5wdXQucmVhc29uO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChyZWFzb24gIT09ICcnKSB7XG5cdFx0XHRcdFx0cmVhc29uID0gTW9yZWJpdHMuc3RyaW5nLmFwcGVuZFB1bmN0dWF0aW9uKHJlYXNvbik7XG5cdFx0XHRcdH1cblx0XHRcdFx0Y29uc3QgcnBwcGFyYW1zID0ge1xuXHRcdFx0XHRcdHJlYXNvbixcblx0XHRcdFx0XHR0eXBlbmFtZSxcblx0XHRcdFx0XHRjYXRlZ29yeTogaW5wdXQuY2F0ZWdvcnksXG5cdFx0XHRcdFx0ZXhwaXJ5OiBpbnB1dC5leHBpcnksXG5cdFx0XHRcdH07XG5cdFx0XHRcdE1vcmViaXRzLnNpbXBsZVdpbmRvdy5zZXRCdXR0b25zRW5hYmxlZChmYWxzZSk7XG5cdFx0XHRcdE1vcmViaXRzLnN0YXR1cy5pbml0KGZvcm0pO1xuXHRcdFx0XHRjb25zdCBycHBOYW1lID0gJ1FpdXdlbl90YWxrOumhtemdouS/neaKpOivt+axgic7XG5cdFx0XHRcdC8vIFVwZGF0aW5nIGRhdGEgZm9yIHRoZSBhY3Rpb24gY29tcGxldGVkIGV2ZW50XG5cdFx0XHRcdE1vcmViaXRzLndpa2kuYWN0aW9uQ29tcGxldGVkLnJlZGlyZWN0ID0gcnBwTmFtZTtcblx0XHRcdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQubm90aWNlID0gd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdCfmj5DlkI3lrozmiJDvvIzph43lrprlkJHliLDorqjorrrpobUnLFxuXHRcdFx0XHRcdCfmj5DlkI3lrozmiJDvvIzph43mlrDlsI7lkJHliLDoqI7oq5bpoIEnXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGNvbnN0IHJwcFBhZ2UgPSBuZXcgTW9yZWJpdHMud2lraS5wYWdlKHJwcE5hbWUsIHdpbmRvdy53Z1VMUygn6K+35rGC5L+d5oqk6aG16Z2iJywgJ+iri+axguS/neitt+mggemdoicpKTtcblx0XHRcdFx0cnBwUGFnZS5zZXRGb2xsb3dSZWRpcmVjdCh0cnVlKTtcblx0XHRcdFx0cnBwUGFnZS5zZXRDYWxsYmFja1BhcmFtZXRlcnMocnBwcGFyYW1zKTtcblx0XHRcdFx0cnBwUGFnZS5sb2FkKFR3aW5rbGUucHJvdGVjdC5jYWxsYmFja3MuZmlsZVJlcXVlc3QpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdHZvaWQgbXcubm90aWZ5KCd0d2lua2xlcHJvdGVjdDog5pyq55+l5pON5L2c57G75Z6LJywge1xuXHRcdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0XHR0YWc6ICd0d2lua2xlcHJvdGVjdCcsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRicmVhaztcblx0XHR9XG5cdH07XG5cdFR3aW5rbGUucHJvdGVjdC5jYWxsYmFja3MgPSB7XG5cdFx0dGFnZ2luZ1BhZ2VJbml0aWFsOiAodGFncGFyYW1zKSA9PiB7XG5cdFx0XHRpZiAodGFncGFyYW1zLnRhZyA9PT0gJ25vb3AnKSB7XG5cdFx0XHRcdE1vcmViaXRzLnN0YXR1cy5pbmZvKFxuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5bqU55So5L+d5oqk5qih5p2/JywgJ+aHieeUqOS/neitt+aooeadvycpLFxuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5rKh5LuA5LmI6KaB5YGa55qEJywgJ+aykuS7gOm6vOimgeWBmueahCcpXG5cdFx0XHRcdCk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdGNvbnN0IHBhZ2VOYW1lID0gbXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpO1xuXHRcdFx0Y29uc3QgcHJvdGVjdGVkUGFnZSA9IG5ldyBNb3JlYml0cy53aWtpLnBhZ2UocGFnZU5hbWUsIHdpbmRvdy53Z1VMUygn5qCH6K6w6aG16Z2iJywgJ+aomeiomOmggemdoicpKTtcblx0XHRcdHByb3RlY3RlZFBhZ2Uuc2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKHRhZ3BhcmFtcyk7XG5cdFx0XHRwcm90ZWN0ZWRQYWdlLmxvYWQoVHdpbmtsZS5wcm90ZWN0LmNhbGxiYWNrcy50YWdnaW5nUGFnZSk7XG5cdFx0fSxcblx0XHRnZXRUYWdnZWRQYWdlOiAocGFyYW1zLCB0ZXh0KSA9PiB7XG5cdFx0XHRsZXQgdGFnO1xuXHRcdFx0bGV0IHN1bW1hcnk7XG5cdFx0XHRjb25zdCBvbGR0YWdfcmUgPVxuXHRcdFx0XHQvKD86PG5vaW5jbHVkZT4pP1sgXFx0XSpcXHtcXHtcXHMqKHBwLVtee31dKj98cHJvdGVjdGVkfCg/OnR8dnxzfHAtfHVzZXJ0YWxrLXZ8dXNlcnRhbGstc3xzYnxtb3ZlKXByb3RlY3RlZCg/OjIpP3xwcm90ZWN0ZWQgdGVtcGxhdGV8cHJpdmFjeSBwcm90ZWN0aW9uKVxccyo/XFx9XFx9XFxzKig/OjxcXC9ub2luY2x1ZGU+KT9cXHMqL2dpO1xuXHRcdFx0Y29uc3QgcmVfcmVzdWx0ID0gb2xkdGFnX3JlLmV4ZWModGV4dCk7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdHJlX3Jlc3VsdCAmJlxuXHRcdFx0XHQocGFyYW1zLnRhZyA9PT0gJ25vbmUnIHx8XG5cdFx0XHRcdFx0Y29uZmlybShcblx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5Zyo6aG16Z2i5LiK5om+5Yiwe3snLCAn5Zyo6aCB6Z2i5LiK5om+5Yiwe3snKSArXG5cdFx0XHRcdFx0XHRcdHJlX3Jlc3VsdFsxXSArXG5cdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQnfX1cXG7ljZXlh7vnoa7lrprku6Xnp7vpmaTvvIzmiJbljZXlh7vlj5bmtojku6Xlj5bmtojmk43kvZzjgIInLFxuXHRcdFx0XHRcdFx0XHRcdCd9fVxcbum7nuaTiueiuuWumuS7peenu+mZpO+8jOaIlum7nuaTiuWPlua2iOS7peWPlua2iOaTjeS9nOOAgidcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdCkpXG5cdFx0XHQpIHtcblx0XHRcdFx0dGV4dCA9IHRleHQucmVwbGFjZShvbGR0YWdfcmUsICcnKTtcblx0XHRcdH1cblx0XHRcdGlmIChwYXJhbXMudGFnID09PSAnbm9uZScpIHtcblx0XHRcdFx0c3VtbWFyeSA9IHdpbmRvdy53Z1VMUygn56e76Zmk5L+d5oqk5qih5p2/JywgJ+enu+mZpOS/neitt+aooeadvycpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0KHt0YWd9ID0gcGFyYW1zKTtcblx0XHRcdFx0aWYgKHBhcmFtcy5yZWFzb24pIHtcblx0XHRcdFx0XHR0YWcgKz0gYHxyZWFzb249JHtwYXJhbXMucmVhc29ufWA7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHBhcmFtcy5zaG93ZXhwaXJ5ICYmIHBhcmFtcy5leHBpcnkgJiYgIU1vcmViaXRzLnN0cmluZy5pc0luZmluaXR5KHBhcmFtcy5leHBpcnkpKSB7XG5cdFx0XHRcdFx0dGFnICs9ICd8ZXhwaXJ5PXt7Jy5jb25jYXQoJ3N1YnN0OicsIGAjdGltZTpjfCR7cGFyYW1zLmV4cGlyeX19fWApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChwYXJhbXMuc21hbGwpIHtcblx0XHRcdFx0XHR0YWcgKz0gJ3xzbWFsbD15ZXMnO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICgvXlxccyojKD86cmVkaXJlY3R86YeN5a6a5ZCRfOmHjeaWsOWwjuWQkSkvaS50ZXN0KHRleHQpKSB7XG5cdFx0XHRcdFx0Ly8gcmVkaXJlY3QgcGFnZVxuXHRcdFx0XHRcdC8vIE9ubHkgdGFnIGlmIG5vIHt7cmNhdCBzaGVsbH19IGlzIGZvdW5kXG5cdFx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdFx0dGV4dC5tYXRjaChcblx0XHRcdFx0XHRcdFx0L3t7KD86UmVkaXJlY3RbIF9dY2F0ZWdvcnkgc2hlbGx8UmNhdFsgX11zaGVsbHxUaGlzWyBfXWlzIGEgcmVkaXJlY3R85aSa56eN57G75Z6L6YeN5a6a5ZCRfOWkmueorumhnuWei+mHjeWumuWQkXzlpJrnqK7poZ7lnovph43mlrDlsI7lkJF85aSa56eN57G75Z6L6YeN5paw5a+85ZCRfFIwfOWFtuS7lumHjeWumuWQkXxSQ1N8UmVkaXJlY3RbIF9dc2hlbGwpL2lcblx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHQpIHtcblx0XHRcdFx0XHRcdE1vcmViaXRzLnN0YXR1cy5pbmZvKFxuXHRcdFx0XHRcdFx0XHQn5bey5a2Y5ZyoUmVkaXJlY3QgY2F0ZWdvcnkgc2hlbGwnLFxuXHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+ayoeS7gOS5iOWPr+WBmueahCcsICfmspLku4Dpurzlj6/lgZrnmoQnKVxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0dGV4dCA9IHRleHQucmVwbGFjZShcblx0XHRcdFx0XHRcdC8jKD86cmVkaXJlY3R86YeN5a6a5ZCRfOmHjeaWsOWwjuWQkSkgPyhcXFtcXFsuKj9cXF1cXF0pKC4qKS9pLFxuXHRcdFx0XHRcdFx0YCNSRURJUkVDVCAkMSQyXFxuXFxue3ske3RhZ319fWBcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGlmIChwYXJhbXMubm9pbmNsdWRlKSB7XG5cdFx0XHRcdFx0XHR0YWcgPSBgPG5vaW5jbHVkZT57eyR7dGFnfX19PC9ub2luY2x1ZGU+YDtcblx0XHRcdFx0XHRcdC8vIOWPquacieihqOagvOmcgOimgeWNleeLrOWKoOWbnui9pu+8jOWFtuS7luaDheWGteWKoOWbnui9puS8muegtOWdj+aooeadv+OAglxuXHRcdFx0XHRcdFx0aWYgKHRleHQuaW5kZXhPZigne3wnKSA9PT0gMCkge1xuXHRcdFx0XHRcdFx0XHR0YWcgKz0gJ1xcbic7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHRhZyA9IGB7eyR7dGFnfX19XFxuYDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Ly8gSW5zZXJ0IHRhZyBhZnRlciBzaG9ydCBkZXNjcmlwdGlvbiBvciBhbnkgaGF0bm90ZXNcblx0XHRcdFx0XHRjb25zdCBxaXV3ZW5fcGFnZSA9IG5ldyBNb3JlYml0cy53aWtpdGV4dC5wYWdlKHRleHQpO1xuXHRcdFx0XHRcdHRleHQgPSBxaXV3ZW5fcGFnZS5pbnNlcnRBZnRlclRlbXBsYXRlcyh0YWcsIFR3aW5rbGUuaGF0bm90ZVJlZ2V4KS5nZXRUZXh0KCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0c3VtbWFyeSA9IGDliqDlhaV7eyR7cGFyYW1zLnRhZ319fWA7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHR0ZXh0LFxuXHRcdFx0XHRzdW1tYXJ5LFxuXHRcdFx0fTtcblx0XHR9LFxuXHRcdHRhZ2dpbmdQYWdlOiAocHJvdGVjdGVkUGFnZSkgPT4ge1xuXHRcdFx0Y29uc3QgcGFyYW1zID0gcHJvdGVjdGVkUGFnZS5nZXRDYWxsYmFja1BhcmFtZXRlcnMoKTtcblx0XHRcdGNvbnN0IHRleHQgPSBwcm90ZWN0ZWRQYWdlLmdldFBhZ2VUZXh0KCk7XG5cdFx0XHRjb25zdCBuZXdWZXJzaW9uID0gVHdpbmtsZS5wcm90ZWN0LmNhbGxiYWNrcy5nZXRUYWdnZWRQYWdlKHBhcmFtcywgdGV4dCk7XG5cdFx0XHRpZiAobmV3VmVyc2lvbiA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdHByb3RlY3RlZFBhZ2UuZ2V0U3RhdHVzRWxlbWVudCgpLmluZm8oJ+WujOaIkCcpO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRwcm90ZWN0ZWRQYWdlLnNldEVkaXRTdW1tYXJ5KG5ld1ZlcnNpb24uc3VtbWFyeSk7XG5cdFx0XHRwcm90ZWN0ZWRQYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdHByb3RlY3RlZFBhZ2Uuc2V0V2F0Y2hsaXN0KFR3aW5rbGUuZ2V0UHJlZignd2F0Y2hQUFRhZ2dlZFBhZ2VzJykpO1xuXHRcdFx0cHJvdGVjdGVkUGFnZS5zZXRQYWdlVGV4dChuZXdWZXJzaW9uLnRleHQpO1xuXHRcdFx0cHJvdGVjdGVkUGFnZS5zZXRDcmVhdGVPcHRpb24oJ25vY3JlYXRlJyk7XG5cdFx0XHRwcm90ZWN0ZWRQYWdlLnN1cHByZXNzUHJvdGVjdFdhcm5pbmcoKTsgLy8gbm8gbmVlZCB0byBsZXQgYWRtaW5zIGtub3cgdGhleSBhcmUgZWRpdGluZyB0aHJvdWdoIHByb3RlY3Rpb25cblx0XHRcdHByb3RlY3RlZFBhZ2Uuc2F2ZSgpO1xuXHRcdH0sXG5cdFx0ZmlsZVJlcXVlc3Q6IChycHBQYWdlKSA9PiB7XG5cdFx0XHRjb25zdCBwYXJhbXMgPSBycHBQYWdlLmdldENhbGxiYWNrUGFyYW1ldGVycygpO1xuXHRcdFx0bGV0IHRleHQgPSBycHBQYWdlLmdldFBhZ2VUZXh0KCk7XG5cdFx0XHRjb25zdCBzdGF0dXNFbGVtZW50ID0gcnBwUGFnZS5nZXRTdGF0dXNFbGVtZW50KCk7XG5cdFx0XHRjb25zdCBycHBSZSA9IG5ldyBSZWdFeHAoXG5cdFx0XHRcdGA9PT1cXFxccyooXFxcXFtcXFxcWyk/XFxcXHMqOj9cXFxccyoke01vcmViaXRzLnN0cmluZy5lc2NhcGVSZWdFeHAoTW9yZWJpdHMucGFnZU5hbWVOb3JtKX1cXFxccyooXFxcXF1cXFxcXSk/XFxcXHMqPT09YCxcblx0XHRcdFx0J20nXG5cdFx0XHQpO1xuXHRcdFx0Y29uc3QgdGFnID0gcnBwUmUuZXhlYyh0ZXh0KTtcblx0XHRcdGNvbnN0IHJwcExpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG5cdFx0XHRycHBMaW5rLnNldEF0dHJpYnV0ZSgnaHJlZicsIG13LnV0aWwuZ2V0VXJsKHJwcFBhZ2UuZ2V0UGFnZU5hbWUoKSkpO1xuXHRcdFx0cnBwTGluay5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShycHBQYWdlLmdldFBhZ2VOYW1lKCkpKTtcblx0XHRcdGlmICh0YWcpIHtcblx0XHRcdFx0c3RhdHVzRWxlbWVudC5lcnJvcihbXG5cdFx0XHRcdFx0cnBwTGluayxcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+W3suacieWvueatpOmhtemdoueahOS/neaKpOaPkOWQje+8jOWPlua2iOaTjeS9nOOAgicsICflt7LmnInlsI3mraTpoIHpnaLnmoTkv53orbfmj5DlkI3vvIzlj5bmtojmk43kvZzjgIInKSxcblx0XHRcdFx0XSk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdGxldCBuZXd0YWcgPSBgPT09IFtbOiR7TW9yZWJpdHMucGFnZU5hbWVOb3JtfV1dID09PVxcbmA7XG5cdFx0XHRpZiAobmV3IFJlZ0V4cChgXiR7bXcudXRpbC5lc2NhcGVSZWdFeHAobmV3dGFnKS5yZXBsYWNlKC9cXHMrL2csIFN0cmluZy5yYXdgXFxzKmApfWAsICdtJykudGVzdCh0ZXh0KSkge1xuXHRcdFx0XHRzdGF0dXNFbGVtZW50LmVycm9yKFtcblx0XHRcdFx0XHRycHBMaW5rLFxuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5bey5pyJ5a+55q2k6aG16Z2i55qE5L+d5oqk5o+Q5ZCN77yM5Y+W5raI5pON5L2c44CCJywgJ+W3suacieWwjeatpOmggemdoueahOS/neitt+aPkOWQje+8jOWPlua2iOaTjeS9nOOAgicpLFxuXHRcdFx0XHRdKTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdFx0bGV0IHdvcmRzO1xuXHRcdFx0c3dpdGNoIChwYXJhbXMuZXhwaXJ5KSB7XG5cdFx0XHRcdGNhc2UgJ3RlbXBvcmFyeSc6XG5cdFx0XHRcdFx0d29yZHMgPSB3aW5kb3cud2dVTFMoJ+S4tOaXticsICfoh6jmmYInKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAnaW5maW5pdHknOlxuXHRcdFx0XHRcdHdvcmRzID0gJ+awuOS5hSc7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0d29yZHMgPSAnJztcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdHdvcmRzICs9IHBhcmFtcy50eXBlbmFtZTtcblx0XHRcdG5ld3RhZyArPSBgKiA8c3BhbiBzdHlsZT1cImZvbnQtc2l6ZTogOTAlXCI+JHt3aW5kb3cud2dVTFMoJ+W9k+WJjeS/neaKpOeKtuaAgScsICfnm67liY3kv53orbfni4DmhYsnKX3vvJp7e3Byb3RlY3Rpb24gc3RhdHVzfCR7XG5cdFx0XHRcdC9bPV0vLnRlc3QoTW9yZWJpdHMucGFnZU5hbWVOb3JtKSA/ICcxPScgOiAnJ1xuXHRcdFx0fSR7TW9yZWJpdHMucGFnZU5hbWVOb3JtfX19PC9zcGFuPlxcbmA7XG5cdFx0XHRuZXd0YWcgKz0gYCR7XG5cdFx0XHRcdHdpbmRvdy53Z1VMUygn6K+35rGCJywgJ+iri+axgicpICtcblx0XHRcdFx0TW9yZWJpdHMuc3RyaW5nLnRvVXBwZXJDYXNlRmlyc3RDaGFyKHdvcmRzKSArXG5cdFx0XHRcdChwYXJhbXMucmVhc29uID09PSAnJyA/ICfjgIInIDogYO+8miR7TW9yZWJpdHMuc3RyaW5nLmZvcm1hdFJlYXNvblRleHQocGFyYW1zLnJlYXNvbil9YClcblx0XHRcdH0tLX5+YC5jb25jYXQoJ35+Jyk7XG5cdFx0XHRsZXQgcmVnO1xuXHRcdFx0aWYgKHBhcmFtcy5jYXRlZ29yeSA9PT0gJ3VucHJvdGVjdCcpIHtcblx0XHRcdFx0cmVnID0gLyg9PVxccyror7fmsYLop6PpmaTkv53miqRcXHMqPT0pLztcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJlZyA9IC8oe3tcXHMqXFwvaGVhZGVyXFxzKn19KS87XG5cdFx0XHR9XG5cdFx0XHRjb25zdCBvcmlnaW5hbFRleHRMZW5ndGggPSB0ZXh0Lmxlbmd0aDtcblx0XHRcdHRleHQgPSB0ZXh0LnJlcGxhY2UocmVnLCBgJDFcXG4ke25ld3RhZ31cXG5gKTtcblx0XHRcdGlmICh0ZXh0Lmxlbmd0aCA9PT0gb3JpZ2luYWxUZXh0TGVuZ3RoKSB7XG5cdFx0XHRcdGNvbnN0IGxpbmtub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuXHRcdFx0XHRsaW5rbm9kZS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBtdy51dGlsLmdldFVybCgnSGVscDpUd2lua2xlL+S/ruWkjVJGUFAnKSk7XG5cdFx0XHRcdGxpbmtub2RlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHdpbmRvdy53Z1VMUygn5aaC5L2V5L+u5aSNUkZQUCcsICflpoLkvZXkv67lvqlSRlBQJykpKTtcblx0XHRcdFx0c3RhdHVzRWxlbWVudC5lcnJvcihbXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+aXoOazleWcqFFXOlJGUFDkuIrmib7liLDnm7jlhbPlrprkvY3ngrnmoIforrDvvIzopoHkv67lpI3mraTpl67popjvvIzor7flj4Lop4EnLFxuXHRcdFx0XHRcdFx0J+eEoeazleWcqFFXOlJGUFDkuIrmib7liLDnm7jpl5zlrprkvY3pu57mqJnoqJjvvIzopoHkv67lvqnmraTllY/poYzvvIzoq4vlj4PoposnXG5cdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRsaW5rbm9kZSxcblx0XHRcdFx0XHQn44CCJyxcblx0XHRcdFx0XSk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdHN0YXR1c0VsZW1lbnQuc3RhdHVzKCfliqDlhaXmlrDmj5DlkI3igKYnKTtcblx0XHRcdHJwcFBhZ2Uuc2V0RWRpdFN1bW1hcnkoXG5cdFx0XHRcdGAvKiAke01vcmViaXRzLnBhZ2VOYW1lTm9ybX0gKi8gJHt3aW5kb3cud2dVTFMoJ+ivt+axguWvuScsICfoq4vmsYLlsI0nKX1bWyR7TW9yZWJpdHMucGFnZU5hbWVOb3JtfV1dJHtcblx0XHRcdFx0XHRwYXJhbXMudHlwZW5hbWVcblx0XHRcdFx0fWBcblx0XHRcdCk7XG5cdFx0XHRycHBQYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdHJwcFBhZ2Uuc2V0UGFnZVRleHQodGV4dCk7XG5cdFx0XHRycHBQYWdlLnNldENyZWF0ZU9wdGlvbigncmVjcmVhdGUnKTtcblx0XHRcdHJwcFBhZ2Uuc2F2ZSgoKSA9PiB7XG5cdFx0XHRcdC8vIFdhdGNoIHRoZSBwYWdlIGJlaW5nIHJlcXVlc3RlZFxuXHRcdFx0XHRjb25zdCB3YXRjaFByZWYgPSBUd2lua2xlLmdldFByZWYoJ3dhdGNoUmVxdWVzdGVkUGFnZXMnKTtcblx0XHRcdFx0Ly8gYWN0aW9uPXdhdGNoIGhhcyBubyB3YXkgdG8gcmVseSBvbiB1c2VyIHByZWZlcmVuY2VzIChUMjYyOTEyKSwgc28gd2UgZG8gaXQgbWFudWFsbHkuXG5cdFx0XHRcdC8vIFRoZSB3YXRjaGRlZmF1bHQgcHJlZiBhcHBlYXJzIHRvIHJlbGlhYmx5IHJldHVybiAnMScgKHN0cmluZyksXG5cdFx0XHRcdC8vIGJ1dCB0aGF0J3Mgbm90IGNvbnNpc3RlbnQgYW1vbmcgcHJlZnMgc28gbWlnaHQgYXMgd2VsbCBiZSBcImNvcnJlY3RcIlxuXHRcdFx0XHRjb25zdCB3YXRjaCA9XG5cdFx0XHRcdFx0d2F0Y2hQcmVmICE9PSAnbm8nICYmXG5cdFx0XHRcdFx0KHdhdGNoUHJlZiAhPT0gJ2RlZmF1bHQnIHx8ICEhTnVtYmVyLnBhcnNlSW50KG13LnVzZXIub3B0aW9ucy5nZXQoJ3dhdGNoZGVmYXVsdCcpLCAxMCkpO1xuXHRcdFx0XHRpZiAod2F0Y2gpIHtcblx0XHRcdFx0XHRjb25zdCB3YXRjaF9xdWVyeSA9IHtcblx0XHRcdFx0XHRcdGFjdGlvbjogJ3dhdGNoJyxcblx0XHRcdFx0XHRcdHRpdGxlczogbXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpLFxuXHRcdFx0XHRcdFx0dG9rZW46IG13LnVzZXIudG9rZW5zLmdldCgnd2F0Y2hUb2tlbicpLFxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0Ly8gT25seSBhZGQgdGhlIGV4cGlyeSBpZiBwYWdlIGlzIHVud2F0Y2hlZCBvciBhbHJlYWR5IHRlbXBvcmFyaWx5IHdhdGNoZWRcblx0XHRcdFx0XHRpZiAoVHdpbmtsZS5wcm90ZWN0LndhdGNoZWQgIT09IHRydWUgJiYgd2F0Y2hQcmVmICE9PSAnZGVmYXVsdCcgJiYgd2F0Y2hQcmVmICE9PSAneWVzJykge1xuXHRcdFx0XHRcdFx0d2F0Y2hfcXVlcnkuZXhwaXJ5ID0gd2F0Y2hQcmVmO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRuZXcgTW9yZWJpdHMud2lraS5hcGkoXG5cdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+Wwhuivt+axguS/neaKpOeahOmhtemdouWKoOWFpeWIsOebkeinhuWIl+ihqCcsICflsIfoq4vmsYLkv53orbfnmoTpoIHpnaLliqDlhaXliLDnm6PoppbmuIXllq4nKSxcblx0XHRcdFx0XHRcdHdhdGNoX3F1ZXJ5XG5cdFx0XHRcdFx0KS5wb3N0KCk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH0sXG5cdFx0Y2xvc2VSZXF1ZXN0OiAocnBwUGFnZSkgPT4ge1xuXHRcdFx0Y29uc3QgcGFyYW1zID0gcnBwUGFnZS5nZXRDYWxsYmFja1BhcmFtZXRlcnMoKTtcblx0XHRcdGxldCB0ZXh0ID0gcnBwUGFnZS5nZXRQYWdlVGV4dCgpO1xuXHRcdFx0Y29uc3Qgc3RhdHVzRWxlbWVudCA9IHJwcFBhZ2UuZ2V0U3RhdHVzRWxlbWVudCgpO1xuXHRcdFx0Y29uc3Qgc2VjdGlvbnMgPSB0ZXh0LnNwbGl0KC8oPz1cXG49PVxccyror7fmsYLop6PpmaTkv53miqRcXHMqPT0pLyk7XG5cdFx0XHRpZiAoc2VjdGlvbnMubGVuZ3RoICE9PSAyKSB7XG5cdFx0XHRcdGNvbnN0IGxpbmtub2RlMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcblx0XHRcdFx0bGlua25vZGUyLnNldEF0dHJpYnV0ZSgnaHJlZicsIG13LnV0aWwuZ2V0VXJsKCdIZWxwOlR3aW5rbGUv5L+u5aSNUkZQUCcpKTtcblx0XHRcdFx0bGlua25vZGUyLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCflpoLkvZXkv67lpI1SRlBQJykpO1xuXHRcdFx0XHRzdGF0dXNFbGVtZW50LmVycm9yKFtcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn5peg5rOV5ZyoUVc6UkZQUOS4iuaJvuWIsOebuOWFs+WumuS9jeeCueagh+iusO+8jOimgeS/ruWkjeatpOmXrumimO+8jOivt+WPguingScsXG5cdFx0XHRcdFx0XHQn54Sh5rOV5ZyoUVc6UkZQUOS4iuaJvuWIsOebuOmXnOWumuS9jem7nuaomeiomO+8jOimgeS/ruW+qeatpOWVj+mhjO+8jOiri+WPg+imiydcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdGxpbmtub2RlMixcblx0XHRcdFx0XHQn44CCJyxcblx0XHRcdFx0XSk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdGxldCBzZWN0aW9uVGV4dDtcblx0XHRcdGxldCBleHBpcnlUZXh0ID0gJyc7XG5cdFx0XHRpZiAocGFyYW1zLnR5cGUgPT09ICd1bnByb3RlY3QnKSB7XG5cdFx0XHRcdFssIHNlY3Rpb25UZXh0XSA9IHNlY3Rpb25zO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0W3NlY3Rpb25UZXh0XSA9IHNlY3Rpb25zO1xuXHRcdFx0XHRleHBpcnlUZXh0ID0gTW9yZWJpdHMuc3RyaW5nLmZvcm1hdFRpbWUocGFyYW1zLmV4cGlyeSk7XG5cdFx0XHR9XG5cdFx0XHRjb25zdCByZXF1ZXN0TGlzdCA9IHNlY3Rpb25UZXh0LnNwbGl0KC8oPz1cXG49PT0uKz09PVxccypcXG4pLyk7XG5cdFx0XHRsZXQgZm91bmQgPSBmYWxzZTtcblx0XHRcdGNvbnN0IHJwcFJlID0gbmV3IFJlZ0V4cChcblx0XHRcdFx0YD09PVxcXFxzKihcXFxcW1xcXFxbKT9cXFxccyo6P1xcXFxzKiR7TW9yZWJpdHMucGFnZU5hbWVSZWdleChNb3JlYml0cy5wYWdlTmFtZU5vcm0pfVxcXFxzKihcXFxcXVxcXFxdKT9cXFxccyo9PT1gLFxuXHRcdFx0XHQnbSdcblx0XHRcdCk7XG5cdFx0XHRmb3IgKGxldCByZXF1ZXN0IG9mIHJlcXVlc3RMaXN0KSB7XG5cdFx0XHRcdGlmIChycHBSZS5leGVjKHJlcXVlc3QpKSB7XG5cdFx0XHRcdFx0cmVxdWVzdCA9IHJlcXVlc3QudHJpbUVuZCgpO1xuXHRcdFx0XHRcdGlmIChwYXJhbXMudHlwZSA9PT0gJ3VucHJvdGVjdCcpIHtcblx0XHRcdFx0XHRcdHJlcXVlc3QgKz0gJ1xcbjoge3tSRlBQfGlzdW59feOAgi0tfn4nLmNvbmNhdCgnfn5cXG4nKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0cmVxdWVzdCArPSBgXFxuOiB7e1JGUFB8JHtwYXJhbXMudHlwZX18JHtcblx0XHRcdFx0XHRcdFx0TW9yZWJpdHMuc3RyaW5nLmlzSW5maW5pdHkocGFyYW1zLmV4cGlyeSkgPyAnaW5maW5pdHknIDogZXhwaXJ5VGV4dFxuXHRcdFx0XHRcdFx0fX1944CCLS1+fmAuY29uY2F0KCd+flxcbicpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRmb3VuZCA9IHRydWU7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmICghZm91bmQpIHtcblx0XHRcdFx0c3RhdHVzRWxlbWVudC53YXJuKHdpbmRvdy53Z1VMUygn5rKh5pyJ5om+5Yiw55u45YWz55qE6K+35rGCJywgJ+aykuacieaJvuWIsOebuOmXnOeahOiri+axgicpKTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdFx0aWYgKHBhcmFtcy50eXBlID09PSAndW5wcm90ZWN0Jykge1xuXHRcdFx0XHR0ZXh0ID0gc2VjdGlvbnNbMF0gKyByZXF1ZXN0TGlzdC5qb2luKCcnKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRleHQgPSByZXF1ZXN0TGlzdC5qb2luKCcnKSArIHNlY3Rpb25zWzFdO1xuXHRcdFx0fVxuXHRcdFx0bGV0IHN1bW1hcnkgPSAnJztcblx0XHRcdGlmIChwYXJhbXMudHlwZSA9PT0gJ3VucHJvdGVjdCcpIHtcblx0XHRcdFx0Wywgc2VjdGlvblRleHRdID0gc2VjdGlvbnM7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRbc2VjdGlvblRleHRdID0gc2VjdGlvbnM7XG5cdFx0XHR9XG5cdFx0XHRzd2l0Y2ggKHBhcmFtcy50eXBlKSB7XG5cdFx0XHRcdGNhc2UgJ3NlbWknOlxuXHRcdFx0XHRcdHN1bW1hcnkgPSB3aW5kb3cud2dVTFMoJ+WNiuS/neaKpCcsICfljYrkv53orbcnKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAndGVtcCc6XG5cdFx0XHRcdFx0c3VtbWFyeSA9IHdpbmRvdy53Z1VMUygn5qih5p2/5L+d5oqkJywgJ+aooeadv+S/neittycpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlICdlY3AnOlxuXHRcdFx0XHRcdHN1bW1hcnkgPSB3aW5kb3cud2dVTFMoJ+W7tuS8uOehruiupOS/neaKpCcsICflu7bkvLjnorroqo3kv53orbcnKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAnZnVsbCc6XG5cdFx0XHRcdFx0c3VtbWFyeSA9IHdpbmRvdy53Z1VMUygn5YWo5L+d5oqkJywgJ+WFqOS/neittycpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlICdyZXZpc2lvbnByb3RlY3RlZCc6XG5cdFx0XHRcdFx0c3VtbWFyeSA9IHdpbmRvdy53Z1VMUygn54mI5pys5L+d5oqkJywgJ+eJiOacrOS/neittycpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlICdvZmZpY2lhbHByb3RlY3RlZCc6XG5cdFx0XHRcdFx0c3VtbWFyeSA9IHdpbmRvdy53Z1VMUygn6KOB5aeU5Lya5L+d5oqkJywgJ+ijgeWnlOacg+S/neittycpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlICdtb3ZlJzpcblx0XHRcdFx0XHRzdW1tYXJ5ID0gd2luZG93LndnVUxTKCfnp7vliqjkv53miqQnLCAn56e75YuV5L+d6K23Jyk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgJ3NhbHQnOlxuXHRcdFx0XHRcdHN1bW1hcnkgPSB3aW5kb3cud2dVTFMoJ+eZvee6uOS/neaKpCcsICfnmb3ntJnkv53orbcnKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAndW5wcm90ZWN0Jzpcblx0XHRcdFx0XHRzdW1tYXJ5ID0gd2luZG93LndnVUxTKCfop6PpmaTkv53miqQnLCAn6Kej6Zmk5L+d6K23Jyk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0c3RhdHVzRWxlbWVudC53YXJuKHdpbmRvdy53Z1VMUygn5pyq55+l5L+d5oqk57G75Z6LJywgJ+acquefpeS/neitt+mhnuWIpScpKTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRpZiAoTW9yZWJpdHMuc3RyaW5nLmlzSW5maW5pdHkocGFyYW1zLmV4cGlyeSkpIHtcblx0XHRcdFx0c3VtbWFyeSA9IGV4cGlyeVRleHQgKyBzdW1tYXJ5O1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0c3VtbWFyeSArPSBleHBpcnlUZXh0O1xuXHRcdFx0fVxuXHRcdFx0cnBwUGFnZS5zZXRFZGl0U3VtbWFyeShgLyogJHtNb3JlYml0cy5wYWdlTmFtZU5vcm19ICovICR7c3VtbWFyeX1gKTtcblx0XHRcdHJwcFBhZ2Uuc2V0Q2hhbmdlVGFncyhUd2lua2xlLmNoYW5nZVRhZ3MpO1xuXHRcdFx0cnBwUGFnZS5zZXRQYWdlVGV4dCh0ZXh0KTtcblx0XHRcdHJwcFBhZ2Uuc2F2ZSgpO1xuXHRcdH0sXG5cdH07XG5cdFR3aW5rbGUucHJvdGVjdC5mb3JtYXRQcm90ZWN0aW9uRGVzY3JpcHRpb24gPSAocHJvdGVjdGlvbkxldmVscykgPT4ge1xuXHRcdGNvbnN0IHByb3RlY3Rpb25Ob2RlID0gW107XG5cdFx0aWYgKE9iamVjdC5rZXlzKHByb3RlY3Rpb25MZXZlbHMpLmxlbmd0aCA9PT0gMCkge1xuXHRcdFx0W3Byb3RlY3Rpb25Ob2RlW3Byb3RlY3Rpb25Ob2RlLmxlbmd0aF1dID0gJCgnPGI+JykudGV4dCh3aW5kb3cud2dVTFMoJ+aXoOS/neaKpCcsICfnhKHkv53orbcnKSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGZvciAoY29uc3QgW3R5cGUsIHNldHRpbmdzXSBvZiBPYmplY3QuZW50cmllcyhwcm90ZWN0aW9uTGV2ZWxzKSkge1xuXHRcdFx0XHRsZXQgbGFiZWw7XG5cdFx0XHRcdHN3aXRjaCAodHlwZSkge1xuXHRcdFx0XHRcdGNhc2UgJ2VkaXQnOlxuXHRcdFx0XHRcdFx0bGFiZWwgPSB3aW5kb3cud2dVTFMoJ+e8lui+kScsICfnt6jovK8nKTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdGNhc2UgJ21vdmUnOlxuXHRcdFx0XHRcdFx0bGFiZWwgPSB3aW5kb3cud2dVTFMoJ+enu+WKqCcsICfnp7vli5UnKTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdGNhc2UgJ2NyZWF0ZSc6XG5cdFx0XHRcdFx0XHRsYWJlbCA9IHdpbmRvdy53Z1VMUygn5Yib5bu6JywgJ+W7uueriycpO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0Y2FzZSAndXBsb2FkJzpcblx0XHRcdFx0XHRcdGxhYmVsID0gd2luZG93LndnVUxTKCfkuIrkvKAnLCAn5LiK5YKzJyk7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdFx0bGFiZWwgPSB0eXBlO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdFx0bGV0IGxldmVsO1xuXHRcdFx0XHRzd2l0Y2ggKHNldHRpbmdzLmxldmVsKSB7XG5cdFx0XHRcdFx0Y2FzZSAnb2ZmaWNpYWxwcm90ZWN0ZWQnOlxuXHRcdFx0XHRcdFx0bGV2ZWwgPSB3aW5kb3cud2dVTFMoJ+S7heWFgeiuuOijgeWGs+WnlOWRmCcsICflg4XlhYHoqLHoo4Hmsbrlp5Tlk6EnKTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdGNhc2UgJ3JldmlzaW9ucHJvdGVjdGVkJzpcblx0XHRcdFx0XHRcdGxldmVsID0gd2luZG93LndnVUxTKCfku4XlhYHorrjotYTmt7HnlKjmiLcnLCAn5YOF5YWB6Kix6LOH5rex55So5oi2Jyk7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRjYXNlICdhdXRvY29uZmlybWVkJzpcblx0XHRcdFx0XHRcdGxldmVsID0gd2luZG93LndnVUxTKCfku4XlhYHorrjoh6rliqjnoa7orqTnlKjmiLcnLCAn5YOF5YWB6Kix6Ieq5YuV56K66KqN5L2/55So6ICFJyk7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRjYXNlICd0ZW1wbGF0ZWVkaXRvcic6XG5cdFx0XHRcdFx0XHRsZXZlbCA9IHdpbmRvdy53Z1VMUygn5LuF5qih5p2/57yW6L6R5ZGY5ZKM566h55CG5ZGYJywgJ+WDheaooeadv+e3qOi8r+WToeWSjOeuoeeQhuWToScpO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0Y2FzZSAnc3lzb3AnOlxuXHRcdFx0XHRcdFx0bGV2ZWwgPSB3aW5kb3cud2dVTFMoJ+S7heeuoeeQhuWRmCcsICflg4XnrqHnkIblk6EnKTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHQoe2xldmVsfSA9IHNldHRpbmdzKTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHRcdFtwcm90ZWN0aW9uTm9kZVtwcm90ZWN0aW9uTm9kZS5sZW5ndGhdXSA9ICQoJzxiPicpLnRleHQoYCR7bGFiZWx977yaJHtsZXZlbH1gKTtcblx0XHRcdFx0aWYgKE1vcmViaXRzLnN0cmluZy5pc0luZmluaXR5KHNldHRpbmdzLmV4cGlyeSkpIHtcblx0XHRcdFx0XHRwcm90ZWN0aW9uTm9kZVtwcm90ZWN0aW9uTm9kZS5sZW5ndGhdID0gd2luZG93LndnVUxTKCfvvIjml6DpmZDmnJ/vvIknLCAn77yI54Sh6ZmQ5pyf77yJJyk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cHJvdGVjdGlvbk5vZGVbcHJvdGVjdGlvbk5vZGUubGVuZ3RoXSA9XG5cdFx0XHRcdFx0XHRgJHt3aW5kb3cud2dVTFMoJ++8iOi/h+acn++8micsICfvvIjpgY7mnJ/vvJonKSArIG5ldyBNb3JlYml0cy5kYXRlKHNldHRpbmdzLmV4cGlyeSkuY2FsZW5kYXIoJ3V0Yycpfe+8iWA7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHNldHRpbmdzLmNhc2NhZGUpIHtcblx0XHRcdFx0XHRwcm90ZWN0aW9uTm9kZVtwcm90ZWN0aW9uTm9kZS5sZW5ndGhdID0gd2luZG93LndnVUxTKCfvvIjov57plIHvvIknLCAn77yI6YCj6Y6W77yJJyk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIHByb3RlY3Rpb25Ob2RlO1xuXHR9O1xuXHRUd2lua2xlLmFkZEluaXRDYWxsYmFjayhUd2lua2xlLnByb3RlY3QsICdwcm90ZWN0Jyk7XG59KShqUXVlcnkpO1xuXG5leHBvcnQge307XG4iLCAiLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHMtY29tbWVudFxuLy8gQHRzLW5vY2hlY2tcbi8qISBUd2lua2xlLmpzIC0gZnJpZW5kbHl0YWcuanMgKi9cbihmdW5jdGlvbiBmcmllbmRseXRhZygkKSB7XG5cdGNvbnN0ICRib2R5ID0gJCgnYm9keScpO1xuXHQvKipcblx0ICogZnJpZW5kbHl0YWcuanM6IFRhZyBtb2R1bGVcblx0ICogTW9kZSBvZiBpbnZvY2F0aW9uOiBUYWIgKFwiVGFnXCIpXG5cdCAqIEFjdGl2ZSBvbjogRXhpc3RpbmcgYXJ0aWNsZXMgYW5kIGRyYWZ0czsgZmlsZSBwYWdlcyB3aXRoIGEgY29ycmVzcG9uZGluZyBmaWxlXG5cdCAqIHdoaWNoIGlzIGxvY2FsIChub3Qgb24gU2hhcmUpOyBhbGwgcmVkaXJlY3RzXG5cdCAqL1xuXHRUd2lua2xlLnRhZyA9ICgpID0+IHtcblx0XHQvLyByZWRpcmVjdCB0YWdnaW5nXG5cdFx0aWYgKE1vcmViaXRzLmlzUGFnZVJlZGlyZWN0KCkpIHtcblx0XHRcdFR3aW5rbGUudGFnLm1vZGUgPSB3aW5kb3cud2dVTFMoJ+mHjeWumuWQkScsICfph43mlrDlsI7lkJEnKTtcblx0XHRcdFR3aW5rbGUudGFnLm1vZGVFbiA9ICdyZWRpcmVjdCc7XG5cdFx0XHRUd2lua2xlLmFkZFBvcnRsZXRMaW5rKFxuXHRcdFx0XHRUd2lua2xlLnRhZy5jYWxsYmFjayxcblx0XHRcdFx0d2luZG93LndnVUxTKCfmoIforrAnLCAn5qiZ6KiYJyksXG5cdFx0XHRcdCdmcmllbmRseS10YWcnLFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ+agh+iusOmHjeWumuWQkScsICfmqJnoqJjph43mlrDlsI7lkJEnKVxuXHRcdFx0KTtcblx0XHRcdC8vIGZpbGUgdGFnZ2luZ1xuXHRcdH0gZWxzZSBpZiAoXG5cdFx0XHRtdy5jb25maWcuZ2V0KCd3Z05hbWVzcGFjZU51bWJlcicpID09PSA2ICYmXG5cdFx0XHQhZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI213LXNoYXJlZHVwbG9hZCcpICYmXG5cdFx0XHRkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbXctaW1hZ2VwYWdlLXNlY3Rpb24tZmlsZWhpc3RvcnknKVxuXHRcdCkge1xuXHRcdFx0VHdpbmtsZS50YWcubW9kZSA9IHdpbmRvdy53Z1VMUygn5paH5Lu2JywgJ+aqlOahiCcpO1xuXHRcdFx0VHdpbmtsZS50YWcubW9kZUVuID0gJ2ZpbGUnO1xuXHRcdFx0VHdpbmtsZS5hZGRQb3J0bGV0TGluayhcblx0XHRcdFx0VHdpbmtsZS50YWcuY2FsbGJhY2ssXG5cdFx0XHRcdHdpbmRvdy53Z1VMUygn5qCH6K6wJywgJ+aomeiomCcpLFxuXHRcdFx0XHQnZnJpZW5kbHktdGFnJyxcblx0XHRcdFx0d2luZG93LndnVUxTKCfmoIforrDmlofku7YnLCAn5qiZ6KiY5qqU5qGIJylcblx0XHRcdCk7XG5cdFx0XHQvLyBhcnRpY2xlL2RyYWZ0IHRhZ2dpbmdcblx0XHR9IGVsc2UgaWYgKFxuXHRcdFx0KFswLCAxMThdLmluY2x1ZGVzKG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlTnVtYmVyJykpICYmIG13LmNvbmZpZy5nZXQoJ3dnQ3VyUmV2aXNpb25JZCcpKSB8fFxuXHRcdFx0TW9yZWJpdHMucGFnZU5hbWVOb3JtID09PSBUd2lua2xlLmdldFByZWYoJ3NhbmRib3hQYWdlJylcblx0XHQpIHtcblx0XHRcdFR3aW5rbGUudGFnLm1vZGUgPSB3aW5kb3cud2dVTFMoJ+adoeebricsICfmop3nm64nKTtcblx0XHRcdFR3aW5rbGUudGFnLm1vZGVFbiA9ICdhcnRpY2xlJztcblx0XHRcdC8vIENhbid0IHJlbW92ZSB0YWdzIHdoZW4gbm90IHZpZXdpbmcgY3VycmVudCB2ZXJzaW9uXG5cdFx0XHRUd2lua2xlLnRhZy5jYW5SZW1vdmUgPVxuXHRcdFx0XHRtdy5jb25maWcuZ2V0KCd3Z0N1clJldmlzaW9uSWQnKSA9PT0gbXcuY29uZmlnLmdldCgnd2dSZXZpc2lvbklkJykgJiZcblx0XHRcdFx0Ly8gRGlzYWJsZWQgb24gbGF0ZXN0IGRpZmYgYmVjYXVzZSB0aGUgZGlmZiBzbGlkZXIgY291bGQgYmUgdXNlZCB0byBzbGlkZVxuXHRcdFx0XHQvLyBhd2F5IGZyb20gdGhlIGxhdGVzdCBkaWZmIHdpdGhvdXQgY2F1c2luZyB0aGUgc2NyaXB0IHRvIHJlbG9hZFxuXHRcdFx0XHQhbXcuY29uZmlnLmdldCgnd2dEaWZmTmV3SWQnKTtcblx0XHRcdFR3aW5rbGUuYWRkUG9ydGxldExpbmsoXG5cdFx0XHRcdFR3aW5rbGUudGFnLmNhbGxiYWNrLFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ+agh+iusCcsICfmqJnoqJgnKSxcblx0XHRcdFx0J2ZyaWVuZGx5LXRhZycsXG5cdFx0XHRcdHdpbmRvdy53Z1VMUygn5qCH6K6w5p2h55uuJywgJ+aomeiomOaineebricpXG5cdFx0XHQpO1xuXHRcdH1cblx0fTtcblx0VHdpbmtsZS50YWcuY2hlY2tlZFRhZ3MgPSBbXTtcblx0VHdpbmtsZS50YWcuY2FsbGJhY2sgPSAoKSA9PiB7XG5cdFx0Y29uc3QgV2luZG93ID0gbmV3IE1vcmViaXRzLnNpbXBsZVdpbmRvdyg2MzAsIFR3aW5rbGUudGFnLm1vZGVFbiA9PT0gJ2FydGljbGUnID8gNTAwIDogNDAwKTtcblx0XHRXaW5kb3cuc2V0U2NyaXB0TmFtZSgnVHdpbmtsZScpO1xuXHRcdFdpbmRvdy5hZGRGb290ZXJMaW5rKHdpbmRvdy53Z1VMUygn5qCH6K6w6K6+572uJywgJ+aomeiomOioreWumicpLCAnSDpUVy9QUkVGI3RhZycpO1xuXHRcdFdpbmRvdy5hZGRGb290ZXJMaW5rKHdpbmRvdy53Z1VMUygnVHdpbmtsZeW4ruWKqScsICdUd2lua2xl6Kqq5piOJyksICdIOlRXL0RPQyN0YWcnKTtcblx0XHRjb25zdCBmb3JtID0gbmV3IE1vcmViaXRzLnF1aWNrRm9ybShUd2lua2xlLnRhZy5jYWxsYmFjay5ldmFsdWF0ZSk7XG5cdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ2lucHV0Jyxcblx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+etm+mAieagh+iusOWIl+ihqO+8micsICfnr6npgbjmqJnoqJjliJfooajvvJonKSxcblx0XHRcdG5hbWU6ICdxdWlja2ZpbHRlcicsXG5cdFx0XHRzaXplOiAnMzAnLFxuXHRcdFx0ZXZlbnQ6IGZ1bmN0aW9uIGV2ZW50KCkge1xuXHRcdFx0XHQvLyBmbHVzaCB0aGUgRE9NIG9mIGFsbCBleGlzdGluZyB1bmRlcmxpbmUgc3BhbnNcblx0XHRcdFx0JGFsbENoZWNrYm94RGl2cy5maW5kKCcuc2VhcmNoLWhpdCcpLmVhY2goKF9pLCBlKSA9PiB7XG5cdFx0XHRcdFx0Y29uc3QgbGFiZWxfZWxlbWVudCA9IGUucGFyZW50RWxlbWVudDtcblx0XHRcdFx0XHQvLyBUaGlzIHdvdWxkIGNvbnZlcnQgPGxhYmVsPkhlbGxvIDxzcGFuIGNsYXNzPXNlYXJjaC1oaXQ+d288L3NwYW4+cmxkPC9sYWJlbD5cblx0XHRcdFx0XHQvLyB0byA8bGFiZWw+SGVsbG8gd29ybGQ8L2xhYmVsPlxuXHRcdFx0XHRcdGxhYmVsX2VsZW1lbnQuaW5uZXJIVE1MID0gbGFiZWxfZWxlbWVudC50ZXh0Q29udGVudDtcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGlmICh0aGlzLnZhbHVlKSB7XG5cdFx0XHRcdFx0JGFsbENoZWNrYm94RGl2cy5oaWRlKCk7XG5cdFx0XHRcdFx0JGFsbEhlYWRlcnMuaGlkZSgpO1xuXHRcdFx0XHRcdGNvbnN0IHNlYXJjaFN0cmluZyA9IHRoaXMudmFsdWU7XG5cdFx0XHRcdFx0Y29uc3Qgc2VhcmNoUmVnZXggPSBuZXcgUmVnRXhwKG13LnV0aWwuZXNjYXBlUmVnRXhwKHNlYXJjaFN0cmluZyksICdpJyk7XG5cdFx0XHRcdFx0JGFsbENoZWNrYm94RGl2cy5maW5kKCdsYWJlbCcpLmVhY2goKF9pbmRleCwgZWxlbWVudCkgPT4ge1xuXHRcdFx0XHRcdFx0Y29uc3QgbGFiZWxfdGV4dCA9IGVsZW1lbnQudGV4dENvbnRlbnQ7XG5cdFx0XHRcdFx0XHRjb25zdCBzZWFyY2hIaXQgPSBzZWFyY2hSZWdleC5leGVjKGxhYmVsX3RleHQpO1xuXHRcdFx0XHRcdFx0aWYgKHNlYXJjaEhpdCkge1xuXHRcdFx0XHRcdFx0XHRjb25zdCByYW5nZSA9IGRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7XG5cdFx0XHRcdFx0XHRcdGNvbnN0IFt0ZXh0bm9kZV0gPSBlbGVtZW50LmNoaWxkTm9kZXM7XG5cdFx0XHRcdFx0XHRcdHJhbmdlLnNlbGVjdE5vZGVDb250ZW50cyh0ZXh0bm9kZSk7XG5cdFx0XHRcdFx0XHRcdHJhbmdlLnNldFN0YXJ0KHRleHRub2RlLCBzZWFyY2hIaXQuaW5kZXgpO1xuXHRcdFx0XHRcdFx0XHRyYW5nZS5zZXRFbmQodGV4dG5vZGUsIHNlYXJjaEhpdC5pbmRleCArIHNlYXJjaFN0cmluZy5sZW5ndGgpO1xuXHRcdFx0XHRcdFx0XHRjb25zdCBbdW5kZXJsaW5lX3NwYW5dID0gJCgnPHNwYW4+Jylcblx0XHRcdFx0XHRcdFx0XHQuYWRkQ2xhc3MoJ3NlYXJjaC1oaXQnKVxuXHRcdFx0XHRcdFx0XHRcdC5jc3MoJ3RleHQtZGVjb3JhdGlvbicsICd1bmRlcmxpbmUnKTtcblx0XHRcdFx0XHRcdFx0cmFuZ2Uuc3Vycm91bmRDb250ZW50cyh1bmRlcmxpbmVfc3Bhbik7XG5cdFx0XHRcdFx0XHRcdGVsZW1lbnQucGFyZW50RWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsgLy8gc2hvd1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdCRhbGxDaGVja2JveERpdnMuc2hvdygpO1xuXHRcdFx0XHRcdCRhbGxIZWFkZXJzLnNob3coKTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHR9KTtcblx0XHRzd2l0Y2ggKFR3aW5rbGUudGFnLm1vZGVFbikge1xuXHRcdFx0Y2FzZSAnYXJ0aWNsZSc6XG5cdFx0XHRcdFdpbmRvdy5zZXRUaXRsZSh3aW5kb3cud2dVTFMoJ+adoeebrue7tOaKpOagh+iusCcsICfmop3nm67ntq3orbfmqJnoqJgnKSk7XG5cdFx0XHRcdC8vIEJ1aWxkIHNvcnRpbmcgYW5kIGxvb2t1cCBvYmplY3QgZmxhdE9iamVjdCwgd2hpY2ggaXMgYWx3YXlzXG5cdFx0XHRcdC8vIG5lZWRlZCBidXQgYWxzbyB1c2VkIHRvIGdlbmVyYXRlIHRoZSBhbHBoYWJldGljYWwgbGlzdFxuXHRcdFx0XHQvLyBXb3VsZCBiZSBpbmZpbml0ZWx5IGJldHRlciB3aXRoIE9iamVjdC52YWx1ZXNcblx0XHRcdFx0VHdpbmtsZS50YWcuYXJ0aWNsZS5mbGF0T2JqZWN0ID0ge307XG5cdFx0XHRcdGZvciAoY29uc3QgZ3JvdXAgb2YgVHdpbmtsZS50YWcuYXJ0aWNsZS50YWdMaXN0KSB7XG5cdFx0XHRcdFx0Zm9yIChjb25zdCBzdWJncm91cCBvZiBncm91cC52YWx1ZSkge1xuXHRcdFx0XHRcdFx0aWYgKHN1Ymdyb3VwLnZhbHVlKSB7XG5cdFx0XHRcdFx0XHRcdGZvciAoY29uc3QgaXRlbSBvZiBzdWJncm91cC52YWx1ZSkge1xuXHRcdFx0XHRcdFx0XHRcdFR3aW5rbGUudGFnLmFydGljbGUuZmxhdE9iamVjdFtpdGVtLnRhZ10gPSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRkZXNjcmlwdGlvbjogaXRlbS5kZXNjcmlwdGlvbixcblx0XHRcdFx0XHRcdFx0XHRcdGV4Y2x1ZGVNSTogISFpdGVtLmV4Y2x1ZGVNSSxcblx0XHRcdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRUd2lua2xlLnRhZy5hcnRpY2xlLmZsYXRPYmplY3Rbc3ViZ3JvdXAudGFnXSA9IHtcblx0XHRcdFx0XHRcdFx0XHRkZXNjcmlwdGlvbjogc3ViZ3JvdXAuZGVzY3JpcHRpb24sXG5cdFx0XHRcdFx0XHRcdFx0ZXhjbHVkZU1JOiAhIXN1Ymdyb3VwLmV4Y2x1ZGVNSSxcblx0XHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdzZWxlY3QnLFxuXHRcdFx0XHRcdG5hbWU6ICdzb3J0b3JkZXInLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+afpeeci+WIl+ihqO+8micsICfmqqLoppbliJfooajvvJonKSxcblx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn5oKo5Y+v5Lul5ZyoVHdpbmtsZeWPguaVsOiuvue9ru+8iEg6VFcvUFJFRu+8ieS4reabtOaUueatpOmhueOAgicsXG5cdFx0XHRcdFx0XHQn5oKo5Y+v5Lul5ZyoVHdpbmtsZeWBj+WlveioreWumu+8iEg6VFcvUFJFRu+8ieS4reabtOaUueatpOmgheOAgidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdGV2ZW50OiBUd2lua2xlLnRhZy51cGRhdGVTb3J0T3JkZXIsXG5cdFx0XHRcdFx0bGlzdDogW1xuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0eXBlOiAnb3B0aW9uJyxcblx0XHRcdFx0XHRcdFx0dmFsdWU6ICdjYXQnLFxuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmjInnsbvlnosnLCAn5oyJ6aGe5YilJyksXG5cdFx0XHRcdFx0XHRcdHNlbGVjdGVkOiBUd2lua2xlLmdldFByZWYoJ3RhZ0FydGljbGVTb3J0T3JkZXInKSA9PT0gJ2NhdCcsXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0eXBlOiAnb3B0aW9uJyxcblx0XHRcdFx0XHRcdFx0dmFsdWU6ICdhbHBoYScsXG5cdFx0XHRcdFx0XHRcdGxhYmVsOiAn5oyJ5a2X5q+NJyxcblx0XHRcdFx0XHRcdFx0c2VsZWN0ZWQ6IFR3aW5rbGUuZ2V0UHJlZigndGFnQXJ0aWNsZVNvcnRPcmRlcicpID09PSAnYWxwaGEnLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRdLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0aWYgKCFUd2lua2xlLnRhZy5jYW5SZW1vdmUpIHtcblx0XHRcdFx0XHRjb25zdCBkaXZFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cdFx0XHRcdFx0ZGl2RWxlbWVudC5pbm5lckhUTUwgPSB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn6KaB56e76Zmk546w5pyJ57u05oqk5qCH6K6w77yM6K+35LuO5b2T5YmN5p2h55uu54mI5pys5Lit5omT5byA4oCc5qCH6K6w4oCd6I+c5Y2VJyxcblx0XHRcdFx0XHRcdCfopoHnp7vpmaTnj77mnInntq3orbfmqJnoqJjvvIzoq4vlvp7nm67liY3mop3nm67niYjmnKzkuK3miZPplovjgIzmqJnoqJjjgI3pgbjllq4nXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHRcdFx0XHR0eXBlOiAnZGl2Jyxcblx0XHRcdFx0XHRcdG5hbWU6ICd1bnRhZ25vdGljZScsXG5cdFx0XHRcdFx0XHRsYWJlbDogZGl2RWxlbWVudCxcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fVxuXHRcdFx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2RpdicsXG5cdFx0XHRcdFx0aWQ6ICd0YWdXb3JrQXJlYScsXG5cdFx0XHRcdFx0Y2xhc3NOYW1lOiAnbW9yZWJpdHMtc2Nyb2xsYm94Jyxcblx0XHRcdFx0XHRzdHlsZTogJ21heC1oZWlnaHQ6IDI4ZW0nLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdFx0bGlzdDogW1xuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCflpoLlj6/og73vvIzlkIjlubblhaV7e211bHRpcGxlIGlzc3Vlc319Jyxcblx0XHRcdFx0XHRcdFx0XHQn5aaC5Y+v6IO977yM5ZCI5L215YWle3ttdWx0aXBsZSBpc3N1ZXN9fSdcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdFx0dmFsdWU6ICdncm91cCcsXG5cdFx0XHRcdFx0XHRcdG5hbWU6ICdncm91cCcsXG5cdFx0XHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn6Iul5Yqg5YWle3ttdWx0aXBsZSBpc3N1ZXN9feaUr+aMgeeahOS4ieS4quS7peS4iueahOaooeadv++8jOaJgOacieaUr+aMgeeahOaooeadv+mDveS8muiiq+WQiOW5tuWFpXt7bXVsdGlwbGUgaXNzdWVzfX3mqKHmnb/kuK3jgIInLFxuXHRcdFx0XHRcdFx0XHRcdCfoi6XliqDlhaV7e211bHRpcGxlIGlzc3Vlc3195pSv5o+055qE5LiJ5YCL5Lul5LiK55qE5qih5p2/77yM5omA5pyJ5pSv5o+055qE5qih5p2/6YO95pyD6KKr5ZCI5L215YWle3ttdWx0aXBsZSBpc3N1ZXN9feaooeadv+S4reOAgidcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdFx0Y2hlY2tlZDogVHdpbmtsZS5nZXRQcmVmKCdncm91cEJ5RGVmYXVsdCcpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRdLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRcdFx0bGFiZWw6ICfnkIbnlLHvvJonLFxuXHRcdFx0XHRcdG5hbWU6ICdyZWFzb24nLFxuXHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfpmYTliqDkuo7nvJbovpHmkZjopoHnmoTlj6/pgInnkIbnlLHvvIzkvovlpoLmjIflh7rmnaHnm67lhoXlrrnnmoTlk6rkupvpg6jliIbmnInpl67popjmiJbnp7vpmaTmqKHmnb/nmoTnkIbnlLHvvIzkvYboi6XnkIbnlLHlvojplb/liJnlupTor6Xlj5HooajlnKjorqjorrrpobXjgIInLFxuXHRcdFx0XHRcdFx0J+mZhOWKoOaWvOe3qOi8r+aRmOimgeeahOWPr+mBuOeQhueUse+8jOS+i+WmguaMh+WHuuaineebruWFp+WuueeahOWTquS6m+mDqOWIhuacieWVj+mhjOaIluenu+mZpOaooeadv+eahOeQhueUse+8jOS9huiLpeeQhueUseW+iOmVt+WJh+aHieipsueZvOihqOWcqOiojuirlumggeOAgidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdHNpemU6ICc4MCcsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ2ZpbGUnOlxuXHRcdFx0XHRXaW5kb3cuc2V0VGl0bGUod2luZG93LndnVUxTKCfmlofku7bnu7TmiqTmoIforrAnLCAn5qqU5qGI57at6K235qiZ6KiYJykpO1xuXHRcdFx0XHRmb3IgKGNvbnN0IGdyb3VwIG9mIFR3aW5rbGUudGFnLmZpbGVMaXN0KSB7XG5cdFx0XHRcdFx0aWYgKGdyb3VwLmJ1aWxkRmlsZW5hbWUpIHtcblx0XHRcdFx0XHRcdGZvciAoY29uc3QgZWwgb2YgZ3JvdXAudmFsdWUpIHtcblx0XHRcdFx0XHRcdFx0ZWwuc3ViZ3JvdXAgPSB7XG5cdFx0XHRcdFx0XHRcdFx0dHlwZTogJ2lucHV0Jyxcblx0XHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmm7/mjaLnmoTmlofku7bvvJonLCAn5pu/5o+b55qE5qqU5qGI77yaJyksXG5cdFx0XHRcdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdFx0J+i+k+WFpeabv+aNouatpOaWh+S7tueahOaWh+S7tuWQjeensO+8iOW/heWhq++8iScsXG5cdFx0XHRcdFx0XHRcdFx0XHQn6Ly45YWl5pu/5o+b5q2k5qqU5qGI55qE5qqU5qGI5ZCN56ix77yI5b+F5aGr77yJJ1xuXHRcdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRcdFx0bmFtZTogYCR7ZWwudmFsdWUucmVwbGFjZSgvIC9nLCAnXycpfUZpbGVgLFxuXHRcdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHRcdFx0XHR0eXBlOiAnaGVhZGVyJyxcblx0XHRcdFx0XHRcdGxhYmVsOiBncm91cC5rZXksXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0XHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdFx0XHRcdG5hbWU6ICd0YWdzJyxcblx0XHRcdFx0XHRcdGxpc3Q6IGdyb3VwLnZhbHVlLFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChUd2lua2xlLmdldFByZWYoJ2N1c3RvbUZpbGVUYWdMaXN0JykubGVuZ3RoKSB7XG5cdFx0XHRcdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0XHRcdFx0dHlwZTogJ2hlYWRlcicsXG5cdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfoh6rlrprkuYnmqKHmnb8nLCAn6Ieq6KiC5qih5p2/JyksXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0XHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdFx0XHRcdG5hbWU6ICd0YWdzJyxcblx0XHRcdFx0XHRcdGxpc3Q6IFR3aW5rbGUuZ2V0UHJlZignY3VzdG9tRmlsZVRhZ0xpc3QnKSxcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fVxuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ3JlZGlyZWN0Jzoge1xuXHRcdFx0XHRXaW5kb3cuc2V0VGl0bGUod2luZG93LndnVUxTKCfph43lrprlkJHmoIforrAnLCAn6YeN5paw5bCO5ZCR5qiZ6KiYJykpO1xuXHRcdFx0XHRjb25zdCBpID0gMTtcblx0XHRcdFx0Zm9yIChjb25zdCBncm91cCBvZiBUd2lua2xlLnRhZy5yZWRpcmVjdExpc3QpIHtcblx0XHRcdFx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHRcdFx0XHR0eXBlOiAnaGVhZGVyJyxcblx0XHRcdFx0XHRcdGlkOiBgdGFnSGVhZGVyJHtpfWAsXG5cdFx0XHRcdFx0XHRsYWJlbDogZ3JvdXAua2V5LFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdFx0XHRuYW1lOiAndGFncycsXG5cdFx0XHRcdFx0XHRsaXN0OiBncm91cC52YWx1ZS5tYXAoKGl0ZW0pID0+IHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRcdFx0XHR2YWx1ZTogaXRlbS50YWcsXG5cdFx0XHRcdFx0XHRcdFx0bGFiZWw6IGB7eyR7aXRlbS50YWd9fX3vvJoke2l0ZW0uZGVzY3JpcHRpb259YCxcblx0XHRcdFx0XHRcdFx0XHRzdWJncm91cDogaXRlbS5zdWJncm91cCxcblx0XHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRcdH0pLFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChUd2lua2xlLmdldFByZWYoJ2N1c3RvbVJlZGlyZWN0VGFnTGlzdCcpLmxlbmd0aCkge1xuXHRcdFx0XHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdFx0XHRcdHR5cGU6ICdoZWFkZXInLFxuXHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6Ieq5a6a5LmJ5qih5p2/JywgJ+iHquioguaooeadvycpLFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdFx0XHRuYW1lOiAndGFncycsXG5cdFx0XHRcdFx0XHRsaXN0OiBUd2lua2xlLmdldFByZWYoJ2N1c3RvbVJlZGlyZWN0VGFnTGlzdCcpLFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0dm9pZCBtdy5ub3RpZnkoYFR3aW5rbGUudGFn77ya5pyq55+l5qih5byPICR7VHdpbmtsZS50YWcubW9kZX1gLCB7XG5cdFx0XHRcdFx0dHlwZTogJ3dhcm4nLFxuXHRcdFx0XHRcdHRhZzogJ2ZyaWVuZGx5dGFnJyxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdH1cblx0XHRpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnBhdHJvbGxpbmsnKS5sZW5ndGgpIHtcblx0XHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdFx0bGlzdDogW1xuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+agh+iusOmhtemdouS4uuW3suW3oeafpScsICfmqJnoqJjpoIHpnaLngrrlt7Llt6Hmn6UnKSxcblx0XHRcdFx0XHRcdHZhbHVlOiAncGF0cm9sJyxcblx0XHRcdFx0XHRcdG5hbWU6ICdwYXRyb2wnLFxuXHRcdFx0XHRcdFx0Y2hlY2tlZDogVHdpbmtsZS5nZXRQcmVmKCdtYXJrVGFnZ2VkUGFnZXNBc1BhdHJvbGxlZCcpLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdF0sXG5cdFx0XHR9KTtcblx0XHR9XG5cdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ3N1Ym1pdCcsXG5cdFx0XHRjbGFzc05hbWU6ICd0dy10YWctc3VibWl0Jyxcblx0XHR9KTtcblx0XHRjb25zdCByZXN1bHQgPSBmb3JtLnJlbmRlcigpO1xuXHRcdFdpbmRvdy5zZXRDb250ZW50KHJlc3VsdCk7XG5cdFx0V2luZG93LmRpc3BsYXkoKTtcblx0XHQvLyBmb3IgcXVpY2sgZmlsdGVyOlxuXHRcdCRhbGxDaGVja2JveERpdnMgPSAkKHJlc3VsdCkuZmluZCgnW25hbWUkPXRhZ3NdJykucGFyZW50KCk7XG5cdFx0JGFsbEhlYWRlcnMgPSAkKHJlc3VsdCkuZmluZCgnaDUnKTtcblx0XHRyZXN1bHQucXVpY2tmaWx0ZXIuZm9jdXMoKTsgLy8gcGxhY2UgY3Vyc29yIGluIHRoZSBxdWljayBmaWx0ZXIgZmllbGQgYXMgc29vbiBhcyB3aW5kb3cgaXMgb3BlbmVkXG5cdFx0cmVzdWx0LnF1aWNrZmlsdGVyLmF1dG9jb21wbGV0ZSA9ICdvZmYnOyAvLyBkaXNhYmxlIGJyb3dzZXIgc3VnZ2VzdGlvbnNcblx0XHRyZXN1bHQucXVpY2tmaWx0ZXIuYWRkRXZlbnRMaXN0ZW5lcigna2V5cHJlc3MnLCAoZSkgPT4ge1xuXHRcdFx0aWYgKGUua2V5ID09PSAnRW50ZXInKSB7XG5cdFx0XHRcdC8vIHByZXZlbnQgZW50ZXIga2V5IGZyb20gYWNjaWRlbnRhbGx5IHN1Ym1pdHRpbmcgdGhlIGZvcm1cblx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0aWYgKFR3aW5rbGUudGFnLm1vZGVFbiA9PT0gJ2FydGljbGUnKSB7XG5cdFx0XHRUd2lua2xlLnRhZy5hbHJlYWR5UHJlc2VudFRhZ3MgPSBbXTtcblx0XHRcdGlmIChUd2lua2xlLnRhZy5jYW5SZW1vdmUpIHtcblx0XHRcdFx0Ly8gTG9vayBmb3IgZXhpc3RpbmcgbWFpbnRlbmFuY2UgdGFncyBpbiB0aGUgbGVhZCBzZWN0aW9uIGFuZCBwdXQgdGhlbSBpbiBhcnJheVxuXHRcdFx0XHQvLyBBbGwgdGFncyBhcmUgSFRNTCB0YWJsZSBlbGVtZW50cyB0aGF0IGFyZSBkaXJlY3QgY2hpbGRyZW4gb2YgLm13LXBhcnNlci1vdXRwdXQsXG5cdFx0XHRcdC8vIGV4Y2VwdCB3aGVuIHRoZXkgYXJlIHdpdGhpbiB7e211bHRpcGxlIGlzc3Vlc319XG5cdFx0XHRcdCRib2R5XG5cdFx0XHRcdFx0LmZpbmQoJy5tdy1wYXJzZXItb3V0cHV0Jylcblx0XHRcdFx0XHQuY2hpbGRyZW4oKVxuXHRcdFx0XHRcdC5lYWNoKChfaSwgZSkgPT4ge1xuXHRcdFx0XHRcdFx0Ly8gYnJlYWsgb3V0IG9uIGVuY291bnRlcmluZyB0aGUgZmlyc3QgaGVhZGluZywgd2hpY2ggbWVhbnMgd2UgYXJlIG5vXG5cdFx0XHRcdFx0XHQvLyBsb25nZXIgaW4gdGhlIGxlYWQgc2VjdGlvblxuXHRcdFx0XHRcdFx0aWYgKGUudGFnTmFtZSA9PT0gJ0gyJykge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHQvLyBUaGUgYWJpbGl0eSB0byByZW1vdmUgdGFncyBkZXBlbmRzIG9uIHRoZSB0ZW1wbGF0ZSdzIHt7YW1ib3h9fSB8bmFtZT1cblx0XHRcdFx0XHRcdC8vIHBhcmFtZXRlciBiZWFyaW5nIHRoZSB0ZW1wbGF0ZSdzIGNvcnJlY3QgbmFtZSAocHJlZmVyYWJseSkgb3IgYSBuYW1lIHRoYXQgYXRcblx0XHRcdFx0XHRcdC8vIGxlYXN0IHJlZGlyZWN0cyB0byB0aGUgYWN0dWFsIG5hbWVcblx0XHRcdFx0XHRcdC8vIEFsbCB0YWdzIGhhdmUgdGhlaXIgZmlyc3QgY2xhc3MgbmFtZSBhcyBcImJveC1cIiArIHRlbXBsYXRlIG5hbWVcblx0XHRcdFx0XHRcdGlmIChlLmNsYXNzTmFtZS5pbmRleE9mKCdib3gtJykgPT09IDApIHtcblx0XHRcdFx0XHRcdFx0aWYgKGUuY2xhc3NMaXN0WzBdID09PSAnYm94LemXrumimOadoeebricpIHtcblx0XHRcdFx0XHRcdFx0XHQkKGUpXG5cdFx0XHRcdFx0XHRcdFx0XHQuZmluZCgnLmFtYm94Jylcblx0XHRcdFx0XHRcdFx0XHRcdC5lYWNoKChfaW5kZXgsIGVsZW1lbnQpID0+IHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKGVsZW1lbnQuY2xhc3NMaXN0WzBdLmluZGV4T2YoJ2JveC0nKSA9PT0gMCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGNvbnN0IGJveFRhZyA9IGVsZW1lbnQuY2xhc3NMaXN0WzBdLnNsaWNlKCdib3gtJy5sZW5ndGgpLnJlcGxhY2UoL18vZywgJyAnKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRUd2lua2xlLnRhZy5hbHJlYWR5UHJlc2VudFRhZ3NbVHdpbmtsZS50YWcuYWxyZWFkeVByZXNlbnRUYWdzLmxlbmd0aF0gPVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ym94VGFnO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTsgLy8gY29udGludWVcblx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdGNvbnN0IHRhZyA9IGUuY2xhc3NMaXN0WzBdLnNsaWNlKCdib3gtJy5sZW5ndGgpLnJlcGxhY2UoL18vZywgJyAnKTtcblx0XHRcdFx0XHRcdFx0VHdpbmtsZS50YWcuYWxyZWFkeVByZXNlbnRUYWdzW1R3aW5rbGUudGFnLmFscmVhZHlQcmVzZW50VGFncy5sZW5ndGhdID0gdGFnO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHQvLyB7e1VuY2F0ZWdvcml6ZWR9fSBhbmQge3tJbXByb3ZlIGNhdGVnb3JpZXN9fSBhcmUgdXN1YWxseSBwbGFjZWQgYXQgdGhlIGVuZFxuXHRcdFx0XHRpZiAoJGJvZHkuZmluZCgnLmJveC1VbmNhdGVnb3JpemVkJykubGVuZ3RoKSB7XG5cdFx0XHRcdFx0VHdpbmtsZS50YWcuYWxyZWFkeVByZXNlbnRUYWdzW1R3aW5rbGUudGFnLmFscmVhZHlQcmVzZW50VGFncy5sZW5ndGhdID0gJ1VuY2F0ZWdvcml6ZWQnO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICgkYm9keS5maW5kKCcuYm94LUltcHJvdmVfY2F0ZWdvcmllcycpLmxlbmd0aCkge1xuXHRcdFx0XHRcdFR3aW5rbGUudGFnLmFscmVhZHlQcmVzZW50VGFnc1tUd2lua2xlLnRhZy5hbHJlYWR5UHJlc2VudFRhZ3MubGVuZ3RoXSA9ICdJbXByb3ZlIGNhdGVnb3JpZXMnO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHQvLyBBZGQgc3RhdHVzIHRleHQgbm9kZSBhZnRlciBTdWJtaXQgYnV0dG9uXG5cdFx0XHRjb25zdCBzdGF0dXNOb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuXHRcdFx0c3RhdHVzTm9kZS5zdHlsZS5mb250U2l6ZSA9ICc5MCUnO1xuXHRcdFx0c3RhdHVzTm9kZS5pZCA9ICd0dy10YWctc3RhdHVzJztcblx0XHRcdFR3aW5rbGUudGFnLnN0YXR1cyA9IHtcblx0XHRcdFx0Ly8gaW5pdGlhbCBzdGF0ZTsgZGVmaW5lZCBsaWtlIHRoaXMgYmVjYXVzZSB0aGVzZSBuZWVkIHRvIGJlIGF2YWlsYWJsZSBmb3IgcmVmZXJlbmNlXG5cdFx0XHRcdC8vIGluIHRoZSBjbGljayBldmVudCBoYW5kbGVyXG5cdFx0XHRcdG51bUFkZGVkOiAwLFxuXHRcdFx0XHRudW1SZW1vdmVkOiAwLFxuXHRcdFx0fTtcblx0XHRcdCRib2R5LmZpbmQoJ2J1dHRvbi50dy10YWctc3VibWl0JykuYWZ0ZXIoc3RhdHVzTm9kZSk7XG5cdFx0XHQvLyBmYWtlIGEgY2hhbmdlIGV2ZW50IG9uIHRoZSBzb3J0IGRyb3Bkb3duLCB0byBpbml0aWFsaXplIHRoZSB0YWcgbGlzdFxuXHRcdFx0Y29uc3QgZXZ0ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50Jyk7XG5cdFx0XHRldnQuaW5pdEV2ZW50KCdjaGFuZ2UnLCB0cnVlLCB0cnVlKTtcblx0XHRcdHJlc3VsdC5zb3J0b3JkZXIuZGlzcGF0Y2hFdmVudChldnQpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBSZWRpcmVjdHMgYW5kIGZpbGVzOiBBZGQgYSBsaW5rIHRvIGVhY2ggdGVtcGxhdGUncyBkZXNjcmlwdGlvbiBwYWdlXG5cdFx0XHRmb3IgKGNvbnN0IGNoZWNrYm94IG9mIE1vcmViaXRzLnF1aWNrRm9ybS5nZXRFbGVtZW50cyhyZXN1bHQsICd0YWdzJykpIHtcblx0XHRcdFx0Z2VuZXJhdGVMaW5rcyhjaGVja2JveCk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHQvLyAkYWxsQ2hlY2tib3hEaXZzIGFuZCAkYWxsSGVhZGVycyBhcmUgZGVmaW5lZCBnbG9iYWxseSwgcmF0aGVyIHRoYW4gaW4gdGhlXG5cdC8vIHF1aWNrZmlsdGVyIGV2ZW50IGZ1bmN0aW9uLCB0byBhdm9pZCBoYXZpbmcgdG8gcmVjb21wdXRlIHRoZW0gb24gZXZlcnkga2V5ZG93blxuXHRsZXQgJGFsbENoZWNrYm94RGl2cztcblx0bGV0ICRhbGxIZWFkZXJzO1xuXHRUd2lua2xlLnRhZy51cGRhdGVTb3J0T3JkZXIgPSAoZSkgPT4ge1xuXHRcdGNvbnN0IHtmb3JtfSA9IGUudGFyZ2V0O1xuXHRcdGNvbnN0IHNvcnRvcmRlciA9IGUudGFyZ2V0LnZhbHVlO1xuXHRcdFR3aW5rbGUudGFnLmNoZWNrZWRUYWdzID0gZm9ybS5nZXRDaGVja2VkKCd0YWdzJyk7XG5cdFx0Y29uc3QgY29udGFpbmVyID0gbmV3IE1vcmViaXRzLnF1aWNrRm9ybS5lbGVtZW50KHtcblx0XHRcdHR5cGU6ICdmcmFnbWVudCcsXG5cdFx0fSk7XG5cdFx0Ly8gZnVuY3Rpb24gdG8gZ2VuZXJhdGUgYSBjaGVja2JveCwgd2l0aCBhcHByb3ByaWF0ZSBzdWJncm91cCBpZiBuZWVkZWRcblx0XHRjb25zdCBtYWtlQ2hlY2tib3ggPSAodGFnLCBkZXNjcmlwdGlvbikgPT4ge1xuXHRcdFx0Y29uc3QgY2hlY2tib3ggPSB7XG5cdFx0XHRcdHZhbHVlOiB0YWcsXG5cdFx0XHRcdGxhYmVsOiBge3ske3RhZ319fTogJHtkZXNjcmlwdGlvbn1gLFxuXHRcdFx0fTtcblx0XHRcdGlmIChUd2lua2xlLnRhZy5jaGVja2VkVGFncy5pbmNsdWRlcyh0YWcpKSB7XG5cdFx0XHRcdGNoZWNrYm94LmNoZWNrZWQgPSB0cnVlO1xuXHRcdFx0fVxuXHRcdFx0c3dpdGNoICh0YWcpIHtcblx0XHRcdFx0Y2FzZSAnRXhwZXJ0IG5lZWRlZCc6XG5cdFx0XHRcdFx0Y2hlY2tib3guc3ViZ3JvdXAgPSBbXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdG5hbWU6ICdleHBlcnQnLFxuXHRcdFx0XHRcdFx0XHR0eXBlOiAnaW5wdXQnLFxuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflk6rkuKrpoobln5/nmoTkuJPlrrbvvIjlv4XloavvvInvvJonLCAn5ZOq5YCL6aCY5Z+f55qE5bCI5a6277yI5b+F5aGr77yJ77yaJyksXG5cdFx0XHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn5b+F5aGr77yM5Y+v5Y+C6ICDIENhdGVnb3J5OumcgOimgeS4k+S4muS6uuWjq+WFs+azqOeahOmhtemdoiDkvb/nlKjnjrDlrZjnmoTliIbnsbvjgIInLFxuXHRcdFx0XHRcdFx0XHRcdCflv4XloavvvIzlj6/lj4PogIMgQ2F0ZWdvcnk66ZyA6KaB5bCI5qWt5Lq65aOr6Zec5rOo55qE6aCB6Z2iIOS9v+eUqOePvuWtmOeahOWIhumhnuOAgidcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdG5hbWU6ICdleHBlcnQyJyxcblx0XHRcdFx0XHRcdFx0dHlwZTogJ2lucHV0Jyxcblx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5ZOq5Liq6aKG5Z+f55qE5LiT5a6277yaJywgJ+WTquWAi+mgmOWfn+eahOWwiOWutu+8micpLFxuXHRcdFx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+WPr+mAie+8jOWPr+WPguiAgyBDYXRlZ29yeTrpnIDopoHkuJPkuJrkurrlo6vlhbPms6jnmoTpobXpnaIg5L2/55So546w5a2Y55qE5YiG57G744CCJyxcblx0XHRcdFx0XHRcdFx0XHQn5Y+v6YG477yM5Y+v5Y+D6ICDIENhdGVnb3J5OumcgOimgeWwiOalreS6uuWjq+mXnOazqOeahOmggemdoiDkvb/nlKjnj77lrZjnmoTliIbpoZ7jgIInXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRuYW1lOiAnZXhwZXJ0MycsXG5cdFx0XHRcdFx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WTquS4qumihuWfn+eahOS4k+Wutu+8micsICflk6rlgIvpoJjln5/nmoTlsIjlrrbvvJonKSxcblx0XHRcdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCflj6/pgInvvIzlj6/lj4LogIMgQ2F0ZWdvcnk66ZyA6KaB5LiT5Lia5Lq65aOr5YWz5rOo55qE6aG16Z2iIOS9v+eUqOeOsOWtmOeahOWIhuexu+OAgicsXG5cdFx0XHRcdFx0XHRcdFx0J+WPr+mBuO+8jOWPr+WPg+iAgyBDYXRlZ29yeTrpnIDopoHlsIjmpa3kurrlo6vpl5zms6jnmoTpoIHpnaIg5L2/55So54++5a2Y55qE5YiG6aGe44CCJ1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRdO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlICdNZXJnZSc6XG5cdFx0XHRcdGNhc2UgJ01lcmdlIGZyb20nOlxuXHRcdFx0XHRjYXNlICdNZXJnZSB0byc6IHtcblx0XHRcdFx0XHRsZXQgb3RoZXJUYWdOYW1lID0gJ01lcmdlJztcblx0XHRcdFx0XHRzd2l0Y2ggKHRhZykge1xuXHRcdFx0XHRcdFx0Y2FzZSAnTWVyZ2UgZnJvbSc6XG5cdFx0XHRcdFx0XHRcdG90aGVyVGFnTmFtZSA9ICdNZXJnZSB0byc7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0Y2FzZSAnTWVyZ2UgdG8nOlxuXHRcdFx0XHRcdFx0XHRvdGhlclRhZ05hbWUgPSAnTWVyZ2UgZnJvbSc7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0Ly8gbm8gZGVmYXVsdFxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGNoZWNrYm94LnN1Ymdyb3VwID0gW1xuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRuYW1lOiAnbWVyZ2VUYXJnZXQnLFxuXHRcdFx0XHRcdFx0XHR0eXBlOiAnaW5wdXQnLFxuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflhbbku5bmnaHnm67vvJonLCAn5YW25LuW5qKd55uu77yaJyksXG5cdFx0XHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn5aaC5oyH5a6a5aSa5Liq5p2h55uu77yM6K+355So566h6YGT56ym5YiG6ZqU77ya5p2h55uu55SyfOadoeebruS5mScsXG5cdFx0XHRcdFx0XHRcdFx0J+WmguaMh+WumuWkmuWAi+aineebru+8jOiri+eUqOeuoemBk+espuWIhumalO+8muaineebrueUsnzmop3nm67kuZknXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0eXBlOiAnY2hlY2tib3gnLFxuXHRcdFx0XHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcdFx0bmFtZTogJ21lcmdlVGFnT3RoZXInLFxuXHRcdFx0XHRcdFx0XHRcdFx0bGFiZWw6IGDnlKh7eyR7b3RoZXJUYWdOYW1lfSR7d2luZG93LndnVUxTKCd9feagh+iusOWFtuS7luadoeebricsICd9feaomeiomOWFtuS7luaineebricpfWAsXG5cdFx0XHRcdFx0XHRcdFx0XHRjaGVja2VkOiB0cnVlLFxuXHRcdFx0XHRcdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQn5LuF5Zyo5Y+q6L6T5YWl5LqG5LiA5Liq5p2h55uu5ZCN5pe25Y+v55SoJyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0J+WDheWcqOWPqui8uOWFpeS6huS4gOWAi+aineebruWQjeaZguWPr+eUqCdcblx0XHRcdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdFx0XSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XTtcblx0XHRcdFx0XHRpZiAobXcuY29uZmlnLmdldCgnd2dOYW1lc3BhY2VOdW1iZXInKSA9PT0gMCkge1xuXHRcdFx0XHRcdFx0Y2hlY2tib3guc3ViZ3JvdXBbY2hlY2tib3guc3ViZ3JvdXAubGVuZ3RoXSA9IHtcblx0XHRcdFx0XHRcdFx0bmFtZTogJ21lcmdlUmVhc29uJyxcblx0XHRcdFx0XHRcdFx0dHlwZTogJ3RleHRhcmVhJyxcblx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHRg5ZCI5bm255CG55Sx77yI5Lya6KKr6LS05LiKJHt0YWcgPT09ICdNZXJnZSB0bycgPyAn5YW25LuWJyA6ICfov5knfeadoeebrueahOiuqOiuuumhte+8ie+8mmAsXG5cdFx0XHRcdFx0XHRcdFx0YOWQiOS9teeQhueUse+8iOacg+iiq+iyvOS4iiR7dGFnID09PSAnTWVyZ2UgdG8nID8gJ+WFtuS7licgOiAn6YCZJ33mop3nm67nmoToqI7oq5bpoIHvvInvvJpgXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn5Y+v6YCJ77yM5L2G5by654OI5o6o6I2Q44CC5aaC5LiN6ZyA6KaB6K+355WZ56m644CC5LuF5Zyo5Y+q6L6T5YWl5LqG5LiA5Liq5p2h55uu5ZCN5pe25Y+v55So44CCJyxcblx0XHRcdFx0XHRcdFx0XHQn5Y+v6YG477yM5L2G5by354OI5o6o6Jam44CC5aaC5LiN6ZyA6KaB6KuL55WZ56m644CC5YOF5Zyo5Y+q6Ly45YWl5LqG5LiA5YCL5qKd55uu5ZCN5pmC5Y+v55So44CCJ1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdFx0Y2FzZSAnTWlzc2luZyBpbmZvcm1hdGlvbic6XG5cdFx0XHRcdFx0Y2hlY2tib3guc3ViZ3JvdXAgPSB7XG5cdFx0XHRcdFx0XHRuYW1lOiAnbWlzc2luZ0luZm9ybWF0aW9uJyxcblx0XHRcdFx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfnvLrlsJHnmoTlhoXlrrnvvIjlv4XloavvvInvvJonLCAn57y65bCR55qE5YWn5a6577yI5b+F5aGr77yJ77yaJyksXG5cdFx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoJ+W/heWhq++8jOaYvuekuuS4uuKAnOe8uuWwkeacieWFs+KApuKApueahOS/oeaBr+OAguKAnScsICflv4XloavvvIzpoa/npLrngrrjgIznvLrlsJHmnInpl5zigKbigKbnmoTos4foqIrjgILjgI0nKSxcblx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlICdOb3RhYmlsaXR5Jzpcblx0XHRcdFx0XHRjaGVja2JveC5zdWJncm91cCA9IHtcblx0XHRcdFx0XHRcdG5hbWU6ICdub3RhYmlsaXR5Jyxcblx0XHRcdFx0XHRcdHR5cGU6ICdzZWxlY3QnLFxuXHRcdFx0XHRcdFx0bGlzdDogW1xuXHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0bGFiZWw6IGB7e05vdGFiaWxpdHl9fe+8miR7d2luZG93LndnVUxTKCfpgJrnlKjnmoTlhbPms6jluqbmjIflvJUnLCAn6YCa55So55qE6Zec5rOo5bqm5oyH5byVJyl9YCxcblx0XHRcdFx0XHRcdFx0XHR2YWx1ZTogJ25vbmUnLFxuXHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0bGFiZWw6IGB7e05vdGFiaWxpdHl8QXN0cm99fe+8miR7d2luZG93LndnVUxTKCflpKnkvZMnLCAn5aSp6auUJyl9YCxcblx0XHRcdFx0XHRcdFx0XHR2YWx1ZTogJ0FzdHJvJyxcblx0XHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcdGxhYmVsOiBge3tOb3RhYmlsaXR5fEJpb2dyYXBoaWVzfX3vvJoke3dpbmRvdy53Z1VMUygn5Lq654mp5Lyg6K6wJywgJ+S6uueJqeWCs+iomCcpfWAsXG5cdFx0XHRcdFx0XHRcdFx0dmFsdWU6ICdCaW9ncmFwaGllcycsXG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHRsYWJlbDogYHt7Tm90YWJpbGl0eXxCb29rfX3vvJoke3dpbmRvdy53Z1VMUygn5Lmm57GNJywgJ+abuOexjScpfWAsXG5cdFx0XHRcdFx0XHRcdFx0dmFsdWU6ICdCb29rJyxcblx0XHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcdGxhYmVsOiBge3tOb3RhYmlsaXR5fEN5Y2xvbmV9fe+8miR7d2luZG93LndnVUxTKCfmsJTml4snLCAn5rCj5peLJyl9YCxcblx0XHRcdFx0XHRcdFx0XHR2YWx1ZTogJ0N5Y2xvbmUnLFxuXHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0bGFiZWw6IGB7e05vdGFiaWxpdHl8RmljdGlvbn1977yaJHt3aW5kb3cud2dVTFMoJ+iZmuaehOS6i+eJqScsICfomZvmp4vkuovniaknKX1gLFxuXHRcdFx0XHRcdFx0XHRcdHZhbHVlOiAnRmljdGlvbicsXG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHRsYWJlbDogYHt7Tm90YWJpbGl0eXxHZW9ncmFwaGljfX3vvJoke3dpbmRvdy53Z1VMUygn5Zyw55CG54m55b6BJywgJ+WcsOeQhueJueW+tScpfWAsXG5cdFx0XHRcdFx0XHRcdFx0dmFsdWU6ICdHZW9ncmFwaGljJyxcblx0XHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcdGxhYmVsOiBge3tOb3RhYmlsaXR5fEdlb21ldHJ5fX3vvJoke3dpbmRvdy53Z1VMUygn5Yeg5L2V5Zu+5b2iJywgJ+W5vuS9leWcluW9oicpfWAsXG5cdFx0XHRcdFx0XHRcdFx0dmFsdWU6ICdHZW9tZXRyeScsXG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHRsYWJlbDogYHt7Tm90YWJpbGl0eXxJbnZlbnRpb259fe+8miR7d2luZG93LndnVUxTKCflj5HmmI7jgIHnoJTnqbYnLCAn55m85piO44CB56CU56m2Jyl9YCxcblx0XHRcdFx0XHRcdFx0XHR2YWx1ZTogJ0ludmVudGlvbicsXG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHRsYWJlbDogYHt7Tm90YWJpbGl0eXxNdXNpY31977yaJHt3aW5kb3cud2dVTFMoJ+mfs+S5kCcsICfpn7PmqIInKX1gLFxuXHRcdFx0XHRcdFx0XHRcdHZhbHVlOiAnTXVzaWMnLFxuXHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0bGFiZWw6IGB7e05vdGFiaWxpdHl8TnVtYmVyc31977yaJHt3aW5kb3cud2dVTFMoJ+aVsOWtlycsICfmlbjlrZcnKX1gLFxuXHRcdFx0XHRcdFx0XHRcdHZhbHVlOiAnTnVtYmVycycsXG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHRsYWJlbDogYHt7Tm90YWJpbGl0eXxPcmdhbml6YXRpb25zfX3vvJoke3dpbmRvdy53Z1VMUygn57uE57uHJywgJ+e1hOe5lCcpfWAsXG5cdFx0XHRcdFx0XHRcdFx0dmFsdWU6ICdPcmdhbml6YXRpb25zJyxcblx0XHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcdGxhYmVsOiBge3tOb3RhYmlsaXR5fFByb3BlcnR5fX3vvJoke3dpbmRvdy53Z1VMUygn5oCn6LSo6KGoJywgJ+aAp+izquihqCcpfWAsXG5cdFx0XHRcdFx0XHRcdFx0dmFsdWU6ICdQcm9wZXJ0eScsXG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHRsYWJlbDogJ3t7Tm90YWJpbGl0eXxUcmFmZmljfX3vvJrkuqTpgJonLFxuXHRcdFx0XHRcdFx0XHRcdHZhbHVlOiAnVHJhZmZpYycsXG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHRsYWJlbDogYHt7Tm90YWJpbGl0eXxXZWJ9fe+8miR7d2luZG93LndnVUxTKCfnvZHnq5njgIHnvZHnu5zlhoXlrrknLCAn57ay56uZ44CB57ay6Lev5YWn5a65Jyl977yI6Z2e5q2j5byP5oyH5byV77yJYCxcblx0XHRcdFx0XHRcdFx0XHR2YWx1ZTogJ1dlYicsXG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRdLFxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgJ1JlcXVlc3RlZCBtb3ZlJzpcblx0XHRcdFx0XHRjaGVja2JveC5zdWJncm91cCA9IFtcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0bmFtZTogJ21vdmVUYXJnZXQnLFxuXHRcdFx0XHRcdFx0XHR0eXBlOiAnaW5wdXQnLFxuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmlrDlkI3np7DvvJonLCAn5paw5ZCN56ix77yaJyksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRuYW1lOiAnbW92ZVJlYXNvbicsXG5cdFx0XHRcdFx0XHRcdHR5cGU6ICd0ZXh0YXJlYScsXG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+enu+WKqOeQhueUse+8iOS8muiiq+eymOi0tOivpeadoeebrueahOiuqOiuuumhte+8ie+8micsXG5cdFx0XHRcdFx0XHRcdFx0J+enu+WLleeQhueUse+8iOacg+iiq+iyvOS4iuipsuaineebrueahOiojuirlumgge+8ie+8midcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCflj6/pgInvvIzkvYblvLrng4jmjqjojZDjgILlpoLkuI3pnIDopoHor7fnlZnnqbrjgIInLFxuXHRcdFx0XHRcdFx0XHRcdCflj6/pgbjvvIzkvYblvLfng4jmjqjolqbjgILlpoLkuI3pnIDopoHoq4vnlZnnqbrjgIInXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdF07XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgJ1NwbGl0Jzpcblx0XHRcdFx0XHRjaGVja2JveC5zdWJncm91cCA9IFtcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0bmFtZTogJ3RhcmdldDEnLFxuXHRcdFx0XHRcdFx0XHR0eXBlOiAnaW5wdXQnLFxuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfpobXpnaLlkI0x77yaJywgJ+mggemdouWQjTHvvJonKSxcblx0XHRcdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKCflj6/pgInjgIInLCAn5Y+v6YG444CCJyksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRuYW1lOiAndGFyZ2V0MicsXG5cdFx0XHRcdFx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+mhtemdouWQjTLvvJonLCAn6aCB6Z2i5ZCNMu+8micpLFxuXHRcdFx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoJ+WPr+mAieOAgicsICflj6/pgbjjgIInKSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdG5hbWU6ICd0YXJnZXQzJyxcblx0XHRcdFx0XHRcdFx0dHlwZTogJ2lucHV0Jyxcblx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6aG16Z2i5ZCNM++8micsICfpoIHpnaLlkI0z77yaJyksXG5cdFx0XHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUygn5Y+v6YCJ44CCJywgJ+WPr+mBuOOAgicpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRdO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlICdDbGVhbnVwJzpcblx0XHRcdFx0XHRjaGVja2JveC5zdWJncm91cCA9IFtcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0bmFtZTogJ2NsZWFudXBSZWFzb24nLFxuXHRcdFx0XHRcdFx0XHR0eXBlOiAnaW5wdXQnLFxuXHRcdFx0XHRcdFx0XHRsYWJlbDogJ+mcgOimgea4heeQhueahOeQhueUsScsXG5cdFx0XHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn5Y+v6YCJ77yM5L2G5by654OI5o6o6I2Q44CC5aaC5LiN6ZyA6KaB6K+355WZ56m644CCJyxcblx0XHRcdFx0XHRcdFx0XHQn5Y+v6YG477yM5L2G5by354OI5o6o6Jam44CC5aaC5LiN6ZyA6KaB6KuL55WZ56m644CCJ1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRdO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGNoZWNrYm94O1xuXHRcdH07XG5cdFx0Y29uc3QgbWFrZUNoZWNrYm94ZXNGb3JBbHJlYWR5UHJlc2VudFRhZ3MgPSAoKSA9PiB7XG5cdFx0XHRjb250YWluZXIuYXBwZW5kKHtcblx0XHRcdFx0dHlwZTogJ2hlYWRlcicsXG5cdFx0XHRcdGlkOiAndGFnSGVhZGVyMCcsXG5cdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+W3suaUvue9rueahOe7tOaKpOagh+iusCcsICflt7LmlL7nva7nmoTntq3orbfmqJnoqJgnKSxcblx0XHRcdH0pO1xuXHRcdFx0Y29uc3Qgc3ViZGl2ID0gY29udGFpbmVyLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0XHRpZDogJ3RhZ1N1YmRpdjAnLFxuXHRcdFx0fSk7XG5cdFx0XHRjb25zdCBjaGVja2JveGVzID0gW107XG5cdFx0XHRjb25zdCB1bkNoZWNrZWRUYWdzID0gZS50YXJnZXQuZm9ybS5nZXRVbmNoZWNrZWQoJ2V4aXN0aW5nVGFncycpO1xuXHRcdFx0Zm9yIChjb25zdCB0YWcgb2YgVHdpbmtsZS50YWcuYWxyZWFkeVByZXNlbnRUYWdzKSB7XG5cdFx0XHRcdGNvbnN0IGNoZWNrYm94ID0ge1xuXHRcdFx0XHRcdHZhbHVlOiB0YWcsXG5cdFx0XHRcdFx0bGFiZWw6IGB7eyR7dGFnfX19JHtcblx0XHRcdFx0XHRcdFR3aW5rbGUudGFnLmFydGljbGUuZmxhdE9iamVjdFt0YWddXG5cdFx0XHRcdFx0XHRcdD8gYDogJHtUd2lua2xlLnRhZy5hcnRpY2xlLmZsYXRPYmplY3RbdGFnXS5kZXNjcmlwdGlvbn1gXG5cdFx0XHRcdFx0XHRcdDogJydcblx0XHRcdFx0XHR9YCxcblx0XHRcdFx0XHRjaGVja2VkOiAhdW5DaGVja2VkVGFncy5pbmNsdWRlcyh0YWcpLFxuXHRcdFx0XHR9O1xuXHRcdFx0XHRjaGVja2JveGVzW2NoZWNrYm94ZXMubGVuZ3RoXSA9IGNoZWNrYm94O1xuXHRcdFx0fVxuXHRcdFx0c3ViZGl2LmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdG5hbWU6ICdleGlzdGluZ1RhZ3MnLFxuXHRcdFx0XHRsaXN0OiBjaGVja2JveGVzLFxuXHRcdFx0fSk7XG5cdFx0fTtcblx0XHRpZiAoc29ydG9yZGVyID09PSAnY2F0Jykge1xuXHRcdFx0Ly8gY2F0ZWdvcmljYWwgc29ydCBvcmRlclxuXHRcdFx0Ly8gZnVuY3Rpb24gdG8gaXRlcmF0ZSB0aHJvdWdoIHRoZSB0YWdzIGFuZCBjcmVhdGUgYSBjaGVja2JveCBmb3IgZWFjaCBvbmVcblx0XHRcdGNvbnN0IGRvQ2F0ZWdvcnlDaGVja2JveGVzID0gKHN1YmRpdiwgc3ViZ3JvdXApID0+IHtcblx0XHRcdFx0Y29uc3QgY2hlY2tib3hlcyA9IFtdO1xuXHRcdFx0XHRmb3IgKGNvbnN0IGl0ZW0gb2Ygc3ViZ3JvdXApIHtcblx0XHRcdFx0XHRpZiAoIVR3aW5rbGUudGFnLmFscmVhZHlQcmVzZW50VGFncy5pbmNsdWRlcyhpdGVtLnRhZykpIHtcblx0XHRcdFx0XHRcdGNoZWNrYm94ZXNbY2hlY2tib3hlcy5sZW5ndGhdID0gbWFrZUNoZWNrYm94KGl0ZW0udGFnLCBpdGVtLmRlc2NyaXB0aW9uKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0c3ViZGl2LmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdFx0XHRuYW1lOiAndGFncycsXG5cdFx0XHRcdFx0bGlzdDogY2hlY2tib3hlcyxcblx0XHRcdFx0fSk7XG5cdFx0XHR9O1xuXHRcdFx0aWYgKFR3aW5rbGUudGFnLmFscmVhZHlQcmVzZW50VGFncy5sZW5ndGggPiAwKSB7XG5cdFx0XHRcdG1ha2VDaGVja2JveGVzRm9yQWxyZWFkeVByZXNlbnRUYWdzKCk7XG5cdFx0XHR9XG5cdFx0XHRsZXQgaSA9IDE7XG5cdFx0XHQvLyBnbyB0aHJvdWdoIGVhY2ggY2F0ZWdvcnkgYW5kIHN1Yi1jYXRlZ29yeSBhbmQgYXBwZW5kIGxpc3RzIG9mIGNoZWNrYm94ZXNcblx0XHRcdGZvciAoY29uc3QgZ3JvdXAgb2YgVHdpbmtsZS50YWcuYXJ0aWNsZS50YWdMaXN0KSB7XG5cdFx0XHRcdGNvbnRhaW5lci5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdoZWFkZXInLFxuXHRcdFx0XHRcdGlkOiBgdGFnSGVhZGVyJHtpfWAsXG5cdFx0XHRcdFx0bGFiZWw6IGdyb3VwLmtleSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGNvbnN0IHN1YmRpdiA9IGNvbnRhaW5lci5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0XHRcdGlkOiBgdGFnU3ViZGl2JHtpKyt9YCxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGlmIChncm91cC52YWx1ZVswXS50YWcpIHtcblx0XHRcdFx0XHRkb0NhdGVnb3J5Q2hlY2tib3hlcyhzdWJkaXYsIGdyb3VwLnZhbHVlKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRmb3IgKGNvbnN0IHN1Ymdyb3VwIG9mIGdyb3VwLnZhbHVlKSB7XG5cdFx0XHRcdFx0XHRzdWJkaXYuYXBwZW5kKHtcblx0XHRcdFx0XHRcdFx0dHlwZTogJ2RpdicsXG5cdFx0XHRcdFx0XHRcdGxhYmVsOiBbTW9yZWJpdHMuaHRtbE5vZGUoJ2InLCBzdWJncm91cC5rZXkpXSxcblx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0ZG9DYXRlZ29yeUNoZWNrYm94ZXMoc3ViZGl2LCBzdWJncm91cC52YWx1ZSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIGFscGhhYmV0aWNhbCBzb3J0IG9yZGVyXG5cdFx0XHRpZiAoVHdpbmtsZS50YWcuYWxyZWFkeVByZXNlbnRUYWdzLmxlbmd0aCA+IDApIHtcblx0XHRcdFx0bWFrZUNoZWNrYm94ZXNGb3JBbHJlYWR5UHJlc2VudFRhZ3MoKTtcblx0XHRcdFx0Y29udGFpbmVyLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2hlYWRlcicsXG5cdFx0XHRcdFx0aWQ6ICd0YWdIZWFkZXIxJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflj6/nlKjnmoTnu7TmiqTmoIforrAnLCAn5Y+v55So55qE57at6K235qiZ6KiYJyksXG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXHRcdFx0Ly8gQXZvaWQgcmVwZWF0ZWRseSByZXNvcnRpbmdcblx0XHRcdFR3aW5rbGUudGFnLmFydGljbGUuYWxwaGFiZXRpY2FsTGlzdCB8fD0gT2JqZWN0LmtleXMoVHdpbmtsZS50YWcuYXJ0aWNsZS5mbGF0T2JqZWN0KS5zb3J0KCk7XG5cdFx0XHRjb25zdCBjaGVja2JveGVzID0gW107XG5cdFx0XHRmb3IgKGNvbnN0IHRhZyBvZiBUd2lua2xlLnRhZy5hcnRpY2xlLmFscGhhYmV0aWNhbExpc3QpIHtcblx0XHRcdFx0aWYgKCFUd2lua2xlLnRhZy5hbHJlYWR5UHJlc2VudFRhZ3MuaW5jbHVkZXModGFnKSkge1xuXHRcdFx0XHRcdGNoZWNrYm94ZXNbY2hlY2tib3hlcy5sZW5ndGhdID0gbWFrZUNoZWNrYm94KHRhZywgVHdpbmtsZS50YWcuYXJ0aWNsZS5mbGF0T2JqZWN0W3RhZ10uZGVzY3JpcHRpb24pO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRjb250YWluZXIuYXBwZW5kKHtcblx0XHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdFx0bmFtZTogJ3RhZ3MnLFxuXHRcdFx0XHRsaXN0OiBjaGVja2JveGVzLFxuXHRcdFx0fSk7XG5cdFx0fVxuXHRcdC8vIGFwcGVuZCBhbnkgY3VzdG9tIHRhZ3Ncblx0XHRpZiAoVHdpbmtsZS5nZXRQcmVmKCdjdXN0b21UYWdMaXN0JykubGVuZ3RoKSB7XG5cdFx0XHRjb250YWluZXIuYXBwZW5kKHtcblx0XHRcdFx0dHlwZTogJ2hlYWRlcicsXG5cdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+iHquWumuS5ieaooeadvycsICfoh6roqILmqKHmnb8nKSxcblx0XHRcdH0pO1xuXHRcdFx0Y29udGFpbmVyLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdG5hbWU6ICd0YWdzJyxcblx0XHRcdFx0bGlzdDogVHdpbmtsZS5nZXRQcmVmKCdjdXN0b21UYWdMaXN0JykubWFwKChlbCkgPT4ge1xuXHRcdFx0XHRcdGVsLmNoZWNrZWQgPSBUd2lua2xlLnRhZy5jaGVja2VkVGFncy5pbmNsdWRlcyhlbC52YWx1ZSk7XG5cdFx0XHRcdFx0cmV0dXJuIGVsO1xuXHRcdFx0XHR9KSxcblx0XHRcdH0pO1xuXHRcdH1cblx0XHRjb25zdCAkd29ya2FyZWEgPSAkKGZvcm0pLmZpbmQoJyN0YWdXb3JrQXJlYScpO1xuXHRcdGNvbnN0IHJlbmRlcmVkID0gY29udGFpbmVyLnJlbmRlcigpO1xuXHRcdCR3b3JrYXJlYS5lbXB0eSgpLmFwcGVuZChyZW5kZXJlZCk7XG5cdFx0Ly8gZm9yIHF1aWNrIGZpbHRlcjpcblx0XHQkYWxsQ2hlY2tib3hEaXZzID0gJHdvcmthcmVhLmZpbmQoJ1tuYW1lPXRhZ3NdLCBbbmFtZT1leGlzdGluZ1RhZ3NdJykucGFyZW50KCk7XG5cdFx0JGFsbEhlYWRlcnMgPSAkd29ya2FyZWEuZmluZCgnaDUsIC5xdWlja2Zvcm1EZXNjcmlwdGlvbicpO1xuXHRcdGZvcm0ucXVpY2tmaWx0ZXIudmFsdWUgPSAnJzsgLy8gY2xlYXIgc2VhcmNoLCBiZWNhdXNlIHRoZSBzZWFyY2ggcmVzdWx0cyBhcmUgbm90IHByZXNlcnZlZCBvdmVyIG1vZGUgY2hhbmdlXG5cdFx0Zm9ybS5xdWlja2ZpbHRlci5mb2N1cygpO1xuXHRcdC8vIHN0eWxlIGFkanVzdG1lbnRzXG5cdFx0JHdvcmthcmVhLmZpbmQoJ2g1JykuY3NzKHtcblx0XHRcdCdmb250LXNpemUnOiAnMTEwJScsXG5cdFx0fSk7XG5cdFx0JHdvcmthcmVhLmZpbmQoJ2g1Om5vdCg6Zmlyc3QtY2hpbGQpJykuY3NzKHtcblx0XHRcdCdtYXJnaW4tdG9wJzogJzFlbScsXG5cdFx0fSk7XG5cdFx0JHdvcmthcmVhLmZpbmQoJ2RpdicpLmZpbHRlcignOmhhcyhzcGFuLnF1aWNrZm9ybURlc2NyaXB0aW9uKScpLmNzcyh7XG5cdFx0XHQnbWFyZ2luLXRvcCc6ICcwLjRlbScsXG5cdFx0fSk7XG5cdFx0Zm9yIChjb25zdCBjaGVja2JveCBvZiBNb3JlYml0cy5xdWlja0Zvcm0uZ2V0RWxlbWVudHMoZm9ybSwgJ2V4aXN0aW5nVGFncycpKSB7XG5cdFx0XHRnZW5lcmF0ZUxpbmtzKGNoZWNrYm94KTtcblx0XHR9XG5cdFx0Zm9yIChjb25zdCBjaGVja2JveCBvZiBNb3JlYml0cy5xdWlja0Zvcm0uZ2V0RWxlbWVudHMoZm9ybSwgJ3RhZ3MnKSkge1xuXHRcdFx0Z2VuZXJhdGVMaW5rcyhjaGVja2JveCk7XG5cdFx0fVxuXHRcdC8vIHRhbGx5IHRhZ3MgYWRkZWQvcmVtb3ZlZCwgdXBkYXRlIHN0YXR1c05vZGUgdGV4dFxuXHRcdGNvbnN0IHN0YXR1c05vZGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdHctdGFnLXN0YXR1cycpO1xuXHRcdCRib2R5LmZpbmQoJ1tuYW1lPXRhZ3NdLCBbbmFtZT1leGlzdGluZ1RhZ3NdJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuXHRcdFx0aWYgKHRoaXMubmFtZSA9PT0gJ3RhZ3MnKSB7XG5cdFx0XHRcdFR3aW5rbGUudGFnLnN0YXR1cy5udW1BZGRlZCArPSB0aGlzLmNoZWNrZWQgPyAxIDogLTE7XG5cdFx0XHR9IGVsc2UgaWYgKHRoaXMubmFtZSA9PT0gJ2V4aXN0aW5nVGFncycpIHtcblx0XHRcdFx0VHdpbmtsZS50YWcuc3RhdHVzLm51bVJlbW92ZWQgKz0gdGhpcy5jaGVja2VkID8gLTEgOiAxO1xuXHRcdFx0fVxuXHRcdFx0Y29uc3QgZmlyc3RQYXJ0ID0gYOWKoOWFpSR7VHdpbmtsZS50YWcuc3RhdHVzLm51bUFkZGVkfSR7d2luZG93LndnVUxTKCfkuKrmoIforrAnLCAn5YCL5qiZ6KiYJyl9YDtcblx0XHRcdGNvbnN0IHNlY29uZFBhcnQgPSBg56e76ZmkJHtUd2lua2xlLnRhZy5zdGF0dXMubnVtUmVtb3ZlZH0ke3dpbmRvdy53Z1VMUygn5Liq5qCH6K6wJywgJ+WAi+aomeiomCcpfWA7XG5cdFx0XHRzdGF0dXNOb2RlLnRleHRDb250ZW50ID1cblx0XHRcdFx0KFR3aW5rbGUudGFnLnN0YXR1cy5udW1BZGRlZCA/IGAgICR7Zmlyc3RQYXJ0fWAgOiAnJykgK1xuXHRcdFx0XHQoVHdpbmtsZS50YWcuc3RhdHVzLm51bVJlbW92ZWQgPyAoVHdpbmtsZS50YWcuc3RhdHVzLm51bUFkZGVkID8gJ++8mycgOiAnICAnKSArIHNlY29uZFBhcnQgOiAnJyk7XG5cdFx0fSk7XG5cdH07XG5cdC8qKlxuXHQgKiBBZGRzIGEgbGluayB0byBlYWNoIHRlbXBsYXRlJ3MgZGVzY3JpcHRpb24gcGFnZVxuXHQgKlxuXHQgKiBAcGFyYW0ge01vcmViaXRzLnF1aWNrRm9ybS5lbGVtZW50fSBjaGVja2JveCAgYXNzb2NpYXRlZCB3aXRoIHRoZSB0ZW1wbGF0ZVxuXHQgKi9cblx0Y29uc3QgZ2VuZXJhdGVMaW5rcyA9IChjaGVja2JveCkgPT4ge1xuXHRcdGNvbnN0IGxpbmsgPSBNb3JlYml0cy5odG1sTm9kZSgnYScsICc+Jyk7XG5cdFx0bGluay5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ3RhZy10ZW1wbGF0ZS1saW5rJyk7XG5cdFx0Y29uc3QgdGFnbmFtZSA9IGNoZWNrYm94LnZhbHVlcztcblx0XHRsaW5rLnNldEF0dHJpYnV0ZShcblx0XHRcdCdocmVmJyxcblx0XHRcdG13LnV0aWwuZ2V0VXJsKFxuXHRcdFx0XHQodGFnbmFtZS5pbmNsdWRlcygnOicpID8gJycgOiAnVGVtcGxhdGU6JykgK1xuXHRcdFx0XHRcdCh0YWduYW1lLmluY2x1ZGVzKCd8JykgPyB0YWduYW1lLnNsaWNlKDAsIHRhZ25hbWUuaW5kZXhPZignfCcpKSA6IHRhZ25hbWUpXG5cdFx0XHQpXG5cdFx0KTtcblx0XHRsaW5rLnNldEF0dHJpYnV0ZSgndGFyZ2V0JywgJ19ibGFuaycpO1xuXHRcdGxpbmsuc2V0QXR0cmlidXRlKCdyZWwnLCAnbm9vcGVuZXIgbm9yZWZlcnJlcicpO1xuXHRcdCQoY2hlY2tib3gpLnBhcmVudCgpLmFwcGVuZChbJ1xcdTAwQTAnLCBsaW5rXSk7XG5cdH07XG5cdC8vIFRhZ3MgZm9yIEFSVElDTEVTIHN0YXJ0IGhlcmVcblx0VHdpbmtsZS50YWcuYXJ0aWNsZSA9IHt9O1xuXHQvLyBUYWdzIGFycmFuZ2VkIGJ5IGNhdGVnb3J5OyB3aWxsIGJlIHVzZWQgdG8gZ2VuZXJhdGUgdGhlIGFscGhhYmV0aWNhbCBsaXN0LFxuXHQvLyBidXQgdGFncyBzaG91bGQgYmUgaW4gYWxwaGFiZXRpY2FsIG9yZGVyIHdpdGhpbiB0aGUgY2F0ZWdvcmllc1xuXHQvLyBleGNsdWRlTUk6IHRydWUgaW5kaWNhdGUgYSB0YWcgdGhhdCAqZG9lcyBub3QqIHdvcmsgaW5zaWRlIHt7bXVsdGlwbGUgaXNzdWVzfX1cblx0Ly8gQWRkIG5ldyBjYXRlZ29yaWVzIHdpdGggZGlzY3JldGlvbiAtIHRoZSBsaXN0IGlzIGxvbmcgZW5vdWdoIGFzIGlzIVxuXHRUd2lua2xlLnRhZy5hcnRpY2xlLnRhZ0xpc3QgPSBbXG5cdFx0e1xuXHRcdFx0a2V5OiB3aW5kb3cud2dVTFMoJ+a4heeQhuWSjOe7tOaKpOaooeadvycsICfmuIXnkIblkozntq3orbfmqKHmnb8nKSxcblx0XHRcdHZhbHVlOiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRrZXk6IHdpbmRvdy53Z1VMUygn5bi46KeE5riF55CGJywgJ+W4uOimj+a4heeQhicpLFxuXHRcdFx0XHRcdHZhbHVlOiBbXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ0NsZWFudXAnLFxuXHRcdFx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCflj6/og73pnIDopoHov5vooYzmuIXnkIbvvIzku6XnrKblkIjmsYLpl7vnmb7np5HnmoTotKjph4/moIflh4YnLFxuXHRcdFx0XHRcdFx0XHRcdCflj6/og73pnIDopoHpgLLooYzmuIXnkIbvvIzku6XnrKblkIjmsYLogZ7nmb7np5HnmoTos6rph4/mqJnmupYnXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0YWc6ICdDbGVhbnVwIHJld3JpdGUnLFxuXHRcdFx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCfkuI3nrKblkIjmsYLpl7vnmb7np5HnmoTotKjph4/moIflh4bvvIzpnIDopoHlrozlhajph43lhpknLFxuXHRcdFx0XHRcdFx0XHRcdCfkuI3nrKblkIjmsYLogZ7nmb7np5HnmoTos6rph4/mqJnmupbvvIzpnIDopoHlrozlhajph43lr6snXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0YWc6ICdDbGVhbnVwLWphcmdvbicsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+WMheWQq+i/h+WkmuihjOivneaIluS4k+S4muacr+ivre+8jOWPr+iDvemcgOimgeeugOWMluaIluaPkOWHuui/m+S4gOatpeino+mHiicsXG5cdFx0XHRcdFx0XHRcdFx0J+WMheWQq+mBjuWkmuihjOipseaIluWwiOalreihk+iqnu+8jOWPr+iDvemcgOimgeewoeWMluaIluaPkOWHuumAsuS4gOatpeino+mHiydcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ0NvcHkgZWRpdCcsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+mcgOimgee8luS/ru+8jOS7peehruS/neaWh+azleOAgeeUqOivjeOAgeivreawlOOAgeagvOW8j+OAgeagh+eCueetieS9v+eUqOaBsOW9kycsXG5cdFx0XHRcdFx0XHRcdFx0J+mcgOimgee3qOS/ru+8jOS7peeiuuS/neaWh+azleOAgeeUqOipnuOAgeiqnuawo+OAgeagvOW8j+OAgeaomem7nuetieS9v+eUqOaBsOeVtidcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGtleTogd2luZG93LndnVUxTKCflj6/og73lpJrkvZnnmoTlhoXlrrknLCAn5Y+v6IO95aSa6aSY55qE5YWn5a65JyksXG5cdFx0XHRcdFx0dmFsdWU6IFtcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0dGFnOiAnQ29weXBhc3RlJyxcblx0XHRcdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn5YaF5a655Y+v6IO95piv5LuO5p+Q5Liq5p2l5rqQ5aSE5ou36LSd5ZCO57KY6LS0Jyxcblx0XHRcdFx0XHRcdFx0XHQn5YWn5a655Y+v6IO95piv5b6e5p+Q5YCL5L6G5rqQ6JmV5ou36LKd5b6M6LK85LiKJ1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0dGFnOiAnRXh0ZXJuYWwgbGlua3MnLFxuXHRcdFx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCfkvb/nlKjlpJbpg6jpk77mjqXnmoTmlrnlvI/lj6/og73kuI3nrKblkIjmsYLpl7vnmb7np5HnmoTmlrnpkognLFxuXHRcdFx0XHRcdFx0XHRcdCfkvb/nlKjlpJbpg6jpgKPntZDnmoTmlrnlvI/lj6/og73kuI3nrKblkIjmsYLogZ7nmb7np5HnmoTmlrnph50nXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0YWc6ICdOb24tZnJlZScsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+WPr+iDvei/h+WkmuaIluS4jeW9k+WcsOS9v+eUqOS6huWPl+iRl+S9nOadg+S/neaKpOeahOaWh+Wtl+OAgeWbvuWDj+aIluWkmuWqkuS9k+aWh+S7ticsXG5cdFx0XHRcdFx0XHRcdFx0J+WPr+iDvemBjuWkmuaIluS4jeeVtuWcsOS9v+eUqOS6huWPl+eJiOasiuS/neitt+eahOaWh+Wtl+OAgeWcluWDj+aIluWkmuWqkumrlOaqlOahiCdcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGtleTogd2luZG93LndnVUxTKCfnu5PmnoTlkozlr7zoqIAnLCAn57WQ5qeL5ZKM5bCO6KiAJyksXG5cdFx0XHRcdFx0dmFsdWU6IFtcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0dGFnOiAnTGVhZCB0b28gbG9uZycsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoJ+WvvOiogOmDqOWIhuS5n+iuuOi/h+S6juWGl+mVvycsICflsI7oqIDpg6jliIbkuZ/oqLHpgY7mlrzlhpfplbcnKSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ0xlYWQgdG9vIHNob3J0Jyxcblx0XHRcdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUygn5a+86KiA6YOo5YiG5Lmf6K645LiN6Laz5Lul5qaC5ous5YW25YaF5a65JywgJ+WwjuiogOmDqOWIhuS5n+ioseS4jei2s+S7peamguaLrOWFtuWFp+WuuScpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0dGFnOiAnVmVyeSBsb25nJyxcblx0XHRcdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUygn5Y+v6IO96L+H5LqO5YaX6ZW/JywgJ+WPr+iDvemBjuaWvOWGl+mVtycpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRdLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0a2V5OiB3aW5kb3cud2dVTFMoJ+iZmuaehOS9nOWTgeebuOWFs+a4heeQhicsICfomZvmp4vkvZzlk4Hnm7jpl5zmuIXnkIYnKSxcblx0XHRcdFx0XHR2YWx1ZTogW1xuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0YWc6ICdJbi11bml2ZXJzZScsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+S9v+eUqOWwj+ivtOaVheS6i+WGheeahOingueCueaPj+i/sOS4gOS4quiZmuaehOS6i+eJqScsXG5cdFx0XHRcdFx0XHRcdFx0J+S9v+eUqOWwj+iqquaVheS6i+WFp+eahOingOm7nuaPj+i/sOS4gOWAi+iZm+ani+S6i+eJqSdcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ0xvbmcgcGxvdCcsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoJ+WPr+iDveWMheWQq+i/h+S6juivpue7hueahOWJp+aDheaRmOimgScsICflj6/og73ljIXlkKvpgY7mlrzoqbPntLDnmoTliofmg4XmkZjopoEnKSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XSxcblx0XHRcdFx0fSxcblx0XHRcdF0sXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRrZXk6IHdpbmRvdy53Z1VMUygn5bi46KeE5p2h55uu6Zeu6aKYJywgJ+W4uOimj+aineebruWVj+mhjCcpLFxuXHRcdFx0dmFsdWU6IFtcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGtleTogJ+mHjeimgeaAp+WSjOefpeWQjeW6picsXG5cdFx0XHRcdFx0dmFsdWU6IFtcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0dGFnOiAnTm90YWJpbGl0eScsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoJ+WPr+iDveS4jeespuWQiOmAmueUqOWFs+azqOW6puaMh+W8lScsICflj6/og73kuI3nrKblkIjpgJrnlKjpl5zms6jluqbmjIflvJUnKSxcblx0XHRcdFx0XHRcdFx0ZXhjbHVkZU1JOiB0cnVlLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0dGFnOiAnTm90YWJpbGl0eSBVbnJlZmVyZW5jZWQnLFxuXHRcdFx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCflj6/og73lhbflpIflhbPms6jluqbvvIzkvYbpnIDopoHmnaXmupDliqDku6XlvbDmmL4nLFxuXHRcdFx0XHRcdFx0XHRcdCflj6/og73lhbflgpnpl5zms6jluqbvvIzkvYbpnIDopoHkvobmupDliqDku6XlvbDpoa8nXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdF0sXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRrZXk6IHdpbmRvdy53Z1VMUygn5YaZ5L2c6aOO5qC8JywgJ+Wvq+S9nOmiqOagvCcpLFxuXHRcdFx0XHRcdHZhbHVlOiBbXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ0FkdmVydCcsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoJ+exu+S8vOW5v+WRiuaIluWuo+S8oOaAp+WGheWuuScsICfpoZ7kvLzlu6PlkYrmiJblrqPlgrPmgKflhaflrrknKSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ0ZhbnBvdicsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoJ+exu+S8vOeIseWlveiAhee9kemhtScsICfpoZ7kvLzmhJvlpb3ogIXntrLpoIEnKSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ0hvdy10bycsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoJ+WMheWQq+aMh+WNl+aIluaVmeWtpuWGheWuuScsICfljIXlkKvmjIfljZfmiJbmlZnlrbjlhaflrrknKSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ0luYXBwcm9wcmlhdGUgcGVyc29uJyxcblx0XHRcdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn5L2/55So5LiN6YCC5b2T55qE56ys5LiA5Lq656ew5ZKM56ys5LqM5Lq656ewJyxcblx0XHRcdFx0XHRcdFx0XHQn5L2/55So5LiN6YGp55W255qE56ys5LiA5Lq656ix5ZKM56ys5LqM5Lq656ixJ1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0dGFnOiAnTmV3c3JlbGVhc2UnLFxuXHRcdFx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCfpmIXor7votbfmnaXlg4/mmK/mlrDpl7vnqL/lj4rljIXlkKvov4fluqbnmoTlrqPkvKDmgKfor63osIMnLFxuXHRcdFx0XHRcdFx0XHRcdCfplrHoroDotbfkvoblg4/mmK/mlrDogZ7nqL/lj4rljIXlkKvpgY7luqbnmoTlrqPlgrPmgKfoqp7oqr8nXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0YWc6ICdQcm9zZScsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+S9v+eUqOS6huaXpeacn+aIluaXtumXtOWIl+ihqOW8j+iusOi/sO+8jOmcgOimgeaUueWGmeS4uui/nui0r+eahOWPmei/sOaAp+aWh+WtlycsXG5cdFx0XHRcdFx0XHRcdFx0J+S9v+eUqOS6huaXpeacn+aIluaZgumWk+WIl+ihqOW8j+iomOi/sO+8jOmcgOimgeaUueWvq+eCuumAo+iyq+eahOaVmOi/sOaAp+aWh+Wtlydcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ1JldmlldycsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoJ+mYheivu+i1t+adpeexu+S8vOivhOiuuu+8jOmcgOimgea4heeQhicsICfplrHoroDotbfkvobpoZ7kvLzoqZXoq5bvvIzpnIDopoHmuIXnkIYnKSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ1RvbmUnLFxuXHRcdFx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCfor63osIPmiJbpo47moLzlj6/og73kuI3pgILlkIjnmb7np5HlhajkuabnmoTlhpnkvZzmlrnlvI8nLFxuXHRcdFx0XHRcdFx0XHRcdCfoqp7oqr/miJbpoqjmoLzlj6/og73kuI3pganlkIjnmb7np5Hlhajmm7jnmoTlr6vkvZzmlrnlvI8nXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdF0sXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRrZXk6IHdpbmRvdy53Z1VMUygn5YaF5a65JywgJ+WFp+WuuScpLFxuXHRcdFx0XHRcdHZhbHVlOiBbXG5cdFx0XHRcdFx0XHR7dGFnOiAnTWlzc2luZyBpbmZvcm1hdGlvbicsIGRlc2NyaXB0aW9uOiAn57y65bCR5b+F6KaB55qE5L+h5oGvJ30sIC8vIHRoZXNlIHRocmVlIGhhdmUgYSBzdWJncm91cCB3aXRoIHNldmVyYWwgb3B0aW9uc1xuXHRcdFx0XHRcdFx0e3RhZzogJ1N1YnN0dWInLCBkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKCfov4fkuo7nn63lsI8nLCAn6YGO5pa855+t5bCPJyksIGV4Y2x1ZGVNSTogdHJ1ZX0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ1VuZW5jeWNsb3BlZGljJyxcblx0XHRcdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUygn5Y+v6IO95LiN6YCC5ZCI5YaZ5YWl55m+56eR5YWo5LmmJywgJ+WPr+iDveS4jemBqeWQiOWvq+WFpeeZvuenkeWFqOabuCcpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRdLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0a2V5OiB3aW5kb3cud2dVTFMoJ+S/oeaBr+WSjOe7huiKgicsICfos4foqIrlkozntLDnr4AnKSxcblx0XHRcdFx0XHR2YWx1ZTogW1xuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0YWc6ICdFeHBlcnQgbmVlZGVkJyxcblx0XHRcdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn6ZyA6KaB57K+6YCa5oiW54af5oKJ5pys5Li76aKY55qE5LiT5Lia5Lq65aOr77yI5LiT5a6277yJ5Y+C5LiO5Y+K5Y2P5Yqp57yW6L6RJyxcblx0XHRcdFx0XHRcdFx0XHQn6ZyA6KaB57K+6YCa5oiW54af5oKJ5pys5Li76aGM55qE5bCI5qWt5Lq65aOr77yI5bCI5a6277yJ5Y+D6IiH5Y+K5Y2U5Yqp57eo6LyvJ1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0dGFnOiAnT3Zlcmx5IGRldGFpbGVkJyxcblx0XHRcdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUygn5YyF5ZCr5aSq5aSa6L+H5bqm57uG6IqC5YaF5a65JywgJ+WMheWQq+WkquWkmumBjuW6pue0sOevgOWFp+WuuScpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0dGFnOiAnVHJpdmlhJyxcblx0XHRcdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn5bqU6YG/5YWN5pyJ6ZmI5YiX5p2C6aG544CB55CQ56KO6LWE5paZ55qE6YOo5YiGJyxcblx0XHRcdFx0XHRcdFx0XHQn5oeJ6YG/5YWN5pyJ6Zmz5YiX6Zuc6aCF44CB55Gj56KO6LOH5paZ55qE6YOo5YiGJ1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRdLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0a2V5OiB3aW5kb3cud2dVTFMoJ+aXtumXtOaApycsICfmmYLplpPmgKcnKSxcblx0XHRcdFx0XHR2YWx1ZTogW1xuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0YWc6ICdDdXJyZW50Jyxcblx0XHRcdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUygn6K6w6L+w5paw6Ze75Yqo5oCBJywgJ+iomOi/sOaWsOiBnuWLleaFiycpLFxuXHRcdFx0XHRcdFx0XHRleGNsdWRlTUk6IHRydWUsXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0YWc6ICdVcGRhdGUnLFxuXHRcdFx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKCflvZPliY3mnaHnm67miJbnq6DoioLpnIDopoHmm7TmlrAnLCAn55W25YmN5qKd55uu5oiW56ug56+A6ZyA6KaB5pu05pawJyksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdF0sXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRrZXk6IHdpbmRvdy53Z1VMUygn5a6i6KeC5oCn5ZKM5LqL5a6e5YeG56Gu5oCnJywgJ+WuouingOaAp+WSjOS6i+Wvpua6lueiuuaApycpLFxuXHRcdFx0XHRcdHZhbHVlOiBbXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ0F1dG9iaW9ncmFwaHknLFxuXHRcdFx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCfnsbvkvLzkuIDnr4foh6rkvKDvvIzmiJblhoXlrrnkuLvopoHnlLHmnaHnm67mj4/ov7DnmoTlvZPkuovkurrmiJbnu4Tnu4fmkrDlhpnjgIHnvJbovpEnLFxuXHRcdFx0XHRcdFx0XHRcdCfpoZ7kvLzkuIDnr4foh6rlgrPvvIzmiJblhaflrrnkuLvopoHnlLHmop3nm67mj4/ov7DnmoTnlbbkuovkurrmiJbntYTnuZTmkrDlr6vjgIHnt6jovK8nXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0YWc6ICdDT0knLFxuXHRcdFx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCfkuLvopoHotKHnjK7ogIXkuI7mnKzmnaHnm67miYDlrqPmiaznmoTlhoXlrrnlj6/og73lrZjlnKjliKnnm4rlhrLnqoEnLFxuXHRcdFx0XHRcdFx0XHRcdCfkuLvopoHosqLnjbvogIXoiIfmnKzmop3nm67miYDlrqPmj5rnmoTlhaflrrnlj6/og73lrZjlnKjliKnnm4rooZ3nqoEnXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0YWc6ICdEaXNwdXRlZCcsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoJ+WGheWuueeWkeasoOWHhuehru+8jOacieW+heafpeivgScsICflhaflrrnnlpHmrKDmupbnorrvvIzmnInlvoXmn6XorYknKSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ0dsb2JhbGl6ZScsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoJ+S7heWFt+acieS4gOmDqOWIhuWcsOWMuueahOS/oeaBr+aIluingueCuScsICflg4XlhbfmnInkuIDpg6jliIblnLDljYDnmoTos4foqIrmiJbop4Dpu54nKSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ0hvYXgnLFxuXHRcdFx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKCfnnJ/lrp7mgKfooqvotKjnlpEnLCAn55yf5a+m5oCn6KKr6LOq55aRJyksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0YWc6ICdQT1YnLFxuXHRcdFx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCflrqLop4LmgKfmnInkuonorq7jgILlhoXlrrnjgIHor63osIPlj6/og73luKbmnInmmI7mmL7nmoTkuKrkurrop4LngrnmiJblnLDmlrnoibLlvaknLFxuXHRcdFx0XHRcdFx0XHRcdCflrqLop4DmgKfmnInniK3orbDjgILlhaflrrnjgIHoqp7oqr/lj6/og73luLbmnInmmI7poa/nmoTlgIvkurrop4Dpu57miJblnLDmlrnoibLlvaknXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0YWc6ICdTZWxmLWNvbnRyYWRpY3RvcnknLFxuXHRcdFx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKCflhoXlrrnoh6rnm7jnn5vnm74nLCAn5YWn5a656Ieq55u455+b55u+JyksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0YWc6ICdXZWFzZWwnLFxuXHRcdFx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCfor63kuYnmqKHmo7HkuKTlj6/ogIzmjZ/lj4rlhbblrqLop4LmgKfmiJblh4bnoa7mgKcnLFxuXHRcdFx0XHRcdFx0XHRcdCfoqp7mhI/mqKHmo7Hlhanlj6/ogIzmkI3lj4rlhbblrqLop4DmgKfmiJbmupbnorrmgKcnXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdF0sXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRrZXk6IHdpbmRvdy53Z1VMUygn5Y+v5L6b5p+l6K+B5ZKM5p2l5rqQJywgJ+WPr+S+m+afpeitieWSjOS+hua6kCcpLFxuXHRcdFx0XHRcdHZhbHVlOiBbXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ0JMUGRpc3B1dGUnLFxuXHRcdFx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdCflj6/og73ov53lj43kuobmsYLpl7vnmb7np5HlhbPkuo7nlJ/ogIXkvKDorrDnmoTmlrnpkognLFxuXHRcdFx0XHRcdFx0XHRcdCflj6/og73pgZXlj43kuobmsYLogZ7nmb7np5Hpl5zmlrznlJ/ogIXlgrPoqJjnmoTmlrnph50nXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0YWc6ICdCTFBzb3VyY2VzJyxcblx0XHRcdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn55Sf6ICF5Lyg6K6w6ZyA6KaB6KGl5YWF5pu05aSa5Y+v5L6b5p+l6K+B55qE5p2l5rqQJyxcblx0XHRcdFx0XHRcdFx0XHQn55Sf6ICF5YKz6KiY6ZyA6KaB6KOc5YWF5pu05aSa5Y+v5L6b5p+l6K2J55qE5L6G5rqQJ1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0dGFnOiAnQkxQIHVuc291cmNlZCcsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+eUn+iAheS8oOiusOayoeacieWIl+WHuuS7u+S9leWPguiAg+aIluadpea6kCcsXG5cdFx0XHRcdFx0XHRcdFx0J+eUn+iAheWCs+iomOaykuacieWIl+WHuuS7u+S9leWPg+iAg+aIluS+hua6kCdcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ0NpdGVjaGVjaycsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+WPr+iDveWMheWQq+S4jemAgueUqOaIluiiq+absuino+eahOW8leeUqOi1hOaWme+8jOmDqOWIhuWGheWuueeahOWHhuehruaAp+aXoOazleiiq+ivgeWunicsXG5cdFx0XHRcdFx0XHRcdFx0J+WPr+iDveWMheWQq+S4jemBqeeUqOaIluiiq+absuino+eahOW8leeUqOizh+aWme+8jOmDqOWIhuWFp+WuueeahOa6lueiuuaAp+eEoeazleiiq+itieWvpidcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ01vcmUgZm9vdG5vdGVzIG5lZWRlZCcsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+WboOS4uuaWh+WGheW8leeUqOS4jei2s++8jOmDqOWIhuWtl+WPpeeahOadpea6kOS7jeeEtuS4jeaYjicsXG5cdFx0XHRcdFx0XHRcdFx0J+WboOeCuuaWh+WFp+W8leeUqOS4jei2s++8jOmDqOWIhuWtl+WPpeeahOS+hua6kOS7jeeEtuS4jeaYjidcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ05vIGZvb3Rub3RlcycsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+WboOS4uuayoeacieWGheaWh+W8leeUqOiAjOadpea6kOS7jeeEtuS4jeaYjicsXG5cdFx0XHRcdFx0XHRcdFx0J+WboOeCuuaykuacieWFp+aWh+W8leeUqOiAjOS+hua6kOS7jeeEtuS4jeaYjidcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ09uZXNvdXJjZScsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+aegeWkp+aIluWujOWFqOWcsOS+nei1luS6juafkOS4quWNleS4gOeahOadpea6kCcsXG5cdFx0XHRcdFx0XHRcdFx0J+alteWkp+aIluWujOWFqOWcsOS+neiztOaWvOafkOWAi+WWruS4gOeahOS+hua6kCdcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ09yaWdpbmFsIHJlc2VhcmNoJyxcblx0XHRcdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUygn5Y+v6IO95YyF5ZCr5Y6f5Yib56CU56m25oiW5pyq5p+l6K+B5YaF5a65JywgJ+WPr+iDveWMheWQq+WOn+WJteeglOeptuaIluacquafpeitieWFp+WuuScpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0dGFnOiAnUHJpbWFyeXNvdXJjZXMnLFxuXHRcdFx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKCfkvp3otZbnrKzkuIDmiYvmnaXmupAnLCAn5L6d6LO056ys5LiA5omL5L6G5rqQJyksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0YWc6ICdSZWZpbXByb3ZlJyxcblx0XHRcdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUygn6ZyA6KaB6KGl5YWF5pu05aSa5p2l5rqQJywgJ+mcgOimgeijnOWFheabtOWkmuS+hua6kCcpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0dGFnOiAnVW5yZWZlcmVuY2VkJyxcblx0XHRcdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUygn5rKh5pyJ5YiX5Ye65Lu75L2V5Y+C6ICD5oiW5p2l5rqQJywgJ+aykuacieWIl+WHuuS7u+S9leWPg+iAg+aIluS+hua6kCcpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRdLFxuXHRcdFx0XHR9LFxuXHRcdFx0XSxcblx0XHR9LFxuXHRcdHtcblx0XHRcdGtleTogd2luZG93LndnVUxTKCflhbfkvZPlhoXlrrnpl67popgnLCAn5YW36auU5YWn5a655ZWP6aGMJyksXG5cdFx0XHR2YWx1ZTogW1xuXHRcdFx0XHR7XG5cdFx0XHRcdFx0a2V5OiB3aW5kb3cud2dVTFMoJ+ivreiogCcsICfoqp7oqIAnKSxcblx0XHRcdFx0XHR2YWx1ZTogW1xuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0YWc6ICdOb3RNYW5kYXJpbicsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+WMheWQq+i/h+WkmuS4jeaYr+eOsOS7o+agh+WHhuaxieivreeahOWGheWuuScsXG5cdFx0XHRcdFx0XHRcdFx0J+WMheWQq+mBjuWkmuS4jeaYr+ePvuS7o+aomea6lua8ouiqnueahOWFp+WuuSdcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdFx0ZXhjbHVkZU1JOiB0cnVlLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0dGFnOiAnUm91Z2ggdHJhbnNsYXRpb24nLFxuXHRcdFx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKCfnv7vor5Hlk4HotKjkuI3kvbMnLCAn57+76K2v5ZOB6LOq5LiN5L2zJyksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdF0sXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRrZXk6IHdpbmRvdy53Z1VMUygn6ZO+5o6lJywgJ+mAo+e1kCcpLFxuXHRcdFx0XHRcdHZhbHVlOiBbXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ0RlYWQgZW5kJyxcblx0XHRcdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn6ZyA6KaB5Yqg5LiK5YaF6YOo6ZO+5o6l5Lul5p6E562R55m+56eR5YWo5Lmm55qE6ZO+5o6l572R57ucJyxcblx0XHRcdFx0XHRcdFx0XHQn6ZyA6KaB5Yqg5LiK5YWn6YOo6YCj57WQ5Lul5qeL56+J55m+56eR5YWo5pu455qE6YCj57WQ57ay57WhJ1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0dGFnOiAnT3JwaGFuJyxcblx0XHRcdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUygn5rKh5pyJ5oiW5Y+q5pyJ5b6I5bCR6ZO+5YWl6aG16Z2iJywgJ+aykuacieaIluWPquacieW+iOWwkemAo+WFpemggemdoicpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0dGFnOiAnT3ZlcmxpbmtlZCcsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+WQq+aciei/h+WkmuOAgemHjeWkjeOAgeaIluS4jeW/heimgeeahOWGhemDqOmTvuaOpScsXG5cdFx0XHRcdFx0XHRcdFx0J+WQq+aciemBjuWkmuOAgemHjeikh+OAgeaIluS4jeW/heimgeeahOWFp+mDqOmAo+e1kCdcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHRhZzogJ1VuZGVybGlua2VkJyxcblx0XHRcdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn6ZyA6KaB5pu05aSa5YaF6YOo6ZO+5o6l5Lul5p6E562R55m+56eR5YWo5Lmm55qE6ZO+5o6l572R57ucJyxcblx0XHRcdFx0XHRcdFx0XHQn6ZyA6KaB5pu05aSa5YWn6YOo6YCj57WQ5Lul5qeL56+J55m+56eR5YWo5pu455qE6YCj57WQ57ay57WhJ1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRdLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0a2V5OiB3aW5kb3cud2dVTFMoJ+WPguiAg+aKgOacrycsICflj4PogIPmioDooZMnKSxcblx0XHRcdFx0XHR2YWx1ZTogW1xuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0YWc6ICdDaXRhdGlvbiBzdHlsZScsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoJ+W8leeUqOmcgOimgei/m+ihjOa4heeQhicsICflvJXnlKjpnIDopoHpgLLooYzmuIXnkIYnKSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGtleTogd2luZG93LndnVUxTKCfliIbnsbsnLCAn5YiG6aGeJyksXG5cdFx0XHRcdFx0dmFsdWU6IFtcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0dGFnOiAnSW1wcm92ZSBjYXRlZ29yaWVzJyxcblx0XHRcdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUygn6ZyA6KaB5pu05aSa6aG16Z2i5YiG57G7JywgJ+mcgOimgeabtOWkmumggemdouWIhumhnicpLFxuXHRcdFx0XHRcdFx0XHRleGNsdWRlTUk6IHRydWUsXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0YWc6ICdVbmNhdGVnb3JpemVkJyxcblx0XHRcdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUygn57y65bCR6aG16Z2i5YiG57G7JywgJ+e8uuWwkemggemdouWIhumhnicpLFxuXHRcdFx0XHRcdFx0XHRleGNsdWRlTUk6IHRydWUsXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdF0sXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0a2V5OiB3aW5kb3cud2dVTFMoJ+WQiOW5tuOAgeaLhuWIhuOAgeenu+WKqCcsICflkIjkvbXjgIHmi4bliIbjgIHnp7vli5UnKSxcblx0XHRcdHZhbHVlOiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHR0YWc6ICdNZXJnZSBmcm9tJyxcblx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKCflu7rorq7lsIbpobXpnaLlubblhaXmraTpobXpnaInLCAn5bu66K2w5bCH6aCB6Z2i5L215YWl5q2k6aCB6Z2iJyksXG5cdFx0XHRcdFx0ZXhjbHVkZU1JOiB0cnVlLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0dGFnOiAnTWVyZ2UgdG8nLFxuXHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoJ+W7uuiuruWwhuatpOmhtemdouW5tuWFpemhtemdoicsICflu7rorbDlsIfmraTpoIHpnaLkvbXlhaXpoIHpnaInKSxcblx0XHRcdFx0XHRleGNsdWRlTUk6IHRydWUsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHR0YWc6ICdNZXJnZScsXG5cdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUygn5bu66K6u5q2k6aG16Z2i5LiO6aG16Z2i5ZCI5bm2JywgJ+W7uuitsOatpOmggemdouiIh+mggemdouWQiOS9tScpLFxuXHRcdFx0XHRcdGV4Y2x1ZGVNSTogdHJ1ZSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdHRhZzogJ1JlcXVlc3RlZCBtb3ZlJyxcblx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKCflu7rorq7lsIbmraTpobXpnaLnp7vliqjliLDmlrDlkI3np7AnLCAn5bu66K2w5bCH5q2k6aCB6Z2i56e75YuV5Yiw5paw5ZCN56ixJyksXG5cdFx0XHRcdFx0ZXhjbHVkZU1JOiB0cnVlLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0dGFnOiAnU3BsaXQnLFxuXHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoJ+W7uuiuruWwhuatpOmhtemdouWIhuWJsuS4uuWkmuS4qumhtemdoicsICflu7rorbDlsIfmraTpoIHpnaLliIblibLngrrlpJrlgIvpoIHpnaInKSxcblx0XHRcdFx0XHRleGNsdWRlTUk6IHRydWUsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdF07XG5cdC8vIFRhZ3MgZm9yIFJFRElSRUNUUyBzdGFydCBoZXJlXG5cdC8vIE5vdCBieSBwb2xpY3ksIGJ1dCB0aGUgbGlzdCByb3VnaGx5IGFwcHJveGltYXRlcyBpdGVtcyB3aXRoID41MDBcblx0Ly8gdHJhbnNjbHVzaW9ucyBmcm9tIFRlbXBsYXRlOlIgdGVtcGxhdGUgaW5kZXhcblx0VHdpbmtsZS50YWcucmVkaXJlY3RMaXN0ID0gW1xuXHRcdHtcblx0XHRcdGtleTogJ+W4uOeUqOaooeadvycsXG5cdFx0XHR2YWx1ZTogW1xuXHRcdFx0XHR7XG5cdFx0XHRcdFx0dGFnOiB3aW5kb3cud2dVTFMoJ+WQiOW5tumHjeWumuWQkScsICflkIjkvbXph43lrprlkJEnKSxcblx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+S/neaMgemhtemdoumimOWQjeiHs+ebuOW6lOS4u+adoeebru+8jOS7pOmhtemdouWGheWuueWcqOWQiOW5tuWQjuS7jeiDveS/neWtmOWFtue8lui+keWOhuWPsicsXG5cdFx0XHRcdFx0XHQn5L+d5oyB6aCB6Z2i6aGM5ZCN6Iez55u45oeJ5Li75qKd55uu77yM5Luk6aCB6Z2i5YWn5a655Zyo5ZCI5L215b6M5LuN6IO95YSy5a2Y5YW257eo6Lyv5q235Y+yJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHR0YWc6IHdpbmRvdy53Z1VMUygn566A57mB6YeN5a6a5ZCRJywgJ+ewoee5gemHjeWumuWQkScpLFxuXHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoJ+W8leWvvOeugOS9k+iHs+e5geS9k++8jOaIlue5geS9k+iHs+eugOS9kycsICflvJXlsI7nsKHpq5Toh7PnuYHpq5TvvIzmiJbnuYHpq5Toh7PnsKHpq5QnKSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdHRhZzogd2luZG93LndnVUxTKCflhbPms6jluqbph43lrprlkJEnLCAn6Zec5rOo5bqm6YeN5a6a5ZCRJyksXG5cdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfnvLrkuY/lhbPms6jluqbnmoTlrZDkuLvpopjlkJHmnInlhbPms6jluqbnmoTmr43kuLvpopjnmoTph43lrprlkJEnLFxuXHRcdFx0XHRcdFx0J+e8uuS5j+mXnOazqOW6pueahOWtkOS4u+mhjOWQkeaciemXnOazqOW6pueahOavjeS4u+mhjOeahOmHjeWumuWQkSdcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0dGFnOiAn5qih5p2/6YeN5a6a5ZCRJyxcblx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKCfmjIflkJHmqKHmnb/nmoTph43lrprlkJHpobXpnaInLCAn5oyH5ZCR5qih5p2/55qE6YeN5a6a5ZCR6aCB6Z2iJyksXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHR0YWc6IHdpbmRvdy53Z1VMUygn5Yir5ZCN6YeN5a6a5ZCRJywgJ+WIpeWQjemHjeWumuWQkScpLFxuXHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn5qCH6aKY55qE5YW25LuW5ZCN56ew44CB56yU5ZCN44CB57uw5Y+344CB5ZCM5LmJ5a2X562JJyxcblx0XHRcdFx0XHRcdCfmqJnpoYznmoTlhbbku5blkI3nqLHjgIHnrYblkI3jgIHntr3omZ/jgIHlkIznvqnlrZfnrYknXG5cdFx0XHRcdFx0KSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdHRhZzogd2luZG93LndnVUxTKCfor5HlkI3ph43lrprlkJEnLCAn6K2v5ZCN6YeN5a6a5ZCRJyksXG5cdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfkurrnianjgIHkvZzlk4HnrYnlkITpobnkuovniannmoTlhbbku5bnv7vor5HlkI3np7AnLFxuXHRcdFx0XHRcdFx0J+S6uueJqeOAgeS9nOWTgeetieWQhOmgheS6i+eJqeeahOWFtuS7lue/u+itr+WQjeeosSdcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0dGFnOiB3aW5kb3cud2dVTFMoJ+e8qeWGmemHjeWumuWQkScsICfnuK7lr6vph43lrprlkJEnKSxcblx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKCfmoIfpopjnvKnlhpknLCAn5qiZ6aGM57iu5a+rJyksXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHR0YWc6IHdpbmRvdy53Z1VMUygn5ou85YaZ6YeN5a6a5ZCRJywgJ+aLvOWvq+mHjeWumuWQkScpLFxuXHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoJ+agh+mimOeahOWFtuS7luS4jeWQjOaLvOWGmScsICfmqJnpoYznmoTlhbbku5bkuI3lkIzmi7zlr6snKSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdHRhZzogd2luZG93LndnVUxTKCfplJnlrZfph43lrprlkJEnLCAn6Yyv5a2X6YeN5a6a5ZCRJyksXG5cdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUygn57qg5q2j5qCH6aKY55qE5bi46KeB6ZSZ6K+v5ou85YaZ5oiW6K+v5qSNJywgJ+ezvuato+aomemhjOeahOW4uOimi+mMr+iqpOaLvOWvq+aIluiqpOakjScpLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0dGFnOiB3aW5kb3cud2dVTFMoJ+aXp+WQjemHjeWumuWQkScsICfoiIrlkI3ph43lrprlkJEnKSxcblx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+WwhuS6i+eJqeaXqeWJjeeahOWQjeensOW8leWvvOiHs+abtOaUueWQjueahOS4u+mimCcsXG5cdFx0XHRcdFx0XHQn5bCH5LqL54mp5pep5YmN55qE5ZCN56ix5byV5bCO6Iez5pu05pS55b6M55qE5Li76aGMJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHR0YWc6ICflhajlkI3ph43lrprlkJEnLFxuXHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoJ+agh+mimOeahOWujOaVtOaIluabtOWujOaVtOWQjeensCcsICfmqJnpoYznmoTlrozmlbTmiJbmm7TlrozmlbTlkI3nqLEnKSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdHRhZzogJ+efreWQjemHjeWumuWQkScsXG5cdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCflrozmlbTmoIfpopjlkI3np7DmiJbkurrnianlhajlkI3nmoTpg6jliIbjgIHkuI3lrozmlbTnmoTlkI3np7DmiJbnroDnp7AnLFxuXHRcdFx0XHRcdFx0J+WujOaVtOaomemhjOWQjeeoseaIluS6uueJqeWFqOWQjeeahOmDqOWIhuOAgeS4jeWujOaVtOeahOWQjeeoseaIluewoeeosSdcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0dGFnOiAn5aeT5rCP6YeN5a6a5ZCRJyxcblx0XHRcdFx0XHRkZXNjcmlwdGlvbjogJ+S6uueJqeWnk+awjycsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHR0YWc6ICflkI3lrZfph43lrprlkJEnLFxuXHRcdFx0XHRcdGRlc2NyaXB0aW9uOiAn5Lq654mp5Lq65ZCNJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdHRhZzogJ+acrOWQjemHjeWumuWQkScsXG5cdFx0XHRcdFx0ZGVzY3JpcHRpb246ICfkurrnianmnKzlkI0nLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0dGFnOiAn6Z2e5Lit5paH6YeN5a6a5ZCRJyxcblx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKCfpnZ7kuK3mlofmoIfpopgnLCAn6Z2e5Lit5paH5qiZ6aGMJyksXG5cdFx0XHRcdFx0c3ViZ3JvdXA6IFtcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0bmFtZTogJ2FsdExhbmdGcm9tJyxcblx0XHRcdFx0XHRcdFx0dHlwZTogJ2lucHV0Jyxcblx0XHRcdFx0XHRcdFx0bGFiZWw6ICfmnKzph43mlrDlsI7lkJHnmoToqp7oqIDvvIjlj6/pgbjvvIknLFxuXHRcdFx0XHRcdFx0XHR0b29sdGlwOlxuXHRcdFx0XHRcdFx0XHRcdCfovLjlhaXph43mlrDlsI7lkJHlkI3nqLHmiYDkvb/nlKjoqp7oqIDnmoRJU08gNjM55Luj56K877yM5L6L5aaCZW7ku6Pooajoi7Hoqp7vvIzku6Pnorzlj6/lj4PoposgVGVtcGxhdGU6SVNPXzYzOV9uYW1lJyxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdHRhZzogJ+aXpeaWh+mHjeWumuWQkScsXG5cdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUygn5pel6K+t5ZCN56ewJywgJ+aXpeiqnuWQjeeosScpLFxuXHRcdFx0XHR9LFxuXHRcdFx0XSxcblx0XHR9LFxuXHRcdHtcblx0XHRcdGtleTogJ+WBtueUqOaooeadvycsXG5cdFx0XHR2YWx1ZTogW1xuXHRcdFx0XHR7XG5cdFx0XHRcdFx0dGFnOiAn6KeS6Imy6YeN5a6a5ZCRJyxcblx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKCfnlLXop4bliafjgIHnlLXlvbHjgIHkuabnsY3nrYnkvZzlk4HnmoTop5LoibInLCAn6Zu76KaW5YqH44CB6Zu75b2x44CB5pu457GN562J5L2c5ZOB55qE6KeS6ImyJyksXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHR0YWc6IHdpbmRvdy53Z1VMUygn56ug6IqC6YeN5a6a5ZCRJywgJ+eroOevgOmHjeWumuWQkScpLFxuXHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoJ+WvvOWQkeiHs+i+g+mrmOWvhuW6pue7hOe7h+eahOmhtemdoicsICflsI7lkJHoh7PovIPpq5jlr4bluqbntYTnuZTnmoTpoIHpnaInKSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdHRhZzogJ+WIl+ihqOmHjeWumuWQkScsXG5cdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUygn5a+85ZCR6Iez5L2O5a+G5bqm55qE5YiX6KGoJywgJ+WwjuWQkeiHs+S9juWvhuW6pueahOWIl+ihqCcpLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0dGFnOiAn5Y+v6IO95oCn6YeN5a6a5ZCRJyxcblx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+WvvOWQkeiHs+W9k+WJjeaPkOS+m+WGheWuueabtOS4uuivpuWwveeahOebruagh+mhtemdoicsXG5cdFx0XHRcdFx0XHQn5bCO5ZCR6Iez55W25YmN5o+Q5L6b5YWn5a655pu054K66Kmz55uh55qE55uu5qiZ6aCB6Z2iJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHR0YWc6IHdpbmRvdy53Z1VMUygn5YWz6IGU5a2X6YeN5a6a5ZCRJywgJ+mXnOiBr+Wtl+mHjeWumuWQkScpLFxuXHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoJ+agh+mimOWQjeensOWFs+iBlOWtlycsICfmqJnpoYzlkI3nqLHpl5zoga/lrZcnKSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdHRhZzogd2luZG93LndnVUxTKCfmnaHnm67or7fmsYLph43lrprlkJEnLCAn5qKd55uu6KuL5rGC6YeN5a6a5ZCRJyksXG5cdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUygn6ZyA6KaB54us56uL5p2h55uu55qE6aG16Z2iJywgJ+mcgOimgeeNqOeri+aineebrueahOmggemdoicpLFxuXHRcdFx0XHRcdHN1Ymdyb3VwOiBbXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdG5hbWU6ICdyZXFBcnRpY2xlTGFuZycsXG5cdFx0XHRcdFx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRcdFx0XHRcdGxhYmVsOiAn5aSW6Kqe6Kqe6KiA5Luj56K877yaJyxcblx0XHRcdFx0XHRcdFx0dG9vbHRpcDogJ+S9v+eUqElTTyA2Mznku6PnorzvvIzlj6/lj4PoposgVGVtcGxhdGU6SVNPXzYzOV9uYW1lJyxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdG5hbWU6ICdyZXFBcnRpY2xlVGl0bGUnLFxuXHRcdFx0XHRcdFx0XHR0eXBlOiAnaW5wdXQnLFxuXHRcdFx0XHRcdFx0XHRsYWJlbDogJ+WkluiqnumggemdouWQjeeose+8micsXG5cdFx0XHRcdFx0XHRcdHNpemU6IDYwLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRdLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0dGFnOiB3aW5kb3cud2dVTFMoJ+W/q+aNt+aWueW8j+mHjeWumuWQkScsICfmjbflvpHph43lrprlkJEnKSxcblx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKCfmsYLpl7vnmb7np5Hlv6vmjbfmlrnlvI8nLCAn5rGC6IGe55m+56eR5b+r5o235pa55byPJyksXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0a2V5OiB3aW5kb3cud2dVTFMoJ+mynOeUqOaooeadvycsICfprq7nlKjmqKHmnb8nKSxcblx0XHRcdHZhbHVlOiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHR0YWc6IHdpbmRvdy53Z1VMUygn6K+N57uE6YeN5a6a5ZCRJywgJ+ipnue1hOmHjeWumuWQkScpLFxuXHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn5bCG6K+N57uEL+ivjee7hC/miJDor63mjIflkJHliIfpopjnmoTmnaHnm67lj4rmgbDlvZPnq6DoioInLFxuXHRcdFx0XHRcdFx0J+Wwh+ipnue1hC/oqZ7ntYQv5oiQ6Kqe5oyH5ZCR5YiH6aGM55qE5qKd55uu5Y+K5oGw55W256ug56+AJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHR0YWc6IHdpbmRvdy53Z1VMUygn5raI5q2n5LmJ6aG16YeN5a6a5ZCRJywgJ+a2iOatp+e+qemggemHjeWumuWQkScpLFxuXHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoJ+aMh+WQkea2iOatp+S5iemhtScsICfmjIflkJHmtojmrafnvqnpoIEnKSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdHRhZzogJ+Wfn+WQjemHjeWumuWQkScsXG5cdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUygn5Z+f5ZCNJywgJ+e2suWfn+WQjeeosScpLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0dGFnOiAn5bm05Luj6YeN5a6a5ZCRJyxcblx0XHRcdFx0XHRkZXNjcmlwdGlvbjogd2luZG93LndnVUxTKCfkuo7lubTku73mnaHnm67lr7zlkJHoh7PlubTku6PmnaHnm64nLCAn5pa85bm05Lu95qKd55uu5bCO5ZCR6Iez5bm05Luj5qKd55uuJyksXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHR0YWc6IHdpbmRvdy53Z1VMUygn55So5oi35qGG5qih5p2/6YeN5a6a5ZCRJywgJ+eUqOaItuahhuaooeadv+mHjeWumuWQkScpLFxuXHRcdFx0XHRcdGRlc2NyaXB0aW9uOiB3aW5kb3cud2dVTFMoJ+eUqOaIt+ahhuaooeadvycsICfnlKjmiLbmoYbmqKHmnb8nKSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdHRhZzogJ+mHjeWumuWQkeaooeadv+eUqOmHjeWumuWQkScsXG5cdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUygn5a+85ZCR6Iez6YeN5a6a5ZCR5qih5p2/JywgJ+WwjuWQkeiHs+mHjeWumuWQkeaooeadvycpLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0dGFnOiAnRVhJRumHjeWumuWQkScsXG5cdFx0XHRcdFx0ZGVzY3JpcHRpb246IHdpbmRvdy53Z1VMUygnSlBFR+WbvuWDj+aWh+S7tuWMheWQq0VYSUbkv6Hmga8nLCAnSlBFR+WcluaqlOWMheWQq0VYSUbos4foqIonKSxcblx0XHRcdFx0fSxcblx0XHRcdF0sXG5cdFx0fSxcblx0XTtcblx0Ly8gbWFpbnRlbmFuY2UgdGFncyBmb3IgRklMRVMgc3RhcnQgaGVyZVxuXHRUd2lua2xlLnRhZy5maWxlTGlzdCA9IFtcblx0XHR7XG5cdFx0XHRrZXk6IHdpbmRvdy53Z1VMUygn6JGX5L2c5p2D5ZKM5p2l5rqQ6Zeu6aKY5qCH562+JywgJ+iRl+S9nOasiuWSjOS+hua6kOWVj+mhjOaomeexpCcpLFxuXHRcdFx0dmFsdWU6IFtcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiBge3tOb24tZnJlZSByZWR1Y2V9fe+8miR7d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+mdnuS9juWIhui+qOeOh+eahOWQiOeQhuS9v+eUqOWbvuWDj++8iOaIlui/h+mVv+eahOmfs+mikeWJqui+keetie+8iScsXG5cdFx0XHRcdFx0XHQn6Z2e5L2O6Kej5p6Q5bqm55qE5ZCI55CG5L2/55So5ZyW5YOP77yI5oiW6YGO6ZW355qE6Z+z6aC75Ymq6Lyv562J77yJJ1xuXHRcdFx0XHRcdCl9YCxcblx0XHRcdFx0XHR2YWx1ZTogJ05vbi1mcmVlIHJlZHVjZScsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0a2V5OiB3aW5kb3cud2dVTFMoJ+a4heeQhuagh+etvicsICfmuIXnkIbmqJnnsaQnKSxcblx0XHRcdHZhbHVlOiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogYHt7V2F0ZXJtYXJrfX3vvJoke3dpbmRvdy53Z1VMUygn5Zu+5YOP5YyF5ZCr5LqG5rC05Y2wJywgJ+WcluWDj+WMheWQq+S6hua1ruawtOWNsCcpfWAsXG5cdFx0XHRcdFx0dmFsdWU6ICdXYXRlcm1hcmsnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IGB7e1JlbmFtZSBtZWRpYX1977yaJHt3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn5paH5Lu25bqU6K+l5qC55o2u5paH5Lu25ZCN56ew5oyH5byV6KKr6YeN5ZG95ZCNJyxcblx0XHRcdFx0XHRcdCfmqpTmoYjmh4noqbLmoLnmk5rmqpTmoYjlkI3nqLHmjIflvJXooqvph43mlrDlkb3lkI0nXG5cdFx0XHRcdFx0KX1gLFxuXHRcdFx0XHRcdHZhbHVlOiAnUmVuYW1lIG1lZGlhJyxcblx0XHRcdFx0XHRzdWJncm91cDogW1xuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0eXBlOiAnaW5wdXQnLFxuXHRcdFx0XHRcdFx0XHRuYW1lOiAncmVuYW1lbWVkaWFOZXduYW1lJyxcblx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5paw5ZCN56ew77yaJywgJ+aWsOWQjeeose+8micpLFxuXHRcdFx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoJ+i+k+WFpeWbvuWDj+eahOaWsOWQjeensO+8iOWPr+mAie+8iScsICfovLjlhaXlnJblg4/nmoTmlrDlkI3nqLHvvIjlj6/pgbjvvIknKSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRcdFx0XHRcdG5hbWU6ICdyZW5hbWVtZWRpYVJlYXNvbicsXG5cdFx0XHRcdFx0XHRcdGxhYmVsOiAn5Y6f5Zug77yaJyxcblx0XHRcdFx0XHRcdFx0dG9vbHRpcDogd2luZG93LndnVUxTKCfovpPlhaXph43lkb3lkI3nmoTljp/lm6DvvIjlj6/pgInvvIknLCAn6Ly45YWl6YeN5paw5ZG95ZCN55qE5Y6f5Zug77yI5Y+v6YG477yJJyksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdF0sXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogYHt7U2hvdWxkIGJlIFNWR31977yaJHt3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQnUE5H44CBR0lG44CBSlBFR+aWh+S7tuW6lOivpemHjeWItuaIkOefoumHj+WbvuW9oicsXG5cdFx0XHRcdFx0XHQnUE5H44CBR0lG44CBSlBFR+aqlOahiOaHieipsumHjeijveaIkOWQkemHj+WcluW9oidcblx0XHRcdFx0XHQpfWAsXG5cdFx0XHRcdFx0dmFsdWU6ICdTaG91bGQgYmUgU1ZHJyxcblx0XHRcdFx0fSxcblx0XHRcdF0sXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRrZXk6IHdpbmRvdy53Z1VMUygn5paH5Lu25Y+W5Luj5qCH562+JywgJ+aqlOahiOWPluS7o+aomeexpCcpLFxuXHRcdFx0dmFsdWU6IFtcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiBge3tPYnNvbGV0ZX1977yaJHt3aW5kb3cud2dVTFMoJ+acieaWsOeJiOacrOWPr+eUqOeahOi/h+aXtuaWh+S7ticsICfmnInmlrDniYjmnKzlj6/nlKjnmoTpgY7mmYLmqpTmoYgnKX1gLFxuXHRcdFx0XHRcdHZhbHVlOiAnT2Jzb2xldGUnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IGB7e1ZlY3RvciB2ZXJzaW9uIGF2YWlsYWJsZX1977yaJHt3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn5pyJ55+i6YeP5Zu+5b2i5Y+v55So55qE6Z2e55+i6YeP5Zu+5b2i5paH5Lu2Jyxcblx0XHRcdFx0XHRcdCfmnInlkJHph4/lnJblvaLlj6/nlKjnmoTpnZ7lkJHph4/lnJblvaLmqpTmoYgnXG5cdFx0XHRcdFx0KX1gLFxuXHRcdFx0XHRcdHZhbHVlOiAnVmVjdG9yIHZlcnNpb24gYXZhaWxhYmxlJyxcblx0XHRcdFx0fSxcblx0XHRcdF0sXG5cdFx0XHRidWlsZEZpbGVuYW1lOiB0cnVlLFxuXHRcdH0sXG5cdF07XG5cdFR3aW5rbGUudGFnLmNhbGxiYWNrcyA9IHtcblx0XHRhcnRpY2xlOiAocGFnZW9iaikgPT4ge1xuXHRcdFx0Ly8gUmVtb3ZlIHRhZ3MgdGhhdCBiZWNvbWUgc3VwZXJmbHVvdXMgd2l0aCB0aGlzIGFjdGlvblxuXHRcdFx0bGV0IHBhZ2VUZXh0ID0gcGFnZW9ialxuXHRcdFx0XHQuZ2V0UGFnZVRleHQoKVxuXHRcdFx0XHQucmVwbGFjZShcblx0XHRcdFx0XHQvXFx7XFx7XFxzKihbTm5dZXcgdW5yZXZpZXdlZCBhcnRpY2xlfFtVdV1ucmV2aWV3ZWR8W1V1XXNlcnNwYWNlIGRyYWZ0KVxccyooXFx8KD86XFx7XFx7W157fV0qXFx9XFx9fFtee31dKSopP1xcfVxcfVxccyovZyxcblx0XHRcdFx0XHQnJ1xuXHRcdFx0XHQpO1xuXHRcdFx0Y29uc3QgcGFyYW1zID0gcGFnZW9iai5nZXRDYWxsYmFja1BhcmFtZXRlcnMoKTtcblx0XHRcdC8qKlxuXHRcdFx0ICogU2F2ZXMgdGhlIHBhZ2UgZm9sbG93aW5nIHRoZSByZW1vdmFsIG9mIHRhZ3MgaWYgYW55LiBUaGUgbGFzdCBzdGVwLlxuXHRcdFx0ICogQ2FsbGVkIGZyb20gcmVtb3ZlVGFncygpXG5cdFx0XHQgKi9cblx0XHRcdGNvbnN0IHBvc3RSZW1vdmFsID0gKCkgPT4ge1xuXHRcdFx0XHRpZiAocGFyYW1zLnRhZ3NUb1JlbW92ZS5sZW5ndGgpIHtcblx0XHRcdFx0XHQvLyBSZW1vdmUgZW1wdHkge3ttdWx0aXBsZSBpc3N1ZXN9fSBpZiBmb3VuZFxuXHRcdFx0XHRcdHBhZ2VUZXh0ID0gcGFnZVRleHQucmVwbGFjZShcblx0XHRcdFx0XHRcdC9cXHtcXHsobXVsdGlwbGUgP2lzc3Vlc3xhcnRpY2xlID9pc3N1ZXN8bWl8YWl8aXNzdWVzfOWkmuWAi+WVj+mhjHzlpJrkuKrpl67poph85ZWP6aGM5qKd55uufOmXrumimOadoeebrnzmlbjlgIvllY/poYx85pWw5Liq6Zeu6aKYKVxccypcXHxcXHMqXFx9XFx9XFxuPy9pbSxcblx0XHRcdFx0XHRcdCcnXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0XHQvLyBSZW1vdmUgc2luZ2xlLWVsZW1lbnQge3ttdWx0aXBsZSBpc3N1ZXN9fSBpZiBmb3VuZFxuXHRcdFx0XHRcdHBhZ2VUZXh0ID0gcGFnZVRleHQucmVwbGFjZShcblx0XHRcdFx0XHRcdC9cXHtcXHsoPzptdWx0aXBsZSA/aXNzdWVzfGFydGljbGUgP2lzc3Vlc3xtaXxhaXxpc3N1ZXN85aSa5YCL5ZWP6aGMfOWkmuS4qumXrumimHzllY/poYzmop3nm6586Zeu6aKY5p2h55uufOaVuOWAi+WVj+mhjHzmlbDkuKrpl67popgpXFxzKlxcfFxccyooXFx7XFx7KD86XFx7XFx7W157fV0qXFx9XFx9fFtee31dKStcXH1cXH0pXFxzKlxcfVxcfS9pbSxcblx0XHRcdFx0XHRcdCckMSdcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdC8vIEJ1aWxkIGVkaXQgc3VtbWFyeVxuXHRcdFx0XHRjb25zdCBtYWtlU2VudGVuY2UgPSAoYXJyYXkpID0+IHtcblx0XHRcdFx0XHRpZiAoYXJyYXkubGVuZ3RoIDwgMykge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGFycmF5LmpvaW4oJ+WSjCcpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRjb25zdCBsYXN0ID0gYXJyYXkucG9wKCk7XG5cdFx0XHRcdFx0cmV0dXJuIGAke2FycmF5LmpvaW4oJ+OAgScpfeWSjCR7bGFzdH1gO1xuXHRcdFx0XHR9O1xuXHRcdFx0XHRjb25zdCBtYWtlVGVtcGxhdGVMaW5rID0gKHRhZykgPT4ge1xuXHRcdFx0XHRcdGxldCB0ZXh0ID0gJ3t7W1snO1xuXHRcdFx0XHRcdC8vIGlmIGl0IGlzIGEgY3VzdG9tIHRhZyB3aXRoIGEgcGFyYW1ldGVyXG5cdFx0XHRcdFx0aWYgKHRhZy5pbmNsdWRlcygnfCcpKSB7XG5cdFx0XHRcdFx0XHR0YWcgPSB0YWcuc2xpY2UoMCwgdGFnLmluZGV4T2YoJ3wnKSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHRleHQgKz0gdGFnLmluY2x1ZGVzKCc6JykgPyB0YWcgOiBgVGVtcGxhdGU6JHt0YWd9fCR7dGFnfWA7XG5cdFx0XHRcdFx0cmV0dXJuIGAke3RleHR9XV19fWA7XG5cdFx0XHRcdH07XG5cdFx0XHRcdGxldCBzdW1tYXJ5VGV4dDtcblx0XHRcdFx0Y29uc3QgYWRkZWRUYWdzID0gcGFyYW1zLnRhZ3MubWFwKG1ha2VUZW1wbGF0ZUxpbmspO1xuXHRcdFx0XHRjb25zdCByZW1vdmVkVGFncyA9IHBhcmFtcy50YWdzVG9SZW1vdmUubWFwKG1ha2VUZW1wbGF0ZUxpbmspO1xuXHRcdFx0XHRpZiAoYWRkZWRUYWdzLmxlbmd0aCkge1xuXHRcdFx0XHRcdHN1bW1hcnlUZXh0ID0gYOWKoOWFpSR7bWFrZVNlbnRlbmNlKGFkZGVkVGFncyl9YDtcblx0XHRcdFx0XHRzdW1tYXJ5VGV4dCArPSByZW1vdmVkVGFncy5sZW5ndGggPyBg5Lim56e76ZmkJHttYWtlU2VudGVuY2UocmVtb3ZlZFRhZ3MpfWAgOiAnJztcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzdW1tYXJ5VGV4dCA9IGDnp7vpmaQke21ha2VTZW50ZW5jZShyZW1vdmVkVGFncyl9YDtcblx0XHRcdFx0fVxuXHRcdFx0XHRzdW1tYXJ5VGV4dCArPSB3aW5kb3cud2dVTFMoJ+agh+iusCcsICfmqJnoqJgnKTtcblx0XHRcdFx0aWYgKHBhcmFtcy5yZWFzb24pIHtcblx0XHRcdFx0XHRzdW1tYXJ5VGV4dCArPSBg77yaJHtwYXJhbXMucmVhc29ufWA7XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gYXZvaWQgdHJ1bmNhdGVkIHN1bW1hcmllc1xuXHRcdFx0XHRpZiAoc3VtbWFyeVRleHQubGVuZ3RoID4gNDk5KSB7XG5cdFx0XHRcdFx0c3VtbWFyeVRleHQgPSBzdW1tYXJ5VGV4dC5yZXBsYWNlKC9cXFtcXFtbXnxdK1xcfChbXlxcXV0rKVxcXVxcXS9nLCAnJDEnKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRwYWdlb2JqLnNldFBhZ2VUZXh0KHBhZ2VUZXh0KTtcblx0XHRcdFx0cGFnZW9iai5zZXRFZGl0U3VtbWFyeShzdW1tYXJ5VGV4dCk7XG5cdFx0XHRcdHBhZ2VvYmouc2V0Q2hhbmdlVGFncyhUd2lua2xlLmNoYW5nZVRhZ3MpO1xuXHRcdFx0XHRwYWdlb2JqLnNldFdhdGNobGlzdChUd2lua2xlLmdldFByZWYoJ3dhdGNoVGFnZ2VkUGFnZXMnKSk7XG5cdFx0XHRcdHBhZ2VvYmouc2V0TWlub3JFZGl0KFR3aW5rbGUuZ2V0UHJlZignbWFya1RhZ2dlZFBhZ2VzQXNNaW5vcicpKTtcblx0XHRcdFx0cGFnZW9iai5zZXRDcmVhdGVPcHRpb24oJ25vY3JlYXRlJyk7XG5cdFx0XHRcdHBhZ2VvYmouc2F2ZSgoKSA9PiB7XG5cdFx0XHRcdFx0Ly8gc3BlY2lhbCBmdW5jdGlvbnMgZm9yIG1lcmdlIHRhZ3Ncblx0XHRcdFx0XHRpZiAocGFyYW1zLm1lcmdlUmVhc29uKSB7XG5cdFx0XHRcdFx0XHQvLyBwb3N0IHRoZSByYXRpb25hbGUgb24gdGhlIHRhbGsgcGFnZSAob25seSBvcGVyYXRlcyBpbiBtYWluIG5hbWVzcGFjZSlcblx0XHRcdFx0XHRcdGNvbnN0IHRhbGtwYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShcblx0XHRcdFx0XHRcdFx0YFRhbGs6JHtwYXJhbXMuZGlzY3Vzc0FydGljbGV9YCxcblx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCflsIbnkIbnlLHotLTov5vorqjorrrpobUnLCAn5bCH55CG55Sx6LK86YCy6KiO6KuW6aCBJylcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHR0YWxrcGFnZS5zZXROZXdTZWN0aW9uVGV4dChgJHtwYXJhbXMubWVyZ2VSZWFzb24udHJpbSgpfSB+fmAuY29uY2F0KCd+ficpKTtcblx0XHRcdFx0XHRcdHRhbGtwYWdlLnNldE5ld1NlY3Rpb25UaXRsZShg6K+35rGC5LiOW1ske3BhcmFtcy5ub25EaXNjdXNzQXJ0aWNsZX1dXeWQiOW5tmApO1xuXHRcdFx0XHRcdFx0dGFsa3BhZ2Uuc2V0Q2hhbmdlVGFncyhUd2lua2xlLmNoYW5nZVRhZ3MpO1xuXHRcdFx0XHRcdFx0dGFsa3BhZ2Uuc2V0V2F0Y2hsaXN0KFR3aW5rbGUuZ2V0UHJlZignd2F0Y2hNZXJnZURpc2N1c3Npb25zJykpO1xuXHRcdFx0XHRcdFx0dGFsa3BhZ2Uuc2V0Q3JlYXRlT3B0aW9uKCdyZWNyZWF0ZScpO1xuXHRcdFx0XHRcdFx0dGFsa3BhZ2UubmV3U2VjdGlvbigpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAocGFyYW1zLm1lcmdlVGFnT3RoZXIpIHtcblx0XHRcdFx0XHRcdC8vIHRhZyB0aGUgdGFyZ2V0IHBhZ2UgaWYgcmVxdWVzdGVkXG5cdFx0XHRcdFx0XHRsZXQgb3RoZXJUYWdOYW1lID0gJ01lcmdlJztcblx0XHRcdFx0XHRcdGlmIChwYXJhbXMubWVyZ2VUYWcgPT09ICdNZXJnZSBmcm9tJykge1xuXHRcdFx0XHRcdFx0XHRvdGhlclRhZ05hbWUgPSAnTWVyZ2UgdG8nO1xuXHRcdFx0XHRcdFx0fSBlbHNlIGlmIChwYXJhbXMubWVyZ2VUYWcgPT09ICdNZXJnZSB0bycpIHtcblx0XHRcdFx0XHRcdFx0b3RoZXJUYWdOYW1lID0gJ01lcmdlIGZyb20nO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0Y29uc3QgbmV3UGFyYW1zID0ge1xuXHRcdFx0XHRcdFx0XHR0YWdzOiBbb3RoZXJUYWdOYW1lXSxcblx0XHRcdFx0XHRcdFx0dGFnc1RvUmVtb3ZlOiBbXSxcblx0XHRcdFx0XHRcdFx0dGFnc1RvUmVtYWluOiBbXSxcblx0XHRcdFx0XHRcdFx0bWVyZ2VUYXJnZXQ6IE1vcmViaXRzLnBhZ2VOYW1lTm9ybSxcblx0XHRcdFx0XHRcdFx0ZGlzY3Vzc0FydGljbGU6IHBhcmFtcy5kaXNjdXNzQXJ0aWNsZSxcblx0XHRcdFx0XHRcdFx0dGFsa0Rpc2N1c3Npb25UaXRsZTogcGFyYW1zLnRhbGtEaXNjdXNzaW9uVGl0bGUsXG5cdFx0XHRcdFx0XHRcdHRhbGtEaXNjdXNzaW9uVGl0bGVMaW5rZWQ6IHBhcmFtcy50YWxrRGlzY3Vzc2lvblRpdGxlTGlua2VkLFxuXHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRcdGNvbnN0IG90aGVycGFnZSA9IG5ldyBNb3JlYml0cy53aWtpLnBhZ2UoXG5cdFx0XHRcdFx0XHRcdHBhcmFtcy5tZXJnZVRhcmdldCxcblx0XHRcdFx0XHRcdFx0YCR7d2luZG93LndnVUxTKCfmoIforrDlhbbku5bpobXpnaLvvIgnLCAn5qiZ6KiY5YW25LuW6aCB6Z2i77yIJykgKyBwYXJhbXMubWVyZ2VUYXJnZXR977yJYFxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdG90aGVycGFnZS5zZXRDYWxsYmFja1BhcmFtZXRlcnMobmV3UGFyYW1zKTtcblx0XHRcdFx0XHRcdG90aGVycGFnZS5sb2FkKFR3aW5rbGUudGFnLmNhbGxiYWNrcy5hcnRpY2xlKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Ly8gc3BlY2lhbCBmdW5jdGlvbnMgZm9yIHJlcXVlc3RlZCBtb3ZlIHRhZ3Ncblx0XHRcdFx0XHRpZiAocGFyYW1zLm1vdmVSZWFzb24pIHtcblx0XHRcdFx0XHRcdC8vIHBvc3QgdGhlIHJhdGlvbmFsZSBvbiB0aGUgdGFsayBwYWdlIChvbmx5IG9wZXJhdGVzIGluIG1haW4gbmFtZXNwYWNlKVxuXHRcdFx0XHRcdFx0bGV0IG1vdmVUYWxrcGFnZVRleHQgPSAnXFxuXFxue3snLmNvbmNhdCgnc3Vic3Q6JywgYFJNfDE9JHtwYXJhbXMubW92ZVJlYXNvbi50cmltKCl9YCk7XG5cdFx0XHRcdFx0XHRpZiAocGFyYW1zLm1vdmVUYXJnZXQpIHtcblx0XHRcdFx0XHRcdFx0bW92ZVRhbGtwYWdlVGV4dCArPSBgfDI9JHtwYXJhbXMubW92ZVRhcmdldH1gO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0bW92ZVRhbGtwYWdlVGV4dCArPSAnfX0nO1xuXHRcdFx0XHRcdFx0Y29uc3QgbW92ZVRhbGtwYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShcblx0XHRcdFx0XHRcdFx0YFRhbGs6JHtwYXJhbXMuZGlzY3Vzc0FydGljbGV9YCxcblx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCflsIbnkIbnlLHotLTov5vorqjorrrpobUnLCAn5bCH55CG55Sx6LK86YCy6KiO6KuW6aCBJylcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRtb3ZlVGFsa3BhZ2Uuc2V0QXBwZW5kVGV4dChtb3ZlVGFsa3BhZ2VUZXh0KTtcblx0XHRcdFx0XHRcdG1vdmVUYWxrcGFnZS5zZXRFZGl0U3VtbWFyeShcblx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfor7fmsYLnp7vliqgnLCAn6KuL5rGC56e75YuVJykgK1xuXHRcdFx0XHRcdFx0XHRcdChwYXJhbXMubW92ZVRhcmdldCA/IGDoh7NbWyR7cGFyYW1zLm1vdmVUYXJnZXR9XV1gIDogJycpXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0bW92ZVRhbGtwYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdFx0XHRcdG1vdmVUYWxrcGFnZS5zZXRDcmVhdGVPcHRpb24oJ3JlY3JlYXRlJyk7XG5cdFx0XHRcdFx0XHRtb3ZlVGFsa3BhZ2UuYXBwZW5kKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblx0XHRcdFx0aWYgKHBhcmFtcy5wYXRyb2wpIHtcblx0XHRcdFx0XHRwYWdlb2JqLnBhdHJvbCgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXHRcdFx0LyoqXG5cdFx0XHQgKiBSZW1vdmVzIHRoZSBleGlzdGluZyB0YWdzIHRoYXQgd2VyZSBkZXNlbGVjdGVkIChpZiBhbnkpXG5cdFx0XHQgKiBDYWxscyBwb3N0UmVtb3ZhbCgpIHdoZW4gZG9uZVxuXHRcdFx0ICovXG5cdFx0XHRjb25zdCByZW1vdmVUYWdzID0gKCkgPT4ge1xuXHRcdFx0XHRpZiAocGFyYW1zLnRhZ3NUb1JlbW92ZS5sZW5ndGggPT09IDApIHtcblx0XHRcdFx0XHRwb3N0UmVtb3ZhbCgpO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHRNb3JlYml0cy5zdGF0dXMuaW5mbyhcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+S/oeaBrycsICfos4foqIonKSxcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+enu+mZpOWPlua2iOmAieaLqeeahOW3suWtmOWcqOagh+iusCcsICfnp7vpmaTlj5bmtojpgbjmk4fnmoTlt7LlrZjlnKjmqJnoqJgnKVxuXHRcdFx0XHQpO1xuXHRcdFx0XHRjb25zdCBnZXRSZWRpcmVjdHNGb3IgPSBbXTtcblx0XHRcdFx0Ly8gUmVtb3ZlIHRoZSB0YWdzIGZyb20gdGhlIHBhZ2UgdGV4dCwgaWYgZm91bmQgaW4gaXRzIHByb3BlciBuYW1lLFxuXHRcdFx0XHQvLyBvdGhlcndpc2UgbW92ZXMgaXQgdG8gYGdldFJlZGlyZWN0c0ZvcmAgYXJyYXkgZWFybWFya2luZyBpdCBmb3Jcblx0XHRcdFx0Ly8gbGF0ZXIgcmVtb3ZhbFxuXHRcdFx0XHRmb3IgKGNvbnN0IHRhZyBvZiBwYXJhbXMudGFnc1RvUmVtb3ZlKSB7XG5cdFx0XHRcdFx0Y29uc3QgdGFnX3JlID0gbmV3IFJlZ0V4cChgXFxcXHtcXFxceyR7TW9yZWJpdHMucGFnZU5hbWVSZWdleCh0YWcpfVxcXFxzKihcXFxcfFtefV0rKT9cXFxcfVxcXFx9XFxcXG4/YCk7XG5cdFx0XHRcdFx0aWYgKHRhZ19yZS50ZXN0KHBhZ2VUZXh0KSkge1xuXHRcdFx0XHRcdFx0cGFnZVRleHQgPSBwYWdlVGV4dC5yZXBsYWNlKHRhZ19yZSwgJycpO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRnZXRSZWRpcmVjdHNGb3JbZ2V0UmVkaXJlY3RzRm9yLmxlbmd0aF0gPSBgVGVtcGxhdGU6JHt0YWd9YDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCFnZXRSZWRpcmVjdHNGb3IubGVuZ3RoKSB7XG5cdFx0XHRcdFx0cG9zdFJlbW92YWwoKTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gUmVtb3ZlIHRhZ3Mgd2hpY2ggYXBwZWFyIGluIHBhZ2UgdGV4dCBhcyByZWRpcmVjdHNcblx0XHRcdFx0Y29uc3QgYXBpID0gbmV3IE1vcmViaXRzLndpa2kuYXBpKFxuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn6I635Y+W5qih5p2/6YeN5a6a5ZCRJywgJ+WPluW+l+aooeadv+mHjeaWsOWwjuWQkScpLFxuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdGFjdGlvbjogJ3F1ZXJ5Jyxcblx0XHRcdFx0XHRcdHByb3A6ICdsaW5rc2hlcmUnLFxuXHRcdFx0XHRcdFx0dGl0bGVzOiBnZXRSZWRpcmVjdHNGb3Iuam9pbignfCcpLFxuXHRcdFx0XHRcdFx0cmVkaXJlY3RzOiAxLFxuXHRcdFx0XHRcdFx0bGhuYW1lc3BhY2U6ICcxMCcsXG5cdFx0XHRcdFx0XHRsaHNob3c6ICdyZWRpcmVjdCcsXG5cdFx0XHRcdFx0XHRsaGxpbWl0OiAnbWF4JywgLy8gNTAwIGlzIG1heCBmb3Igbm9ybWFsIHVzZXJzLCA1MDAwIGZvciBib3RzIGFuZCBzeXNvcHNcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdChhcGlvYmopID0+IHtcblx0XHRcdFx0XHRcdCQoYXBpb2JqLnJlc3BvbnNlWE1MKVxuXHRcdFx0XHRcdFx0XHQuZmluZCgncGFnZScpXG5cdFx0XHRcdFx0XHRcdC5lYWNoKChfaWR4LCBwYWdlKSA9PiB7XG5cdFx0XHRcdFx0XHRcdFx0bGV0IHJlbW92ZWQgPSBmYWxzZTtcblx0XHRcdFx0XHRcdFx0XHQkKHBhZ2UpXG5cdFx0XHRcdFx0XHRcdFx0XHQuZmluZCgnbGgnKVxuXHRcdFx0XHRcdFx0XHRcdFx0LmVhY2goKF9pbmRleCwgZWxlbWVudCkgPT4ge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRjb25zdCB0YWcgPSAkKGVsZW1lbnQpLmF0dHIoJ3RpdGxlJykuc2xpY2UoOSk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGNvbnN0IHRhZ19yZSA9IG5ldyBSZWdFeHAoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0YFxcXFx7XFxcXHske01vcmViaXRzLnBhZ2VOYW1lUmVnZXgoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0YWdcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQpfVxcXFxzKihcXFxcfCg/OlxcXFx7XFxcXHtbXnt9XSpcXFxcfVxcXFx9fFtee31dKSopP1xcXFx9XFxcXH1cXFxcbj9gXG5cdFx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICh0YWdfcmUudGVzdChwYWdlVGV4dCkpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRwYWdlVGV4dCA9IHBhZ2VUZXh0LnJlcGxhY2UodGFnX3JlLCAnJyk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVtb3ZlZCA9IHRydWU7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuIGZhbHNlOyAvLyBicmVhayBvdXQgb2YgJC5lYWNoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdH0pO1xuXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCFyZW1vdmVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRNb3JlYml0cy5zdGF0dXMud2Fybihcblx0XHRcdFx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfkv6Hmga8nLCAn6LOH6KiKJyksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5peg5rOV5Zyo6aG16Z2i5LiK5om+5Yiwe3snLCAn54Sh5rOV5Zyo6aCB6Z2i5LiK5om+5Yiwe3snKSArXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0JChwYWdlKS5hdHRyKCd0aXRsZScpLnNsaWNlKDkpICtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ3194oCm4oCm6Lez6L+HJywgJ3194oCm4oCm6Lez6YGOJylcblx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdHBvc3RSZW1vdmFsKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHQpO1xuXHRcdFx0XHRhcGkucG9zdCgpO1xuXHRcdFx0fTtcblx0XHRcdGlmICghcGFyYW1zLnRhZ3MubGVuZ3RoKSB7XG5cdFx0XHRcdHJlbW92ZVRhZ3MoKTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdFx0bGV0IHRhZ1JlO1xuXHRcdFx0bGV0IHRhZ1RleHQgPSAnJztcblx0XHRcdGxldCB0YWdzID0gW107XG5cdFx0XHRjb25zdCBncm91cGFibGVUYWdzID0gW107XG5cdFx0XHRjb25zdCBncm91cGFibGVFeGlzdGluZ1RhZ3MgPSBbXTtcblx0XHRcdC8vIEV4ZWN1dGVzIGZpcnN0OiBhZGRpdGlvbiBvZiBzZWxlY3RlZCB0YWdzXG5cdFx0XHQvKipcblx0XHRcdCAqIFVwZGF0ZXMgYHRhZ1RleHRgIHdpdGggdGhlIHN5bnRheCBvZiBgdGFnTmFtZWAgdGVtcGxhdGUgd2l0aCBpdHMgcGFyYW1ldGVyc1xuXHRcdFx0ICpcblx0XHRcdCAqIEBwYXJhbSB7c3RyaW5nfSB0YWdOYW1lXG5cdFx0XHQgKi9cblx0XHRcdGNvbnN0IGFkZFRhZyA9ICh0YWdOYW1lKSA9PiB7XG5cdFx0XHRcdGxldCBjdXJyZW50VGFnID0gJyc7XG5cdFx0XHRcdGlmICh0YWdOYW1lID09PSAnVW5jYXRlZ29yaXplZCcgfHwgdGFnTmFtZSA9PT0gJ0ltcHJvdmUgY2F0ZWdvcmllcycpIHtcblx0XHRcdFx0XHRwYWdlVGV4dCArPSBgXFxuXFxue3ske3RhZ05hbWV9fHRpbWU9e3tgLmNvbmNhdCgnc3Vic3Q6JywgJyN0aW1lOmN9fX19Jyk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0Y3VycmVudFRhZyArPSBge3ske3RhZ05hbWV9YDtcblx0XHRcdFx0XHQvLyBmaWxsIGluIG90aGVyIHBhcmFtZXRlcnMsIGJhc2VkIG9uIHRoZSB0YWdcblx0XHRcdFx0XHRzd2l0Y2ggKHRhZ05hbWUpIHtcblx0XHRcdFx0XHRcdGNhc2UgJ0V4cGVydCBuZWVkZWQnOlxuXHRcdFx0XHRcdFx0XHRjdXJyZW50VGFnICs9IGB8c3ViamVjdD0ke3BhcmFtcy5leHBlcnR9YDtcblx0XHRcdFx0XHRcdFx0aWYgKHBhcmFtcy5leHBlcnQyKSB7XG5cdFx0XHRcdFx0XHRcdFx0Y3VycmVudFRhZyArPSBgfHN1YmplY3QyPSR7cGFyYW1zLmV4cGVydDJ9YDtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRpZiAocGFyYW1zLmV4cGVydDMpIHtcblx0XHRcdFx0XHRcdFx0XHRjdXJyZW50VGFnICs9IGB8c3ViamVjdDM9JHtwYXJhbXMuZXhwZXJ0M31gO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0Y2FzZSAnTWVyZ2UnOlxuXHRcdFx0XHRcdFx0Y2FzZSAnTWVyZ2UgdG8nOlxuXHRcdFx0XHRcdFx0Y2FzZSAnTWVyZ2UgZnJvbSc6XG5cdFx0XHRcdFx0XHRcdGlmIChwYXJhbXMubWVyZ2VUYXJnZXQpIHtcblx0XHRcdFx0XHRcdFx0XHQvLyBub3JtYWxpemUgdGhlIG1lcmdlIHRhcmdldCBmb3Igbm93IGFuZCBsYXRlclxuXHRcdFx0XHRcdFx0XHRcdHBhcmFtcy5tZXJnZVRhcmdldCA9IE1vcmViaXRzLnN0cmluZy50b1VwcGVyQ2FzZUZpcnN0Q2hhcihcblx0XHRcdFx0XHRcdFx0XHRcdHBhcmFtcy5tZXJnZVRhcmdldC5yZXBsYWNlKC9fL2csICcgJylcblx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRcdGN1cnJlbnRUYWcgKz0gYHwke3BhcmFtcy5tZXJnZVRhcmdldH1gO1xuXHRcdFx0XHRcdFx0XHRcdC8vIGxpbmsgdG8gdGhlIGNvcnJlY3Qgc2VjdGlvbiBvbiB0aGUgdGFsayBwYWdlLCBmb3IgYXJ0aWNsZSBzcGFjZSBvbmx5XG5cdFx0XHRcdFx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdFx0XHRcdFx0bXcuY29uZmlnLmdldCgnd2dOYW1lc3BhY2VOdW1iZXInKSA9PT0gMCAmJlxuXHRcdFx0XHRcdFx0XHRcdFx0KHBhcmFtcy5tZXJnZVJlYXNvbiB8fCBwYXJhbXMuZGlzY3Vzc0FydGljbGUpXG5cdFx0XHRcdFx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIXBhcmFtcy5kaXNjdXNzQXJ0aWNsZSkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBkaXNjdXNzQXJ0aWNsZSBpcyB0aGUgYXJ0aWNsZSB3aG9zZSB0YWxrIHBhZ2Ugd2lsbCBjb250YWluIHRoZSBkaXNjdXNzaW9uXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHBhcmFtcy5kaXNjdXNzQXJ0aWNsZSA9XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGFnTmFtZSA9PT0gJ01lcmdlIHRvJyA/IHBhcmFtcy5tZXJnZVRhcmdldCA6IG13LmNvbmZpZy5nZXQoJ3dnVGl0bGUnKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gbm9uRGlzY3Vzc0FydGljbGUgaXMgdGhlIGFydGljbGUgd2hpY2ggd29uJ3QgaGF2ZSB0aGUgZGlzY3Vzc2lvblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRwYXJhbXMubm9uRGlzY3Vzc0FydGljbGUgPVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHRhZ05hbWUgPT09ICdNZXJnZSB0bycgPyBtdy5jb25maWcuZ2V0KCd3Z1RpdGxlJykgOiBwYXJhbXMubWVyZ2VUYXJnZXQ7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHBhcmFtcy50YWxrRGlzY3Vzc2lvblRpdGxlID1cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+ivt+axguS4jicsICfoq4vmsYLoiIcnKSArXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0cGFyYW1zLm5vbkRpc2N1c3NBcnRpY2xlICtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+WQiOW5ticsICflkIjkvbUnKTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdGN1cnJlbnRUYWcgKz0gYHxkaXNjdXNzPVRhbGs6JHtwYXJhbXMuZGlzY3Vzc0FydGljbGV9IyR7cGFyYW1zLnRhbGtEaXNjdXNzaW9uVGl0bGV9YDtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRjYXNlICdNaXNzaW5nIGluZm9ybWF0aW9uJzpcblx0XHRcdFx0XHRcdFx0Y3VycmVudFRhZyArPSBgfDE9JHtwYXJhbXMubWlzc2luZ0luZm9ybWF0aW9ufWA7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0Y2FzZSAnTm90YWJpbGl0eSc6XG5cdFx0XHRcdFx0XHRcdGlmIChwYXJhbXMubm90YWJpbGl0eSAhPT0gJ25vbmUnKSB7XG5cdFx0XHRcdFx0XHRcdFx0Y3VycmVudFRhZyArPSBgfDM9JHtwYXJhbXMubm90YWJpbGl0eX1gO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0Y2FzZSAnUmVxdWVzdGVkIG1vdmUnOlxuXHRcdFx0XHRcdFx0XHRpZiAocGFyYW1zLm1vdmVUYXJnZXQpIHtcblx0XHRcdFx0XHRcdFx0XHQvLyBub3JtYWxpemUgdGhlIG1vdmUgdGFyZ2V0IGZvciBub3cgYW5kIGxhdGVyXG5cdFx0XHRcdFx0XHRcdFx0cGFyYW1zLm1vdmVUYXJnZXQgPSBNb3JlYml0cy5zdHJpbmcudG9VcHBlckNhc2VGaXJzdENoYXIoXG5cdFx0XHRcdFx0XHRcdFx0XHRwYXJhbXMubW92ZVRhcmdldC5yZXBsYWNlKC9fL2csICcgJylcblx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRcdHBhcmFtcy5kaXNjdXNzQXJ0aWNsZSA9IG13LmNvbmZpZy5nZXQoJ3dnVGl0bGUnKTtcblx0XHRcdFx0XHRcdFx0XHRjdXJyZW50VGFnICs9IGB8JHtwYXJhbXMubW92ZVRhcmdldH1gO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0Y2FzZSAnU3BsaXQnOlxuXHRcdFx0XHRcdFx0XHRpZiAocGFyYW1zLnRhcmdldDEpIHtcblx0XHRcdFx0XHRcdFx0XHRjdXJyZW50VGFnICs9IGB8MT0ke3BhcmFtcy50YXJnZXQxfWA7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0aWYgKHBhcmFtcy50YXJnZXQyKSB7XG5cdFx0XHRcdFx0XHRcdFx0Y3VycmVudFRhZyArPSBgfDI9JHtwYXJhbXMudGFyZ2V0Mn1gO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdGlmIChwYXJhbXMudGFyZ2V0Mykge1xuXHRcdFx0XHRcdFx0XHRcdGN1cnJlbnRUYWcgKz0gYHwzPSR7cGFyYW1zLnRhcmdldDN9YDtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdGNhc2UgJ0NsZWFudXAnOlxuXHRcdFx0XHRcdFx0XHRpZiAocGFyYW1zLmNsZWFudXBSZWFzb24pIHtcblx0XHRcdFx0XHRcdFx0XHRjdXJyZW50VGFnICs9IGB8cmVhc29uPSR7cGFyYW1zLmNsZWFudXBSZWFzb259YDtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRjdXJyZW50VGFnICs9ICd8dGltZT17eycuY29uY2F0KCdzdWJzdDonLCAnI3RpbWU6Y319fX1cXG4nKTtcblx0XHRcdFx0XHR0YWdUZXh0ICs9IGN1cnJlbnRUYWc7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cdFx0XHQvKipcblx0XHRcdCAqIEFkZHMgdGhlIHRhZ3Mgd2hpY2ggZ28gb3V0c2lkZSB7e211bHRpcGxlIGlzc3Vlc319LCBlaXRoZXIgYmVjYXVzZVxuXHRcdFx0ICogdGhlc2UgdGFncyBhcmVuJ3Qgc3VwcG9ydGVkIGluIHt7bXVsdGlwbGUgaXNzdWVzfX0gb3IgYmVjYXVzZVxuXHRcdFx0ICoge3ttdWx0aXBsZSBpc3N1ZXN9fSBpcyBub3QgYmVpbmcgYWRkZWQgdG8gdGhlIHBhZ2UgYXQgYWxsXG5cdFx0XHQgKi9cblx0XHRcdGNvbnN0IGFkZFVuZ3JvdXBlZFRhZ3MgPSAoKSA9PiB7XG5cdFx0XHRcdGZvciAoY29uc3QgdGFnIG9mIHRhZ3MpIHtcblx0XHRcdFx0XHRhZGRUYWcodGFnKTtcblx0XHRcdFx0fVxuXHRcdFx0XHQvLyBJbnNlcnQgdGFnIGFmdGVyIHNob3J0IGRlc2NyaXB0aW9uIG9yIGFueSBoYXRub3Rlcyxcblx0XHRcdFx0Ly8gYXMgd2VsbCBhcyBkZWxldGlvbi9wcm90ZWN0aW9uLXJlbGF0ZWQgdGVtcGxhdGVzXG5cdFx0XHRcdGNvbnN0IHFpdXdlbl9wYWdlID0gbmV3IE1vcmViaXRzLndpa2l0ZXh0LnBhZ2UocGFnZVRleHQpO1xuXHRcdFx0XHRjb25zdCB0ZW1wbGF0ZXNBZnRlciA9XG5cdFx0XHRcdFx0Ly8gUHJvdGVjdGlvbiB0ZW1wbGF0ZXNcblx0XHRcdFx0XHQvLyBDU0Rcblx0XHRcdFx0XHQvLyBBZkRcblx0XHRcdFx0XHRgJHtUd2lua2xlLmhhdG5vdGVSZWdleH1wcHxwcC0uKj98KD86RGVsZXRlfERiLXJlYXNvbnxEfERlbGV0ZWJlY2F1c2V8RGJ86YCf5YigfOmAn+WIqnxTcGVlZHl8U0R85b+r5YigfOW/q+WIqnxDU0QpfFtyc2FpZnRjbXZdZmR8dmZkLSg/OmJ8cXxzfHNvdXJjZXx2fHdpa3QpfCg/Ouenu+WKqOWIsOe7tOWfunznp7vli5XliLDntq3ln7opKD865pWZ56eR5LmmfOaVmeenkeabuHzor63lvZV86Kqe6YyEfOaWh+W6k3zmlofluqt85a+85ri4fOWwjumBinzor43lhbh86Kme5YW4KWA7XG5cdFx0XHRcdHBhZ2VUZXh0ID0gcWl1d2VuX3BhZ2UuaW5zZXJ0QWZ0ZXJUZW1wbGF0ZXModGFnVGV4dCwgdGVtcGxhdGVzQWZ0ZXIpLmdldFRleHQoKTtcblx0XHRcdFx0cmVtb3ZlVGFncygpO1xuXHRcdFx0fTtcblx0XHRcdC8vIFNlcGFyYXRlIHRhZ3MgaW50byBncm91cGFibGUgb25lcyAoYGdyb3VwYWJsZVRhZ3NgKSBhbmQgbm9uLWdyb3VwYWJsZSBvbmVzIChgdGFnc2ApXG5cdFx0XHRmb3IgKGNvbnN0IHRhZyBvZiBwYXJhbXMudGFncykge1xuXHRcdFx0XHR0YWdSZSA9IG5ldyBSZWdFeHAoYFxcXFx7XFxcXHske3RhZ30oXFxcXHx8XFxcXH1cXFxcfSlgLCAnaW0nKTtcblx0XHRcdFx0Ly8gcmVnZXggY2hlY2sgZm9yIHByZWV4aXN0ZW5jZSBvZiB0YWcgY2FuIGJlIHNraXBwZWQgaWYgaW4gY2FuUmVtb3ZlIG1vZGVcblx0XHRcdFx0aWYgKFR3aW5rbGUudGFnLmNhblJlbW92ZSB8fCAhdGFnUmUuZXhlYyhwYWdlVGV4dCkpIHtcblx0XHRcdFx0XHRpZiAoXG5cdFx0XHRcdFx0XHR0YWcgPT09ICdOb3RhYmlsaXR5JyAmJlxuXHRcdFx0XHRcdFx0KG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlTnVtYmVyJykgPT09IDAgfHxcblx0XHRcdFx0XHRcdFx0Y29uZmlybShcblx0XHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0XHQn6K+l6aG16Z2i5LiN5piv5p2h55uu77yM5oKo5LuN6KaB5o+Q5oql5Yiw5YWz5rOo5bqm5o+Q5oql5ZCX77yfJyxcblx0XHRcdFx0XHRcdFx0XHRcdCfoqbLpoIHpnaLkuI3mmK/mop3nm67vvIzmgqjku43opoHmj5DloLHliLDpl5zms6jluqbmj5DloLHll47vvJ8nXG5cdFx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0XHQpKVxuXHRcdFx0XHRcdCkge1xuXHRcdFx0XHRcdFx0Y29uc3QgcWl1d2VuX3BhZ2UgPSBuZXcgTW9yZWJpdHMud2lraS5wYWdlKFxuXHRcdFx0XHRcdFx0XHQnUWl1d2VuX3RhbGs65a2Y5bqf6K6o6K66L+WFs+azqOW6puaPkOaKpScsXG5cdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5Yqg5YWl5YWz5rOo5bqm6K6w5b2V6aG5JywgJ+WKoOWFpemXnOazqOW6puiomOmMhOmghScpXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0cWl1d2VuX3BhZ2Uuc2V0Rm9sbG93UmVkaXJlY3QodHJ1ZSk7XG5cdFx0XHRcdFx0XHRxaXV3ZW5fcGFnZS5zZXRDYWxsYmFja1BhcmFtZXRlcnMocGFyYW1zKTtcblx0XHRcdFx0XHRcdHFpdXdlbl9wYWdlLmxvYWQoVHdpbmtsZS50YWcuY2FsbGJhY2tzLm5vdGFiaWxpdHlMaXN0KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Ly8gY29uZGl0aW9uIFR3aW5rbGUudGFnLmFydGljbGUudGFnc1t0YWddIHRvIGVuc3VyZSB0aGF0IGl0cyBub3QgYSBjdXN0b20gdGFnXG5cdFx0XHRcdFx0Ly8gQ3VzdG9tIHRhZ3MgYXJlIGFzc3VtZWQgbm9uLWdyb3VwYWJsZSwgc2luY2Ugd2UgZG9uJ3Qga25vdyB3aGV0aGVyIE1JIHRlbXBsYXRlIHN1cHBvcnRzIHRoZW1cblx0XHRcdFx0XHRpZiAoVHdpbmtsZS50YWcuYXJ0aWNsZS5mbGF0T2JqZWN0W3RhZ10gJiYgIVR3aW5rbGUudGFnLmFydGljbGUuZmxhdE9iamVjdFt0YWddLmV4Y2x1ZGVNSSkge1xuXHRcdFx0XHRcdFx0Z3JvdXBhYmxlVGFnc1tncm91cGFibGVUYWdzLmxlbmd0aF0gPSB0YWc7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHRhZ3NbdGFncy5sZW5ndGhdID0gdGFnO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSBlbHNlIGlmICh0YWcgPT09ICdNZXJnZSBmcm9tJykge1xuXHRcdFx0XHRcdHRhZ3NbdGFncy5sZW5ndGhdID0gdGFnO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdE1vcmViaXRzLnN0YXR1cy53YXJuKFxuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfkv6Hmga8nLCAn6LOH6KiKJyksXG5cdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+WcqOmhtemdouS4iuaJvuWIsHt7JywgJ+WcqOmggemdouS4iuaJvuWIsHt7JykgKyB0YWcgKyB3aW5kb3cud2dVTFMoJ3194oCm4oCm6Lez6L+HJywgJ3194oCm4oCm6Lez6YGOJylcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdC8vIGRvbid0IGRvIGFueXRoaW5nIGVsc2Ugd2l0aCBtZXJnZSB0YWdzXG5cdFx0XHRcdFx0aWYgKFsnTWVyZ2UnLCAnTWVyZ2UgdG8nXS5pbmNsdWRlcyh0YWcpKSB7XG5cdFx0XHRcdFx0XHRwYXJhbXMubWVyZ2VUYXJnZXQgPSBudWxsO1xuXHRcdFx0XHRcdFx0cGFyYW1zLm1lcmdlUmVhc29uID0gbnVsbDtcblx0XHRcdFx0XHRcdHBhcmFtcy5tZXJnZVRhZ090aGVyID0gbnVsbDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdC8vIFRvLWJlLXJldGFpbmVkIGV4aXN0aW5nIHRhZ3MgdGhhdCBhcmUgZ3JvdXBhYmxlXG5cdFx0XHRmb3IgKGNvbnN0IHRhZyBvZiBwYXJhbXMudGFnc1RvUmVtYWluKSB7XG5cdFx0XHRcdC8vIElmIHRoZSB0YWcgaXMgdW5rbm93biB0byB1cywgd2UgY29uc2lkZXIgaXQgbm9uLWdyb3VwYWJsZVxuXHRcdFx0XHRpZiAoVHdpbmtsZS50YWcuYXJ0aWNsZS5mbGF0T2JqZWN0W3RhZ10gJiYgIVR3aW5rbGUudGFnLmFydGljbGUuZmxhdE9iamVjdFt0YWddLmV4Y2x1ZGVNSSkge1xuXHRcdFx0XHRcdGdyb3VwYWJsZUV4aXN0aW5nVGFnc1tncm91cGFibGVFeGlzdGluZ1RhZ3MubGVuZ3RoXSA9IHRhZztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0Y29uc3QgbWlUZXN0ID1cblx0XHRcdFx0L1xce1xceyhtdWx0aXBsZSA/aXNzdWVzfGFydGljbGUgP2lzc3Vlc3xtaXxhaXxpc3N1ZXN85aSa5YCL5ZWP6aGMfOWkmuS4qumXrumimHzllY/poYzmop3nm6586Zeu6aKY5p2h55uufOaVuOWAi+WVj+mhjHzmlbDkuKrpl67popgpXFxzKlxcfFtefV0rXFx7L2ltLmV4ZWMoXG5cdFx0XHRcdFx0cGFnZVRleHRcblx0XHRcdFx0KTtcblx0XHRcdGlmIChtaVRlc3QgJiYgZ3JvdXBhYmxlVGFncy5sZW5ndGggPiAwKSB7XG5cdFx0XHRcdE1vcmViaXRzLnN0YXR1cy5pbmZvKFxuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5L+h5oGvJywgJ+izh+ioiicpLFxuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfliqDlhaXmlK/mjIHnmoTmoIforrDlhaXlt7LlrZjlnKjnmoR7e211bHRpcGxlIGlzc3Vlc319Jyxcblx0XHRcdFx0XHRcdCfliqDlhaXmlK/mj7TnmoTmqJnoqJjlhaXlt7LlrZjlnKjnmoR7e211bHRpcGxlIGlzc3Vlc319J1xuXHRcdFx0XHRcdClcblx0XHRcdFx0KTtcblx0XHRcdFx0dGFnVGV4dCA9ICcnO1xuXHRcdFx0XHRmb3IgKGNvbnN0IHRhZyBvZiBncm91cGFibGVUYWdzKSB7XG5cdFx0XHRcdFx0YWRkVGFnKHRhZyk7XG5cdFx0XHRcdH1cblx0XHRcdFx0Y29uc3QgbWlSZWdleCA9IG5ldyBSZWdFeHAoXG5cdFx0XHRcdFx0YChcXFxce1xcXFx7XFxcXHMqJHttaVRlc3RbMV19XFxcXHMqKD86XFxcXHwoPzpcXFxce1xcXFx7W157fV0qXFxcXH1cXFxcfXxbXnt9XSkqKT8pXFxcXH1cXFxcfVxcXFxzKmAsXG5cdFx0XHRcdFx0J2ltJ1xuXHRcdFx0XHQpO1xuXHRcdFx0XHRwYWdlVGV4dCA9IHBhZ2VUZXh0LnJlcGxhY2UobWlSZWdleCwgYCQxJHt0YWdUZXh0fX19XFxuYCk7XG5cdFx0XHRcdHRhZ1RleHQgPSAnJztcblx0XHRcdFx0YWRkVW5ncm91cGVkVGFncygpO1xuXHRcdFx0fSBlbHNlIGlmIChwYXJhbXMuZ3JvdXAgJiYgIW1pVGVzdCAmJiBncm91cGFibGVFeGlzdGluZ1RhZ3MubGVuZ3RoICsgZ3JvdXBhYmxlVGFncy5sZW5ndGggPj0gMikge1xuXHRcdFx0XHRNb3JlYml0cy5zdGF0dXMuaW5mbyhcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+S/oeaBrycsICfos4foqIonKSxcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+WKoOWFpeaUr+aMgeeahOagh+iusOWFpXt7bXVsdGlwbGUgaXNzdWVzfX0nLCAn5Yqg5YWl5pSv5o+055qE5qiZ6KiY5YWle3ttdWx0aXBsZSBpc3N1ZXN9fScpXG5cdFx0XHRcdCk7XG5cdFx0XHRcdHRhZ1RleHQgKz0gJ3t7TXVsdGlwbGUgaXNzdWVzfFxcbic7XG5cdFx0XHRcdC8qKlxuXHRcdFx0XHQgKiBBZGRzIG5ld2x5IGFkZGVkIHRhZ3MgdG8gTUlcblx0XHRcdFx0ICovXG5cdFx0XHRcdGNvbnN0IGFkZE5ld1RhZ3NUb01JID0gKCkgPT4ge1xuXHRcdFx0XHRcdGZvciAoY29uc3QgdGFnIG9mIGdyb3VwYWJsZVRhZ3MpIHtcblx0XHRcdFx0XHRcdGFkZFRhZyh0YWcpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR0YWdUZXh0ICs9ICd9fVxcbic7XG5cdFx0XHRcdFx0YWRkVW5ncm91cGVkVGFncygpO1xuXHRcdFx0XHR9O1xuXHRcdFx0XHRjb25zdCBnZXRSZWRpcmVjdHNGb3IgPSBbXTtcblx0XHRcdFx0Ly8gUmVwb3NpdGlvbiB0aGUgdGFncyBvbiB0aGUgcGFnZSBpbnRvIHt7bXVsdGlwbGUgaXNzdWVzfX0sIGlmIGZvdW5kIHdpdGggaXRzXG5cdFx0XHRcdC8vIHByb3BlciBuYW1lLCBlbHNlIG1vdmVzIGl0IHRvIGBnZXRSZWRpcmVjdHNGb3JgIGFycmF5IHRvIGJlIGhhbmRsZWQgbGF0ZXJcblx0XHRcdFx0Zm9yIChjb25zdCB0YWcgb2YgZ3JvdXBhYmxlRXhpc3RpbmdUYWdzKSB7XG5cdFx0XHRcdFx0Y29uc3QgdGFnX3JlID0gbmV3IFJlZ0V4cChgKFxcXFx7XFxcXHske01vcmViaXRzLnBhZ2VOYW1lUmVnZXgodGFnKX1cXFxccyooXFxcXHxbXn1dKyk/XFxcXH1cXFxcfVxcXFxuPylgKTtcblx0XHRcdFx0XHRpZiAodGFnX3JlLnRlc3QocGFnZVRleHQpKSB7XG5cdFx0XHRcdFx0XHR0YWdUZXh0ICs9IHRhZ19yZS5leGVjKHBhZ2VUZXh0KVsxXTtcblx0XHRcdFx0XHRcdHBhZ2VUZXh0ID0gcGFnZVRleHQucmVwbGFjZSh0YWdfcmUsICcnKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0Z2V0UmVkaXJlY3RzRm9yW2dldFJlZGlyZWN0c0Zvci5sZW5ndGhdID0gYFRlbXBsYXRlOiR7dGFnfWA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICghZ2V0UmVkaXJlY3RzRm9yLmxlbmd0aCkge1xuXHRcdFx0XHRcdGFkZE5ld1RhZ3NUb01JKCk7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGNvbnN0IGFwaSA9IG5ldyBNb3JlYml0cy53aWtpLmFwaShcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+iOt+WPluaooeadv+mHjeWumuWQkScsICflj5blvpfmqKHmnb/ph43mlrDlsI7lkJEnKSxcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRhY3Rpb246ICdxdWVyeScsXG5cdFx0XHRcdFx0XHRwcm9wOiAnbGlua3NoZXJlJyxcblx0XHRcdFx0XHRcdHRpdGxlczogZ2V0UmVkaXJlY3RzRm9yLmpvaW4oJ3wnKSxcblx0XHRcdFx0XHRcdHJlZGlyZWN0czogMSxcblx0XHRcdFx0XHRcdGxobmFtZXNwYWNlOiAnMTAnLFxuXHRcdFx0XHRcdFx0bGhzaG93OiAncmVkaXJlY3QnLFxuXHRcdFx0XHRcdFx0bGhsaW1pdDogJ21heCcsIC8vIDUwMCBpcyBtYXggZm9yIG5vcm1hbCB1c2VycywgNTAwMCBmb3IgYm90cyBhbmQgc3lzb3BzXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHQoYXBpb2JqKSA9PiB7XG5cdFx0XHRcdFx0XHQkKGFwaW9iai5yZXNwb25zZVhNTClcblx0XHRcdFx0XHRcdFx0LmZpbmQoJ3BhZ2UnKVxuXHRcdFx0XHRcdFx0XHQuZWFjaCgoX2lkeCwgcGFnZSkgPT4ge1xuXHRcdFx0XHRcdFx0XHRcdGxldCBmb3VuZCA9IGZhbHNlO1xuXHRcdFx0XHRcdFx0XHRcdCQocGFnZSlcblx0XHRcdFx0XHRcdFx0XHRcdC5maW5kKCdsaCcpXG5cdFx0XHRcdFx0XHRcdFx0XHQuZWFjaCgoX2luZGV4LCBlbGVtZW50KSA9PiB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGNvbnN0IHRhZyA9ICQoZWxlbWVudCkuYXR0cigndGl0bGUnKS5zbGljZSg5KTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0Y29uc3QgdGFnX3JlID0gbmV3IFJlZ0V4cChcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRgKFxcXFx7XFxcXHske01vcmViaXRzLnBhZ2VOYW1lUmVnZXgodGFnKX1cXFxccyooXFxcXHxbXn1dKik/XFxcXH1cXFxcfVxcXFxuPylgXG5cdFx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICh0YWdfcmUudGVzdChwYWdlVGV4dCkpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0YWdUZXh0ICs9IHRhZ19yZS5leGVjKHBhZ2VUZXh0KVsxXTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRwYWdlVGV4dCA9IHBhZ2VUZXh0LnJlcGxhY2UodGFnX3JlLCAnJyk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Zm91bmQgPSB0cnVlO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybiBmYWxzZTsgLy8gYnJlYWsgb3V0IG9mICQuZWFjaFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHR9KTtcblxuXHRcdFx0XHRcdFx0XHRcdGlmICghZm91bmQpIHtcblx0XHRcdFx0XHRcdFx0XHRcdE1vcmViaXRzLnN0YXR1cy53YXJuKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+S/oeaBrycsICfos4foqIonKSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfml6Dms5XlnKjpobXpnaLkuIrmib7liLB7eycsICfnhKHms5XlnKjpoIHpnaLkuIrmib7liLB7eycpICtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQkKHBhZ2UpLmF0dHIoJ3RpdGxlJykuc2xpY2UoOSkgK1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygnfX3igKbigKbot7Pov4cnLCAnfX3igKbigKbot7PpgY4nKVxuXHRcdFx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0YWRkTmV3VGFnc1RvTUkoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdCk7XG5cdFx0XHRcdGFwaS5wb3N0KCk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0YWdzID0gWy4uLnRhZ3MsIC4uLmdyb3VwYWJsZVRhZ3NdO1xuXHRcdFx0XHRhZGRVbmdyb3VwZWRUYWdzKCk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRub3RhYmlsaXR5TGlzdDogKHBhZ2VvYmopID0+IHtcblx0XHRcdHBhZ2VvYmouc2V0QXBwZW5kVGV4dCgnXFxue3snLmNvbmNhdCgnc3Vic3Q6JywgYEZhbWVpdGVtfHRpdGxlPSR7TW9yZWJpdHMucGFnZU5hbWVOb3JtfX19YCkpO1xuXHRcdFx0cGFnZW9iai5zZXRFZGl0U3VtbWFyeShg5Yqg5YWlW1ske01vcmViaXRzLnBhZ2VOYW1lTm9ybX1dXWApO1xuXHRcdFx0cGFnZW9iai5zZXRDaGFuZ2VUYWdzKFR3aW5rbGUuY2hhbmdlVGFncyk7XG5cdFx0XHRwYWdlb2JqLnNldENyZWF0ZU9wdGlvbigncmVjcmVhdGUnKTtcblx0XHRcdHBhZ2VvYmouYXBwZW5kKCk7XG5cdFx0fSxcblx0XHRyZWRpcmVjdDogKHBhZ2VvYmopID0+IHtcblx0XHRcdGNvbnN0IHBhcmFtcyA9IHBhZ2VvYmouZ2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKCk7XG5cdFx0XHRsZXQgcGFnZVRleHQgPSBwYWdlb2JqLmdldFBhZ2VUZXh0KCk7XG5cdFx0XHRsZXQgdGFnUmU7XG5cdFx0XHRsZXQgdGFnVGV4dCA9ICcnO1xuXHRcdFx0bGV0IHN1bW1hcnlUZXh0ID0gJ+WKoOWFpSc7XG5cdFx0XHRjb25zdCB0YWdzID0gW107XG5cdFx0XHRsZXQgaTtcblx0XHRcdGZvciAoaSA9IDA7IGkgPCBwYXJhbXMudGFncy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHR0YWdSZSA9IG5ldyBSZWdFeHAoYChcXFxce1xcXFx7JHtwYXJhbXMudGFnc1tpXX0oXFxcXHx8XFxcXH1cXFxcfSkpYCwgJ2ltJyk7XG5cdFx0XHRcdGlmICh0YWdSZS5leGVjKHBhZ2VUZXh0KSkge1xuXHRcdFx0XHRcdE1vcmViaXRzLnN0YXR1cy53YXJuKFxuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfkv6Hmga8nLCAn6LOH6KiKJyksXG5cdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+WcqOmHjeWumuWQkeS4iuaJvuWIsHt7JywgJ+WcqOmHjeaWsOWwjuWQkeS4iuaJvuWIsHt7JykgK1xuXHRcdFx0XHRcdFx0XHRwYXJhbXMudGFnc1tpXSArXG5cdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygnfX3igKbigKbot7Pov4cnLCAnfX3igKbigKbot7PpgY4nKVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dGFnc1t0YWdzLmxlbmd0aF0gPSBwYXJhbXMudGFnc1tpXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0Ly8gdXNlZCBpbiBBcnJheSNmb3JFYWNoXG5cdFx0XHRjb25zdCBhZGRUYWcgPSAodGFnTmFtZSwgdGFnSW5kZXgpID0+IHtcblx0XHRcdFx0dGFnVGV4dCArPSBgXFxue3ske3RhZ05hbWV9YDtcblx0XHRcdFx0aWYgKHRhZ05hbWUgPT09ICfpnZ7kuK3mlofph43lrprlkJEnKSB7XG5cdFx0XHRcdFx0aWYgKHBhcmFtcy5hbHRMYW5nRnJvbSkge1xuXHRcdFx0XHRcdFx0dGFnVGV4dCArPSBgfDE9JHtwYXJhbXMuYWx0TGFuZ0Zyb219YDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gZWxzZSBpZiAoXG5cdFx0XHRcdFx0KHRhZ05hbWUgPT09ICfmnaHnm67or7fmsYLph43lrprlkJEnIHx8IHRhZ05hbWUgPT09ICfmop3nm67oq4vmsYLph43lrprlkJEnKSAmJlxuXHRcdFx0XHRcdHBhcmFtcy5yZXFBcnRpY2xlTGFuZyAmJlxuXHRcdFx0XHRcdHBhcmFtcy5yZXFBcnRpY2xlVGl0bGVcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0dGFnVGV4dCArPSBgfDE9JHtwYXJhbXMucmVxQXJ0aWNsZUxhbmd9YDtcblx0XHRcdFx0XHR0YWdUZXh0ICs9IGB8Mj0ke3BhcmFtcy5yZXFBcnRpY2xlVGl0bGV9YDtcblx0XHRcdFx0fVxuXHRcdFx0XHR0YWdUZXh0ICs9ICd9fSc7XG5cdFx0XHRcdGlmICh0YWdJbmRleCA+IDApIHtcblx0XHRcdFx0XHRpZiAodGFnSW5kZXggPT09IHRhZ3MubGVuZ3RoIC0gMSkge1xuXHRcdFx0XHRcdFx0c3VtbWFyeVRleHQgKz0gJ+WSjCc7XG5cdFx0XHRcdFx0fSBlbHNlIGlmICh0YWdJbmRleCA8IHRhZ3MubGVuZ3RoIC0gMSkge1xuXHRcdFx0XHRcdFx0c3VtbWFyeVRleHQgKz0gJ+OAgSc7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHN1bW1hcnlUZXh0ICs9IGB7e1tbOiR7dGFnTmFtZS5pbmNsdWRlcygnOicpID8gdGFnTmFtZSA6IGBUZW1wbGF0ZToke3RhZ05hbWV9fCR7dGFnTmFtZX1gfV1dfX1gO1xuXHRcdFx0fTtcblx0XHRcdGlmICghdGFncy5sZW5ndGgpIHtcblx0XHRcdFx0TW9yZWJpdHMuc3RhdHVzLndhcm4oXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKCfkv6Hmga8nLCAn6LOH6KiKJyksXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKCfmsqHmnInmoIfnrb7lj6/kvpvmoIforrAnLCAn5rKS5pyJ5qiZ57Gk5Y+v5L6b5qiZ6KiYJylcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHRcdHRhZ3Muc29ydCgpO1xuXHRcdFx0Zm9yIChjb25zdCB0YWcgb2YgdGFncykge1xuXHRcdFx0XHRhZGRUYWcodGFnKTtcblx0XHRcdH1cblx0XHRcdC8vIENoZWNrIGZvciBhbGwgUmNhdCBzaGVsbCByZWRpcmVjdHMgKGZyb20gIzQzMylcblx0XHRcdGlmIChwYWdlVGV4dC5tYXRjaCgve3soPzpyZWRyfHRoaXMgaXMgYSByZWRpcmVjdHxyKD86ZWRpcmVjdCk/KD86Lj9jYXQuKik/WyBfXT9zaCkvaSkpIHtcblx0XHRcdFx0Ly8gUmVnZXggaW5zcGlyZWQgYnkgW1tVc2VyOktlcGhpci9nYWRnZXRzL3NhZ2l0dGFyaXVzLmpzXV0gKFtbU3BlY2lhbDpQZXJtYUxpbmsvODMxNDAyODkzXV0pXG5cdFx0XHRcdGNvbnN0IG9sZFRhZ3MgPSBwYWdlVGV4dC5tYXRjaCgvKFxccyp7e1tBLVphLXpcXHNdK1xcfCg/OlxccyoxPSk/KSgoPzpbXnx7fV18e3tbXn1dK319KSspKH19KVxccyovaSk7XG5cdFx0XHRcdHBhZ2VUZXh0ID0gcGFnZVRleHQucmVwbGFjZShvbGRUYWdzWzBdLCBvbGRUYWdzWzFdICsgdGFnVGV4dCArIG9sZFRhZ3NbMl0gKyBvbGRUYWdzWzNdKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdC8vIEZvbGQgYW55IHByZS1leGlzdGluZyBSY2F0cyBpbnRvIHRhZ2xpc3QgYW5kIHVuZGVyIFJjYXRzaGVsbFxuXHRcdFx0XHRjb25zdCBwYWdlVGFncyA9IHBhZ2VUZXh0Lm1hdGNoKC9cXHMqe3suKz/ph43lrprlkJEuKj99fS9naW0pO1xuXHRcdFx0XHRsZXQgb2xkUGFnZVRhZ3MgPSAnJztcblx0XHRcdFx0aWYgKHBhZ2VUYWdzKSB7XG5cdFx0XHRcdFx0Zm9yIChsZXQgcGFnZVRhZyBvZiBwYWdlVGFncykge1xuXHRcdFx0XHRcdFx0Y29uc3QgcGFnZVJlID0gbmV3IFJlZ0V4cChNb3JlYml0cy5zdHJpbmcuZXNjYXBlUmVnRXhwKHBhZ2VUYWcpLCAnaW1nJyk7XG5cdFx0XHRcdFx0XHRwYWdlVGV4dCA9IHBhZ2VUZXh0LnJlcGxhY2UocGFnZVJlLCAnJyk7XG5cdFx0XHRcdFx0XHRwYWdlVGFnID0gcGFnZVRhZy50cmltKCk7XG5cdFx0XHRcdFx0XHRvbGRQYWdlVGFncyArPSBgXFxuJHtwYWdlVGFnfWA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHBhZ2VUZXh0ICs9IGBcXG57e1JlZGlyZWN0IGNhdGVnb3J5IHNoZWxsfCR7dGFnVGV4dH0ke29sZFBhZ2VUYWdzfVxcbn19YDtcblx0XHRcdH1cblx0XHRcdHN1bW1hcnlUZXh0ICs9XG5cdFx0XHRcdCh0YWdzLmxlbmd0aCA+IDAgPyB3aW5kb3cud2dVTFMoJ+agh+iusCcsICfmqJnoqJgnKSA6ICd7e1JlZGlyZWN0IGNhdGVnb3J5IHNoZWxsfX0nKSArXG5cdFx0XHRcdHdpbmRvdy53Z1VMUygn5Yiw6YeN5a6a5ZCRJywgJ+WIsOmHjeaWsOWwjuWQkScpO1xuXHRcdFx0Ly8gYXZvaWQgdHJ1bmNhdGVkIHN1bW1hcmllc1xuXHRcdFx0aWYgKHN1bW1hcnlUZXh0Lmxlbmd0aCA+IDQ5OSkge1xuXHRcdFx0XHRzdW1tYXJ5VGV4dCA9IHN1bW1hcnlUZXh0LnJlcGxhY2UoL1xcW1xcW1tefF0rXFx8KFteXFxdXSspXFxdXFxdL2csICckMScpO1xuXHRcdFx0fVxuXHRcdFx0cGFnZW9iai5zZXRQYWdlVGV4dChwYWdlVGV4dCk7XG5cdFx0XHRwYWdlb2JqLnNldEVkaXRTdW1tYXJ5KHN1bW1hcnlUZXh0KTtcblx0XHRcdHBhZ2VvYmouc2V0Q2hhbmdlVGFncyhUd2lua2xlLmNoYW5nZVRhZ3MpO1xuXHRcdFx0cGFnZW9iai5zZXRXYXRjaGxpc3QoVHdpbmtsZS5nZXRQcmVmKCd3YXRjaFRhZ2dlZFBhZ2VzJykpO1xuXHRcdFx0cGFnZW9iai5zZXRNaW5vckVkaXQoVHdpbmtsZS5nZXRQcmVmKCdtYXJrVGFnZ2VkUGFnZXNBc01pbm9yJykpO1xuXHRcdFx0cGFnZW9iai5zZXRDcmVhdGVPcHRpb24oJ25vY3JlYXRlJyk7XG5cdFx0XHRwYWdlb2JqLnNhdmUoKTtcblx0XHRcdGlmIChwYXJhbXMucGF0cm9sKSB7XG5cdFx0XHRcdHBhZ2VvYmoucGF0cm9sKCk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRmaWxlOiAocGFnZW9iaikgPT4ge1xuXHRcdFx0bGV0IHRleHQgPSBwYWdlb2JqLmdldFBhZ2VUZXh0KCk7XG5cdFx0XHRjb25zdCBwYXJhbXMgPSBwYWdlb2JqLmdldENhbGxiYWNrUGFyYW1ldGVycygpO1xuXHRcdFx0bGV0IHN1bW1hcnkgPSAn5Yqg5YWlJztcblx0XHRcdC8vIEFkZCBtYWludGVuYW5jZSB0YWdzXG5cdFx0XHRpZiAocGFyYW1zLnRhZ3MubGVuZ3RoKSB7XG5cdFx0XHRcdGxldCB0YWd0ZXh0ID0gJyc7XG5cdFx0XHRcdGxldCBjdXJyZW50VGFnO1xuXHRcdFx0XHRmb3IgKGNvbnN0IHRhZyBvZiBwYXJhbXMudGFncykge1xuXHRcdFx0XHRcdC8vIHdoZW4gb3RoZXIgY29tbW9ucy1yZWxhdGVkIHRhZ3MgYXJlIHBsYWNlZCwgcmVtb3ZlIFwibW92ZSB0byBTaGFyZVwiIHRhZ1xuXHRcdFx0XHRcdGlmIChbJ0tlZXAgbG9jYWwnLCAnTm93IFFpdXdlbiBTaGFyZScsICdEbyBub3QgbW92ZSB0byBRaXV3ZW4gU2hhcmUnXS5pbmNsdWRlcyh0YWcpKSB7XG5cdFx0XHRcdFx0XHR0ZXh0ID0gdGV4dC5yZXBsYWNlKFxuXHRcdFx0XHRcdFx0XHQve3sobXRjfChjb3B5IHxtb3ZlICk/dG8gP3NoYXJlfG1vdmUgdG8gcWl1d2VuIHNoYXJlfGNvcHkgdG8gcWl1d2VuIHNoYXJlKVtefV0qfX0vZ2ksXG5cdFx0XHRcdFx0XHRcdCcnXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAodGFnID09PSAnVmVjdG9yIHZlcnNpb24gYXZhaWxhYmxlJykge1xuXHRcdFx0XHRcdFx0dGV4dCA9IHRleHQucmVwbGFjZShcblx0XHRcdFx0XHRcdFx0L1xce1xceygoY29udmVydCB0byB8Y29udmVydHRvfHNob3VsZCBiZSB8c2hvdWxkYmV8dG8pP3N2Z3xiYWRwbmd8dmVjdG9yaXplKVtefV0qXFx9XFx9L2dpLFxuXHRcdFx0XHRcdFx0XHQnJ1xuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Y3VycmVudFRhZyA9IHRhZztcblx0XHRcdFx0XHRzd2l0Y2ggKHRhZykge1xuXHRcdFx0XHRcdFx0Y2FzZSAnTm93IENvbW1vbnMnOlxuXHRcdFx0XHRcdFx0XHRjdXJyZW50VGFnID0gYHN1YnN0OiR7Y3VycmVudFRhZ31gOyAvLyBzdWJzdFxuXHRcdFx0XHRcdFx0XHRpZiAocGFyYW1zLm5vd2NvbW1vbnNOYW1lICE9PSAnJykge1xuXHRcdFx0XHRcdFx0XHRcdGN1cnJlbnRUYWcgKz0gYHwxPSR7cGFyYW1zLm5vd2NvbW1vbnNOYW1lfWA7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRjYXNlICdLZWVwIGxvY2FsJzpcblx0XHRcdFx0XHRcdFx0aWYgKHBhcmFtcy5rZWVwbG9jYWxOYW1lICE9PSAnJykge1xuXHRcdFx0XHRcdFx0XHRcdGN1cnJlbnRUYWcgKz0gYHwxPSR7cGFyYW1zLmtlZXBsb2NhbE5hbWV9YDtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRpZiAocGFyYW1zLmtlZXBsb2NhbFJlYXNvbiAhPT0gJycpIHtcblx0XHRcdFx0XHRcdFx0XHRjdXJyZW50VGFnICs9IGB8cmVhc29uPSR7cGFyYW1zLmtlZXBsb2NhbFJlYXNvbn1gO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0Y2FzZSAnUmVuYW1lIG1lZGlhJzpcblx0XHRcdFx0XHRcdFx0aWYgKHBhcmFtcy5yZW5hbWVtZWRpYU5ld25hbWUgIT09ICcnKSB7XG5cdFx0XHRcdFx0XHRcdFx0Y3VycmVudFRhZyArPSBgfDE9JHtwYXJhbXMucmVuYW1lbWVkaWFOZXduYW1lfWA7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0aWYgKHBhcmFtcy5yZW5hbWVtZWRpYVJlYXNvbiAhPT0gJycpIHtcblx0XHRcdFx0XHRcdFx0XHRjdXJyZW50VGFnICs9IGB8Mj0ke3BhcmFtcy5yZW5hbWVtZWRpYVJlYXNvbn1gO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0Y2FzZSAnVmVjdG9yIHZlcnNpb24gYXZhaWxhYmxlJzpcblx0XHRcdFx0XHRcdC8qIGZhbGxzIHRocm91Z2ggKi9cblx0XHRcdFx0XHRcdGNhc2UgJ09ic29sZXRlJzpcblx0XHRcdFx0XHRcdFx0Y3VycmVudFRhZyArPSBgfDE9JHtwYXJhbXNbYCR7dGFnLnJlcGxhY2UoLyAvZywgJ18nKX1GaWxlYF19YDtcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRjYXNlICdEbyBub3QgbW92ZSB0byBDb21tb25zJzpcblx0XHRcdFx0XHRcdFx0Y3VycmVudFRhZyArPSBgfHJlYXNvbj0ke3BhcmFtcy5Eb05vdE1vdmVUb0NvbW1vbnNfcmVhc29ufWA7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0Y2FzZSAnQ29weSB0byBXaWtpbWVkaWEgQ29tbW9ucyc6XG5cdFx0XHRcdFx0XHRcdGN1cnJlbnRUYWcgKz0gYHxodW1hbj0ke213LmNvbmZpZy5nZXQoJ3dnVXNlck5hbWUnKX1gO1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0Ly8gZG9uJ3QgY2FyZVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGN1cnJlbnRUYWcgPSBge3ske2N1cnJlbnRUYWd9fX1cXG5gO1xuXHRcdFx0XHRcdHRhZ3RleHQgKz0gY3VycmVudFRhZztcblx0XHRcdFx0XHRzdW1tYXJ5ICs9IGB7eyR7dGFnfX1944CBYDtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoIXRhZ3RleHQpIHtcblx0XHRcdFx0XHRwYWdlb2JqXG5cdFx0XHRcdFx0XHQuZ2V0U3RhdHVzRWxlbWVudCgpXG5cdFx0XHRcdFx0XHQud2Fybih3aW5kb3cud2dVTFMoJ+eUqOaIt+WPlua2iOaTjeS9nO+8jOayoeS7gOS5iOimgeWBmueahCcsICfkvb/nlKjogIXlj5bmtojmk43kvZzvvIzmspLku4DpurzopoHlgZrnmoQnKSk7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHRleHQgPSB0YWd0ZXh0ICsgdGV4dDtcblx0XHRcdH1cblx0XHRcdHBhZ2VvYmouc2V0UGFnZVRleHQodGV4dCk7XG5cdFx0XHRwYWdlb2JqLnNldEVkaXRTdW1tYXJ5KHN1bW1hcnkuc2xpY2UoMCwgTWF0aC5tYXgoMCwgc3VtbWFyeS5sZW5ndGggLSAxKSkpO1xuXHRcdFx0cGFnZW9iai5zZXRDaGFuZ2VUYWdzKFR3aW5rbGUuY2hhbmdlVGFncyk7XG5cdFx0XHRwYWdlb2JqLnNldFdhdGNobGlzdChUd2lua2xlLmdldFByZWYoJ3dhdGNoVGFnZ2VkUGFnZXMnKSk7XG5cdFx0XHRwYWdlb2JqLnNldE1pbm9yRWRpdChUd2lua2xlLmdldFByZWYoJ21hcmtUYWdnZWRQYWdlc0FzTWlub3InKSk7XG5cdFx0XHRwYWdlb2JqLnNldENyZWF0ZU9wdGlvbignbm9jcmVhdGUnKTtcblx0XHRcdHBhZ2VvYmouc2F2ZSgpO1xuXHRcdFx0aWYgKHBhcmFtcy5wYXRyb2wpIHtcblx0XHRcdFx0cGFnZW9iai5wYXRyb2woKTtcblx0XHRcdH1cblx0XHR9LFxuXHR9O1xuXHRUd2lua2xlLnRhZy5jYWxsYmFjay5ldmFsdWF0ZSA9IChlKSA9PiB7XG5cdFx0Y29uc3QgZm9ybSA9IGUudGFyZ2V0O1xuXHRcdGNvbnN0IHBhcmFtcyA9IE1vcmViaXRzLnF1aWNrRm9ybS5nZXRJbnB1dERhdGEoZm9ybSk7XG5cdFx0Ly8gVmFsaWRhdGlvblxuXHRcdC8vIEdpdmVuIGFuIGFycmF5IG9mIGluY29tcGF0aWJsZSB0YWdzLCBjaGVjayBpZiB3ZSBoYXZlIHR3byBvciBtb3JlIHNlbGVjdGVkXG5cdFx0Y29uc3QgY2hlY2tJbmNvbXBhdGlibGUgPSAoY29uZmxpY3RzLCBleHRyYSkgPT4ge1xuXHRcdFx0Y29uc3QgY291bnQgPSBjb25mbGljdHMucmVkdWNlKChzdW0sIHRhZykgPT4ge1xuXHRcdFx0XHRyZXR1cm4gKHN1bSArPSBwYXJhbXMudGFncy5pbmNsdWRlcyh0YWcpKTtcblx0XHRcdH0sIDApO1xuXHRcdFx0aWYgKGNvdW50ID4gMSkge1xuXHRcdFx0XHRsZXQgbWVzc2FnZSA9IGAke3dpbmRvdy53Z1VMUygn6K+35Zyo5Lul5LiL5qCH562+5Lit5oup5LiA5L2/55SoJywgJ+iri+WcqOS7peS4i+aomeexpOS4reaTh+S4gOS9v+eUqCcpfe+8mnt7JHtjb25mbGljdHMuam9pbihcblx0XHRcdFx0XHQnfX3jgIF7eydcblx0XHRcdFx0KX19feOAgmA7XG5cdFx0XHRcdG1lc3NhZ2UgKz0gZXh0cmEgfHwgJyc7XG5cdFx0XHRcdHZvaWQgbXcubm90aWZ5KG1lc3NhZ2UsIHtcblx0XHRcdFx0XHR0eXBlOiAnd2FybicsXG5cdFx0XHRcdFx0dGFnOiAnZnJpZW5kbHl0YWcnLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9XG5cdFx0fTtcblx0XHQvLyBHaXZlbiBhIHRhZywgZW5zdXJlIGFuIGFzc29jaWF0ZSBwYXJhbWV0ZXIgaXMgcHJlc2VudFxuXHRcdC8vIE1heWJlIGp1c3Qgc29jayB0aGlzIGF3YXkgaW4gZWFjaCBmdW5jdGlvbj8/P1xuXHRcdGNvbnN0IGNoZWNrUGFyYW1ldGVyID0gKHRhZywgcGFyYW1ldGVyLCBkZXNjcmlwdGlvbiA9ICfnkIbnlLEnKSA9PiB7XG5cdFx0XHRpZiAocGFyYW1zLnRhZ3MuaW5jbHVkZXModGFnKSAmJiBwYXJhbXNbcGFyYW1ldGVyXS50cmltKCkgPT09ICcnKSB7XG5cdFx0XHRcdHZvaWQgbXcubm90aWZ5KGAke3dpbmRvdy53Z1VMUygn5oKo5b+F6aG75oyH5a6aJywgJ+aCqOW/hemgiOaMh+WumicpfXt7JHt0YWd9fX3nmoQke2Rlc2NyaXB0aW9ufeOAgmAsIHtcblx0XHRcdFx0XHR0eXBlOiAnd2FybicsXG5cdFx0XHRcdFx0dGFnOiAnZnJpZW5kbHl0YWcnLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9XG5cdFx0fTtcblx0XHQvLyBXZSBjb3VsZCB0aGVvcmV0aWNhbGx5IHB1dCB0aGVtIGFsbCBjaGVja0luY29tcGF0aWJsZSBjYWxscyBpbiBhXG5cdFx0Ly8gZm9yRWFjaCBsb29wLCBidXQgaXQncyBwcm9iYWJseSBjbGVhcmVyIG5vdCB0byBoYXZlIFtbYXJyYXkgb25lXSxcblx0XHQvLyBbYXJyYXkgdHdvXV0gZGV2b2lkIG9mIGNvbnRleHQuIExpa2V3aXNlLCBhbGwgdGhlIGNoZWNrUGFyYW1ldGVyXG5cdFx0Ly8gY2FsbHMgY291bGQgYmUgaW4gb25lIGlmLCBidXQgY291bGQgYmUgc2ltaWxhcmx5IGNvbmZ1c2luZy5cblx0XHRzd2l0Y2ggKFR3aW5rbGUudGFnLm1vZGVFbikge1xuXHRcdFx0Y2FzZSAnYXJ0aWNsZSc6XG5cdFx0XHRcdHBhcmFtcy50YWdzVG9SZW1vdmUgPSBmb3JtLmdldFVuY2hlY2tlZCgnZXhpc3RpbmdUYWdzJyk7IC8vIG5vdCBpbiBgaW5wdXRgXG5cdFx0XHRcdHBhcmFtcy50YWdzVG9SZW1haW4gPSBwYXJhbXMuZXhpc3RpbmdUYWdzIHx8IFtdOyAvLyBjb250YWluZXIgbm90IGNyZWF0ZWQgaWYgbm9uZSBwcmVzZW50XG5cdFx0XHRcdGlmIChcblx0XHRcdFx0XHRwYXJhbXMudGFncy5pbmNsdWRlcygnTWVyZ2UnKSB8fFxuXHRcdFx0XHRcdHBhcmFtcy50YWdzLmluY2x1ZGVzKCdNZXJnZSBmcm9tJykgfHxcblx0XHRcdFx0XHRwYXJhbXMudGFncy5pbmNsdWRlcygnTWVyZ2UgdG8nKVxuXHRcdFx0XHQpIHtcblx0XHRcdFx0XHRpZiAoXG5cdFx0XHRcdFx0XHRjaGVja0luY29tcGF0aWJsZShcblx0XHRcdFx0XHRcdFx0WydNZXJnZScsICdNZXJnZSBmcm9tJywgJ01lcmdlIHRvJ10sXG5cdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHQn6Iul6ZyA6KaB5aSa5qyh5ZCI5bm277yM6K+35L2/55Soe3tNZXJnZX195bm255So566h6YGT56ym5YiG6ZqU5p2h55uu5ZCN77yI5L2G5Zyo6L+Z56eN5oOF5b2i5LitVHdpbmtsZeS4jeiDveiHquWKqOagh+iusOWFtuS7luadoeebru+8ieOAgicsXG5cdFx0XHRcdFx0XHRcdFx0J+iLpemcgOimgeWkmuasoeWQiOS9te+8jOiri+S9v+eUqHt7TWVyZ2V9feS4pueUqOeuoemBk+espuWIhumalOaineebruWQje+8iOS9huWcqOmAmeeoruaDheW9ouS4rVR3aW5rbGXkuI3og73oh6rli5XmqJnoqJjlhbbku5bmop3nm67vvInjgIInXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHQpIHtcblx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKCFwYXJhbXMubWVyZ2VUYXJnZXQpIHtcblx0XHRcdFx0XHRcdHZvaWQgbXcubm90aWZ5KFxuXHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+ivt+aMh+WumuS9v+eUqOS6jm1lcmdl5qih5p2/5Lit55qE5Y+m5LiA5Liq6aG16Z2i5qCH6aKY44CCJyxcblx0XHRcdFx0XHRcdFx0XHQn6KuL5oyH5a6a5L2/55So5pa8bWVyZ2XmqKHmnb/kuK3nmoTlj6bkuIDlgIvpoIHpnaLmqJnpoYzjgIInXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHR0eXBlOiAnd2FybicsXG5cdFx0XHRcdFx0XHRcdFx0dGFnOiAnZnJpZW5kbHl0YWcnLFxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoKHBhcmFtcy5tZXJnZVRhZ090aGVyIHx8IHBhcmFtcy5tZXJnZVJlYXNvbikgJiYgcGFyYW1zLm1lcmdlVGFyZ2V0LmluY2x1ZGVzKCd8JykpIHtcblx0XHRcdFx0XHRcdHZvaWQgbXcubm90aWZ5KFxuXHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+W9k+WJjei/mOS4jeaUr+aMgeWcqOS4gOasoeWQiOW5tuS4reagh+iusOWkmuS4quadoeebru+8jOS4juW8gOWQr+WFs+S6juWkmuS4quadoeebrueahOiuqOiuuuOAguivt+S4jeimgeWLvumAieKAnOagh+iusOWFtuS7luadoeebruKAneW5tua4heepuuKAnOeQhueUseKAneahhuWQjuWGjeaPkOS6pOOAgicsXG5cdFx0XHRcdFx0XHRcdFx0J+ebruWJjemChOS4jeaUr+aPtOWcqOS4gOasoeWQiOS9teS4reaomeiomOWkmuWAi+aineebru+8jOiIh+mWi+WVn+mXnOaWvOWkmuWAi+aineebrueahOiojuirluOAguiri+S4jeimgeWLvumBuOOAjOaomeiomOWFtuS7luaineebruOAjeS4pua4heepuuOAjOeQhueUseOAjeahhuW+jOWGjeaPkOS6pOOAgidcblx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0XHRcdFx0XHR0YWc6ICdmcmllbmRseXRhZycsXG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChcblx0XHRcdFx0XHRjaGVja1BhcmFtZXRlcihcblx0XHRcdFx0XHRcdCdNaXNzaW5nIGluZm9ybWF0aW9uJyxcblx0XHRcdFx0XHRcdCdtaXNzaW5nSW5mb3JtYXRpb24nLFxuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfnvLrlsJHnmoTlhoXlrrknLCAn57y65bCR55qE5YWn5a65Jylcblx0XHRcdFx0XHQpXG5cdFx0XHRcdCkge1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoY2hlY2tQYXJhbWV0ZXIoJ0V4cGVydCBuZWVkZWQnLCAnZXhwZXJ0Jywgd2luZG93LndnVUxTKCfkuJPlrrbpoobln58nLCAn5bCI5a626aCY5Z+fJykpKSB7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnZmlsZSc6XG5cdFx0XHRcdC8vIFNpbGx5IHRvIHByb3ZpZGUgdGhlIHNhbWUgc3RyaW5nIHRvIGVhY2ggb2YgdGhlc2Vcblx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdGNoZWNrUGFyYW1ldGVyKCdPYnNvbGV0ZScsICdPYnNvbGV0ZUZpbGUnLCB3aW5kb3cud2dVTFMoJ+abv+aNoueahOaWh+S7tuWQjeensCcsICfmm7/mj5vnmoTmqpTmoYjlkI3nqLEnKSkgfHxcblx0XHRcdFx0XHRjaGVja1BhcmFtZXRlcihcblx0XHRcdFx0XHRcdCdWZWN0b3IgdmVyc2lvbiBhdmFpbGFibGUnLFxuXHRcdFx0XHRcdFx0J1ZlY3Rvcl92ZXJzaW9uX2F2YWlsYWJsZUZpbGUnLFxuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfmm7/mjaLnmoTmlofku7blkI3np7AnLCAn5pu/5o+b55qE5qqU5qGI5ZCN56ixJylcblx0XHRcdFx0XHQpXG5cdFx0XHRcdCkge1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoY2hlY2tQYXJhbWV0ZXIoJ0RvIG5vdCBtb3ZlIHRvIENvbW1vbnMnLCAnRG9Ob3RNb3ZlVG9Db21tb25zX3JlYXNvbicpKSB7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAncmVkaXJlY3QnOlxuXHRcdFx0XHRicmVhaztcblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdHZvaWQgbXcubm90aWZ5KGBUd2lua2xlLnRhZ++8muacquefpeaooeW8jyAke1R3aW5rbGUudGFnLm1vZGV9YCwge1xuXHRcdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0XHR0YWc6ICdmcmllbmRseXRhZycsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRicmVhaztcblx0XHR9XG5cdFx0Ly8gRmlsZS9yZWRpcmVjdDogcmV0dXJuIGlmIG5vIHRhZ3Mgc2VsZWN0ZWRcblx0XHQvLyBBcnRpY2xlOiByZXR1cm4gaWYgbm8gdGFnIGlzIHNlbGVjdGVkIGFuZCBubyBhbHJlYWR5IHByZXNlbnQgdGFnIGlzIGRlc2VsZWN0ZWRcblx0XHRpZiAocGFyYW1zLnRhZ3MubGVuZ3RoID09PSAwICYmIChUd2lua2xlLnRhZy5tb2RlRW4gIT09ICdhcnRpY2xlJyB8fCBwYXJhbXMudGFnc1RvUmVtb3ZlLmxlbmd0aCA9PT0gMCkpIHtcblx0XHRcdHZvaWQgbXcubm90aWZ5KHdpbmRvdy53Z1VMUygn5b+F6aG76YCJ5oup6Iez5bCR5LiA5Liq5qCH6K6w77yBJywgJ+W/hemgiOmBuOaTh+iHs+WwkeS4gOWAi+aomeiomO+8gScpLCB7XG5cdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0dGFnOiAnZnJpZW5kbHl0YWcnLFxuXHRcdFx0fSk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdE1vcmViaXRzLnNpbXBsZVdpbmRvdy5zZXRCdXR0b25zRW5hYmxlZChmYWxzZSk7XG5cdFx0TW9yZWJpdHMuc3RhdHVzLmluaXQoZm9ybSk7XG5cdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQucmVkaXJlY3QgPSBNb3JlYml0cy5wYWdlTmFtZU5vcm07XG5cdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQubm90aWNlID0gd2luZG93LndnVUxTKFxuXHRcdFx0J+agh+iusOWujOaIkO+8jOWwhuWcqOWHoOenkuWGheWIt+aWsOmhtemdoicsXG5cdFx0XHQn5qiZ6KiY5a6M5oiQ77yM5bCH5Zyo5bm+56eS5YWn6YeN5paw5pW055CG6aCB6Z2iJ1xuXHRcdCk7XG5cdFx0aWYgKFR3aW5rbGUudGFnLm1vZGVFbiA9PT0gJ3JlZGlyZWN0Jykge1xuXHRcdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQuZm9sbG93UmVkaXJlY3QgPSBmYWxzZTtcblx0XHR9XG5cdFx0Y29uc3QgcWl1d2VuX3BhZ2UgPSBuZXcgTW9yZWJpdHMud2lraS5wYWdlKFxuXHRcdFx0TW9yZWJpdHMucGFnZU5hbWVOb3JtLFxuXHRcdFx0d2luZG93LndnVUxTKCfmraPlnKjmoIforrAnLCAn5q2j5Zyo5qiZ6KiYJykgKyBUd2lua2xlLnRhZy5tb2RlXG5cdFx0KTtcblx0XHRxaXV3ZW5fcGFnZS5zZXRDYWxsYmFja1BhcmFtZXRlcnMocGFyYW1zKTtcblx0XHRxaXV3ZW5fcGFnZS5sb2FkKFR3aW5rbGUudGFnLmNhbGxiYWNrc1tUd2lua2xlLnRhZy5tb2RlRW5dKTtcblx0fTtcblx0VHdpbmtsZS5hZGRJbml0Q2FsbGJhY2soVHdpbmtsZS50YWcsICd0YWcnKTtcbn0pKGpRdWVyeSk7XG5cbmV4cG9ydCB7fTtcbiIsICIvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10cy1jb21tZW50XG4vLyBAdHMtbm9jaGVja1xuaW1wb3J0IHtnZW5lcmF0ZUFycmF5fSBmcm9tICdleHQuZ2FkZ2V0LlV0aWwnO1xuXG4vKiEgVHdpbmtsZS5qcyAtIHR3aW5rbGVzdHViLmpzICovXG4oZnVuY3Rpb24gdHdpbmtsZXN0dWIoJCkge1xuXHQvKipcblx0ICogdHdpbmtsZXN0dWIuanM6IFRhZyBtb2R1bGVcblx0ICogTW9kZSBvZiBpbnZvY2F0aW9uOiBUYWIgKFwiU3R1YlwiKVxuXHQgKiBBY3RpdmUgb246IEV4aXN0aW5nIGFydGljbGVzXG5cdCAqIENvbmZpZyBkaXJlY3RpdmVzIGluOiBGcmllbmRseUNvbmZpZ1xuXHQgKiBOb3RlOiBjdXN0b21pc2VkIGZyaWVuZGx5dGFnIG1vZHVsZVxuXHQgKi9cblx0VHdpbmtsZS5zdHViID0gKCkgPT4ge1xuXHRcdGlmIChNb3JlYml0cy5pc1BhZ2VSZWRpcmVjdCgpKSB7XG5cdFx0XHQvLyBTa2lwXG5cdFx0XHQvLyBhcnRpY2xlL2RyYWZ0IGFydGljbGUgdGFnZ2luZ1xuXHRcdH0gZWxzZSBpZiAoXG5cdFx0XHQoWzAsIDExOF0uaW5jbHVkZXMobXcuY29uZmlnLmdldCgnd2dOYW1lc3BhY2VOdW1iZXInKSkgJiYgbXcuY29uZmlnLmdldCgnd2dDdXJSZXZpc2lvbklkJykpIHx8XG5cdFx0XHRNb3JlYml0cy5wYWdlTmFtZU5vcm0gPT09IFR3aW5rbGUuZ2V0UHJlZignc2FuZGJveFBhZ2UnKVxuXHRcdCkge1xuXHRcdFx0VHdpbmtsZS5zdHViLm1vZGUgPSAn5p2h55uuJztcblx0XHRcdFR3aW5rbGUuYWRkUG9ydGxldExpbmsoVHdpbmtsZS5zdHViLmNhbGxiYWNrLCAn5bCP5L2c5ZOBJywgJ2ZyaWVuZGx5LXRhZycsICfmoIforrDlsI/kvZzlk4EnKTtcblx0XHR9XG5cdH07XG5cdFR3aW5rbGUuc3R1Yi5jYWxsYmFjayA9ICgpID0+IHtcblx0XHRpZiAoTW9yZWJpdHMuaXNQYWdlUmVkaXJlY3QoKSkge1xuXHRcdFx0Ly8gU2tpcFxuXHRcdFx0Ly8gYXJ0aWNsZS9kcmFmdCBhcnRpY2xlIHRhZ2dpbmdcblx0XHR9IGVsc2UgaWYgKFxuXHRcdFx0KChtdy5jb25maWcuZ2V0KCd3Z05hbWVzcGFjZU51bWJlcicpID09PSAwIHx8IG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlTnVtYmVyJykgPT09IDExOCkgJiZcblx0XHRcdFx0bXcuY29uZmlnLmdldCgnd2dDdXJSZXZpc2lvbklkJykpIHx8XG5cdFx0XHRNb3JlYml0cy5wYWdlTmFtZU5vcm0gPT09IFR3aW5rbGUuZ2V0UHJlZignc2FuZGJveFBhZ2UnKVxuXHRcdCkge1xuXHRcdFx0VHdpbmtsZS5zdHViLm1vZGUgPSB3aW5kb3cud2dVTFMoJ+adoeebricsICfmop3nm64nKTtcblx0XHRcdFR3aW5rbGUuYWRkUG9ydGxldExpbmsoXG5cdFx0XHRcdFR3aW5rbGUuc3R1Yi5jYWxsYmFjayxcblx0XHRcdFx0J+Wwj+S9nOWTgScsXG5cdFx0XHRcdCdmcmllbmRseS10YWcnLFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ+agh+iusOWwj+S9nOWTgScsICfmqJnoqJjlsI/kvZzlk4EnKVxuXHRcdFx0KTtcblx0XHR9XG5cdH07XG5cdFR3aW5rbGUuc3R1Yi5jYWxsYmFjayA9ICgpID0+IHtcblx0XHRjb25zdCBXaW5kb3cgPSBuZXcgTW9yZWJpdHMuc2ltcGxlV2luZG93KDYzMCwgVHdpbmtsZS5zdHViLm1vZGUgPT09ICdhcnRpY2xlJyA/IDQ1MCA6IDQwMCk7XG5cdFx0V2luZG93LnNldFNjcmlwdE5hbWUoJ1R3aW5rbGUnKTtcblx0XHRXaW5kb3cuYWRkRm9vdGVyTGluayh3aW5kb3cud2dVTFMoJ+Wwj+S9nOWTgeiqquaYjicsICflsI/kvZzlk4Hor7TmmI4nKSwgJ1FXOuWwj+S9nOWTgScpO1xuXHRcdFdpbmRvdy5hZGRGb290ZXJMaW5rKHdpbmRvdy53Z1VMUygn5bCP5L2c5ZOB6K6+572uJywgJ+Wwj+S9nOWTgeioreWumicpLCAnSDpUVy9QUkVGI3N0dWInKTtcblx0XHRXaW5kb3cuYWRkRm9vdGVyTGluayh3aW5kb3cud2dVTFMoJ1R3aW5rbGXluK7liqknLCAnVHdpbmtsZeiqquaYjicpLCAnSDpUVy9ET0Mjc3R1YicpO1xuXHRcdGNvbnN0IGZvcm0gPSBuZXcgTW9yZWJpdHMucXVpY2tGb3JtKFR3aW5rbGUuc3R1Yi5jYWxsYmFjay5ldmFsdWF0ZSk7XG5cdFx0aWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wYXRyb2xsaW5rJykubGVuZ3RoKSB7XG5cdFx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdGxpc3Q6IFtcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmoIforrDpobXpnaLkuLrlt7Llt6Hmn6UnLCAn5qiZ6KiY6aCB6Z2i54K65bey5beh5p+lJyksXG5cdFx0XHRcdFx0XHR2YWx1ZTogJ3BhdHJvbFBhZ2UnLFxuXHRcdFx0XHRcdFx0bmFtZTogJ3BhdHJvbFBhZ2UnLFxuXHRcdFx0XHRcdFx0Y2hlY2tlZDogVHdpbmtsZS5nZXRQcmVmKCdtYXJrU3R1YmJlZFBhZ2VzQXNQYXRyb2xsZWQnKSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRdLFxuXHRcdFx0fSk7XG5cdFx0fVxuXHRcdHN3aXRjaCAoVHdpbmtsZS5zdHViLm1vZGUpIHtcblx0XHRcdGNhc2UgJ+aineebric6XG5cdFx0XHRjYXNlICfmnaHnm64nOlxuXHRcdFx0XHRXaW5kb3cuc2V0VGl0bGUod2luZG93LndnVUxTKCfmnaHnm67lsI/kvZzlk4HmoIforrAnLCAn5qKd55uu5bCP5L2c5ZOB5qiZ6KiYJykpO1xuXHRcdFx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ3NlbGVjdCcsXG5cdFx0XHRcdFx0bmFtZTogJ3NvcnRvcmRlcicsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5p+l55yL5YiX6KGo77yaJywgJ+aqouimluWIl+ihqO+8micpLFxuXHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfmgqjlj6/ku6XlnKhUd2lua2xl5Y+C5pWw6K6+572u77yISDpUVy9QUkVG77yJ5Lit5pu05pS55q2k6aG544CCJyxcblx0XHRcdFx0XHRcdCfmgqjlj6/ku6XlnKhUd2lua2xl5YGP5aW96Kit5a6a77yISDpUVy9QUkVG77yJ5Lit5pu05pS55q2k6aCF44CCJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0ZXZlbnQ6IFR3aW5rbGUuc3R1Yi51cGRhdGVTb3J0T3JkZXIsXG5cdFx0XHRcdFx0bGlzdDogW1xuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHR0eXBlOiAnb3B0aW9uJyxcblx0XHRcdFx0XHRcdFx0dmFsdWU6ICdjYXQnLFxuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmjInnsbvlnosnLCAn5oyJ6aGe5YilJyksXG5cdFx0XHRcdFx0XHRcdHNlbGVjdGVkOiBUd2lua2xlLmdldFByZWYoJ3N0dWJBcnRpY2xlU29ydE9yZGVyJykgPT09ICdjYXQnLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0dHlwZTogJ29wdGlvbicsXG5cdFx0XHRcdFx0XHRcdHZhbHVlOiAnYWxwaGEnLFxuXHRcdFx0XHRcdFx0XHRsYWJlbDogJ+aMieWtl+avjScsXG5cdFx0XHRcdFx0XHRcdHNlbGVjdGVkOiBUd2lua2xlLmdldFByZWYoJ3N0dWJBcnRpY2xlU29ydE9yZGVyJykgPT09ICdhbHBoYScsXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdF0sXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2RpdicsXG5cdFx0XHRcdFx0aWQ6ICd0YWdXb3JrQXJlYScsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdHZvaWQgbXcubm90aWZ5KGBUd2lua2xlLnN0dWLvvJrmnKrnn6XmqKHlvI8gJHtUd2lua2xlLnN0dWIubW9kZX1gLCB7XG5cdFx0XHRcdFx0dHlwZTogJ3dhcm4nLFxuXHRcdFx0XHRcdHRhZzogJ3R3aW5rbGVzdHViJyxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdH1cblx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnc3VibWl0Jyxcblx0XHR9KTtcblx0XHRjb25zdCByZXN1bHQgPSBmb3JtLnJlbmRlcigpO1xuXHRcdFdpbmRvdy5zZXRDb250ZW50KHJlc3VsdCk7XG5cdFx0V2luZG93LmRpc3BsYXkoKTtcblx0XHRpZiAoWyfmnaHnm64nLCAn5qKd55uuJ10uaW5jbHVkZXMoVHdpbmtsZS5zdHViLm1vZGUpKSB7XG5cdFx0XHQvLyBmYWtlIGEgY2hhbmdlIGV2ZW50IG9uIHRoZSBzb3J0IGRyb3Bkb3duLCB0byBpbml0aWFsaXplIHRoZSB0YWcgbGlzdFxuXHRcdFx0Y29uc3QgZXZ0ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50Jyk7XG5cdFx0XHRldnQuaW5pdEV2ZW50KCdjaGFuZ2UnLCB0cnVlLCB0cnVlKTtcblx0XHRcdHJlc3VsdC5zb3J0b3JkZXIuZGlzcGF0Y2hFdmVudChldnQpO1xuXHRcdH1cblx0fTtcblx0VHdpbmtsZS5zdHViLmNoZWNrZWRUYWdzID0gW107XG5cdFR3aW5rbGUuc3R1Yi51cGRhdGVTb3J0T3JkZXIgPSAoZSkgPT4ge1xuXHRcdGNvbnN0IHNvcnRvcmRlciA9IGUudGFyZ2V0LnZhbHVlO1xuXHRcdFR3aW5rbGUuc3R1Yi5jaGVja2VkVGFncyA9IGUudGFyZ2V0LmZvcm0uZ2V0Q2hlY2tlZCgnYXJ0aWNsZVRhZ3MnKTtcblx0XHRUd2lua2xlLnN0dWIuY2hlY2tlZFRhZ3MgPz89IFtdO1xuXHRcdGNvbnN0IGNvbnRhaW5lciA9IG5ldyBNb3JlYml0cy5xdWlja0Zvcm0uZWxlbWVudCh7XG5cdFx0XHR0eXBlOiAnZnJhZ21lbnQnLFxuXHRcdH0pO1xuXHRcdC8vIGZ1bmN0aW9uIHRvIGdlbmVyYXRlIGEgY2hlY2tib3gsIHdpdGggYXBwcm9wcmlhdGUgc3ViZ3JvdXAgaWYgbmVlZGVkXG5cdFx0Y29uc3QgbWFrZUNoZWNrYm94ID0gKHRhZywgZGVzY3JpcHRpb24pID0+IHtcblx0XHRcdGNvbnN0IGNoZWNrYm94ID0ge1xuXHRcdFx0XHR2YWx1ZTogdGFnLFxuXHRcdFx0XHRsYWJlbDogYHt7JHt0YWd9fX06ICR7ZGVzY3JpcHRpb259YCxcblx0XHRcdH07XG5cdFx0XHRpZiAoVHdpbmtsZS5zdHViLmNoZWNrZWRUYWdzLmluY2x1ZGVzKHRhZykpIHtcblx0XHRcdFx0Y2hlY2tib3guY2hlY2tlZCA9IHRydWU7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gY2hlY2tib3g7XG5cdFx0fTtcblx0XHQvLyBhcHBlbmQgYW55IGN1c3RvbSB0YWdzXG5cdFx0aWYgKFR3aW5rbGUuZ2V0UHJlZignY3VzdG9tU3R1Ykxpc3QnKS5sZW5ndGgpIHtcblx0XHRcdGNvbnRhaW5lci5hcHBlbmQoe1xuXHRcdFx0XHR0eXBlOiAnaGVhZGVyJyxcblx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6Ieq5a6a5LmJ5qih5p2/JywgJ+iHquioguaooeadvycpLFxuXHRcdFx0fSk7XG5cdFx0XHRjb25zdCBjdXN0b21jaGVja2JveGVzID0gW107XG5cdFx0XHRmb3IgKGNvbnN0IGl0ZW0gb2YgVHdpbmtsZS5nZXRQcmVmKCdjdXN0b21TdHViTGlzdCcpKSB7XG5cdFx0XHRcdGN1c3RvbWNoZWNrYm94ZXNbY3VzdG9tY2hlY2tib3hlcy5sZW5ndGhdID0gbWFrZUNoZWNrYm94KGl0ZW0udmFsdWUsIGl0ZW0ubGFiZWwpO1xuXHRcdFx0fVxuXHRcdFx0Y29udGFpbmVyLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdG5hbWU6ICdhcnRpY2xlVGFncycsXG5cdFx0XHRcdGxpc3Q6IGN1c3RvbWNoZWNrYm94ZXMsXG5cdFx0XHR9KTtcblx0XHR9XG5cdFx0Ly8gY2F0ZWdvcmljYWwgc29ydCBvcmRlclxuXHRcdGlmIChzb3J0b3JkZXIgPT09ICdjYXQnKSB7XG5cdFx0XHQvLyBmdW5jdGlvbiB0byBpdGVyYXRlIHRocm91Z2ggdGhlIHRhZ3MgYW5kIGNyZWF0ZSBhIGNoZWNrYm94IGZvciBlYWNoIG9uZVxuXHRcdFx0Y29uc3QgZG9DYXRlZ29yeUNoZWNrYm94ZXMgPSAoc3ViZGl2LCBhcnJheSkgPT4ge1xuXHRcdFx0XHRjb25zdCBjaGVja2JveGVzID0gW107XG5cdFx0XHRcdGZvciAoY29uc3QgdGFnIG9mIGFycmF5KSB7XG5cdFx0XHRcdFx0Y29uc3QgZGVzY3JpcHRpb24gPSBUd2lua2xlLnN0dWIuYXJ0aWNsZS50YWdzW3RhZ107XG5cdFx0XHRcdFx0Y2hlY2tib3hlc1tjaGVja2JveGVzLmxlbmd0aF0gPSBtYWtlQ2hlY2tib3godGFnLCBkZXNjcmlwdGlvbik7XG5cdFx0XHRcdH1cblx0XHRcdFx0c3ViZGl2LmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdFx0XHRuYW1lOiAnYXJ0aWNsZVRhZ3MnLFxuXHRcdFx0XHRcdGxpc3Q6IGNoZWNrYm94ZXMsXG5cdFx0XHRcdH0pO1xuXHRcdFx0fTtcblx0XHRcdGxldCBpID0gMDtcblx0XHRcdC8vIGdvIHRocm91Z2ggZWFjaCBjYXRlZ29yeSBhbmQgc3ViLWNhdGVnb3J5IGFuZCBhcHBlbmQgbGlzdHMgb2YgY2hlY2tib3hlc1xuXHRcdFx0Zm9yIChjb25zdCBbdGl0bGUsIGNvbnRlbnRdIG9mIE9iamVjdC5lbnRyaWVzKFR3aW5rbGUuc3R1Yi5hcnRpY2xlLnRhZ0NhdGVnb3JpZXMpKSB7XG5cdFx0XHRcdGNvbnN0IHRpdGxlTmFtZSA9IFR3aW5rbGUuc3R1Yi5hcnRpY2xlLnRhZ0NhdGVnb3JpZXNIZWFkZXJbdGl0bGVdO1xuXHRcdFx0XHRjb250YWluZXIuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnaGVhZGVyJyxcblx0XHRcdFx0XHRpZDogYHRhZ0hlYWRlciR7aX1gLFxuXHRcdFx0XHRcdGxhYmVsOiB0aXRsZU5hbWUsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRjb25zdCBzdWJkaXYgPSBjb250YWluZXIuYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnZGl2Jyxcblx0XHRcdFx0XHRpZDogYHRhZ1N1YmRpdiR7aSsrfWAsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRpZiAoQXJyYXkuaXNBcnJheShjb250ZW50KSkge1xuXHRcdFx0XHRcdGRvQ2F0ZWdvcnlDaGVja2JveGVzKHN1YmRpdiwgY29udGVudCk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0Zm9yIChjb25zdCBbc3VidGl0bGUsIHN1YmNvbnRlbnRdIG9mIE9iamVjdC5lbnRyaWVzKGNvbnRlbnQpKSB7XG5cdFx0XHRcdFx0XHRzdWJkaXYuYXBwZW5kKHtcblx0XHRcdFx0XHRcdFx0dHlwZTogJ2RpdicsXG5cdFx0XHRcdFx0XHRcdGxhYmVsOiBbTW9yZWJpdHMuaHRtbE5vZGUoJ2InLCBzdWJ0aXRsZSldLFxuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRkb0NhdGVnb3J5Q2hlY2tib3hlcyhzdWJkaXYsIHN1YmNvbnRlbnQpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0Ly8gYWxwaGFiZXRpY2FsIHNvcnQgb3JkZXJcblx0XHR9IGVsc2Uge1xuXHRcdFx0Y29uc3QgY2hlY2tib3hlcyA9IFtdO1xuXHRcdFx0Zm9yIChjb25zdCBbdGFnLCBkZXNjcmlwdGlvbl0gb2YgT2JqZWN0LmVudHJpZXMoVHdpbmtsZS5zdHViLmFydGljbGUudGFncykpIHtcblx0XHRcdFx0Y2hlY2tib3hlc1tjaGVja2JveGVzLmxlbmd0aF0gPSBtYWtlQ2hlY2tib3godGFnLCBkZXNjcmlwdGlvbik7XG5cdFx0XHR9XG5cdFx0XHRjb250YWluZXIuYXBwZW5kKHtcblx0XHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdFx0bmFtZTogJ2FydGljbGVUYWdzJyxcblx0XHRcdFx0bGlzdDogY2hlY2tib3hlcyxcblx0XHRcdH0pO1xuXHRcdH1cblx0XHRjb25zdCAkd29ya2FyZWEgPSAkKGUudGFyZ2V0LmZvcm0pLmZpbmQoJ2RpdiN0YWdXb3JrQXJlYScpO1xuXHRcdGNvbnN0IHJlbmRlcmVkID0gY29udGFpbmVyLnJlbmRlcigpO1xuXHRcdCR3b3JrYXJlYS5lbXB0eSgpLmFwcGVuZChyZW5kZXJlZCk7XG5cdFx0Ly8gc3R5bGUgYWRqdXN0bWVudHNcblx0XHQkd29ya2FyZWEuZmluZCgnaDUnKS5jc3Moe1xuXHRcdFx0J2ZvbnQtc2l6ZSc6ICcxMTAlJyxcblx0XHR9KTtcblx0XHQkd29ya2FyZWEuZmluZCgnaDU6bm90KDpmaXJzdC1jaGlsZCknKS5jc3Moe1xuXHRcdFx0J21hcmdpbi10b3AnOiAnMWVtJyxcblx0XHR9KTtcblx0XHQkd29ya2FyZWEuZmluZCgnZGl2JykuZmlsdGVyKCc6aGFzKHNwYW4ucXVpY2tmb3JtRGVzY3JpcHRpb24pJykuY3NzKHtcblx0XHRcdCdtYXJnaW4tdG9wJzogJzAuNGVtJyxcblx0XHR9KTtcblx0XHQvLyBhZGQgYSBsaW5rIHRvIGVhY2ggdGVtcGxhdGUncyBkZXNjcmlwdGlvbiBwYWdlXG5cdFx0Zm9yIChjb25zdCBjaGVja2JveCBvZiBNb3JlYml0cy5xdWlja0Zvcm0uZ2V0RWxlbWVudHMoZS50YXJnZXQuZm9ybSwgJ2FydGljbGVUYWdzJykpIHtcblx0XHRcdGNvbnN0ICRjaGVja2JveCA9ICQoY2hlY2tib3gpO1xuXHRcdFx0Y29uc3QgbGluayA9IE1vcmViaXRzLmh0bWxOb2RlKCdhJywgJz4nKTtcblx0XHRcdGxpbmsuc2V0QXR0cmlidXRlKCdjbGFzcycsICd0YWctdGVtcGxhdGUtbGluaycpO1xuXHRcdFx0bGluay5zZXRBdHRyaWJ1dGUoXG5cdFx0XHRcdCdocmVmJyxcblx0XHRcdFx0bXcudXRpbC5nZXRVcmwoYFRlbXBsYXRlOiR7TW9yZWJpdHMuc3RyaW5nLnRvVXBwZXJDYXNlRmlyc3RDaGFyKGNoZWNrYm94LnZhbHVlcyl9YClcblx0XHRcdCk7XG5cdFx0XHRsaW5rLnNldEF0dHJpYnV0ZSgndGFyZ2V0JywgJ19ibGFuaycpO1xuXHRcdFx0bGluay5zZXRBdHRyaWJ1dGUoJ3JlbCcsICdub29wZW5lciBub3JlZmVycmVyJyk7XG5cdFx0XHQkY2hlY2tib3gucGFyZW50KCkuYXBwZW5kKFsnXFx1MDBBMCcsIGxpbmtdKTtcblx0XHR9XG5cdH07XG5cdC8vIFRhZ3MgZm9yIEFSVElDTEVTIHN0YXJ0IGhlcmVcblx0VHdpbmtsZS5zdHViLmFydGljbGUgPSB7fTtcblx0Ly8gQSBsaXN0IG9mIGFsbCBhcnRpY2xlIHRhZ3MsIGluIGFscGhhYmV0aWNhbCBvcmRlclxuXHQvLyBUbyBlbnN1cmUgdGFncyBhcHBlYXIgaW4gdGhlIGRlZmF1bHQgXCJjYXRlZ29yaXplZFwiIHZpZXcsIGFkZCB0aGVtIHRvIHRoZSB0YWdDYXRlZ29yaWVzIGhhc2ggYmVsb3cuXG5cdFR3aW5rbGUuc3R1Yi5hcnRpY2xlLnRhZ3MgPSB7XG5cdFx0J2FjdG9yLXN0dWInOiAn5ryU5ZGYJyxcblx0XHQnYXNpYS1zdHViJzogJ+S6mua0sicsXG5cdFx0J2Jpby1zdHViJzogJ+S6uueJqScsXG5cdFx0J2Jpb2xvZ3ktc3R1Yic6ICfnlJ/nianlraYnLFxuXHRcdCdjaGVtLXN0dWInOiAn5YyW5a2mJyxcblx0XHQnZXVyb3BlLXN0dWInOiAn5qyn5rSyJyxcblx0XHQnZXhwYW5kIGxpc3QnOiAn5pyq5a6M5oiQ5YiX6KGoJyxcblx0XHQnZm9vZC1zdHViJzogJ+mjn+eJqScsXG5cdFx0J2ZyYW5jZS1nZW8tc3R1Yic6ICfms5Xlm73lnLDnkIYnLFxuXHRcdCdnZW8tc3R1Yic6ICflnLDnkIbkvY3nva4nLFxuXHRcdCdoaXN0LXN0dWInOiAn5Y6G5Y+y5oiW5Y6G5Y+y5a2mJyxcblx0XHQnSlAtc3R1Yic6ICfml6XmnKwnLFxuXHRcdCdsaXQtc3R1Yic6ICfmloflraYnLFxuXHRcdCdtYXRoLXN0dWInOiAn5pWw5a2mJyxcblx0XHQnbWVkLXN0dWInOiAn5Yy75a2mJyxcblx0XHQnbWlsLXN0dWInOiAn5Yab5LqLJyxcblx0XHQnbW92aWUtc3R1Yic6ICfnlLXlvbEnLFxuXHRcdCdtdXNpYy1zdHViJzogJ+mfs+S5kCcsXG5cdFx0J3BoeXNpY3Mtc3R1Yic6ICfniannkIblraYnLFxuXHRcdCdwb2xpdGljLXN0dWInOiAn5pS/5rK7Jyxcblx0XHQncmVsaWdpb24tc3R1Yic6ICflrpfmlZknLFxuXHRcdCdzY2llbmNlLXN0dWInOiAn56eR5a2mJyxcblx0XHQnc3BvcnQtc3R1Yic6ICfkvZPogrInLFxuXHRcdHN0dWI6ICfpgJrnlKjlsI/kvZzlk4EnLFxuXHRcdCdzd2l0emVybGFuZC1zdHViJzogJ+eRnuWjqycsXG5cdFx0J3RlY2gtc3R1Yic6ICfnp5HmioAnLFxuXHRcdCd0cmFuc3Atc3R1Yic6ICfkuqTpgJonLFxuXHRcdCdUVi1zdHViJzogJ+eUteinhicsXG5cdFx0J1VLLXN0dWInOiAn6Iux5Zu9Jyxcblx0XHQnVVMtYmlvLXN0dWInOiAn576O5Zu95Lq654mpJyxcblx0XHQnVVMtZ2VvLXN0dWInOiAn576O5Zu95Zyw55CGJyxcblx0XHQnVVMtc3R1Yic6ICfnvo7lm70nLFxuXHRcdCd3ZWF0aGVyLXN0dWInOiAn5aSp5rCU5ZKM54m55Yir55qE5aSp5rCU5LqL5Lu2Jyxcblx0fTtcblx0Ly8gQSBsaXN0IG9mIHRhZ3MgaW4gb3JkZXIgb2YgY2F0ZWdvcnlcblx0Ly8gVGFncyBzaG91bGQgYmUgaW4gYWxwaGFiZXRpY2FsIG9yZGVyIHdpdGhpbiB0aGUgY2F0ZWdvcmllc1xuXHQvLyBBZGQgbmV3IGNhdGVnb3JpZXMgd2l0aCBkaXNjcmV0aW9uIC0gdGhlIGxpc3QgaXMgbG9uZyBlbm91Z2ggYXMgaXMhXG5cdFR3aW5rbGUuc3R1Yi5hcnRpY2xlLnRhZ0NhdGVnb3JpZXNIZWFkZXIgPSB7XG5cdFx0Z2VuZXJhbDogJ+mAmueUqOaooeadvycsXG5cdFx0Z2VvOiAn5Zu95a625ZKM5Zyw55CGJyxcblx0XHRvdGhlcnM6ICfmnYLpobknLFxuXHRcdGJpbzogJ+S6uueJqScsXG5cdFx0c2NpZW5jZTogJ+enkeWtpicsXG5cdFx0c3BvcnQ6ICfkvZPogrInLFxuXHRcdHRlY2g6ICfmioDmnK8nLFxuXHRcdGFydDogJ+iJuuacrycsXG5cdH07XG5cdFR3aW5rbGUuc3R1Yi5hcnRpY2xlLnRhZ0NhdGVnb3JpZXMgPSB7XG5cdFx0Z2VuZXJhbDogWydzdHViJywgJ2V4cGFuZCBsaXN0J10sXG5cdFx0Z2VvOiBbXG5cdFx0XHQnYXNpYS1zdHViJyxcblx0XHRcdCdldXJvcGUtc3R1YicsXG5cdFx0XHQnZnJhbmNlLWdlby1zdHViJyxcblx0XHRcdCdnZW8tc3R1YicsXG5cdFx0XHQnSlAtc3R1YicsXG5cdFx0XHQnc3dpdHplcmxhbmQtc3R1YicsXG5cdFx0XHQnVUstc3R1YicsXG5cdFx0XHQnVVMtYmlvLXN0dWInLFxuXHRcdFx0J1VTLWdlby1zdHViJyxcblx0XHRcdCdVUy1zdHViJyxcblx0XHRdLFxuXHRcdG90aGVyczogWydmb29kLXN0dWInLCAnaGlzdC1zdHViJywgJ21pbC1zdHViJywgJ3BvbGl0aWMtc3R1YicsICdyZWxpZ2lvbi1zdHViJywgJ3RyYW5zcC1zdHViJ10sXG5cdFx0YmlvOiBbJ2FjdG9yLXN0dWInLCAnYmlvLXN0dWInLCAnVVMtYmlvLXN0dWInXSxcblx0XHRzY2llbmNlOiBbJ2Jpb2xvZ3ktc3R1YicsICdjaGVtLXN0dWInLCAnbWF0aC1zdHViJywgJ21lZC1zdHViJywgJ3BoeXNpY3Mtc3R1YicsICdzY2llbmNlLXN0dWInLCAnd2VhdGhlci1zdHViJ10sXG5cdFx0c3BvcnQ6IFsnc3BvcnQtc3R1YiddLFxuXHRcdHRlY2g6IFsndGVjaC1zdHViJ10sXG5cdFx0YXJ0OiBbJ2FjdG9yLXN0dWInLCAnbGl0LXN0dWInLCAnbW92aWUtc3R1YicsICdtdXNpYy1zdHViJywgJ1RWLXN0dWInXSxcblx0fTtcblx0Ly8gVGFncyBmb3IgUkVESVJFQ1RTIHN0YXJ0IGhlcmVcblx0VHdpbmtsZS5zdHViLmNhbGxiYWNrcyA9IHtcblx0XHRtYWluOiAocGFnZW9iaikgPT4ge1xuXHRcdFx0Y29uc3QgcGFyYW1zID0gcGFnZW9iai5nZXRDYWxsYmFja1BhcmFtZXRlcnMoKTtcblx0XHRcdGxldCB0YWdSZTtcblx0XHRcdGxldCBzdW1tYXJ5VGV4dCA9ICfliqDlhaUnO1xuXHRcdFx0bGV0IHRhZ3MgPSBbXTtcblx0XHRcdGNvbnN0IGdyb3VwYWJsZVRhZ3MgPSBbXTtcblx0XHRcdGxldCBpO1xuXHRcdFx0Ly8gUmVtb3ZlIHRhZ3MgdGhhdCBiZWNvbWUgc3VwZXJmbHVvdXMgd2l0aCB0aGlzIGFjdGlvblxuXHRcdFx0bGV0IHBhZ2VUZXh0ID0gcGFnZW9iai5nZXRQYWdlVGV4dCgpO1xuXHRcdFx0Ly8gQ2hlY2sgZm9yIHByZWV4aXN0aW5nIHRhZ3MgYW5kIHNlcGFyYXRlIHRhZ3MgaW50byBncm91cGFibGUgYW5kIG5vbi1ncm91cGFibGUgYXJyYXlzXG5cdFx0XHRmb3IgKGkgPSAwOyBpIDwgcGFyYW1zLnRhZ3MubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0dGFnUmUgPSBuZXcgUmVnRXhwKGAoXFxcXHtcXFxceyR7cGFyYW1zLnRhZ3NbaV19KFxcXFx8fFxcXFx9XFxcXH0pKWAsICdpbScpO1xuXHRcdFx0XHRpZiAodGFnUmUuZXhlYyhwYWdlVGV4dCkpIHtcblx0XHRcdFx0XHRNb3JlYml0cy5zdGF0dXMuaW5mbyhcblx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5L+h5oGvJywgJ+izh+ioiicpLFxuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRg5Zyo6aG16Z2i5LiK5om+5Yiwe3ske3BhcmFtcy50YWdzW2ldfX194oCm4oCm6Lez6L+HYCxcblx0XHRcdFx0XHRcdFx0YOWcqOmggemdouS4iuaJvuWIsHt7JHtwYXJhbXMudGFnc1tpXX19feKApuKApui3s+mBjmBcblx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHRhZ3MgPSBbLi4udGFncywgLi4uZ2VuZXJhdGVBcnJheShwYXJhbXMudGFnc1tpXSldO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHR0YWdzID0gWy4uLnRhZ3MsIC4uLmdyb3VwYWJsZVRhZ3NdO1xuXHRcdFx0dGFncy5zb3J0KCk7XG5cdFx0XHRjb25zdCB0b3RhbFRhZ3MgPSB0YWdzLmxlbmd0aDtcblx0XHRcdGNvbnN0IGFkZFRhZyA9ICh0YWdOYW1lLCB0YWdJbmRleCkgPT4ge1xuXHRcdFx0XHRwYWdlVGV4dCArPSBgXFxue3ske3RhZ05hbWV9fX1gO1xuXHRcdFx0XHRpZiAodGFnSW5kZXggPiAwKSB7XG5cdFx0XHRcdFx0aWYgKHRhZ0luZGV4ID09PSB0b3RhbFRhZ3MgLSAxKSB7XG5cdFx0XHRcdFx0XHRzdW1tYXJ5VGV4dCArPSAn5ZKMJztcblx0XHRcdFx0XHR9IGVsc2UgaWYgKHRhZ0luZGV4IDwgdG90YWxUYWdzIC0gMSkge1xuXHRcdFx0XHRcdFx0c3VtbWFyeVRleHQgKz0gJ+OAgSc7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHN1bW1hcnlUZXh0ICs9ICd7e1tbJztcblx0XHRcdFx0c3VtbWFyeVRleHQgKz0gdGFnTmFtZS5pbmNsdWRlcygnOicpID8gdGFnTmFtZSA6IGBUZW1wbGF0ZToke3RhZ05hbWV9fCR7dGFnTmFtZX1gO1xuXHRcdFx0XHRzdW1tYXJ5VGV4dCArPSAnXV19fSc7XG5cdFx0XHR9O1xuXHRcdFx0Zm9yIChjb25zdCB0YWcgb2YgdGFncykge1xuXHRcdFx0XHRhZGRUYWcodGFnKTtcblx0XHRcdH1cblx0XHRcdHN1bW1hcnlUZXh0ICs9IHdpbmRvdy53Z1VMUygn5qCH6K6w5YiwJywgJ+aomeiomOWIsCcpICsgVHdpbmtsZS5zdHViLm1vZGU7XG5cdFx0XHRwYWdlb2JqLnNldFBhZ2VUZXh0KHBhZ2VUZXh0KTtcblx0XHRcdHBhZ2VvYmouc2V0RWRpdFN1bW1hcnkoc3VtbWFyeVRleHQpO1xuXHRcdFx0cGFnZW9iai5zZXRDaGFuZ2VUYWdzKFR3aW5rbGUuY2hhbmdlVGFncyk7XG5cdFx0XHRwYWdlb2JqLnNldFdhdGNobGlzdChUd2lua2xlLmdldFByZWYoJ3dhdGNoU3R1YmJlZFBhZ2VzJykpO1xuXHRcdFx0cGFnZW9iai5zZXRNaW5vckVkaXQoVHdpbmtsZS5nZXRQcmVmKCdtYXJrU3R1YmJlZFBhZ2VzQXNNaW5vcicpKTtcblx0XHRcdHBhZ2VvYmouc2V0Q3JlYXRlT3B0aW9uKCdub2NyZWF0ZScpO1xuXHRcdFx0cGFnZW9iai5zYXZlKCk7XG5cdFx0XHRpZiAocGFyYW1zLnBhdHJvbCkge1xuXHRcdFx0XHRwYWdlb2JqLnBhdHJvbCgpO1xuXHRcdFx0fVxuXHRcdH0sXG5cdH07XG5cdFR3aW5rbGUuc3R1Yi5jYWxsYmFjay5ldmFsdWF0ZSA9IChlKSA9PiB7XG5cdFx0Y29uc3QgZm9ybSA9IGUudGFyZ2V0O1xuXHRcdGNvbnN0IHBhcmFtcyA9IHt9O1xuXHRcdGlmIChmb3JtLnBhdHJvbFBhZ2UpIHtcblx0XHRcdHBhcmFtcy5wYXRyb2wgPSBmb3JtLnBhdHJvbFBhZ2UuY2hlY2tlZDtcblx0XHR9XG5cdFx0c3dpdGNoIChUd2lua2xlLnN0dWIubW9kZSkge1xuXHRcdFx0Y2FzZSAn5qKd55uuJzpcblx0XHRcdGNhc2UgJ+adoeebric6XG5cdFx0XHRcdHBhcmFtcy50YWdzID0gZm9ybS5nZXRDaGVja2VkKCdhcnRpY2xlVGFncycpO1xuXHRcdFx0XHRwYXJhbXMuZ3JvdXAgPSBmYWxzZTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHR2b2lkIG13Lm5vdGlmeShgVHdpbmtsZS5zdHVi77ya5pyq55+l5qih5byPICR7VHdpbmtsZS5zdHViLm1vZGV9YCwge1xuXHRcdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0XHR0YWc6ICd0d2lua2xlc3R1YicsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRicmVhaztcblx0XHR9XG5cdFx0aWYgKCFwYXJhbXMudGFncy5sZW5ndGgpIHtcblx0XHRcdHZvaWQgbXcubm90aWZ5KCflv4XpobvpgInmi6noh7PlsJHkuIDkuKrmoIforrDvvIEnLCB7XG5cdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0dGFnOiAndHdpbmtsZXN0dWInLFxuXHRcdFx0fSk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdE1vcmViaXRzLnNpbXBsZVdpbmRvdy5zZXRCdXR0b25zRW5hYmxlZChmYWxzZSk7XG5cdFx0TW9yZWJpdHMuc3RhdHVzLmluaXQoZm9ybSk7XG5cdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQucmVkaXJlY3QgPSBtdy5jb25maWcuZ2V0KCd3Z1BhZ2VOYW1lJyk7XG5cdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQubm90aWNlID0gd2luZG93LndnVUxTKFxuXHRcdFx0J+agh+iusOWujOaIkO+8jOWwhuWcqOWHoOenkuWGheWIt+aWsOmhtemdoicsXG5cdFx0XHQn5qiZ6KiY5a6M5oiQ77yM5bCH5Zyo5bm+56eS5YWn6YeN5paw5pW055CG6aCB6Z2iJ1xuXHRcdCk7XG5cdFx0aWYgKFR3aW5rbGUuc3R1Yi5tb2RlID09PSAn6YeN5a6a5ZCRJykge1xuXHRcdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQuZm9sbG93UmVkaXJlY3QgPSBmYWxzZTtcblx0XHR9XG5cdFx0Y29uc3QgcWl1d2VuX3BhZ2UgPSBuZXcgTW9yZWJpdHMud2lraS5wYWdlKFxuXHRcdFx0bXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpLFxuXHRcdFx0d2luZG93LndnVUxTKCfmraPlnKjmoIforrAnLCAn5q2j5Zyo5qiZ6KiYJykgKyBUd2lua2xlLnN0dWIubW9kZVxuXHRcdCk7XG5cdFx0cWl1d2VuX3BhZ2Uuc2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKHBhcmFtcyk7XG5cdFx0c3dpdGNoIChUd2lua2xlLnN0dWIubW9kZSkge1xuXHRcdFx0Y2FzZSAn5qKd55uuJzpcblx0XHRcdGNhc2UgJ+adoeebric6XG5cdFx0XHQvKiBmYWxscyB0aHJvdWdoICovXG5cdFx0XHRjYXNlICfph43lrprlkJEnOlxuXHRcdFx0XHRxaXV3ZW5fcGFnZS5sb2FkKFR3aW5rbGUuc3R1Yi5jYWxsYmFja3MubWFpbik7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdGNhc2UgJ+aWh+S7tic6XG5cdFx0XHRjYXNlICfmqpTmoYgnOlxuXHRcdFx0XHRxaXV3ZW5fcGFnZS5sb2FkKFR3aW5rbGUuc3R1Yi5jYWxsYmFja3MuZmlsZSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0dm9pZCBtdy5ub3RpZnkoYFR3aW5rbGUuc3R1Yu+8muacquefpeaooeW8jyAke1R3aW5rbGUuc3R1Yi5tb2RlfWAsIHtcblx0XHRcdFx0XHR0eXBlOiAnd2FybicsXG5cdFx0XHRcdFx0dGFnOiAndHdpbmtsZXN0dWInLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0fVxuXHR9O1xuXHRUd2lua2xlLmFkZEluaXRDYWxsYmFjayhUd2lua2xlLnN0dWIsICdzdHViJyk7XG59KShqUXVlcnkpO1xuXG5leHBvcnQge307XG4iLCAiLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHMtY29tbWVudFxuLy8gQHRzLW5vY2hlY2tcbi8qISBUd2lua2xlLmpzIC0gdHdpbmtsZWRpZmYuanMgKi9cbihmdW5jdGlvbiB0d2lua2xlZGlmZigkKSB7XG5cdC8qKlxuXHQgKiB0d2lua2xlZGlmZi5qczogRGlmZiBtb2R1bGVcblx0ICogTW9kZSBvZiBpbnZvY2F0aW9uOiBUYWIgb24gbm9uLWRpZmYgcGFnZXMgKFwiTGFzdFwiKTtcblx0ICogdGFicyBvbiBkaWZmIHBhZ2VzIChcIlNpbmNlXCIsIFwiU2luY2UgbWluZVwiLCBcIkN1cnJlbnRcIilcblx0ICogQWN0aXZlIG9uOiBFeGlzdGluZyBub24tc3BlY2lhbCBwYWdlc1xuXHQgKi9cblx0VHdpbmtsZS5kaWZmID0gKCkgPT4ge1xuXHRcdGlmIChtdy5jb25maWcuZ2V0KCd3Z05hbWVzcGFjZU51bWJlcicpIDwgMCB8fCAhbXcuY29uZmlnLmdldCgnd2dBcnRpY2xlSWQnKSkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRUd2lua2xlLmFkZFBvcnRsZXRMaW5rKFxuXHRcdFx0bXcudXRpbC5nZXRVcmwobXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpLCB7XG5cdFx0XHRcdGRpZmY6ICdjdXInLFxuXHRcdFx0XHRvbGRpZDogJ3ByZXYnLFxuXHRcdFx0fSksXG5cdFx0XHR3aW5kb3cud2dVTFMoJ+acgOWQjicsICfmnIDlvownKSxcblx0XHRcdCd0dy1sYXN0ZGlmZicsXG5cdFx0XHR3aW5kb3cud2dVTFMoJ+aYvuekuuacgOWQjuS/ruaUuScsICfpoa/npLrmnIDlvozkv67mlLknKVxuXHRcdCk7XG5cdFx0Ly8gU2hvdyBhZGRpdGlvbmFsIHRhYnMgb25seSBvbiBkaWZmIHBhZ2VzXG5cdFx0aWYgKG13LmNvbmZpZy5nZXQoJ3dnRGlmZk5ld0lkJykpIHtcblx0XHRcdFR3aW5rbGUuYWRkUG9ydGxldExpbmsoXG5cdFx0XHRcdCgpID0+IHtcblx0XHRcdFx0XHRUd2lua2xlLmRpZmYuZXZhbHVhdGUoZmFsc2UpO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHQn6Ieq5LiKJyxcblx0XHRcdFx0J3R3LXNpbmNlJyxcblx0XHRcdFx0d2luZG93LndnVUxTKCfmmL7npLrkuI7kuIrkuIDkv67orqLniYjmnKzpl7TnmoTlt67lvIInLCAn6aGv56S66IiH5LiK5LiA5L+u6KiC54mI5pys6ZaT55qE5beu55WwJylcblx0XHRcdCk7XG5cdFx0XHRUd2lua2xlLmFkZFBvcnRsZXRMaW5rKFxuXHRcdFx0XHQoKSA9PiB7XG5cdFx0XHRcdFx0VHdpbmtsZS5kaWZmLmV2YWx1YXRlKHRydWUpO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHQn6Ieq5oiRJyxcblx0XHRcdFx0J3R3LXNpbmNlbWluZScsXG5cdFx0XHRcdHdpbmRvdy53Z1VMUygn5pi+56S65LiO5oiR5YGa5Ye655qE5L+u6K6i54mI5pys55qE5beu5byCJywgJ+mhr+ekuuiIh+aIkeWBmuWHuueahOS/ruiogueJiOacrOeahOW3rueVsCcpXG5cdFx0XHQpO1xuXHRcdFx0VHdpbmtsZS5hZGRQb3J0bGV0TGluayhcblx0XHRcdFx0bXcudXRpbC5nZXRVcmwobXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpLCB7XG5cdFx0XHRcdFx0ZGlmZjogJ2N1cicsXG5cdFx0XHRcdFx0b2xkaWQ6IG13LmNvbmZpZy5nZXQoJ3dnRGlmZk5ld0lkJyksXG5cdFx0XHRcdH0pLFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ+W9k+WJjScsICfnm67liY0nKSxcblx0XHRcdFx0J3R3LWN1cmRpZmYnLFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ+aYvuekuuS4juW9k+WJjeeJiOacrOmXtOeahOW3ruW8gicsICfpoa/npLroiIfnm67liY3niYjmnKzplpPnmoTlt67nlbAnKVxuXHRcdFx0KTtcblx0XHR9XG5cdH07XG5cdFR3aW5rbGUuZGlmZi5ldmFsdWF0ZSA9IChtZSkgPT4ge1xuXHRcdGxldCB1c2VyO1xuXHRcdGlmIChtZSkge1xuXHRcdFx0dXNlciA9IG13LmNvbmZpZy5nZXQoJ3dnVXNlck5hbWUnKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Y29uc3Qgbm9kZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtdy1kaWZmLW50aXRsZTInKTtcblx0XHRcdGlmICghbm9kZSkge1xuXHRcdFx0XHQvLyBub3RoaW5nIHRvIGRvP1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHR1c2VyID0gJChub2RlKS5maW5kKCdhJykuZmlyc3QoKS50ZXh0KCk7XG5cdFx0fVxuXHRcdGNvbnN0IHF1ZXJ5ID0ge1xuXHRcdFx0cHJvcDogJ3JldmlzaW9ucycsXG5cdFx0XHRhY3Rpb246ICdxdWVyeScsXG5cdFx0XHR0aXRsZXM6IG13LmNvbmZpZy5nZXQoJ3dnUGFnZU5hbWUnKSxcblx0XHRcdHJ2bGltaXQ6IDEsXG5cdFx0XHRydnByb3A6IFsnaWRzJywgJ3VzZXInXSxcblx0XHRcdHJ2c3RhcnRpZDogbXcuY29uZmlnLmdldCgnd2dDdXJSZXZpc2lvbklkJykgLSAxLFxuXHRcdFx0cnZ1c2VyOiB1c2VyLFxuXHRcdH07XG5cdFx0TW9yZWJpdHMuc3RhdHVzLmluaXQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI213LWNvbnRlbnQtdGV4dCcpKTtcblx0XHRjb25zdCBxaXV3ZW5fYXBpID0gbmV3IE1vcmViaXRzLndpa2kuYXBpKFxuXHRcdFx0d2luZG93LndnVUxTKCfmipPlj5bmnIDliJ3otKHnjK7ogIXkv6Hmga8nLCAn5oqT5Y+W5pyA5Yid6LKi54276ICF6LOH6KiKJyksXG5cdFx0XHRxdWVyeSxcblx0XHRcdFR3aW5rbGUuZGlmZi5jYWxsYmFja3MubWFpblxuXHRcdCk7XG5cdFx0cWl1d2VuX2FwaS5wYXJhbXMgPSB7XG5cdFx0XHR1c2VyLFxuXHRcdH07XG5cdFx0cWl1d2VuX2FwaS5wb3N0KCk7XG5cdH07XG5cdFR3aW5rbGUuZGlmZi5jYWxsYmFja3MgPSB7XG5cdFx0bWFpbjogKHNlbGYpID0+IHtcblx0XHRcdGNvbnN0IHhtbERvYyA9IHNlbGYucmVzcG9uc2VYTUw7XG5cdFx0XHRjb25zdCByZXZpZCA9ICQoeG1sRG9jKS5maW5kKCdyZXYnKS5hdHRyKCdyZXZpZCcpO1xuXHRcdFx0aWYgKCFyZXZpZCkge1xuXHRcdFx0XHRzZWxmLnN0YXRlbGVtLmVycm9yKFxuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5pyq5om+5Yiw5ZCI6YCC55qE5pep5pyf54mI5pys77yM5oiWICcsICfmnKrmib7liLDlkIjpgannmoTml6nmnJ/niYjmnKzvvIzmiJYgJykgK1xuXHRcdFx0XHRcdFx0c2VsZi5wYXJhbXMudXNlciArXG5cdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJyDmmK/llK/kuIDotKHnjK7ogIXjgILlj5bmtojjgIInLCAnIOaYr+WUr+S4gOiyoueNu+iAheOAguWPlua2iOOAgicpXG5cdFx0XHRcdCk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdGxvY2F0aW9uID0gbXcudXRpbC5nZXRVcmwobXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpLCB7XG5cdFx0XHRcdGRpZmY6IG13LmNvbmZpZy5nZXQoJ3dnQ3VyUmV2aXNpb25JZCcpLFxuXHRcdFx0XHRvbGRpZDogcmV2aWQsXG5cdFx0XHR9KTtcblx0XHR9LFxuXHR9O1xuXHRUd2lua2xlLmFkZEluaXRDYWxsYmFjayhUd2lua2xlLmRpZmYsICdkaWZmJyk7XG59KShqUXVlcnkpO1xuXG5leHBvcnQge307XG4iLCAiLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHMtY29tbWVudFxuLy8gQHRzLW5vY2hlY2tcbi8qISBUd2lua2xlLmpzIC0gdHdpbmtsZXVubGluay5qcyAqL1xuKGZ1bmN0aW9uIHR3aW5rbGV1bmxpbmsoJCkge1xuXHQvKipcblx0ICogdHdpbmtsZXVubGluay5qczogVW5saW5rIG1vZHVsZVxuXHQgKiBNb2RlIG9mIGludm9jYXRpb246IFRhYiAoXCJVbmxpbmtcIilcblx0ICogQWN0aXZlIG9uOiBOb24tc3BlY2lhbCBwYWdlcywgZXhjZXB0IFFpdXdlbjrmspnnm5Jcblx0ICovXG5cdFR3aW5rbGUudW5saW5rID0gKCkgPT4ge1xuXHRcdGlmIChcblx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlTnVtYmVyJykgPCAwIHx8XG5cdFx0XHRtdy5jb25maWcuZ2V0KCd3Z1BhZ2VOYW1lJykgPT09IFR3aW5rbGUuZ2V0UHJlZignc2FuZGJveFBhZ2UnKSB8fFxuXHRcdFx0IU1vcmViaXRzLnVzZXJJc1N5c29wXG5cdFx0KSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdFR3aW5rbGUuYWRkUG9ydGxldExpbmsoXG5cdFx0XHRUd2lua2xlLnVubGluay5jYWxsYmFjayxcblx0XHRcdHdpbmRvdy53Z1VMUygn5raI6ZO+JywgJ+a2iOmAoycpLFxuXHRcdFx0J3R3LXVubGluaycsXG5cdFx0XHR3aW5kb3cud2dVTFMoJ+WPlua2iOWIsOacrOmhteeahOmTvuaOpScsICflj5bmtojliLDmnKzpoIHnmoTpgKPntZAnKVxuXHRcdCk7XG5cdH07XG5cdC8vIHRoZSBwYXJhbWV0ZXIgaXMgdXNlZCB3aGVuIGludm9raW5nIHVubGluayBmcm9tIGFkbWluIHNwZWVkeVxuXHRUd2lua2xlLnVubGluay5jYWxsYmFjayA9IChwcmVzZXRSZWFzb24pID0+IHtcblx0XHRjb25zdCBmaWxlU3BhY2UgPSBtdy5jb25maWcuZ2V0KCd3Z05hbWVzcGFjZU51bWJlcicpID09PSA2O1xuXHRcdGNvbnN0IFdpbmRvdyA9IG5ldyBNb3JlYml0cy5zaW1wbGVXaW5kb3coNjAwLCA0NDApO1xuXHRcdFdpbmRvdy5zZXRUaXRsZShcblx0XHRcdHdpbmRvdy53Z1VMUygn5Y+W5raI6ZO+5YWlJywgJ+WPlua2iOmAo+WFpScpICtcblx0XHRcdFx0KGZpbGVTcGFjZSA/IHdpbmRvdy53Z1VMUygn5ZKM5qih5p2/44CB5paH5Lu25L2/55SoJywgJ+WSjOaooeadv+OAgeaqlOahiOS9v+eUqCcpIDogJycpXG5cdFx0KTtcblx0XHRXaW5kb3cuc2V0U2NyaXB0TmFtZSgnVHdpbmtsZScpO1xuXHRcdFdpbmRvdy5hZGRGb290ZXJMaW5rKHdpbmRvdy53Z1VMUygn6ZO+5YWl6K6+572uJywgJ+mAo+WFpeioreWumicpLCAnSDpUVy9QUkVGI3VubGluaycpO1xuXHRcdFdpbmRvdy5hZGRGb290ZXJMaW5rKHdpbmRvdy53Z1VMUygnVHdpbmtsZeW4ruWKqScsICdUd2lua2xl6Kqq5piOJyksICdIOlRXL0RPQyN1bmxpbmsnKTtcblx0XHRjb25zdCBmb3JtID0gbmV3IE1vcmViaXRzLnF1aWNrRm9ybShUd2lua2xlLnVubGluay5jYWxsYmFjay5ldmFsdWF0ZSk7XG5cdFx0Ly8gcHJlcGVuZCBzb21lIGRvY3VtZW50YXRpb246IGZpbGVzIGFyZSBjb21tZW50ZWQgb3V0LCB3aGlsZSBhbnlcblx0XHQvLyBkaXNwbGF5IHRleHQgaXMgcHJlc2VydmVkIGZvciBsaW5rcyAob3RoZXJ3aXNlIHRoZSBsaW5rIGl0c2VsZiBpcyB1c2VkKVxuXHRcdGNvbnN0IGxpbmtUZXh0QmVmb3JlID0gTW9yZWJpdHMuaHRtbE5vZGUoXG5cdFx0XHQnY29kZScsXG5cdFx0XHRgW1ske2ZpbGVTcGFjZSA/ICc6JyA6ICcnfSR7TW9yZWJpdHMucGFnZU5hbWVOb3JtfSR7d2luZG93LndnVUxTKCd86ZO+5o6l5paH5a2XXV0nLCAnfOmAo+e1kOaWh+Wtl11dJyl9YFxuXHRcdCk7XG5cdFx0Y29uc3QgbGlua1RleHRBZnRlciA9IE1vcmViaXRzLmh0bWxOb2RlKCdjb2RlJywgd2luZG93LndnVUxTKCfpk77mjqXmloflrZcnLCAn6YCj57WQ5paH5a2XJykpO1xuXHRcdGNvbnN0IGxpbmtQbGFpbkJlZm9yZSA9IE1vcmViaXRzLmh0bWxOb2RlKCdjb2RlJywgYFtbJHtNb3JlYml0cy5wYWdlTmFtZU5vcm19XV1gKTtcblx0XHRjb25zdCBsaW5rVGVtcGxhdGVCZWZvcmUgPSBNb3JlYml0cy5odG1sTm9kZSgnY29kZScsIGB7eyR7bXcuY29uZmlnLmdldCgnd2dUaXRsZScpfX19YCk7XG5cdFx0bGV0IGxpbmtQbGFpbkFmdGVyO1xuXHRcdGlmIChmaWxlU3BhY2UpIHtcblx0XHRcdGxpbmtQbGFpbkFmdGVyID0gTW9yZWJpdHMuaHRtbE5vZGUoJ2NvZGUnLCBgPCEtLSBbWyR7TW9yZWJpdHMucGFnZU5hbWVOb3JtfV1dIC0tPmApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRsaW5rUGxhaW5BZnRlciA9IE1vcmViaXRzLmh0bWxOb2RlKCdjb2RlJywgTW9yZWJpdHMucGFnZU5hbWVOb3JtKTtcblx0XHR9XG5cdFx0Zm9yIChjb25zdCBub2RlIG9mIFtsaW5rVGV4dEJlZm9yZSwgbGlua1RleHRBZnRlciwgbGlua1BsYWluQmVmb3JlLCBsaW5rUGxhaW5BZnRlciwgbGlua1RlbXBsYXRlQmVmb3JlXSkge1xuXHRcdFx0bm9kZS5zdHlsZS5mb250RmFtaWx5ID0gJ21vbm9zcGFjZSc7XG5cdFx0XHRub2RlLnN0eWxlLmZvbnRTdHlsZSA9ICdub3JtYWwnO1xuXHRcdH1cblx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnZGl2Jyxcblx0XHRcdHN0eWxlOiAnbWFyZ2luLWJvdHRvbTogMC41ZW07IGZvbnQtc3R5bGU6IG5vcm1hbCcsXG5cdFx0XHRsYWJlbDogW1xuXHRcdFx0XHRgJHtcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn6L+Z5Liq5bel5YW35Y+v5Lul5Y+W5raI5omA5pyJ5oyH5ZCR6K+l6aG155qE6ZO+5o6l77yI4oCc6ZO+5YWl4oCd77yJJyxcblx0XHRcdFx0XHRcdCfpgJnlgIvlt6Xlhbflj6/ku6Xlj5bmtojmiYDmnInmjIflkJHoqbLpoIHnmoTpgKPntZDvvIjjgIzpgKPlhaXjgI3vvIknXG5cdFx0XHRcdFx0KSArXG5cdFx0XHRcdFx0KGZpbGVTcGFjZVxuXHRcdFx0XHRcdFx0PyB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J++8jOaIlumAmui/h+WKoOWFpTwhLS0gLS0+5rOo6YeK5qCH6K6w6ZqQ6JeP5omA5pyJ5a+55q2k5paH5Lu255qE5L2/55SoJyxcblx0XHRcdFx0XHRcdFx0XHQn77yM5oiW6YCP6YGO5Yqg5YWlPCEtLSAtLT7ms6jph4vmqJnoqJjpmrHol4/miYDmnInlsI3mraTmqpTmoYjnmoTkvb/nlKgnXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdDogJycpXG5cdFx0XHRcdH3jgILkvovlpoLvvJpgLFxuXHRcdFx0XHRsaW5rVGV4dEJlZm9yZSxcblx0XHRcdFx0d2luZG93LndnVUxTKCflsIbkvJrlj5jmiJAnLCAn5bCH5pyD6K6K5oiQJyksXG5cdFx0XHRcdGxpbmtUZXh0QWZ0ZXIsXG5cdFx0XHRcdCfvvIwnLFxuXHRcdFx0XHRsaW5rUGxhaW5CZWZvcmUsXG5cdFx0XHRcdHdpbmRvdy53Z1VMUygn5bCG5Lya5Y+Y5oiQJywgJ+Wwh+acg+iuiuaIkCcpLFxuXHRcdFx0XHRsaW5rUGxhaW5BZnRlcixcblx0XHRcdFx0J++8jCcsXG5cdFx0XHRcdGxpbmtUZW1wbGF0ZUJlZm9yZSxcblx0XHRcdFx0d2luZG93LndnVUxTKCflsIbkvJrooqvnp7vpmaQnLCAn5bCH5pyD6KKr56e76ZmkJyksXG5cdFx0XHRcdHdpbmRvdy53Z1VMUygn44CC6K+35bCP5b+D5L2/55So44CCJywgJ+OAguiri+Wwj+W/g+S9v+eUqOOAgicpLFxuXHRcdFx0XSxcblx0XHR9KTtcblx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnaW5wdXQnLFxuXHRcdFx0bmFtZTogJ3JlYXNvbicsXG5cdFx0XHRsYWJlbDogJ+eQhueUse+8micsXG5cdFx0XHR2YWx1ZTogcHJlc2V0UmVhc29uIHx8ICcnLFxuXHRcdFx0c2l6ZTogNjAsXG5cdFx0fSk7XG5cdFx0Y29uc3QgcXVlcnkgPSB7XG5cdFx0XHRhY3Rpb246ICdxdWVyeScsXG5cdFx0XHRsaXN0OiAnYmFja2xpbmtzJyxcblx0XHRcdGJsdGl0bGU6IG13LmNvbmZpZy5nZXQoJ3dnUGFnZU5hbWUnKSxcblx0XHRcdGJsbGltaXQ6ICdtYXgnLFxuXHRcdFx0Ly8gNTAwIGlzIG1heCBmb3Igbm9ybWFsIHVzZXJzLCA1MDAwIGZvciBib3RzIGFuZCBzeXNvcHNcblx0XHRcdGJsbmFtZXNwYWNlOiBUd2lua2xlLmdldFByZWYoJ3VubGlua05hbWVzcGFjZXMnKSxcblx0XHRcdHJhd2NvbnRpbnVlOiB0cnVlLFxuXHRcdFx0Zm9ybWF0OiAnanNvbicsXG5cdFx0fTtcblx0XHRpZiAoZmlsZVNwYWNlKSB7XG5cdFx0XHRxdWVyeS5saXN0ICs9ICd8aW1hZ2V1c2FnZSc7XG5cdFx0XHRxdWVyeS5pdXRpdGxlID0gcXVlcnkuYmx0aXRsZTtcblx0XHRcdHF1ZXJ5Lml1bGltaXQgPSBxdWVyeS5ibGxpbWl0O1xuXHRcdFx0cXVlcnkuaXVuYW1lc3BhY2UgPSBxdWVyeS5ibG5hbWVzcGFjZTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cXVlcnkuYmxmaWx0ZXJyZWRpciA9ICdub25yZWRpcmVjdHMnO1xuXHRcdH1cblx0XHRjb25zdCBxaXV3ZW5fYXBpID0gbmV3IE1vcmViaXRzLndpa2kuYXBpKFxuXHRcdFx0d2luZG93LndnVUxTKCfmipPlj5bpk77lhaUnLCAn5oqT5Y+W6YCj5YWlJyksXG5cdFx0XHRxdWVyeSxcblx0XHRcdFR3aW5rbGUudW5saW5rLmNhbGxiYWNrcy5kaXNwbGF5LmJhY2tsaW5rc1xuXHRcdCk7XG5cdFx0cWl1d2VuX2FwaS5wYXJhbXMgPSB7XG5cdFx0XHRmb3JtLFxuXHRcdFx0V2luZG93LFxuXHRcdFx0aW1hZ2U6IGZpbGVTcGFjZSxcblx0XHR9O1xuXHRcdHFpdXdlbl9hcGkucG9zdCgpO1xuXHRcdGNvbnN0IHJvb3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblx0XHRyb290LnN0eWxlLnBhZGRpbmcgPSAnMTVweCc7IC8vIGp1c3Qgc28gaXQgZG9lc24ndCBsb29rIGJyb2tlblxuXHRcdE1vcmViaXRzLnN0YXR1cy5pbml0KHJvb3QpO1xuXHRcdHFpdXdlbl9hcGkuc3RhdGVsZW0uc3RhdHVzKHdpbmRvdy53Z1VMUygn5Yqg6L295Lit4oCm4oCmJywgJ+i8ieWFpeS4reKApuKApicpKTtcblx0XHRXaW5kb3cuc2V0Q29udGVudChyb290KTtcblx0XHRXaW5kb3cuZGlzcGxheSgpO1xuXHR9O1xuXHRUd2lua2xlLnVubGluay5jYWxsYmFjay5ldmFsdWF0ZSA9IChldmVudCkgPT4ge1xuXHRcdGNvbnN0IGZvcm0gPSBldmVudC50YXJnZXQ7XG5cdFx0Y29uc3QgaW5wdXQgPSBNb3JlYml0cy5xdWlja0Zvcm0uZ2V0SW5wdXREYXRhKGZvcm0pO1xuXHRcdGlmICghaW5wdXQucmVhc29uKSB7XG5cdFx0XHR2b2lkIG13Lm5vdGlmeSh3aW5kb3cud2dVTFMoJ+aCqOW/hemhu+aMh+WumuWPlua2iOmTvuWFpeeahOeQhueUseOAgicsICfmgqjlv4XpoIjmjIflrprlj5bmtojpgKPlhaXnmoTnkIbnlLHjgIInKSwge1xuXHRcdFx0XHR0eXBlOiAnd2FybicsXG5cdFx0XHRcdHRhZzogJ3R3aW5rbGV1bmxpbmsnLFxuXHRcdFx0fSk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdGlucHV0LmJhY2tsaW5rcyB8fD0gW107XG5cdFx0aW5wdXQuaW1hZ2V1c2FnZSB8fD0gW107XG5cdFx0Y29uc3QgcGFnZXMgPSBNb3JlYml0cy5hcnJheS51bmlxKFsuLi5pbnB1dC5iYWNrbGlua3MsIC4uLmlucHV0LmltYWdldXNhZ2VdKTtcblx0XHRpZiAoIXBhZ2VzLmxlbmd0aCkge1xuXHRcdFx0dm9pZCBtdy5ub3RpZnkoXG5cdFx0XHRcdHdpbmRvdy53Z1VMUygn5oKo5b+F6aG76Iez5bCR6YCJ5oup5LiA5Liq6KaB5Y+W5raI6ZO+5YWl55qE6aG16Z2i44CCJywgJ+aCqOW/hemgiOiHs+WwkemBuOaTh+S4gOWAi+imgeWPlua2iOmAo+WFpeeahOmggemdouOAgicpLFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0dHlwZTogJ3dhcm4nLFxuXHRcdFx0XHRcdHRhZzogJ3R3aW5rbGV1bmxpbmsnLFxuXHRcdFx0XHR9XG5cdFx0XHQpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRNb3JlYml0cy5zaW1wbGVXaW5kb3cuc2V0QnV0dG9uc0VuYWJsZWQoZmFsc2UpO1xuXHRcdE1vcmViaXRzLnN0YXR1cy5pbml0KGZvcm0pO1xuXHRcdGNvbnN0IHVubGlua2VyID0gbmV3IE1vcmViaXRzLmJhdGNoT3BlcmF0aW9uKFxuXHRcdFx0YOWPlua2iCR7XG5cdFx0XHRcdGlucHV0LmJhY2tsaW5rcy5sZW5ndGhcblx0XHRcdFx0XHQ/IHdpbmRvdy53Z1VMUygn6ZO+5YWlJywgJ+mAo+WFpScpICtcblx0XHRcdFx0XHRcdChpbnB1dC5pbWFnZXVzYWdlLmxlbmd0aCA/IHdpbmRvdy53Z1VMUygn5LiO5paH5Lu25L2/55SoJywgJ+iIh+aqlOahiOS9v+eUqCcpIDogJycpXG5cdFx0XHRcdFx0OiB3aW5kb3cud2dVTFMoJ+aWh+S7tuS9v+eUqCcsICfmqpTmoYjkvb/nlKgnKVxuXHRcdFx0fWBcblx0XHQpO1xuXHRcdHVubGlua2VyLnNldE9wdGlvbigncHJlc2VydmVJbmRpdmlkdWFsU3RhdHVzTGluZXMnLCB0cnVlKTtcblx0XHR1bmxpbmtlci5zZXRQYWdlTGlzdChwYWdlcyk7XG5cdFx0Y29uc3QgcGFyYW1zID0ge1xuXHRcdFx0cmVhc29uOiBpbnB1dC5yZWFzb24sXG5cdFx0XHR1bmxpbmtlcixcblx0XHR9O1xuXHRcdHVubGlua2VyLnJ1bigocGFnZU5hbWUpID0+IHtcblx0XHRcdGNvbnN0IHFpdXdlbl9wYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShcblx0XHRcdFx0cGFnZU5hbWUsXG5cdFx0XHRcdHdpbmRvdy53Z1VMUygn5Zyo6aG16Z2i4oCcJywgJ+WcqOmggemdouOAjCcpICsgcGFnZU5hbWUgKyB3aW5kb3cud2dVTFMoJ+KAneS4reWPlua2iOmTvuWFpScsICfjgI3kuK3lj5bmtojpgKPlhaUnKVxuXHRcdFx0KTtcblx0XHRcdHFpdXdlbl9wYWdlLnNldEJvdEVkaXQodHJ1ZSk7IC8vIHVubGluayBjb25zaWRlcmVkIGEgZmxvb2R5IG9wZXJhdGlvblxuXHRcdFx0cWl1d2VuX3BhZ2Uuc2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKHtcblx0XHRcdFx0ZG9CYWNrbGlua3M6IGlucHV0LmJhY2tsaW5rcy5pbmNsdWRlcyhwYWdlTmFtZSksXG5cdFx0XHRcdGRvSW1hZ2V1c2FnZTogaW5wdXQuaW1hZ2V1c2FnZS5pbmNsdWRlcyhwYWdlTmFtZSksXG5cdFx0XHRcdC4uLnBhcmFtcyxcblx0XHRcdH0pO1xuXHRcdFx0cWl1d2VuX3BhZ2UubG9hZChUd2lua2xlLnVubGluay5jYWxsYmFja3MudW5saW5rQmFja2xpbmtzKTtcblx0XHR9KTtcblx0fTtcblx0VHdpbmtsZS51bmxpbmsuY2FsbGJhY2tzID0ge1xuXHRcdGRpc3BsYXk6IHtcblx0XHRcdGJhY2tsaW5rczogKGFwaW9iaikgPT4ge1xuXHRcdFx0XHRjb25zdCByZXNwb25zZSA9IGFwaW9iai5nZXRSZXNwb25zZSgpO1xuXHRcdFx0XHRsZXQgaGF2ZWNvbnRlbnQgPSBmYWxzZTtcblx0XHRcdFx0bGV0IGxpc3Q7XG5cdFx0XHRcdGxldCBuYW1lc3BhY2VzO1xuXHRcdFx0XHRsZXQgaTtcblx0XHRcdFx0aWYgKGFwaW9iai5wYXJhbXMuaW1hZ2UpIHtcblx0XHRcdFx0XHRjb25zdCBpbWFnZXVzYWdlID0gcmVzcG9uc2UucXVlcnkuaW1hZ2V1c2FnZS5zb3J0KFR3aW5rbGUuc29ydEJ5TmFtZXNwYWNlKTtcblx0XHRcdFx0XHRsaXN0ID0gW107XG5cdFx0XHRcdFx0Zm9yIChpID0gMDsgaSA8IGltYWdldXNhZ2UubGVuZ3RoOyArK2kpIHtcblx0XHRcdFx0XHRcdC8vIExhYmVsIG1hZGUgYnkgVHdpbmtsZS5nZW5lcmF0ZUJhdGNoUGFnZUxpbmtzXG5cdFx0XHRcdFx0XHRsaXN0W2xpc3QubGVuZ3RoXSA9IHtcblx0XHRcdFx0XHRcdFx0bGFiZWw6ICcnLFxuXHRcdFx0XHRcdFx0XHR2YWx1ZTogaW1hZ2V1c2FnZVtpXS50aXRsZSxcblx0XHRcdFx0XHRcdFx0Y2hlY2tlZDogdHJ1ZSxcblx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmIChsaXN0Lmxlbmd0aCkge1xuXHRcdFx0XHRcdFx0YXBpb2JqLnBhcmFtcy5mb3JtLmFwcGVuZCh7XG5cdFx0XHRcdFx0XHRcdHR5cGU6ICdoZWFkZXInLFxuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmlofku7bkvb/nlKgnLCAn5qqU5qGI5L2/55SoJyksXG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdG5hbWVzcGFjZXMgPSBbXTtcblx0XHRcdFx0XHRcdGZvciAoY29uc3QgdiBvZiBUd2lua2xlLmdldFByZWYoJ3VubGlua05hbWVzcGFjZXMnKSkge1xuXHRcdFx0XHRcdFx0XHRuYW1lc3BhY2VzW25hbWVzcGFjZXMubGVuZ3RoXSA9XG5cdFx0XHRcdFx0XHRcdFx0diA9PT0gJzAnXG5cdFx0XHRcdFx0XHRcdFx0XHQ/IHdpbmRvdy53Z1VMUygn77yI5p2h55uu77yJJywgJ++8iOaineebru+8iScpXG5cdFx0XHRcdFx0XHRcdFx0XHQ6IG13LmNvbmZpZy5nZXQoJ3dnRm9ybWF0dGVkTmFtZXNwYWNlcycpW3ZdO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0YXBpb2JqLnBhcmFtcy5mb3JtLmFwcGVuZCh7XG5cdFx0XHRcdFx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflt7LpgInmi6nnmoTlkb3lkI3nqbrpl7TvvJonLCAn5bey6YG45pOH55qE5ZG95ZCN56m66ZaT77yaJykgKyBuYW1lc3BhY2VzLmpvaW4oJ+OAgScpLFxuXHRcdFx0XHRcdFx0XHR0b29sdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+aCqOWPr+WcqFR3aW5rbGXlj4LmlbDorr7nva7kuK3mm7TmlLnnm7jlhbPpgInpobnvvIzor7flj4Lop4FbW0g6VFcvUFJFRl1dJyxcblx0XHRcdFx0XHRcdFx0XHQn5oKo5Y+v5ZyoVHdpbmtsZeWBj+WlveioreWumuS4reabtOaUueebuOmXnOmBuOmghe+8jOiri+WPg+imi1tbSDpUVy9QUkVGXV0nXG5cdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdGlmIChyZXNwb25zZVsncXVlcnktY29udGludWUnXSAmJiByZXNwb25zZVsncXVlcnktY29udGludWUnXS5pbWFnZXVzYWdlKSB7XG5cdFx0XHRcdFx0XHRcdGFwaW9iai5wYXJhbXMuZm9ybS5hcHBlbmQoe1xuXHRcdFx0XHRcdFx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0XHRcdFx0XHRcdGxhYmVsOlxuXHRcdFx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfmmL7npLrliY0nLCAn6aGv56S65YmNJykgK1xuXHRcdFx0XHRcdFx0XHRcdFx0bXcubGFuZ3VhZ2UuY29udmVydE51bWJlcihsaXN0Lmxlbmd0aCkgK1xuXHRcdFx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfkuKrmlofku7bkvb/nlKjjgIInLCAn5YCL5qqU5qGI5L2/55So44CCJyksXG5cdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0YXBpb2JqLnBhcmFtcy5mb3JtLmFwcGVuZCh7XG5cdFx0XHRcdFx0XHRcdHR5cGU6ICdidXR0b24nLFxuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflhajpgIknLCAn5YWo6YG4JyksXG5cdFx0XHRcdFx0XHRcdGV2ZW50OiAoZSkgPT4ge1xuXHRcdFx0XHRcdFx0XHRcdCQoTW9yZWJpdHMucXVpY2tGb3JtLmdldEVsZW1lbnRzKGUudGFyZ2V0LmZvcm0sICdpbWFnZXVzYWdlJykpLnByb3AoJ2NoZWNrZWQnLCB0cnVlKTtcblx0XHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0YXBpb2JqLnBhcmFtcy5mb3JtLmFwcGVuZCh7XG5cdFx0XHRcdFx0XHRcdHR5cGU6ICdidXR0b24nLFxuXHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflhajkuI3pgIknLCAn5YWo5LiN6YG4JyksXG5cdFx0XHRcdFx0XHRcdGV2ZW50OiAoZSkgPT4ge1xuXHRcdFx0XHRcdFx0XHRcdCQoTW9yZWJpdHMucXVpY2tGb3JtLmdldEVsZW1lbnRzKGUudGFyZ2V0LmZvcm0sICdpbWFnZXVzYWdlJykpLnByb3AoJ2NoZWNrZWQnLCBmYWxzZSk7XG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdGFwaW9iai5wYXJhbXMuZm9ybS5hcHBlbmQoe1xuXHRcdFx0XHRcdFx0XHR0eXBlOiAnY2hlY2tib3gnLFxuXHRcdFx0XHRcdFx0XHRuYW1lOiAnaW1hZ2V1c2FnZScsXG5cdFx0XHRcdFx0XHRcdHNoaWZ0Q2xpY2tTdXBwb3J0OiB0cnVlLFxuXHRcdFx0XHRcdFx0XHRsaXN0LFxuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRoYXZlY29udGVudCA9IHRydWU7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGFwaW9iai5wYXJhbXMuZm9ybS5hcHBlbmQoe1xuXHRcdFx0XHRcdFx0XHR0eXBlOiAnZGl2Jyxcblx0XHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5pyq5om+5Yiw5paH5Lu25L2/55So44CCJywgJ+acquaJvuWIsOaqlOahiOS9v+eUqOOAgicpLFxuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGNvbnN0IGJhY2tsaW5rcyA9IHJlc3BvbnNlLnF1ZXJ5LmJhY2tsaW5rcy5zb3J0KFR3aW5rbGUuc29ydEJ5TmFtZXNwYWNlKTtcblx0XHRcdFx0aWYgKGJhY2tsaW5rcy5sZW5ndGggPiAwKSB7XG5cdFx0XHRcdFx0bGlzdCA9IFtdO1xuXHRcdFx0XHRcdGZvciAoaSA9IDA7IGkgPCBiYWNrbGlua3MubGVuZ3RoOyArK2kpIHtcblx0XHRcdFx0XHRcdC8vIExhYmVsIG1hZGUgYnkgVHdpbmtsZS5nZW5lcmF0ZUJhdGNoUGFnZUxpbmtzXG5cdFx0XHRcdFx0XHRsaXN0W2xpc3QubGVuZ3RoXSA9IHtcblx0XHRcdFx0XHRcdFx0bGFiZWw6ICcnLFxuXHRcdFx0XHRcdFx0XHR2YWx1ZTogYmFja2xpbmtzW2ldLnRpdGxlLFxuXHRcdFx0XHRcdFx0XHRjaGVja2VkOiB0cnVlLFxuXHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0YXBpb2JqLnBhcmFtcy5mb3JtLmFwcGVuZCh7XG5cdFx0XHRcdFx0XHR0eXBlOiAnaGVhZGVyJyxcblx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+mTvuWFpScsICfpgKPlhaUnKSxcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRuYW1lc3BhY2VzID0gW107XG5cdFx0XHRcdFx0Zm9yIChjb25zdCB2IG9mIFR3aW5rbGUuZ2V0UHJlZigndW5saW5rTmFtZXNwYWNlcycpKSB7XG5cdFx0XHRcdFx0XHRuYW1lc3BhY2VzW25hbWVzcGFjZXMubGVuZ3RoXSA9XG5cdFx0XHRcdFx0XHRcdHYgPT09ICcwJ1xuXHRcdFx0XHRcdFx0XHRcdD8gd2luZG93LndnVUxTKCfvvIjmnaHnm67vvIknLCAn77yI5qKd55uu77yJJylcblx0XHRcdFx0XHRcdFx0XHQ6IG13LmNvbmZpZy5nZXQoJ3dnRm9ybWF0dGVkTmFtZXNwYWNlcycpW3ZdO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRhcGlvYmoucGFyYW1zLmZvcm0uYXBwZW5kKHtcblx0XHRcdFx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5bey6YCJ5oup55qE5ZG95ZCN56m66Ze077yaJywgJ+W3sumBuOaTh+eahOWRveWQjeepuumWk++8micpICsgbmFtZXNwYWNlcy5qb2luKCfjgIEnKSxcblx0XHRcdFx0XHRcdHRvb2x0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0J+aCqOWPr+WcqFR3aW5rbGXlj4LmlbDorr7nva7kuK3mm7TmlLnnm7jlhbPpgInpobnvvIzor7flj4Lop4FbW0g6VFcvUFJFRl1dJyxcblx0XHRcdFx0XHRcdFx0J+aCqOWPr+WcqFR3aW5rbGXlgY/lpb3oqK3lrprkuK3mm7TmlLnnm7jpl5zpgbjpoIXvvIzoq4vlj4PopotbW0g6VFcvUFJFRl1dJ1xuXHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRpZiAocmVzcG9uc2VbJ3F1ZXJ5LWNvbnRpbnVlJ10gJiYgcmVzcG9uc2VbJ3F1ZXJ5LWNvbnRpbnVlJ10uYmFja2xpbmtzKSB7XG5cdFx0XHRcdFx0XHRhcGlvYmoucGFyYW1zLmZvcm0uYXBwZW5kKHtcblx0XHRcdFx0XHRcdFx0dHlwZTogJ2RpdicsXG5cdFx0XHRcdFx0XHRcdGxhYmVsOlxuXHRcdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5pi+56S65YmNJywgJ+mhr+ekuuWJjScpICtcblx0XHRcdFx0XHRcdFx0XHRtdy5sYW5ndWFnZS5jb252ZXJ0TnVtYmVyKGxpc3QubGVuZ3RoKSArXG5cdFx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfkuKrpk77lhaXjgIInLCAn5YCL6YCj5YWl44CCJyksXG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0YXBpb2JqLnBhcmFtcy5mb3JtLmFwcGVuZCh7XG5cdFx0XHRcdFx0XHR0eXBlOiAnYnV0dG9uJyxcblx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WFqOmAiScsICflhajpgbgnKSxcblx0XHRcdFx0XHRcdGV2ZW50OiAoZSkgPT4ge1xuXHRcdFx0XHRcdFx0XHQkKE1vcmViaXRzLnF1aWNrRm9ybS5nZXRFbGVtZW50cyhlLnRhcmdldC5mb3JtLCAnYmFja2xpbmtzJykpLnByb3AoJ2NoZWNrZWQnLCB0cnVlKTtcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0YXBpb2JqLnBhcmFtcy5mb3JtLmFwcGVuZCh7XG5cdFx0XHRcdFx0XHR0eXBlOiAnYnV0dG9uJyxcblx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WFqOS4jemAiScsICflhajkuI3pgbgnKSxcblx0XHRcdFx0XHRcdGV2ZW50OiAoZSkgPT4ge1xuXHRcdFx0XHRcdFx0XHQkKE1vcmViaXRzLnF1aWNrRm9ybS5nZXRFbGVtZW50cyhlLnRhcmdldC5mb3JtLCAnYmFja2xpbmtzJykpLnByb3AoJ2NoZWNrZWQnLCBmYWxzZSk7XG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdGFwaW9iai5wYXJhbXMuZm9ybS5hcHBlbmQoe1xuXHRcdFx0XHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdFx0XHRcdG5hbWU6ICdiYWNrbGlua3MnLFxuXHRcdFx0XHRcdFx0c2hpZnRDbGlja1N1cHBvcnQ6IHRydWUsXG5cdFx0XHRcdFx0XHRsaXN0LFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdGhhdmVjb250ZW50ID0gdHJ1ZTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRhcGlvYmoucGFyYW1zLmZvcm0uYXBwZW5kKHtcblx0XHRcdFx0XHRcdHR5cGU6ICdkaXYnLFxuXHRcdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5pyq5om+5Yiw6ZO+5YWl44CCJywgJ+acquaJvuWIsOmAo+WFpeOAgicpLFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChoYXZlY29udGVudCkge1xuXHRcdFx0XHRcdGFwaW9iai5wYXJhbXMuZm9ybS5hcHBlbmQoe1xuXHRcdFx0XHRcdFx0dHlwZTogJ3N1Ym1pdCcsXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0Y29uc3QgcmVzdWx0ID0gYXBpb2JqLnBhcmFtcy5mb3JtLnJlbmRlcigpO1xuXHRcdFx0XHRhcGlvYmoucGFyYW1zLldpbmRvdy5zZXRDb250ZW50KHJlc3VsdCk7XG5cdFx0XHRcdGZvciAoY29uc3QgbGluayBvZiBNb3JlYml0cy5xdWlja0Zvcm0uZ2V0RWxlbWVudHMocmVzdWx0LCAnYmFja2xpbmtzJykpIHtcblx0XHRcdFx0XHRUd2lua2xlLmdlbmVyYXRlQmF0Y2hQYWdlTGlua3MobGluayk7XG5cdFx0XHRcdH1cblx0XHRcdFx0Zm9yIChjb25zdCBsaW5rIG9mIE1vcmViaXRzLnF1aWNrRm9ybS5nZXRFbGVtZW50cyhyZXN1bHQsICdpbWFnZXVzYWdlJykpIHtcblx0XHRcdFx0XHRUd2lua2xlLmdlbmVyYXRlQmF0Y2hQYWdlTGlua3MobGluayk7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0fSxcblx0XHR1bmxpbmtCYWNrbGlua3M6IChwYWdlb2JqKSA9PiB7XG5cdFx0XHRsZXQgb2xkdGV4dCA9IHBhZ2VvYmouZ2V0UGFnZVRleHQoKTtcblx0XHRcdGNvbnN0IHBhcmFtcyA9IHBhZ2VvYmouZ2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKCk7XG5cdFx0XHRjb25zdCBxaXV3ZW5fcGFnZSA9IG5ldyBNb3JlYml0cy53aWtpdGV4dC5wYWdlKG9sZHRleHQpO1xuXHRcdFx0bGV0IHN1bW1hcnlUZXh0ID0gJyc7XG5cdFx0XHRsZXQgd2FybmluZ1N0cmluZyA9IGZhbHNlO1xuXHRcdFx0bGV0IHRleHQ7XG5cdFx0XHQvLyByZW1vdmUgaW1hZ2UgdXNhZ2VzXG5cdFx0XHRpZiAocGFyYW1zLmRvSW1hZ2V1c2FnZSkge1xuXHRcdFx0XHR0ZXh0ID0gcWl1d2VuX3BhZ2UuY29tbWVudE91dEltYWdlKG13LmNvbmZpZy5nZXQoJ3dnVGl0bGUnKSwgd2luZG93LndnVUxTKCfms6jph4onLCAn5rOo6YeLJykpLmdldFRleHQoKTtcblx0XHRcdFx0Ly8gZGlkIHdlIGFjdHVhbGx5IG1ha2UgYW55IGNoYW5nZXM/XG5cdFx0XHRcdGlmICh0ZXh0ID09PSBvbGR0ZXh0KSB7XG5cdFx0XHRcdFx0d2FybmluZ1N0cmluZyA9IHdpbmRvdy53Z1VMUygn5paH5Lu25L2/55SoJywgJ+aqlOahiOS9v+eUqCcpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHN1bW1hcnlUZXh0ID0gd2luZG93LndnVUxTKCfms6jph4rmlofku7bkvb/nlKgnLCAn5rOo6YeL5qqU5qGI5L2/55SoJyk7XG5cdFx0XHRcdFx0b2xkdGV4dCA9IHRleHQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdC8vIHJlbW92ZSBiYWNrbGlua3Ncblx0XHRcdGlmIChwYXJhbXMuZG9CYWNrbGlua3MpIHtcblx0XHRcdFx0dGV4dCA9IHFpdXdlbl9wYWdlLnJlbW92ZUxpbmsoTW9yZWJpdHMucGFnZU5hbWVOb3JtKS5nZXRUZXh0KCk7XG5cdFx0XHRcdHRleHQgPSBxaXV3ZW5fcGFnZS5yZW1vdmVUZW1wbGF0ZShtdy5jb25maWcuZ2V0KCd3Z1RpdGxlJykpLmdldFRleHQoKTtcblx0XHRcdFx0Ly8gZGlkIHdlIGFjdHVhbGx5IG1ha2UgYW55IGNoYW5nZXM/XG5cdFx0XHRcdGlmICh0ZXh0ID09PSBvbGR0ZXh0KSB7XG5cdFx0XHRcdFx0d2FybmluZ1N0cmluZyA9IHdhcm5pbmdTdHJpbmdcblx0XHRcdFx0XHRcdD8gd2luZG93LndnVUxTKCflj5bmtojpk77lhaXmiJbmlofku7bkvb/nlKgnLCAn5Y+W5raI6YCj5YWl5oiW5qqU5qGI5L2/55SoJylcblx0XHRcdFx0XHRcdDogd2luZG93LndnVUxTKCflj5bmtojpk77lhaUnLCAn5Y+W5raI6YCj5YWlJyk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0c3VtbWFyeVRleHQgPSAoc3VtbWFyeVRleHQgPyBgJHtzdW1tYXJ5VGV4dH0gLyBgIDogJycpICsgd2luZG93LndnVUxTKCflj5bmtojpk77mjqXliLAnLCAn5Y+W5raI6YCj57WQ5YiwJyk7XG5cdFx0XHRcdFx0b2xkdGV4dCA9IHRleHQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmICh3YXJuaW5nU3RyaW5nKSB7XG5cdFx0XHRcdC8vIG5vdGhpbmcgdG8gZG8hXG5cdFx0XHRcdHBhZ2VvYmpcblx0XHRcdFx0XHQuZ2V0U3RhdHVzRWxlbWVudCgpXG5cdFx0XHRcdFx0LmVycm9yKGAke3dpbmRvdy53Z1VMUygn5pyq6IO95Zyo6aG16Z2i5LiK5om+5YiwJywgJ+acquiDveWcqOmggemdouS4iuaJvuWIsCcpICsgd2FybmluZ1N0cmluZ33jgIJgKTtcblx0XHRcdFx0cGFyYW1zLnVubGlua2VyLndvcmtlckZhaWx1cmUocGFnZW9iaik7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdHBhZ2VvYmouc2V0UGFnZVRleHQodGV4dCk7XG5cdFx0XHRwYWdlb2JqLnNldEVkaXRTdW1tYXJ5KFxuXHRcdFx0XHRzdW1tYXJ5VGV4dCArXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKCfigJwnLCAn44CMJykgK1xuXHRcdFx0XHRcdE1vcmViaXRzLnBhZ2VOYW1lTm9ybSArXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKCfigJ3vvJonLCAn44CN77yaJykgK1xuXHRcdFx0XHRcdHBhcmFtcy5yZWFzb25cblx0XHRcdCk7XG5cdFx0XHRwYWdlb2JqLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdHBhZ2VvYmouc2V0Q3JlYXRlT3B0aW9uKCdub2NyZWF0ZScpO1xuXHRcdFx0cGFnZW9iai5zYXZlKHBhcmFtcy51bmxpbmtlci53b3JrZXJTdWNjZXNzLCBwYXJhbXMudW5saW5rZXIud29ya2VyRmFpbHVyZSk7XG5cdFx0fSxcblx0fTtcblx0VHdpbmtsZS5hZGRJbml0Q2FsbGJhY2soVHdpbmtsZS51bmxpbmssICd1bmxpbmsnKTtcbn0pKGpRdWVyeSk7XG5cbmV4cG9ydCB7fTtcbiIsICIvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10cy1jb21tZW50XG4vLyBAdHMtbm9jaGVja1xuXG4vKiEgVHdpbmtsZS5qcyAtIHR3aW5rbGVmbHVmZi5qcyAqL1xuKGZ1bmN0aW9uIHR3aW5rbGVmbHVmZigkKSB7XG5cdGNvbnN0ICRib2R5ID0gJCgnYm9keScpO1xuXHQvKipcblx0ICogdHdpbmtsZWZsdWZmLmpzOiBSZXZlcnQvcm9sbGJhY2sgbW9kdWxlXG5cdCAqIE1vZGUgb2YgaW52b2NhdGlvbjogTGlua3Mgb24gY29udHJpYnV0aW9ucyxcblx0ICogcmVjZW50IGNoYW5nZXMsIGhpc3RvcnksIGFuZCBkaWZmIHBhZ2VzXG5cdCAqIEFjdGl2ZSBvbjogRGlmZiBwYWdlcywgaGlzdG9yeSBwYWdlcyxcblx0ICogU3BlY2lhbDpSZWNlbnRDaGFuZ2VzKExpbmtlZCksIGFuZCBTcGVjaWFsOkNvbnRyaWJ1dGlvbnNcblx0ICovXG5cdC8qKlxuXHQgKiBUd2lua2xlZmx1ZmYgcmV2ZXJ0IGFuZCBhbnRpdmFuZGFsaXNtIHV0aWxpdHlcblx0ICovXG5cdFR3aW5rbGUuZmx1ZmYgPSAoKSA9PiB7XG5cdFx0Ly8gT25seSBwcm9jZWVkIGlmIHRoZSB1c2VyIGNhbiBhY3R1YWxseSBlZGl0IHRoZSBwYWdlIGluIHF1ZXN0aW9uLlxuXHRcdC8vIHdnSXNQcm9iYWJseUVkaXRhYmxlIHNob3VsZCB0YWtlXG5cdFx0Ly8gY2FyZSBvZiBuYW1lc3BhY2UvY29udGVudE1vZGVsIHJlc3RyaWN0aW9ucyBhcyB3ZWxsIGFzIGV4cGxpY2l0XG5cdFx0Ly8gcHJvdGVjdGlvbnM7IGl0IHdvbid0IHRha2UgY2FyZSBvZiBjYXNjYWRpbmcgb3IgVGl0bGVCbGFja2xpc3QuXG5cdFx0aWYgKG13LmNvbmZpZy5nZXQoJ3dnSXNQcm9iYWJseUVkaXRhYmxlJykpIHtcblx0XHRcdC8vIHdnRGlmZk9sZElkIGluY2x1ZGVkIGZvciBjbGFyaXR5IGluIGlmIGVsc2UgbG9vcFxuXHRcdFx0aWYgKG13LmNvbmZpZy5nZXQoJ3dnRGlmZk5ld0lkJykgfHwgbXcuY29uZmlnLmdldCgnd2dEaWZmT2xkSWQnKSkge1xuXHRcdFx0XHQvLyBSZWxvYWQgYWxvbmdzaWRlIHRoZSByZXZpc2lvbiBzbGlkZXJcblx0XHRcdFx0bXcuaG9vaygnd2lraXBhZ2UuZGlmZicpLmFkZCgoKSA9PiB7XG5cdFx0XHRcdFx0VHdpbmtsZS5mbHVmZi5hZGRMaW5rcy5kaWZmKCk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSBlbHNlIGlmIChcblx0XHRcdFx0bXcuY29uZmlnLmdldCgnd2dBY3Rpb24nKSA9PT0gJ3ZpZXcnICYmXG5cdFx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnUmV2aXNpb25JZCcpICYmXG5cdFx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnQ3VyUmV2aXNpb25JZCcpICE9PSBtdy5jb25maWcuZ2V0KCd3Z1JldmlzaW9uSWQnKVxuXHRcdFx0KSB7XG5cdFx0XHRcdFR3aW5rbGUuZmx1ZmYuYWRkTGlua3Mub2xkaWQoKTtcblx0XHRcdH0gZWxzZSBpZiAobXcuY29uZmlnLmdldCgnd2dBY3Rpb24nKSA9PT0gJ2hpc3RvcnknKSB7XG5cdFx0XHRcdFR3aW5rbGUuZmx1ZmYuYWRkTGlua3MuaGlzdG9yeSgpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSBpZiAobXcuY29uZmlnLmdldCgnd2dOYW1lc3BhY2VOdW1iZXInKSA9PT0gLTEpIHtcblx0XHRcdFR3aW5rbGUuZmx1ZmYuc2tpcFRhbGsgPSAhVHdpbmtsZS5nZXRQcmVmKCdvcGVuVGFsa1BhZ2VPbkF1dG9SZXZlcnQnKTtcblx0XHRcdFR3aW5rbGUuZmx1ZmYucm9sbGJhY2tJblBsYWNlID0gVHdpbmtsZS5nZXRQcmVmKCdyb2xsYmFja0luUGxhY2UnKTtcblx0XHRcdGlmIChtdy5jb25maWcuZ2V0KCd3Z0Nhbm9uaWNhbFNwZWNpYWxQYWdlTmFtZScpID09PSAnQ29udHJpYnV0aW9ucycpIHtcblx0XHRcdFx0VHdpbmtsZS5mbHVmZi5hZGRMaW5rcy5jb250cmlidXRpb25zKCk7XG5cdFx0XHR9IGVsc2UgaWYgKFxuXHRcdFx0XHRtdy5jb25maWcuZ2V0KCd3Z0Nhbm9uaWNhbFNwZWNpYWxQYWdlTmFtZScpID09PSAnUmVjZW50Y2hhbmdlcycgfHxcblx0XHRcdFx0bXcuY29uZmlnLmdldCgnd2dDYW5vbmljYWxTcGVjaWFsUGFnZU5hbWUnKSA9PT0gJ1JlY2VudGNoYW5nZXNsaW5rZWQnXG5cdFx0XHQpIHtcblx0XHRcdFx0Ly8gUmVsb2FkIHdpdGggcmVjZW50IGNoYW5nZXMgdXBkYXRlc1xuXHRcdFx0XHQvLyBzdHJ1Y3R1cmVkQ2hhbmdlRmlsdGVycy51aS5pbml0aWFsaXplZCBpcyBqdXN0IG9uIGxvYWRcblx0XHRcdFx0bXcuaG9vaygnd2lraXBhZ2UuY29udGVudCcpLmFkZCgoaXRlbSkgPT4ge1xuXHRcdFx0XHRcdGlmIChpdGVtLmlzKCdkaXYnKSkge1xuXHRcdFx0XHRcdFx0VHdpbmtsZS5mbHVmZi5hZGRMaW5rcy5yZWNlbnRjaGFuZ2VzKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdC8vIEEgbGlzdCBvZiB1c2VybmFtZXMsIHVzdWFsbHkgb25seSBib3RzLCB0aGF0IHZhbmRhbGlzbSByZXZlcnQgaXMganVtcGVkXG5cdC8vIG92ZXI7IHRoYXQgaXMsIGlmIHZhbmRhbGlzbSByZXZlcnQgd2FzIGNob3NlbiBvbiBzdWNoIHVzZXJuYW1lLCB0aGVuIGl0c1xuXHQvLyB0YXJnZXQgaXMgb24gdGhlIHJldmlzaW9uIGJlZm9yZS4gIFRoaXMgaXMgZm9yIGhhbmRsaW5nIHF1aWNrIGJvdHMgdGhhdFxuXHQvLyBtYWtlcyBlZGl0cyBzZWNvbmRzIGFmdGVyIHRoZSBvcmlnaW5hbCBlZGl0IGlzIG1hZGUuICBUaGlzIG9ubHkgYWZmZWN0c1xuXHQvLyB2YW5kYWxpc20gcm9sbGJhY2s7IGZvciBnb29kIGZhaXRoIHJvbGxiYWNrLCBpdCB3aWxsIHN0b3AsIGluZGljYXRpbmcgYSBib3Rcblx0Ly8gaGFzIG5vIGZhaXRoLCBhbmQgZm9yIG5vcm1hbCByb2xsYmFjaywgaXQgd2lsbCByb2xsYmFjayB0aGF0IGVkaXQuXG5cdFR3aW5rbGUuZmx1ZmYudHJ1c3RlZEJvdHMgPSBbXTtcblx0VHdpbmtsZS5mbHVmZi5za2lwVGFsayA9IG51bGw7XG5cdFR3aW5rbGUuZmx1ZmYucm9sbGJhY2tJblBsYWNlID0gbnVsbDtcblx0Ly8gU3RyaW5nIHRvIGluc2VydCB3aGVuIGEgdXNlcm5hbWUgaXMgaGlkZGVuXG5cdFR3aW5rbGUuZmx1ZmYuaGlkZGVuTmFtZSA9IHdpbmRvdy53Z1VMUygn5bey6ZqQ6JeP55qE55So5oi3JywgJ+W3sumaseiXj+eahOS9v+eUqOiAhScpO1xuXHQvLyBDb25zb2xpZGF0ZWQgY29uc3RydWN0aW9uIG9mIGZsdWZmIGxpbmtzXG5cdFR3aW5rbGUuZmx1ZmYubGlua0J1aWxkZXIgPSB7XG5cdFx0c3BhblRhZzogKGNvbG9yLCBjb250ZW50KSA9PiB7XG5cdFx0XHRjb25zdCBzcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuXHRcdFx0c3Bhbi5zdHlsZS5jb2xvciA9IGNvbG9yO1xuXHRcdFx0c3Bhbi5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjb250ZW50KSk7XG5cdFx0XHRyZXR1cm4gc3Bhbjtcblx0XHR9LFxuXHRcdGJ1aWxkTGluazogKGNvbG9yLCB0ZXh0KSA9PiB7XG5cdFx0XHRjb25zdCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuXHRcdFx0bGluay5hcHBlbmRDaGlsZChUd2lua2xlLmZsdWZmLmxpbmtCdWlsZGVyLnNwYW5UYWcoJ0JsYWNrJywgJ1snKSk7XG5cdFx0XHRsaW5rLmFwcGVuZENoaWxkKFR3aW5rbGUuZmx1ZmYubGlua0J1aWxkZXIuc3BhblRhZyhjb2xvciwgdGV4dCkpO1xuXHRcdFx0bGluay5hcHBlbmRDaGlsZChUd2lua2xlLmZsdWZmLmxpbmtCdWlsZGVyLnNwYW5UYWcoJ0JsYWNrJywgJ10nKSk7XG5cdFx0XHRsaW5rLmhyZWYgPSAnIyc7XG5cdFx0XHRyZXR1cm4gbGluaztcblx0XHR9LFxuXHRcdC8qKlxuXHRcdCAqIEBwYXJhbSB7c3RyaW5nfSBbdmFuZGFsPW51bGxdIC0gVXNlcm5hbWUgb2YgdGhlIGVkaXRvciBiZWluZyByZXZlcnRlZFxuXHRcdCAqIFByb3ZpZGUgYSBmYWxzZXkgdmFsdWUgaWYgdGhlIHVzZXJuYW1lIGlzIGhpZGRlbiwgZGVmYXVsdHMgdG8gbnVsbFxuXHRcdCAqIEBwYXJhbSB7Ym9vbGVhbn0gaW5saW5lIC0gVHJ1ZSB0byBjcmVhdGUgdHdvIGxpbmtzIGluIGEgc3BhbiwgZmFsc2Vcblx0XHQgKiB0byBjcmVhdGUgdGhyZWUgbGlua3MgaW4gYSBkaXYgKG9wdGlvbmFsKVxuXHRcdCAqIEBwYXJhbSB7bnVtYmVyfHN0cmluZ30gW3Jldj13Z0N1clJldmlzaW9uSWRdIC0gUmV2aXNpb24gSUQgYmVpbmcgcmV2ZXJ0ZWQgKG9wdGlvbmFsKVxuXHRcdCAqIEBwYXJhbSB7c3RyaW5nfSBbcGFnZT13Z1BhZ2VOYW1lXSAtIFBhZ2UgYmVpbmcgcmV2ZXJ0ZWQgKG9wdGlvbmFsKVxuXHRcdCAqIEByZXR1cm4ge0hUTUxFbGVtZW50fSByZXZOb2RlXG5cdFx0ICovXG5cdFx0cm9sbGJhY2tMaW5rczogKHZhbmRhbCwgaW5saW5lLCByZXYsIHBhZ2UpID0+IHtcblx0XHRcdHZhbmRhbCB8fD0gbnVsbDtcblx0XHRcdGNvbnN0IGVsZW0gPSBpbmxpbmUgPyAnc3BhbicgOiAnZGl2Jztcblx0XHRcdGNvbnN0IHJldk5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGVsZW0pO1xuXHRcdFx0cmV2ID0gTnVtYmVyLnBhcnNlSW50KHJldiwgMTApO1xuXHRcdFx0aWYgKHJldikge1xuXHRcdFx0XHRyZXZOb2RlLnNldEF0dHJpYnV0ZSgnaWQnLCBgdHctcmV2ZXJ0JHtyZXZ9YCk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXZOb2RlLnNldEF0dHJpYnV0ZSgnaWQnLCAndHctcmV2ZXJ0Jyk7XG5cdFx0XHR9XG5cdFx0XHRjb25zdCBub3JtTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0cm9uZycpO1xuXHRcdFx0Y29uc3QgdmFuZE5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHJvbmcnKTtcblx0XHRcdGNvbnN0IG5vcm1MaW5rID0gVHdpbmtsZS5mbHVmZi5saW5rQnVpbGRlci5idWlsZExpbmsoJ1N0ZWVsQmx1ZScsICflm57pgIAnKTtcblx0XHRcdGNvbnN0IHZhbmRMaW5rID0gVHdpbmtsZS5mbHVmZi5saW5rQnVpbGRlci5idWlsZExpbmsoJ1JlZCcsIHdpbmRvdy53Z1VMUygn56C05Z2PJywgJ+egtOWjnicpKTtcblx0XHRcdCQobm9ybUxpbmspLm9uKCdjbGljaycsIChlKSA9PiB7XG5cdFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0VHdpbmtsZS5mbHVmZi5yZXZlcnQoJ25vcm0nLCB2YW5kYWwsIHJldiwgcGFnZSk7XG5cdFx0XHRcdFR3aW5rbGUuZmx1ZmYuZGlzYWJsZUxpbmtzKHJldk5vZGUpO1xuXHRcdFx0fSk7XG5cdFx0XHQkKHZhbmRMaW5rKS5vbignY2xpY2snLCAoZSkgPT4ge1xuXHRcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdFR3aW5rbGUuZmx1ZmYucmV2ZXJ0KCd2YW5kJywgdmFuZGFsLCByZXYsIHBhZ2UpO1xuXHRcdFx0XHRUd2lua2xlLmZsdWZmLmRpc2FibGVMaW5rcyhyZXZOb2RlKTtcblx0XHRcdH0pO1xuXHRcdFx0dmFuZE5vZGUuYXBwZW5kQ2hpbGQodmFuZExpbmspO1xuXHRcdFx0bm9ybU5vZGUuYXBwZW5kQ2hpbGQobm9ybUxpbmspO1xuXHRcdFx0Y29uc3Qgc2VwYXJhdG9yID0gaW5saW5lID8gJyAnIDogJyB8fCAnO1xuXHRcdFx0cmV2Tm9kZS5hcHBlbmRDaGlsZChub3JtTm9kZSk7XG5cdFx0XHRyZXZOb2RlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHNlcGFyYXRvcikpO1xuXHRcdFx0cmV2Tm9kZS5hcHBlbmRDaGlsZCh2YW5kTm9kZSk7XG5cdFx0XHRyZXR1cm4gcmV2Tm9kZTtcblx0XHR9LFxuXHRcdC8vIEJ1aWxkIFtyZXN0b3JlIHRoaXMgcmV2aXNpb25dIGxpbmtzXG5cdFx0cmVzdG9yZVRoaXNSZXZpc2lvbkxpbms6IChyZXZpc2lvblJlZiwgaW5saW5lKSA9PiB7XG5cdFx0XHQvLyBJZiBub3QgYSBzcGVjaWZpYyByZXZpc2lvbiBudW1iZXIsIHNob3VsZCBiZSB3Z0RpZmZOZXdJZC93Z0RpZmZPbGRJZC93Z1JldmlzaW9uSWRcblx0XHRcdHJldmlzaW9uUmVmID0gdHlwZW9mIHJldmlzaW9uUmVmID09PSAnbnVtYmVyJyA/IHJldmlzaW9uUmVmIDogbXcuY29uZmlnLmdldChyZXZpc2lvblJlZik7XG5cdFx0XHRjb25zdCBlbGVtID0gaW5saW5lID8gJ3NwYW4nIDogJ2Rpdic7XG5cdFx0XHRjb25zdCByZXZlcnRUb1JldmlzaW9uTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoZWxlbSk7XG5cdFx0XHRyZXZlcnRUb1JldmlzaW9uTm9kZS5zZXRBdHRyaWJ1dGUoJ2lkJywgYHR3LXJldmVydC10by0ke3JldmlzaW9uUmVmfWApO1xuXHRcdFx0cmV2ZXJ0VG9SZXZpc2lvbk5vZGUuc3R5bGUuZm9udFdlaWdodCA9ICdib2xkJztcblx0XHRcdGNvbnN0IHJldmVydFRvUmV2aXNpb25MaW5rID0gVHdpbmtsZS5mbHVmZi5saW5rQnVpbGRlci5idWlsZExpbmsoXG5cdFx0XHRcdCdTYWRkbGVCcm93bicsXG5cdFx0XHRcdHdpbmRvdy53Z1VMUygn5oGi5aSN5q2k54mI5pysJywgJ+aBouW+qeatpOeJiOacrCcpXG5cdFx0XHQpO1xuXHRcdFx0JChyZXZlcnRUb1JldmlzaW9uTGluaykub24oJ2NsaWNrJywgKGUpID0+IHtcblx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHRUd2lua2xlLmZsdWZmLnJldmVydFRvUmV2aXNpb24ocmV2aXNpb25SZWYpO1xuXHRcdFx0fSk7XG5cdFx0XHRpZiAoaW5saW5lKSB7XG5cdFx0XHRcdHJldmVydFRvUmV2aXNpb25Ob2RlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCcgJykpO1xuXHRcdFx0fVxuXHRcdFx0cmV2ZXJ0VG9SZXZpc2lvbk5vZGUuYXBwZW5kQ2hpbGQocmV2ZXJ0VG9SZXZpc2lvbkxpbmspO1xuXHRcdFx0cmV0dXJuIHJldmVydFRvUmV2aXNpb25Ob2RlO1xuXHRcdH0sXG5cdH07XG5cdFR3aW5rbGUuZmx1ZmYuYWRkTGlua3MgPSB7XG5cdFx0Y29udHJpYnV0aW9uczogKCkgPT4ge1xuXHRcdFx0Ly8gJCgnc3AtY29udHJpYnV0aW9ucy1mb290ZXItYW5vbi1yYW5nZScpIHJlbGllcyBvbiB0aGUgZm1ib3hcblx0XHRcdC8vIGlkIGluIFtbTWVkaWFXaWtpOlNwLWNvbnRyaWJ1dGlvbnMtZm9vdGVyLWFub24tcmFuZ2VdXSBhbmRcblx0XHRcdC8vIGlzIHVzZWQgdG8gc2hvdyByb2xsYmFjay92YW5kYWxpc20gbGlua3MgZm9yIElQIHJhbmdlc1xuXHRcdFx0Y29uc3QgaXNSYW5nZSA9ICEhJGJvZHkuZmluZCgnI3NwLWNvbnRyaWJ1dGlvbnMtZm9vdGVyLWFub24tcmFuZ2UnKVswXTtcblx0XHRcdGlmIChtdy5jb25maWcuZXhpc3RzKCd3Z1JlbGV2YW50VXNlck5hbWUnKSB8fCBpc1JhbmdlKSB7XG5cdFx0XHRcdC8vIEdldCB0aGUgdXNlcm5hbWUgdGhlc2UgY29udHJpYnV0aW9ucyBhcmUgZm9yXG5cdFx0XHRcdGxldCB1c2VybmFtZSA9IG13LmNvbmZpZy5nZXQoJ3dnUmVsZXZhbnRVc2VyTmFtZScpO1xuXHRcdFx0XHRpZiAoXG5cdFx0XHRcdFx0VHdpbmtsZS5nZXRQcmVmKCdzaG93Um9sbGJhY2tMaW5rcycpLmluY2x1ZGVzKCdjb250cmlicycpIHx8XG5cdFx0XHRcdFx0KG13LmNvbmZpZy5nZXQoJ3dnVXNlck5hbWUnKSAhPT0gdXNlcm5hbWUgJiZcblx0XHRcdFx0XHRcdFR3aW5rbGUuZ2V0UHJlZignc2hvd1JvbGxiYWNrTGlua3MnKS5pbmNsdWRlcygnb3RoZXJzJykpIHx8XG5cdFx0XHRcdFx0KG13LmNvbmZpZy5nZXQoJ3dnVXNlck5hbWUnKSA9PT0gdXNlcm5hbWUgJiYgVHdpbmtsZS5nZXRQcmVmKCdzaG93Um9sbGJhY2tMaW5rcycpLmluY2x1ZGVzKCdtaW5lJykpXG5cdFx0XHRcdCkge1xuXHRcdFx0XHRcdGNvbnN0ICRsaXN0ID0gJGJvZHlcblx0XHRcdFx0XHRcdC5maW5kKCcjbXctY29udGVudC10ZXh0Jylcblx0XHRcdFx0XHRcdC5maW5kKCd1bCBsaTpoYXMoc3Bhbi5tdy11Y3RvcCk6aGFzKC5tdy1jaGFuZ2VzbGlzdC1kaWZmKScpO1xuXHRcdFx0XHRcdCRsaXN0LmVhY2goKF9rZXksIGN1cnJlbnQpID0+IHtcblx0XHRcdFx0XHRcdC8vIHJldmlkIGlzIGFsc28gYXZhaWxhYmxlIGluIHRoZSBocmVmIG9mIGJvdGhcblx0XHRcdFx0XHRcdC8vIC5tdy1jaGFuZ2VzbGlzdC1kYXRlIG9yIC5tdy1jaGFuZ2VzbGlzdC1kaWZmXG5cdFx0XHRcdFx0XHRjb25zdCBwYWdlID0gJChjdXJyZW50KS5maW5kKCcubXctY29udHJpYnV0aW9ucy10aXRsZScpLnRleHQoKTtcblx0XHRcdFx0XHRcdC8vIEdldCB1c2VybmFtZSBmb3IgSVAgcmFuZ2VzICh3Z1JlbGV2YW50VXNlck5hbWUgaXMgbnVsbClcblx0XHRcdFx0XHRcdGlmIChpc1JhbmdlKSB7XG5cdFx0XHRcdFx0XHRcdC8vIFRoZSA6bm90IGlzIHBvc3NpYmx5IHVubmVjZXNzYXJ5LCBhcyBpdCBhcHBlYXJzIHRoYXRcblx0XHRcdFx0XHRcdFx0Ly8gLm13LXVzZXJsaW5rIGlzIHNpbXBseSBub3QgcHJlc2VudCBpZiB0aGUgdXNlcm5hbWUgaXMgaGlkZGVuXG5cdFx0XHRcdFx0XHRcdHVzZXJuYW1lID0gJChjdXJyZW50KS5maW5kKCcubXctdXNlcmxpbms6bm90KC5oaXN0b3J5LWRlbGV0ZWQpJykudGV4dCgpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0Ly8gSXQncyB1bmxpa2VseSwgYnV0IHdlIGNhbid0IGVhc2lseSBjaGVjayBmb3IgcmV2ZGVsJ2QgdXNlcm5hbWVzXG5cdFx0XHRcdFx0XHQvLyBzaW5jZSBvbmx5IGEgc3Ryb25nIGVsZW1lbnQgaXMgcHJvdmlkZWQsIHdpdGggbm8gZWFzeSBzZWxlY3RvclxuXHRcdFx0XHRcdFx0Y3VycmVudC5hcHBlbmRDaGlsZChcblx0XHRcdFx0XHRcdFx0VHdpbmtsZS5mbHVmZi5saW5rQnVpbGRlci5yb2xsYmFja0xpbmtzKHVzZXJuYW1lLCB0cnVlLCBjdXJyZW50LmRhdGFzZXQubXdSZXZpZCwgcGFnZSlcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXHRcdHJlY2VudGNoYW5nZXM6ICgpID0+IHtcblx0XHRcdGlmIChcblx0XHRcdFx0KG13LmNvbmZpZy5nZXQoJ3dnQ2Fub25pY2FsU3BlY2lhbFBhZ2VOYW1lJykgPT09ICdSZWNlbnRjaGFuZ2VzJyAmJlxuXHRcdFx0XHRcdFR3aW5rbGUuZ2V0UHJlZignc2hvd1JvbGxiYWNrTGlua3MnKS5pbmNsdWRlcygncmVjZW50Y2hhbmdlcycpKSB8fFxuXHRcdFx0XHQobXcuY29uZmlnLmdldCgnd2dDYW5vbmljYWxTcGVjaWFsUGFnZU5hbWUnKSA9PT0gJ1JlY2VudGNoYW5nZXNsaW5rZWQnICYmXG5cdFx0XHRcdFx0VHdpbmtsZS5nZXRQcmVmKCdzaG93Um9sbGJhY2tMaW5rcycpLmluY2x1ZGVzKCdyZWNlbnRjaGFuZ2VzbGlua2VkJykpXG5cdFx0XHQpIHtcblx0XHRcdFx0Ly8gTGF0ZXN0IGFuZCByZXZlcnRhYmxlIChub3QgcGFnZSBjcmVhdGlvbnMsIGxvZ3MsIGNhdGVnb3JpemF0aW9ucywgZXRjLilcblx0XHRcdFx0bGV0ICRsaXN0ID0gJGJvZHkuZmluZCgnLm13LWNoYW5nZXNsaXN0IC5tdy1jaGFuZ2VzbGlzdC1sYXN0Lm13LWNoYW5nZXNsaXN0LXNyYy1tdy1lZGl0Jyk7XG5cdFx0XHRcdC8vIEV4Y2x1ZGUgdG9wLWxldmVsIGhlYWRlciBpZiBcImdyb3VwIGNoYW5nZXNcIiBwcmVmZXJlbmNlIGlzIHVzZWRcblx0XHRcdFx0Ly8gYW5kIGZpbmQgb25seSBpbmRpdmlkdWFsIGxpbmVzIG9yIG5lc3RlZCBsaW5lc1xuXHRcdFx0XHQkbGlzdCA9ICRsaXN0XG5cdFx0XHRcdFx0Lm5vdCgnLm13LXJjZmlsdGVycy11aS1oaWdobGlnaHRzLWVuaGFuY2VkLXRvcGxldmVsJylcblx0XHRcdFx0XHQuZmluZCgnLm13LWNoYW5nZXNsaXN0LWxpbmUtaW5uZXIsIHRkLm13LWVuaGFuY2VkLXJjLW5lc3RlZCcpO1xuXHRcdFx0XHQkbGlzdC5lYWNoKChfa2V5LCBjdXJyZW50KSA9PiB7XG5cdFx0XHRcdFx0Ly8gVGhlIDpub3QgaXMgcG9zc2libHkgdW5uZWNlc3NhcnksIGFzIGl0IGFwcGVhcnMgdGhhdFxuXHRcdFx0XHRcdC8vIC5tdy11c2VybGluayBpcyBzaW1wbHkgbm90IHByZXNlbnQgaWYgdGhlIHVzZXJuYW1lIGlzIGhpZGRlblxuXHRcdFx0XHRcdGNvbnN0IHZhbmRhbCA9ICQoY3VycmVudCkuZmluZCgnLm13LXVzZXJsaW5rOm5vdCguaGlzdG9yeS1kZWxldGVkKScpLnRleHQoKTtcblx0XHRcdFx0XHRjb25zdCBocmVmID0gJChjdXJyZW50KS5maW5kKCcubXctY2hhbmdlc2xpc3QtZGlmZicpLmF0dHIoJ2hyZWYnKTtcblx0XHRcdFx0XHRjb25zdCByZXYgPSBtdy51dGlsLmdldFBhcmFtVmFsdWUoJ2RpZmYnLCBocmVmKTtcblx0XHRcdFx0XHRjb25zdCBwYWdlID0gY3VycmVudC5kYXRhc2V0LnRhcmdldFBhZ2U7XG5cdFx0XHRcdFx0Y3VycmVudC5hcHBlbmRDaGlsZChUd2lua2xlLmZsdWZmLmxpbmtCdWlsZGVyLnJvbGxiYWNrTGlua3ModmFuZGFsLCB0cnVlLCByZXYsIHBhZ2UpKTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRoaXN0b3J5OiAoKSA9PiB7XG5cdFx0XHRpZiAoVHdpbmtsZS5nZXRQcmVmKCdzaG93Um9sbGJhY2tMaW5rcycpLmluY2x1ZGVzKCdoaXN0b3J5JykpIHtcblx0XHRcdFx0Ly8gQWxsIHJldnNcblx0XHRcdFx0Y29uc3QgaGlzdExpc3QgPSAkYm9keS5maW5kKCcjcGFnZWhpc3RvcnkgbGknKS50b0FycmF5KCk7XG5cdFx0XHRcdC8vIE9uIGZpcnN0IHBhZ2Ugb2YgcmVzdWx0cywgc28gYWRkIHJldmVydC9yb2xsYmFja1xuXHRcdFx0XHQvLyBsaW5rcyB0byB0aGUgdG9wIHJldmlzaW9uXG5cdFx0XHRcdGlmICghJGJvZHkuZmluZCgnYS5tdy1maXJzdGxpbmsnKS5sZW5ndGgpIHtcblx0XHRcdFx0XHRjb25zdCBmaXJzdCA9IGhpc3RMaXN0LnNoaWZ0KCk7XG5cdFx0XHRcdFx0Y29uc3QgdmFuZGFsID0gJChmaXJzdCkuZmluZCgnLm13LXVzZXJsaW5rOm5vdCguaGlzdG9yeS1kZWxldGVkKScpLnRleHQoKTtcblx0XHRcdFx0XHQvLyBDaGVjayBmb3IgZmlyc3QgdXNlcm5hbWUgZGlmZmVyZW50IHRoYW4gdGhlIHRvcCB1c2VyLFxuXHRcdFx0XHRcdC8vIG9ubHkgYXBwbHkgcm9sbGJhY2sgbGlua3MgaWYvd2hlbiBmb3VuZFxuXHRcdFx0XHRcdC8vIGZvciBmYXN0ZXIgdGhhbiBldmVyeVxuXHRcdFx0XHRcdGZvciAoY29uc3QgaXRlbSBvZiBoaXN0TGlzdCkge1xuXHRcdFx0XHRcdFx0aWYgKCQoaXRlbSkuZmluZCgnLm13LXVzZXJsaW5rJykudGV4dCgpICE9PSB2YW5kYWwpIHtcblx0XHRcdFx0XHRcdFx0Zmlyc3QuYXBwZW5kQ2hpbGQoVHdpbmtsZS5mbHVmZi5saW5rQnVpbGRlci5yb2xsYmFja0xpbmtzKHZhbmRhbCwgdHJ1ZSkpO1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gb2xkaWRcblx0XHRcdFx0Zm9yIChjb25zdCByZXYgb2YgaGlzdExpc3QpIHtcblx0XHRcdFx0XHQvLyBGcm9tIHJlc3RvcmVUaGlzUmV2aXNpb24sIG5vbi10cmFuc2ZlcmFibGVcblx0XHRcdFx0XHQvLyBJZiB0aGUgdGV4dCBoYXMgYmVlbiByZXZkZWwnZCwgaXQgZ2V0cyB3cmFwcGVkIGluIGEgc3BhbiB3aXRoIC5oaXN0b3J5LWRlbGV0ZWQsXG5cdFx0XHRcdFx0Ly8gYW5kIGhyZWYgd2lsbCBiZSB1bmRlZmluZWQgKGFuZCB0aHVzIG9sZGlkIGlzIE5hTilcblx0XHRcdFx0XHRjb25zdCB7aHJlZn0gPSByZXYucXVlcnlTZWxlY3RvcignLm13LWNoYW5nZXNsaXN0LWRhdGUnKTtcblx0XHRcdFx0XHRjb25zdCBvbGRpZCA9IE51bWJlci5wYXJzZUludChtdy51dGlsLmdldFBhcmFtVmFsdWUoJ29sZGlkJywgaHJlZiksIDEwKTtcblx0XHRcdFx0XHRpZiAoIU51bWJlci5pc05hTihvbGRpZCkpIHtcblx0XHRcdFx0XHRcdHJldi5hcHBlbmRDaGlsZChUd2lua2xlLmZsdWZmLmxpbmtCdWlsZGVyLnJlc3RvcmVUaGlzUmV2aXNpb25MaW5rKG9sZGlkLCB0cnVlKSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRkaWZmOiAoKSA9PiB7XG5cdFx0XHQvLyBBdXRvZmlsbCB1c2VyIHRhbGsgbGlua3Mgb24gZGlmZnMgd2l0aCB2YW5hcnRpY2xlIGZvciBlYXN5IHdhcm5pbmcsIGJ1dCBkb24ndCBhdXRvd2FyblxuXHRcdFx0Y29uc3Qgd2FybkZyb21UYWxrID0gKHh0aXRsZSkgPT4ge1xuXHRcdFx0XHRjb25zdCB0YWxrTGluayA9ICQoYCNtdy1kaWZmLSR7eHRpdGxlfTIgLm13LXVzZXJ0b29sbGlua3MgYWApLmZpcnN0KCk7XG5cdFx0XHRcdGlmICh0YWxrTGluay5sZW5ndGgpIHtcblx0XHRcdFx0XHRsZXQgZXh0cmFQYXJhbXMgPSBgdmFuYXJ0aWNsZT0ke213LnV0aWwucmF3dXJsZW5jb2RlKE1vcmViaXRzLnBhZ2VOYW1lTm9ybSl9Jm5vYXV0b3dhcm49dHJ1ZWA7XG5cdFx0XHRcdFx0Ly8gZGlmZklEcyBmb3IgdmFuYXJ0aWNsZXJldmlkXG5cdFx0XHRcdFx0ZXh0cmFQYXJhbXMgKz0gJyZ2YW5hcnRpY2xlcmV2aWQ9Jztcblx0XHRcdFx0XHRleHRyYVBhcmFtcyArPSB4dGl0bGUgPT09ICdvdGl0bGUnID8gbXcuY29uZmlnLmdldCgnd2dEaWZmT2xkSWQnKSA6IG13LmNvbmZpZy5nZXQoJ3dnRGlmZk5ld0lkJyk7XG5cdFx0XHRcdFx0Y29uc3QgaHJlZiA9IHRhbGtMaW5rLmF0dHIoJ2hyZWYnKTtcblx0XHRcdFx0XHRpZiAoaHJlZi5pbmNsdWRlcygnPycpKSB7XG5cdFx0XHRcdFx0XHR0YWxrTGluay5hdHRyKCdocmVmJywgYCR7aHJlZn0mJHtleHRyYVBhcmFtc31gKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0dGFsa0xpbmsuYXR0cignaHJlZicsIGAke2hyZWZ9PyR7ZXh0cmFQYXJhbXN9YCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXHRcdFx0Ly8gT2xkZXIgcmV2aXNpb25cblx0XHRcdHdhcm5Gcm9tVGFsaygnb3RpdGxlJyk7IC8vIEFkZCBxdWljay13YXJuIGxpbmsgdG8gdXNlciB0YWxrIGxpbmtcblx0XHRcdC8vIERvbid0IGxvYWQgaWYgdGhlcmUncyBhIHNpbmdsZSByZXZpc2lvbiBvciB3ZWlyZCBkaWZmIChjdXIgb24gbGF0ZXN0KVxuXHRcdFx0aWYgKG13LmNvbmZpZy5nZXQoJ3dnRGlmZk9sZElkJykgJiYgbXcuY29uZmlnLmdldCgnd2dEaWZmT2xkSWQnKSAhPT0gbXcuY29uZmlnLmdldCgnd2dEaWZmTmV3SWQnKSkge1xuXHRcdFx0XHQvLyBBZGQgYSBbcmVzdG9yZSB0aGlzIHJldmlzaW9uXSBsaW5rIHRvIHRoZSBvbGRlciByZXZpc2lvblxuXHRcdFx0XHRjb25zdCBvbGRUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtdy1kaWZmLW90aXRsZTEnKS5wYXJlbnROb2RlO1xuXHRcdFx0XHRjb25zdCByZXZlcnRUb1JldmlzaW9uID0gVHdpbmtsZS5mbHVmZi5saW5rQnVpbGRlci5yZXN0b3JlVGhpc1JldmlzaW9uTGluaygnd2dEaWZmT2xkSWQnKTtcblx0XHRcdFx0b2xkVGl0bGUuaW5zZXJ0QmVmb3JlKHJldmVydFRvUmV2aXNpb24sIG9sZFRpdGxlLmZpcnN0Q2hpbGQpO1xuXHRcdFx0XHRpZiAoVHdpbmtsZS5nZXRQcmVmKCdjdXN0b21SZXZlcnRTdW1tYXJ5JykubGVuZ3RoID4gMCkge1xuXHRcdFx0XHRcdHJldmVydFRvUmV2aXNpb24uYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJyB8fCAnKSk7XG5cdFx0XHRcdFx0Y29uc3QgcmV2ZXJ0c3VtbWFyeSA9IG5ldyBNb3JlYml0cy5xdWlja0Zvcm0uZWxlbWVudCh7XG5cdFx0XHRcdFx0XHR0eXBlOiAnc2VsZWN0Jyxcblx0XHRcdFx0XHRcdG5hbWU6ICdyZXZlcnRzdW1tYXJ5Jyxcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRyZXZlcnRzdW1tYXJ5LmFwcGVuZCh7XG5cdFx0XHRcdFx0XHR0eXBlOiAnb3B0aW9uJyxcblx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+mAieaLqeWbnumAgOeQhueUsScsICfpgbjmk4flm57pgIDnkIbnlLEnKSxcblx0XHRcdFx0XHRcdHZhbHVlOiAnJyxcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHQkKFR3aW5rbGUuZ2V0UHJlZignY3VzdG9tUmV2ZXJ0U3VtbWFyeScpKS5lYWNoKChfLCBlKSA9PiB7XG5cdFx0XHRcdFx0XHRyZXZlcnRzdW1tYXJ5LmFwcGVuZCh7XG5cdFx0XHRcdFx0XHRcdHR5cGU6ICdvcHRpb24nLFxuXHRcdFx0XHRcdFx0XHRsYWJlbDogZS5sYWJlbCxcblx0XHRcdFx0XHRcdFx0dmFsdWU6IGUudmFsdWUsXG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRyZXZlcnRUb1JldmlzaW9uLmFwcGVuZENoaWxkKHJldmVydHN1bW1hcnkucmVuZGVyKCkuY2hpbGROb2Rlc1swXSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdC8vIE5ld2VyIHJldmlzaW9uXG5cdFx0XHR3YXJuRnJvbVRhbGsoJ250aXRsZScpOyAvLyBBZGQgcXVpY2std2FybiBsaW5rIHRvIHVzZXIgdGFsayBsaW5rXG5cdFx0XHQvLyBBZGQgZWl0aGVyIHJlc3RvcmUgb3Igcm9sbGJhY2sgbGlua3MgdG8gdGhlIG5ld2VyIHJldmlzaW9uXG5cdFx0XHQvLyBEb24ndCBzaG93IGlmIHRoZXJlJ3MgYSBzaW5nbGUgcmV2aXNpb24gb3Igd2VpcmQgZGlmZiAocHJldiBvbiBmaXJzdClcblx0XHRcdGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZGlmZmVyZW5jZXMtbmV4dGxpbmsnKSkge1xuXHRcdFx0XHQvLyBOb3QgbGF0ZXN0IHJldmlzaW9uLCBhZGQgW3Jlc3RvcmUgdGhpcyByZXZpc2lvbl0gbGluayB0byBuZXdlciByZXZpc2lvblxuXHRcdFx0XHRjb25zdCBuZXdUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtdy1kaWZmLW50aXRsZTEnKS5wYXJlbnROb2RlO1xuXHRcdFx0XHRuZXdUaXRsZS5pbnNlcnRCZWZvcmUoXG5cdFx0XHRcdFx0VHdpbmtsZS5mbHVmZi5saW5rQnVpbGRlci5yZXN0b3JlVGhpc1JldmlzaW9uTGluaygnd2dEaWZmTmV3SWQnKSxcblx0XHRcdFx0XHRuZXdUaXRsZS5maXJzdENoaWxkXG5cdFx0XHRcdCk7XG5cdFx0XHR9IGVsc2UgaWYgKFxuXHRcdFx0XHRUd2lua2xlLmdldFByZWYoJ3Nob3dSb2xsYmFja0xpbmtzJykuaW5jbHVkZXMoJ2RpZmYnKSAmJlxuXHRcdFx0XHRtdy5jb25maWcuZ2V0KCd3Z0RpZmZPbGRJZCcpICYmXG5cdFx0XHRcdChtdy5jb25maWcuZ2V0KCd3Z0RpZmZPbGRJZCcpICE9PSBtdy5jb25maWcuZ2V0KCd3Z0RpZmZOZXdJZCcpIHx8XG5cdFx0XHRcdFx0ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2RpZmZlcmVuY2VzLXByZXZsaW5rJykpXG5cdFx0XHQpIHtcblx0XHRcdFx0Ly8gTm9ybWFsbHkgLm13LXVzZXJsaW5rIGlzIGEgbGluaywgYnV0IGlmIHRoZVxuXHRcdFx0XHQvLyB1c2VybmFtZSBpcyBoaWRkZW4sIGl0IHdpbGwgYmUgYSBzcGFuIHdpdGhcblx0XHRcdFx0Ly8gLmhpc3RvcnktZGVsZXRlZCBhcyB3ZWxsLiBXaGVuIGEgc3lzb3Agdmlld3MgdGhlXG5cdFx0XHRcdC8vIGhpZGRlbiBjb250ZW50LCB0aGUgc3BhbiBjb250YWlucyB0aGUgdXNlcm5hbWUgaW4gYVxuXHRcdFx0XHQvLyBsaW5rIGVsZW1lbnQsIHdoaWNoIHdpbGwgKmp1c3QqIGhhdmVcblx0XHRcdFx0Ly8gLm13LXVzZXJsaW5rLiBUaGUgYmVsb3cgdGh1cyBmaW5kcyB0aGUgZmlyc3Rcblx0XHRcdFx0Ly8gaW5zdGFuY2Ugb2YgdGhlIGNsYXNzLCB3aGljaCBpZiBoaWRkZW4gaXMgdGhlIHNwYW5cblx0XHRcdFx0Ly8gYW5kIHRodXMgdGV4dCByZXR1cm5zIHVuZGVmaW5lZC4gVGVjaG5pY2FsbHksIHRoaXNcblx0XHRcdFx0Ly8gaXMgYSBwbGFjZSB3aGVyZSBzeXNvcHMgKmNvdWxkKiBoYXZlIG1vcmVcblx0XHRcdFx0Ly8gaW5mb3JtYXRpb24gYXZhaWxhYmxlIHRvIHRoZW0gKGFzIGFib3ZlLCB2aWFcblx0XHRcdFx0Ly8gJnVuaGlkZT0xKSwgc2luY2UgdGhlIHVzZXJuYW1lIHdpbGwgYmUgYXZhaWxhYmxlIGJ5XG5cdFx0XHRcdC8vIGNoZWNraW5nIGEubXctdXNlcmxpbmsgaW5zdGVhZCwgYnV0IHJldmVydCgpIHdpbGxcblx0XHRcdFx0Ly8gbmVlZCByZXdvcmtpbmcgYXJvdW5kIHVzZXJIaWRkZW5cblx0XHRcdFx0Y29uc3QgdmFuZGFsID0gJGJvZHkuZmluZCgnI213LWRpZmYtbnRpdGxlMicpLmZpbmQoJy5tdy11c2VybGluaycpWzBdLnRleHQ7XG5cdFx0XHRcdGNvbnN0IG50aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtdy1kaWZmLW50aXRsZTEnKS5wYXJlbnROb2RlO1xuXHRcdFx0XHRudGl0bGUuaW5zZXJ0QmVmb3JlKFR3aW5rbGUuZmx1ZmYubGlua0J1aWxkZXIucm9sbGJhY2tMaW5rcyh2YW5kYWwpLCBudGl0bGUuZmlyc3RDaGlsZCk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRvbGRpZDogKCkgPT4ge1xuXHRcdFx0Ly8gQWRkIGEgW3Jlc3RvcmUgdGhpcyByZXZpc2lvbl0gbGluayBvbiBvbGQgcmV2aXNpb25zXG5cdFx0XHRjb25zdCB0aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtdy1yZXZpc2lvbi1pbmZvJykucGFyZW50Tm9kZTtcblx0XHRcdHRpdGxlLmluc2VydEJlZm9yZShUd2lua2xlLmZsdWZmLmxpbmtCdWlsZGVyLnJlc3RvcmVUaGlzUmV2aXNpb25MaW5rKCd3Z1JldmlzaW9uSWQnKSwgdGl0bGUuZmlyc3RDaGlsZCk7XG5cdFx0fSxcblx0fTtcblx0VHdpbmtsZS5mbHVmZi5kaXNhYmxlTGlua3MgPSAocGFyZW50Tm9kZSkgPT4ge1xuXHRcdC8vIEFycmF5LmZyb20gbm90IGF2YWlsYWJsZSBpbiBJRTExIDooXG5cdFx0JChwYXJlbnROb2RlKVxuXHRcdFx0LmNoaWxkcmVuKClcblx0XHRcdC5lYWNoKChfaSwgbm9kZSkgPT4ge1xuXHRcdFx0XHRub2RlLmlubmVySFRNTCA9IG5vZGUudGV4dENvbnRlbnQ7IC8vIEZlZWxzIGxpa2UgY2hlYXRpbmdcblx0XHRcdFx0JChub2RlKS5jc3MoJ2ZvbnQtd2VpZ2h0JywgJ25vcm1hbCcpLmNzcygnY29sb3InLCAnZGFya2dyYXknKTtcblx0XHRcdH0pO1xuXHR9O1xuXHRUd2lua2xlLmZsdWZmLnJldmVydCA9ICh0eXBlLCB2YW5kYWwsIHJldiwgcGFnZSkgPT4ge1xuXHRcdGlmIChtdy51dGlsLmlzSVB2NkFkZHJlc3ModmFuZGFsKSkge1xuXHRcdFx0dmFuZGFsID0gTW9yZWJpdHMuaXAuc2FuaXRpemVJUHY2KHZhbmRhbCk7XG5cdFx0fVxuXHRcdGNvbnN0IHBhZ2VuYW1lID0gcGFnZSB8fCBtdy5jb25maWcuZ2V0KCd3Z1BhZ2VOYW1lJyk7XG5cdFx0Y29uc3QgcmV2aWQgPSByZXYgfHwgbXcuY29uZmlnLmdldCgnd2dDdXJSZXZpc2lvbklkJyk7XG5cdFx0bGV0IHN1bW1hcnkgPSAnJztcblx0XHRpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW25hbWU9XCJyZXZlcnRzdW1tYXJ5XCJdJylbMF0gIT09IHVuZGVmaW5lZCkge1xuXHRcdFx0c3VtbWFyeSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tuYW1lPVwicmV2ZXJ0c3VtbWFyeVwiXScpWzBdLnZhbHVlO1xuXHRcdH1cblx0XHRpZiAoVHdpbmtsZS5mbHVmZi5yb2xsYmFja0luUGxhY2UpIHtcblx0XHRcdGNvbnN0IG5vdGlmeVN0YXR1cyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcblx0XHRcdHZvaWQgbXcubm90aWZ5KG5vdGlmeVN0YXR1cywge1xuXHRcdFx0XHRhdXRvSGlkZTogZmFsc2UsXG5cdFx0XHRcdHRpdGxlOiBg5Zue6YCAJHtwYWdlfWAsXG5cdFx0XHRcdHRhZzogYHR3aW5rbGVmbHVmZl8ke3Jldn1gLCAvLyBTaG91bGRuJ3QgYmUgbmVjZXNzYXJ5IGdpdmVuIGRpc2FibGVMaW5rXG5cdFx0XHR9KTtcblxuXHRcdFx0TW9yZWJpdHMuc3RhdHVzLmluaXQobm90aWZ5U3RhdHVzKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0TW9yZWJpdHMuc3RhdHVzLmluaXQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI213LWNvbnRlbnQtdGV4dCcpKTtcblx0XHRcdCRib2R5LmZpbmQoJyNjYXRsaW5rcycpLnJlbW92ZSgpO1xuXHRcdH1cblx0XHRjb25zdCBwYXJhbXMgPSB7XG5cdFx0XHR0eXBlLFxuXHRcdFx0dXNlcjogdmFuZGFsLFxuXHRcdFx0dXNlckhpZGRlbjogIXZhbmRhbCxcblx0XHRcdHBhZ2VuYW1lLFxuXHRcdFx0cmV2aWQsXG5cdFx0XHRzdW1tYXJ5LFxuXHRcdH07XG5cdFx0Y29uc3QgcXVlcnkgPSB7XG5cdFx0XHRhY3Rpb246ICdxdWVyeScsXG5cdFx0XHRwcm9wOiBbJ2luZm8nLCAncmV2aXNpb25zJ10sXG5cdFx0XHR0aXRsZXM6IHBhZ2VuYW1lLFxuXHRcdFx0aW50ZXN0YWN0aW9uczogJ2VkaXQnLFxuXHRcdFx0cnZsaW1pdDogVHdpbmtsZS5nZXRQcmVmKCdyZXZlcnRNYXhSZXZpc2lvbnMnKSxcblx0XHRcdHJ2cHJvcDogWydpZHMnLCAndGltZXN0YW1wJywgJ3VzZXInXSxcblx0XHRcdGN1cnRpbWVzdGFtcDogJycsXG5cdFx0XHRtZXRhOiAndG9rZW5zJyxcblx0XHRcdHR5cGU6ICdjc3JmJyxcblx0XHR9O1xuXHRcdGNvbnN0IHFpdXdlbl9hcGkgPSBuZXcgTW9yZWJpdHMud2lraS5hcGkoXG5cdFx0XHR3aW5kb3cud2dVTFMoJ+aKk+WPlui+g+aXqeS/ruiuoueJiOacrOS/oeaBrycsICfmipPlj5bovIPml6nkv67oqILniYjmnKzos4foqIonKSxcblx0XHRcdHF1ZXJ5LFxuXHRcdFx0VHdpbmtsZS5mbHVmZi5jYWxsYmFja3MubWFpblxuXHRcdCk7XG5cdFx0cWl1d2VuX2FwaS5wYXJhbXMgPSBwYXJhbXM7XG5cdFx0cWl1d2VuX2FwaS5wb3N0KCk7XG5cdH07XG5cdFR3aW5rbGUuZmx1ZmYucmV2ZXJ0VG9SZXZpc2lvbiA9IChvbGRyZXYpID0+IHtcblx0XHRsZXQgc3VtbWFyeSA9ICcnO1xuXHRcdGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbbmFtZT1cInJldmVydHN1bW1hcnlcIl0nKVswXSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRzdW1tYXJ5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW25hbWU9XCJyZXZlcnRzdW1tYXJ5XCJdJylbMF0udmFsdWU7XG5cdFx0fVxuXHRcdE1vcmViaXRzLnN0YXR1cy5pbml0KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtdy1jb250ZW50LXRleHQnKSk7XG5cdFx0Y29uc3QgcXVlcnkgPSB7XG5cdFx0XHRhY3Rpb246ICdxdWVyeScsXG5cdFx0XHRwcm9wOiBbJ2luZm8nLCAncmV2aXNpb25zJ10sXG5cdFx0XHR0aXRsZXM6IG13LmNvbmZpZy5nZXQoJ3dnUGFnZU5hbWUnKSxcblx0XHRcdHJ2bGltaXQ6IDEsXG5cdFx0XHRydnN0YXJ0aWQ6IG9sZHJldixcblx0XHRcdHJ2cHJvcDogWydpZHMnLCAndXNlciddLFxuXHRcdFx0Zm9ybWF0OiAneG1sJyxcblx0XHRcdGN1cnRpbWVzdGFtcDogJycsXG5cdFx0XHRtZXRhOiAndG9rZW5zJyxcblx0XHRcdHR5cGU6ICdjc3JmJyxcblx0XHR9O1xuXHRcdGNvbnN0IHFpdXdlbl9hcGkgPSBuZXcgTW9yZWJpdHMud2lraS5hcGkoXG5cdFx0XHR3aW5kb3cud2dVTFMoJ+aKk+WPlui+g+aXqeS/ruiuoueJiOacrOS/oeaBrycsICfmipPlj5bovIPml6nkv67oqILniYjmnKzos4foqIonKSxcblx0XHRcdHF1ZXJ5LFxuXHRcdFx0VHdpbmtsZS5mbHVmZi5jYWxsYmFja3MudG9SZXZpc2lvblxuXHRcdCk7XG5cdFx0cWl1d2VuX2FwaS5wYXJhbXMgPSB7XG5cdFx0XHRyZXY6IG9sZHJldixcblx0XHRcdHN1bW1hcnksXG5cdFx0fTtcblx0XHRxaXV3ZW5fYXBpLnBvc3QoKTtcblx0fTtcblx0VHdpbmtsZS5mbHVmZi5jYWxsYmFja3MgPSB7XG5cdFx0dG9SZXZpc2lvbjogKGFwaW9iaikgPT4ge1xuXHRcdFx0Y29uc3QgeG1sRG9jID0gYXBpb2JqLnJlc3BvbnNlWE1MO1xuXHRcdFx0Y29uc3QgbGFzdHJldmlkID0gTnVtYmVyLnBhcnNlSW50KCQoeG1sRG9jKS5maW5kKCdwYWdlJykuYXR0cignbGFzdHJldmlkJyksIDEwKTtcblx0XHRcdGNvbnN0IHRvdWNoZWQgPSAkKHhtbERvYykuZmluZCgncGFnZScpLmF0dHIoJ3RvdWNoZWQnKTtcblx0XHRcdGNvbnN0IGxvYWR0aW1lc3RhbXAgPSAkKHhtbERvYykuZmluZCgnYXBpJykuYXR0cignY3VydGltZXN0YW1wJyk7XG5cdFx0XHRjb25zdCBjc3JmdG9rZW4gPSAkKHhtbERvYykuZmluZCgndG9rZW5zJykuYXR0cignY3NyZnRva2VuJyk7XG5cdFx0XHRjb25zdCByZXZlcnRUb1JldklEID0gTnVtYmVyLnBhcnNlSW50KCQoeG1sRG9jKS5maW5kKCdyZXYnKS5hdHRyKCdyZXZpZCcpLCAxMCk7XG5cdFx0XHRjb25zdCByZXZlcnRUb1VzZXIgPSAkKHhtbERvYykuZmluZCgncmV2JykuYXR0cigndXNlcicpO1xuXHRcdFx0Y29uc3QgcmV2ZXJ0VG9Vc2VySGlkZGVuID0gdHlwZW9mICQoeG1sRG9jKS5maW5kKCdyZXYnKS5hdHRyKCd1c2VyaGlkZGVuJykgPT09ICdzdHJpbmcnO1xuXHRcdFx0aWYgKHJldmVydFRvUmV2SUQgIT09IGFwaW9iai5wYXJhbXMucmV2KSB7XG5cdFx0XHRcdGFwaW9iai5zdGF0ZWxlbS5lcnJvcihcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn5oqT5Y+W5Yiw55qE5L+u6K6i54mI5pys5LiO6K+35rGC55qE5L+u6K6i54mI5pys5LiN56ym77yM5Y+W5raI44CCJyxcblx0XHRcdFx0XHRcdCfmipPlj5bliLDnmoTkv67oqILniYjmnKzoiIfoq4vmsYLnmoTkv67oqILniYjmnKzkuI3nrKbvvIzlj5bmtojjgIInXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRjb25zdCBvcHRpb25hbF9zdW1tYXJ5ID0gcHJvbXB0KFxuXHRcdFx0XHRgJHt3aW5kb3cud2dVTFMoJ+ivt+i+k+WFpeWbnumAgOeQhueUse+8micsICfoq4vovLjlhaXlm57pgIDnkIbnlLHvvJonKX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGAsXG5cdFx0XHRcdGFwaW9iai5wYXJhbXMuc3VtbWFyeVxuXHRcdFx0KTsgLy8gcGFkZGVkIG91dCB0byB3aWRlbiBwcm9tcHQgaW4gRmlyZWZveFxuXHRcdFx0aWYgKG9wdGlvbmFsX3N1bW1hcnkgPT09IG51bGwpIHtcblx0XHRcdFx0YXBpb2JqLnN0YXRlbGVtLmVycm9yKHdpbmRvdy53Z1VMUygn55Sx55So5oi35Y+W5raI44CCJywgJ+eUseS9v+eUqOiAheWPlua2iOOAgicpKTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdFx0Y29uc3Qgc3VtbWFyeSA9IFR3aW5rbGUuZmx1ZmYuZm9ybWF0U3VtbWFyeShcblx0XHRcdFx0d2luZG93LndnVUxTKCflm57pgIDliLDnlLEkVVNFUuWBmuWHuueahOS/ruiuoueJiOacrCcsICflm57pgIDliLDnlLEkVVNFUuWBmuWHuueahOS/ruiogueJiOacrCcpICsgcmV2ZXJ0VG9SZXZJRCxcblx0XHRcdFx0cmV2ZXJ0VG9Vc2VySGlkZGVuID8gbnVsbCA6IHJldmVydFRvVXNlcixcblx0XHRcdFx0b3B0aW9uYWxfc3VtbWFyeVxuXHRcdFx0KTtcblx0XHRcdGNvbnN0IHF1ZXJ5ID0ge1xuXHRcdFx0XHRhY3Rpb246ICdlZGl0Jyxcblx0XHRcdFx0dGl0bGU6IG13LmNvbmZpZy5nZXQoJ3dnUGFnZU5hbWUnKSxcblx0XHRcdFx0c3VtbWFyeSxcblx0XHRcdFx0dGFnczogVHdpbmtsZS5jaGFuZ2VUYWdzLFxuXHRcdFx0XHR0b2tlbjogY3NyZnRva2VuLFxuXHRcdFx0XHR1bmRvOiBsYXN0cmV2aWQsXG5cdFx0XHRcdHVuZG9hZnRlcjogcmV2ZXJ0VG9SZXZJRCxcblx0XHRcdFx0YmFzZXRpbWVzdGFtcDogdG91Y2hlZCxcblx0XHRcdFx0c3RhcnR0aW1lc3RhbXA6IGxvYWR0aW1lc3RhbXAsXG5cdFx0XHRcdG1pbm9yOiBUd2lua2xlLmdldFByZWYoJ21hcmtSZXZlcnRlZFBhZ2VzQXNNaW5vcicpLmluY2x1ZGVzKCd0b3JldicpID8gdHJ1ZSA6IHVuZGVmaW5lZCxcblx0XHRcdFx0Ym90OiB0cnVlLFxuXHRcdFx0fTtcblx0XHRcdC8vIEhhbmRsZSB3YXRjaGluZywgcG9zc2libGUgZXhwaXJ5XG5cdFx0XHRpZiAoVHdpbmtsZS5nZXRQcmVmKCd3YXRjaFJldmVydGVkUGFnZXMnKS5pbmNsdWRlcygndG9yZXYnKSkge1xuXHRcdFx0XHRjb25zdCB3YXRjaE9yRXhwaXJ5ID0gVHdpbmtsZS5nZXRQcmVmKCd3YXRjaFJldmVydGVkRXhwaXJ5Jyk7XG5cdFx0XHRcdGlmICghd2F0Y2hPckV4cGlyeSB8fCB3YXRjaE9yRXhwaXJ5ID09PSAnbm8nKSB7XG5cdFx0XHRcdFx0cXVlcnkud2F0Y2hsaXN0ID0gJ25vY2hhbmdlJztcblx0XHRcdFx0fSBlbHNlIGlmICh3YXRjaE9yRXhwaXJ5ID09PSAnZGVmYXVsdCcgfHwgd2F0Y2hPckV4cGlyeSA9PT0gJ3ByZWZlcmVuY2VzJykge1xuXHRcdFx0XHRcdHF1ZXJ5LndhdGNobGlzdCA9ICdwcmVmZXJlbmNlcyc7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cXVlcnkud2F0Y2hsaXN0ID0gJ3dhdGNoJztcblx0XHRcdFx0XHQvLyBudW1iZXIgYWxsb3dlZCBidXQgbm90IHVzZWQgaW4gVHdpbmtsZS5jb25maWcud2F0Y2hsaXN0RW51bXNcblx0XHRcdFx0XHRpZiAodHlwZW9mIHdhdGNoT3JFeHBpcnkgPT09ICdzdHJpbmcnICYmIHdhdGNoT3JFeHBpcnkgIT09ICd5ZXMnKSB7XG5cdFx0XHRcdFx0XHRxdWVyeS53YXRjaGxpc3RleHBpcnkgPSB3YXRjaE9yRXhwaXJ5O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQucmVkaXJlY3QgPSBtdy5jb25maWcuZ2V0KCd3Z1BhZ2VOYW1lJyk7XG5cdFx0XHRNb3JlYml0cy53aWtpLmFjdGlvbkNvbXBsZXRlZC5ub3RpY2UgPSAn5Zue6YCA5a6M5oiQJztcblx0XHRcdGNvbnN0IHFpdXdlbl9hcGkgPSBuZXcgTW9yZWJpdHMud2lraS5hcGkoXG5cdFx0XHRcdHdpbmRvdy53Z1VMUygn5L+d5a2Y5Zue6YCA5YaF5a65JywgJ+WEsuWtmOWbnumAgOWFp+WuuScpLFxuXHRcdFx0XHRxdWVyeSxcblx0XHRcdFx0VHdpbmtsZS5mbHVmZi5jYWxsYmFja3MuY29tcGxldGUsXG5cdFx0XHRcdGFwaW9iai5zdGF0ZWxlbVxuXHRcdFx0KTtcblx0XHRcdHFpdXdlbl9hcGkucGFyYW1zID0gYXBpb2JqLnBhcmFtcztcblx0XHRcdHFpdXdlbl9hcGkucG9zdCgpO1xuXHRcdH0sXG5cdFx0bWFpbjogKGFwaW9iaikgPT4ge1xuXHRcdFx0Y29uc3QgeG1sRG9jID0gYXBpb2JqLnJlc3BvbnNlWE1MO1xuXHRcdFx0aWYgKCQoeG1sRG9jKS5maW5kKCdhY3Rpb25zJykuYXR0cignZWRpdCcpID09PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0YXBpb2JqLnN0YXRlbGVtLmVycm9yKFwiVW5hYmxlIHRvIGVkaXQgdGhlIHBhZ2UsIGl0J3MgcHJvYmFibHkgcHJvdGVjdGVkLlwiKTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdFx0Y29uc3QgbGFzdHJldmlkID0gTnVtYmVyLnBhcnNlSW50KCQoeG1sRG9jKS5maW5kKCdwYWdlJykuYXR0cignbGFzdHJldmlkJyksIDEwKTtcblx0XHRcdGNvbnN0IHRvdWNoZWQgPSAkKHhtbERvYykuZmluZCgncGFnZScpLmF0dHIoJ3RvdWNoZWQnKTtcblx0XHRcdGNvbnN0IGxvYWR0aW1lc3RhbXAgPSAkKHhtbERvYykuZmluZCgnYXBpJykuYXR0cignY3VydGltZXN0YW1wJyk7XG5cdFx0XHRjb25zdCBjc3JmdG9rZW4gPSAkKHhtbERvYykuZmluZCgndG9rZW5zJykuYXR0cignY3NyZnRva2VuJyk7XG5cdFx0XHRjb25zdCByZXZzID0gJCh4bWxEb2MpLmZpbmQoJ3JldicpO1xuXHRcdFx0Y29uc3Qge3N0YXRlbGVtfSA9IGFwaW9iajtcblx0XHRcdGNvbnN0IHtwYXJhbXN9ID0gYXBpb2JqO1xuXHRcdFx0aWYgKHJldnMubGVuZ3RoIDwgMSkge1xuXHRcdFx0XHRzdGF0ZWxlbS5lcnJvcih3aW5kb3cud2dVTFMoJ+ayoeacieWFtuWug+S/ruiuoueJiOacrO+8jOaXoOazleWbnumAgCcsICfmspLmnInlhbblroPkv67oqILniYjmnKzvvIznhKHms5Xlm57pgIAnKSk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdGNvbnN0IFt0b3BdID0gcmV2cztcblx0XHRcdGNvbnN0IGxhc3R1c2VyID0gdG9wLmdldEF0dHJpYnV0ZSgndXNlcicpO1xuXHRcdFx0aWYgKGxhc3RyZXZpZCA8IHBhcmFtcy5yZXZpZCkge1xuXHRcdFx0XHRNb3JlYml0cy5zdGF0dXMuZXJyb3IoXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKCfplJnor68nLCAn6Yyv6KqkJyksXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0W1xuXHRcdFx0XHRcdFx0XHQn5LuO5pyN5Yqh5Zmo6I635Y+W55qE5pyA5paw5L+u6K6i54mI5pysSUQgJyxcblx0XHRcdFx0XHRcdFx0TW9yZWJpdHMuaHRtbE5vZGUoJ3N0cm9uZycsIGxhc3RyZXZpZCksXG5cdFx0XHRcdFx0XHRcdCcg5bCP5LqO55uu5YmN5omA5pi+56S655qE5L+u6K6i54mI5pysSUTjgILov5nlj6/og73mhI/lkbPnnYDlvZPliY3kv67orqLniYjmnKzlt7LooqvliKDpmaTjgIHmnI3liqHlmajlu7bov5/jgIHmiJbmipPlj5bliLDkuoblnY/mjonnmoTkv6Hmga/jgILlj5bmtojjgIInLFxuXHRcdFx0XHRcdFx0XSxcblx0XHRcdFx0XHRcdFtcblx0XHRcdFx0XHRcdFx0J+W+nuS8uuacjeWZqOWPluW+l+eahOacgOaWsOS/ruiogueJiOacrElEICcsXG5cdFx0XHRcdFx0XHRcdE1vcmViaXRzLmh0bWxOb2RlKCdzdHJvbmcnLCBsYXN0cmV2aWQpLFxuXHRcdFx0XHRcdFx0XHQnIOWwj+aWvOebruWJjeaJgOmhr+ekuueahOS/ruiogueJiOacrElE44CC6YCZ5Y+v6IO95oSP5ZGz6JGX55W25YmN5L+u6KiC54mI5pys5bey6KKr5Yiq6Zmk44CB5Ly65pyN5Zmo5bu26YGy44CB5oiW5pO35Y+W5Yiw5LqG5aOe5o6J55qE6LOH6KiK44CC5Y+W5raI44CCJyxcblx0XHRcdFx0XHRcdF1cblx0XHRcdFx0XHQpXG5cdFx0XHRcdCk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdC8vIFVzZWQgZm9yIHVzZXItZmFjaW5nIGFsZXJ0cywgbWVzc2FnZXMsIGV0Yy4sIG5vdCBlZGl0cyBvciBzdW1tYXJpZXNcblx0XHRcdGxldCB1c2VyTm9ybSA9IHBhcmFtcy51c2VyIHx8IFR3aW5rbGUuZmx1ZmYuaGlkZGVuTmFtZTtcblx0XHRcdGxldCBpbmRleCA9IDE7XG5cdFx0XHRpZiAocGFyYW1zLnJldmlkID09PSBsYXN0cmV2aWQpIHtcblx0XHRcdFx0Ly8gRXhwZWN0ZWQgcmV2aXNpb24gaXMgdGhlIHNhbWUsIHNvIHRoZSB1c2VycyBtdXN0IG1hdGNoO1xuXHRcdFx0XHQvLyB0aGlzIGFsbG93cyBzeXNvcHMgdG8ga25vdyB3aGV0aGVyIHRoZSB1c2VycyBhcmUgdGhlIHNhbWVcblx0XHRcdFx0cGFyYW1zLnVzZXIgPSBsYXN0dXNlcjtcblx0XHRcdFx0dXNlck5vcm0gPSBwYXJhbXMudXNlciB8fCBUd2lua2xlLmZsdWZmLmhpZGRlbk5hbWU7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRNb3JlYml0cy5zdGF0dXMud2Fybihcblx0XHRcdFx0XHQn6K2m5ZGKJyxcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRbXG5cdFx0XHRcdFx0XHRcdCfmnIDmlrDkv67orqLniYjmnKwgJyxcblx0XHRcdFx0XHRcdFx0TW9yZWJpdHMuaHRtbE5vZGUoJ3N0cm9uZycsIGxhc3RyZXZpZCksXG5cdFx0XHRcdFx0XHRcdCcg5LiO5oiR5Lus55qE5L+u6K6i54mI5pysICcsXG5cdFx0XHRcdFx0XHRcdE1vcmViaXRzLmh0bWxOb2RlKCdzdHJvbmcnLCBwYXJhbXMucmV2aWQpLFxuXHRcdFx0XHRcdFx0XHQn5LiN5ZCMJyxcblx0XHRcdFx0XHRcdF0sXG5cdFx0XHRcdFx0XHRbXG5cdFx0XHRcdFx0XHRcdCfmnIDmlrDkv67oqILniYjmnKwgJyxcblx0XHRcdFx0XHRcdFx0TW9yZWJpdHMuaHRtbE5vZGUoJ3N0cm9uZycsIGxhc3RyZXZpZCksXG5cdFx0XHRcdFx0XHRcdCcg6IiH5oiR5YCR55qE5L+u6KiC54mI5pysICcsXG5cdFx0XHRcdFx0XHRcdE1vcmViaXRzLmh0bWxOb2RlKCdzdHJvbmcnLCBwYXJhbXMucmV2aWQpLFxuXHRcdFx0XHRcdFx0XHQnIOS4jeWQjCcsXG5cdFx0XHRcdFx0XHRdXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpO1xuXHRcdFx0XHRpZiAobGFzdHVzZXIgPT09IHBhcmFtcy51c2VyKSB7XG5cdFx0XHRcdFx0c3dpdGNoIChwYXJhbXMudHlwZSkge1xuXHRcdFx0XHRcdFx0Y2FzZSAndmFuZCc6XG5cdFx0XHRcdFx0XHRcdE1vcmViaXRzLnN0YXR1cy5pbmZvKHdpbmRvdy53Z1VMUygn5L+h5oGvJywgJ+izh+ioiicpLCBbXG5cdFx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfmnIDmlrDkv67orqLniYjmnKznlLEgJywgJ+acgOaWsOS/ruiogueJiOacrOeUsSAnKSxcblx0XHRcdFx0XHRcdFx0XHRNb3JlYml0cy5odG1sTm9kZSgnc3Ryb25nJywgdXNlck5vcm0pLFxuXHRcdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHRcdCcg5YGa5Ye677yM5Zug5oiR5Lus5YGH5a6a56C05Z2P77yM57un57ut5Zue6YCA5pON5L2c44CCJyxcblx0XHRcdFx0XHRcdFx0XHRcdCcg5YGa5Ye677yM5Zug5oiR5YCR5YGH5a6a56C05aOe77yM57m857qM5Zue6YCA5pON5L2c44CCJ1xuXHRcdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRcdF0pO1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHRcdE1vcmViaXRzLnN0YXR1cy53YXJuKCfmj5DnpLonLCBbXG5cdFx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfmnIDmlrDkv67orqLniYjmnKznlLEgJywgJ+acgOaWsOS/ruiogueJiOacrOeUsSAnKSxcblx0XHRcdFx0XHRcdFx0XHRNb3JlYml0cy5odG1sTm9kZSgnc3Ryb25nJywgdXNlck5vcm0pLFxuXHRcdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygnIOWBmuWHuu+8jOS9huaIkeS7rOi/mOaYr+S4jeWbnumAgOS6huOAgicsICcg5YGa5Ye677yM5L2G5oiR5YCR6YKE5piv5LiN5Zue6YCA5LqG44CCJyksXG5cdFx0XHRcdFx0XHRcdF0pO1xuXHRcdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9IGVsc2UgaWYgKFxuXHRcdFx0XHRcdHBhcmFtcy50eXBlID09PSAndmFuZCcgJiYgLy8gT2theSB0byB0ZXN0IG9uIHVzZXIgc2luY2UgaXQgd2lsbCBlaXRoZXIgZmFpbCBvciBzeXNvcCB3aWxsIGNvcnJlY3RseSBhY2Nlc3MgaXRcblx0XHRcdFx0XHQvLyBCZXNpZGVzLCBub25lIG9mIHRoZSB0cnVzdGVkIGJvdHMgYXJlIGdvaW5nIHRvIGJlIHJldmRlbCdkXG5cdFx0XHRcdFx0VHdpbmtsZS5mbHVmZi50cnVzdGVkQm90cy5pbmNsdWRlcyh0b3AuZ2V0QXR0cmlidXRlKCd1c2VyJykpICYmXG5cdFx0XHRcdFx0cmV2cy5sZW5ndGggPiAxICYmXG5cdFx0XHRcdFx0cmV2c1sxXS5nZXRBdHRyaWJ1dGUoJ3JldmlkJykgPT09IHBhcmFtcy5yZXZpZFxuXHRcdFx0XHQpIHtcblx0XHRcdFx0XHRNb3JlYml0cy5zdGF0dXMuaW5mbyhcblx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5L+h5oGvJywgJ+izh+ioiicpLFxuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRbXG5cdFx0XHRcdFx0XHRcdFx0J+acgOaWsOS/ruiuoueJiOacrOeUsSAnLFxuXHRcdFx0XHRcdFx0XHRcdE1vcmViaXRzLmh0bWxOb2RlKCdzdHJvbmcnLCBsYXN0dXNlciksXG5cdFx0XHRcdFx0XHRcdFx0J++8jOS4gOS4quWPr+S/oeeahOacuuWZqOS6uuWBmuWHuu+8jOS9huS5i+WJjeeahOeJiOacrOiiq+iupOS4uuaYr+egtOWdj++8jOe7p+e7reWbnumAgOaTjeS9nOOAgicsXG5cdFx0XHRcdFx0XHRcdF0sXG5cdFx0XHRcdFx0XHRcdFtcblx0XHRcdFx0XHRcdFx0XHQn5pyA5paw5L+u6KiC54mI5pys55SxICcsXG5cdFx0XHRcdFx0XHRcdFx0TW9yZWJpdHMuaHRtbE5vZGUoJ3N0cm9uZycsIGxhc3R1c2VyKSxcblx0XHRcdFx0XHRcdFx0XHQn77yM5LiA5YCL5Y+v5L+h55qE5qmf5Zmo5Lq65YGa5Ye677yM5L2G5LmL5YmN55qE54mI5pys6KKr6KqN54K65piv56C05aOe77yM57m857qM5Zue6YCA5pON5L2c44CCJyxcblx0XHRcdFx0XHRcdFx0XVxuXHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0aW5kZXggPSAyO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdE1vcmViaXRzLnN0YXR1cy5lcnJvcihcblx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn6ZSZ6K+vJywgJ+mMr+iqpCcpLFxuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRbXG5cdFx0XHRcdFx0XHRcdFx0J+acgOaWsOS/ruiuoueJiOacrOeUsSAnLFxuXHRcdFx0XHRcdFx0XHRcdE1vcmViaXRzLmh0bWxOb2RlKCdzdHJvbmcnLCBsYXN0dXNlciksXG5cdFx0XHRcdFx0XHRcdFx0JyDlgZrlh7rvvIzmiYDku6Xov5nkuKrkv67orqLniYjmnKzlj6/og73lt7Lnu4/ooqvlm57pgIDkuobvvIzlj5bmtojlm57pgIDmk43kvZzjgIInLFxuXHRcdFx0XHRcdFx0XHRdLFxuXHRcdFx0XHRcdFx0XHRbXG5cdFx0XHRcdFx0XHRcdFx0J+acgOaWsOS/ruiogueJiOacrOeUsSAnLFxuXHRcdFx0XHRcdFx0XHRcdE1vcmViaXRzLmh0bWxOb2RlKCdzdHJvbmcnLCBsYXN0dXNlciksXG5cdFx0XHRcdFx0XHRcdFx0JyDlgZrlh7rvvIzmiYDku6XpgJnlgIvkv67oqILniYjmnKzlj6/og73lt7LntpPooqvlm57pgIDkuobvvIzlj5bmtojlm57pgIDmk43kvZzjgIInLFxuXHRcdFx0XHRcdFx0XHRdXG5cdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmIChUd2lua2xlLmZsdWZmLnRydXN0ZWRCb3RzLmluY2x1ZGVzKHBhcmFtcy51c2VyKSkge1xuXHRcdFx0XHRzd2l0Y2ggKHBhcmFtcy50eXBlKSB7XG5cdFx0XHRcdFx0Y2FzZSAndmFuZCc6XG5cdFx0XHRcdFx0XHRNb3JlYml0cy5zdGF0dXMuaW5mbyh3aW5kb3cud2dVTFMoJ+S/oeaBrycsICfos4foqIonKSwgW1xuXHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+WwhuWvuSAnLCAn5bCH5bCNICcpLFxuXHRcdFx0XHRcdFx0XHRNb3JlYml0cy5odG1sTm9kZSgnc3Ryb25nJywgdXNlck5vcm0pLFxuXHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0JyDmiafooYznoLTlnY/lm57pgIDvvIzov5nmmK/kuIDkuKrlj6/kv6HnmoTmnLrlmajkurrvvIzmiJHku6zlgYflrprmgqjopoHlm57pgIDliY3kuIDkuKrkv67orqLniYjmnKzjgIInLFxuXHRcdFx0XHRcdFx0XHRcdCcg5Z+36KGM56C05aOe5Zue6YCA77yM6YCZ5piv5LiA5YCL5Y+v5L+h55qE5qmf5Zmo5Lq677yM5oiR5YCR5YGH5a6a5oKo6KaB5Zue6YCA5YmN5LiA5YCL5L+u6KiC54mI5pys44CCJ1xuXHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0XSk7XG5cdFx0XHRcdFx0XHRpbmRleCA9IDI7XG5cdFx0XHRcdFx0XHRwYXJhbXMudXNlciA9IHJldnNbMV0uZ2V0QXR0cmlidXRlKCd1c2VyJyk7XG5cdFx0XHRcdFx0XHRwYXJhbXMudXNlckhpZGRlbiA9IHJldnNbMV0uZ2V0QXR0cmlidXRlKCd1c2VyaGlkZGVuJykgPT09ICcnO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0LyogY2FzZSAnbm9ybSc6ICovXG5cdFx0XHRcdFx0LyogZmFsbHMgdGhyb3VnaCAqL1xuXHRcdFx0XHRcdGRlZmF1bHQ6IHtcblx0XHRcdFx0XHRcdGNvbnN0IGNvbnQgPSBjb25maXJtKFxuXHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+mAieaLqeS6huW4uOinhOWbnumAgO+8jOS9huacgOaWsOS/ruaUueaYr+eUseS4gOS4quWPr+S/oeeahOacuuWZqOS6uu+8iCcsXG5cdFx0XHRcdFx0XHRcdFx0J+mBuOaTh+S6huW4uOimj+WbnumAgO+8jOS9huacgOaWsOS/ruaUueaYr+eUseS4gOWAi+WPr+S/oeeahOapn+WZqOS6uu+8iCdcblx0XHRcdFx0XHRcdFx0KSArXG5cdFx0XHRcdFx0XHRcdFx0dXNlck5vcm0gK1xuXHRcdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHRcdCfvvInlgZrlh7rnmoTjgILnoa7lrprku6Xlm57pgIDliY3kuIDkuKrkv67orqLniYjmnKzvvIzlj5bmtojku6Xlm57pgIDmnLrlmajkurrnmoTkv67mlLknLFxuXHRcdFx0XHRcdFx0XHRcdFx0J++8ieWBmuWHuueahOOAgueiuuWumuS7peWbnumAgOWJjeS4gOWAi+S/ruiogueJiOacrO+8jOWPlua2iOS7peWbnumAgOapn+WZqOS6uueahOS/ruaUuSdcblx0XHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0aWYgKGNvbnQpIHtcblx0XHRcdFx0XHRcdFx0TW9yZWJpdHMuc3RhdHVzLmluZm8od2luZG93LndnVUxTKCfkv6Hmga8nLCAn6LOH6KiKJyksIFtcblx0XHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+WwhuWvuSAnLCAn5bCH5bCNICcpLFxuXHRcdFx0XHRcdFx0XHRcdE1vcmViaXRzLmh0bWxOb2RlKCdzdHJvbmcnLCB1c2VyTm9ybSksXG5cdFx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdFx0JyDmiafooYzluLjop4Tlm57pgIDvvIzov5nmmK/kuIDkuKrlj6/kv6HnmoTmnLrlmajkurrvvIzln7rkuo7noa7orqTvvIzmiJHku6zlsIblm57pgIDliY3kuIDkuKrkv67orqLniYjmnKzjgIInLFxuXHRcdFx0XHRcdFx0XHRcdFx0JyDln7fooYzluLjopo/lm57pgIDvvIzpgJnmmK/kuIDlgIvlj6/kv6HnmoTmqZ/lmajkurrvvIzln7rmlrznorroqo3vvIzmiJHlgJHlsIflm57pgIDliY3kuIDlgIvkv67oqILniYjmnKzjgIInXG5cdFx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdFx0XSk7XG5cdFx0XHRcdFx0XHRcdGluZGV4ID0gMjtcblx0XHRcdFx0XHRcdFx0cGFyYW1zLnVzZXIgPSByZXZzWzFdLmdldEF0dHJpYnV0ZSgndXNlcicpO1xuXHRcdFx0XHRcdFx0XHRwYXJhbXMudXNlckhpZGRlbiA9IHJldnNbMV0uZ2V0QXR0cmlidXRlKCd1c2VyaGlkZGVuJykgPT09ICcnO1xuXHRcdFx0XHRcdFx0XHR1c2VyTm9ybSA9IHBhcmFtcy51c2VyIHx8IFR3aW5rbGUuZmx1ZmYuaGlkZGVuTmFtZTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdE1vcmViaXRzLnN0YXR1cy53YXJuKCfmj5DnpLonLCBbXG5cdFx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCflsIblr7kgJywgJ+Wwh+WwjSAnKSxcblx0XHRcdFx0XHRcdFx0XHRNb3JlYml0cy5odG1sTm9kZSgnc3Ryb25nJywgdXNlck5vcm0pLFxuXHRcdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdFx0XHRcdCcg5omn6KGM5bi46KeE5Zue6YCA77yM6L+Z5piv5LiA5Liq5Y+v5L+h55qE5py65Zmo5Lq677yM5Z+65LqO56Gu6K6k77yM5oiR5Lus5LuN5bCG5Zue6YCA6L+Z5Liq5L+u6K6i54mI5pys44CCJyxcblx0XHRcdFx0XHRcdFx0XHRcdCcg5Z+36KGM5bi46KaP5Zue6YCA77yM6YCZ5piv5LiA5YCL5Y+v5L+h55qE5qmf5Zmo5Lq677yM5Z+65pa856K66KqN77yM5oiR5YCR5LuN5bCH5Zue6YCA6YCZ5YCL5L+u6KiC54mI5pys44CCJ1xuXHRcdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRcdF0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRsZXQgZm91bmQgPSBmYWxzZTtcblx0XHRcdGxldCBjb3VudCA9IDA7XG5cdFx0XHRmb3IgKGxldCBpID0gaW5kZXg7IGkgPCByZXZzLmxlbmd0aDsgKytpKSB7XG5cdFx0XHRcdCsrY291bnQ7XG5cdFx0XHRcdGlmIChyZXZzW2ldLmdldEF0dHJpYnV0ZSgndXNlcicpICE9PSBwYXJhbXMudXNlcikge1xuXHRcdFx0XHRcdGZvdW5kID0gaTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0aWYgKCFmb3VuZCkge1xuXHRcdFx0XHRzdGF0ZWxlbS5lcnJvcihbXG5cdFx0XHRcdFx0d2luZG93LndnVUxTKCfmnKrmib7liLDkuYvliY3nmoTkv67orqLniYjmnKzvvIzlj6/og70gJywgJ+acquaJvuWIsOS5i+WJjeeahOS/ruiogueJiOacrO+8jOWPr+iDvSAnKSxcblx0XHRcdFx0XHRNb3JlYml0cy5odG1sTm9kZSgnc3Ryb25nJywgdXNlck5vcm0pLFxuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCcg5piv5ZSv5LiA6LSh54yu6ICF77yM5oiW6L+Z5Liq55So5oi36L+e57ut5YGa5Ye65LqG6LaF6L+HICcsXG5cdFx0XHRcdFx0XHQnIOaYr+WUr+S4gOiyoueNu+iAhe+8jOaIlumAmeWAi+eUqOaItumAo+e6jOWBmuWHuuS6hui2hemBjiAnXG5cdFx0XHRcdFx0KSArXG5cdFx0XHRcdFx0XHRtdy5sYW5ndWFnZS5jb252ZXJ0TnVtYmVyKFR3aW5rbGUuZ2V0UHJlZigncmV2ZXJ0TWF4UmV2aXNpb25zJykpICtcblx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygnIOasoee8lui+keOAgicsICcg5qyh57eo6Lyv44CCJyksXG5cdFx0XHRcdF0pO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRpZiAoIWNvdW50KSB7XG5cdFx0XHRcdE1vcmViaXRzLnN0YXR1cy5lcnJvcihcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+mUmeivrycsICfpjK/oqqQnKSxcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn5oiR5Lus5bCG6KaB5Zue6YCAMOS4quS/ruiuoueJiOacrO+8jOi/meayoeacieaEj+S5ie+8jOaJgOS7peWPlua2iOWbnumAgOaTjeS9nOOAguWPr+iDveaYr+WboOS4uui/meS4quS/ruiuoueJiOacrOW3sue7j+iiq+WbnumAgO+8jOS9huS/ruiuoueJiOacrElE5LuN5piv5LiA5qC355qE44CCJyxcblx0XHRcdFx0XHRcdCfmiJHlgJHlsIfopoHlm57pgIAw5YCL5L+u6KiC54mI5pys77yM6YCZ5rKS5pyJ5oSP576p77yM5omA5Lul5Y+W5raI5Zue6YCA5pON5L2c44CC5Y+v6IO95piv5Zug54K66YCZ5YCL5L+u6KiC54mI5pys5bey57aT6KKr5Zue6YCA77yM5L2G5L+u6KiC54mI5pysSUTku43mmK/kuIDmqKPnmoTjgIInXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRjb25zdCBnb29kX3JldmlzaW9uID0gcmV2c1tmb3VuZF07XG5cdFx0XHRsZXQgdXNlckhhc0FscmVhZHlDb25maXJtZWRBY3Rpb24gPSBmYWxzZTtcblx0XHRcdGlmIChwYXJhbXMudHlwZSAhPT0gJ3ZhbmQnICYmIGNvdW50ID4gMSkge1xuXHRcdFx0XHRpZiAoXG5cdFx0XHRcdFx0IWNvbmZpcm0oXG5cdFx0XHRcdFx0XHR1c2VyTm9ybSArXG5cdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygnIOi/nue7reWBmuWHuuS6hiAnLCAnIOmAo+e6jOWBmuWHuuS6hiAnKSArXG5cdFx0XHRcdFx0XHRcdG13Lmxhbmd1YWdlLmNvbnZlcnROdW1iZXIoY291bnQpICtcblx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCcg5qyh57yW6L6R77yM5piv5ZCm6KaB5YWo6YOo5Zue6YCA77yfJywgJyDmrKHnt6jovK/vvIzmmK/lkKbopoHlhajpg6jlm57pgIDvvJ8nKVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0TW9yZWJpdHMuc3RhdHVzLmluZm8oJ+aPkOekuicsIHdpbmRvdy53Z1VMUygn55So5oi35Y+W5raI5pON5L2cJywgJ+S9v+eUqOiAheWPlua2iOaTjeS9nCcpKTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0dXNlckhhc0FscmVhZHlDb25maXJtZWRBY3Rpb24gPSB0cnVlO1xuXHRcdFx0fVxuXHRcdFx0cGFyYW1zLmNvdW50ID0gY291bnQ7XG5cdFx0XHRwYXJhbXMuZ29vZGlkID0gZ29vZF9yZXZpc2lvbi5nZXRBdHRyaWJ1dGUoJ3JldmlkJyk7XG5cdFx0XHRwYXJhbXMuZ29vZHVzZXIgPSBnb29kX3JldmlzaW9uLmdldEF0dHJpYnV0ZSgndXNlcicpO1xuXHRcdFx0cGFyYW1zLmdvb2R1c2VySGlkZGVuID0gZ29vZF9yZXZpc2lvbi5nZXRBdHRyaWJ1dGUoJ3VzZXJoaWRkZW4nKSA9PT0gJyc7XG5cdFx0XHRzdGF0ZWxlbS5zdGF0dXMoW1xuXHRcdFx0XHRNb3JlYml0cy5odG1sTm9kZSgnc3Ryb25nJywgbXcubGFuZ3VhZ2UuY29udmVydE51bWJlcihjb3VudCkpLFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJyDkuKrkv67orqLniYjmnKzkuYvliY3nlLEgJywgJyDlgIvkv67oqILniYjmnKzkuYvliY3nlLEgJyksXG5cdFx0XHRcdE1vcmViaXRzLmh0bWxOb2RlKCdzdHJvbmcnLCBwYXJhbXMuZ29vZHVzZXJIaWRkZW4gPyBUd2lua2xlLmZsdWZmLmhpZGRlbk5hbWUgOiBwYXJhbXMuZ29vZHVzZXIpLFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJyDlgZrlh7rnmoTkv67orqLniYjmnKwgJywgJyDlgZrlh7rnmoTkv67oqILniYjmnKwgJyksXG5cdFx0XHRcdE1vcmViaXRzLmh0bWxOb2RlKCdzdHJvbmcnLCBwYXJhbXMuZ29vZGlkKSxcblx0XHRcdF0pO1xuXHRcdFx0bGV0IHN1bW1hcnk7XG5cdFx0XHRsZXQgZXh0cmFfc3VtbWFyeTtcblx0XHRcdHN3aXRjaCAocGFyYW1zLnR5cGUpIHtcblx0XHRcdFx0Y2FzZSAndmFuZCc6XG5cdFx0XHRcdFx0c3VtbWFyeSA9IFR3aW5rbGUuZmx1ZmYuZm9ybWF0U3VtbWFyeShcblx0XHRcdFx0XHRcdGDlm57pgIAkVVNFUuWBmuWHuueahCR7cGFyYW1zLmNvdW50fSR7d2luZG93LndnVUxTKCfmrKHnvJbovpHvvIzliLDnlLEnLCAn5qyh57eo6Lyv77yM5Yiw55SxJyl9JHtcblx0XHRcdFx0XHRcdFx0cGFyYW1zLmdvb2R1c2VySGlkZGVuID8gVHdpbmtsZS5mbHVmZi5oaWRkZW5OYW1lIDogcGFyYW1zLmdvb2R1c2VyXG5cdFx0XHRcdFx0XHR9JHt3aW5kb3cud2dVTFMoJ+WBmuWHuueahOacgOWQjuS/ruiuoueJiOacrCAnLCAn5YGa5Ye655qE5pyA5b6M5L+u6KiC54mI5pysICcpfWAsXG5cdFx0XHRcdFx0XHRwYXJhbXMudXNlckhpZGRlbiA/IG51bGwgOiBwYXJhbXMudXNlclxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdC8qIGNhc2UgJ25vcm0nOiAqL1xuXHRcdFx0XHQvKiBmYWxscyB0aHJvdWdoICovXG5cdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0aWYgKFR3aW5rbGUuZ2V0UHJlZignb2ZmZXJSZWFzb25Pbk5vcm1hbFJldmVydCcpKSB7XG5cdFx0XHRcdFx0XHRleHRyYV9zdW1tYXJ5ID0gcHJvbXB0KFxuXHRcdFx0XHRcdFx0XHRgJHt3aW5kb3cud2dVTFMoJ+WPr+mAieeahOe8lui+keaRmOimge+8micsICflj6/pgbjnmoTnt6jovK/mkZjopoHvvJonKX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBgLFxuXHRcdFx0XHRcdFx0XHRwYXJhbXMuc3VtbWFyeVxuXHRcdFx0XHRcdFx0KTsgLy8gcGFkZGVkIG91dCB0byB3aWRlbiBwcm9tcHQgaW4gRmlyZWZveFxuXHRcdFx0XHRcdFx0aWYgKGV4dHJhX3N1bW1hcnkgPT09IG51bGwpIHtcblx0XHRcdFx0XHRcdFx0c3RhdGVsZW0uZXJyb3Iod2luZG93LndnVUxTKCfnlKjmiLflj5bmtojmk43kvZzjgIInLCAn5L2/55So6ICF5Y+W5raI5pON5L2c44CCJykpO1xuXHRcdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR1c2VySGFzQWxyZWFkeUNvbmZpcm1lZEFjdGlvbiA9IHRydWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHN1bW1hcnkgPSBUd2lua2xlLmZsdWZmLmZvcm1hdFN1bW1hcnkoXG5cdFx0XHRcdFx0XHRg5Zue6YCAJFVTRVLlgZrlh7rnmoQke3BhcmFtcy5jb3VudH0ke3dpbmRvdy53Z1VMUygn5qyh57yW6L6RJywgJ+asoee3qOi8rycpfWAsXG5cdFx0XHRcdFx0XHRwYXJhbXMudXNlckhpZGRlbiA/IG51bGwgOiBwYXJhbXMudXNlcixcblx0XHRcdFx0XHRcdGV4dHJhX3N1bW1hcnlcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdFx0aWYgKFxuXHRcdFx0XHRUd2lua2xlLmdldFByZWYoJ2NvbmZpcm1PbkZsdWZmJykgJiZcblx0XHRcdFx0IXVzZXJIYXNBbHJlYWR5Q29uZmlybWVkQWN0aW9uICYmXG5cdFx0XHRcdCFjb25maXJtKHdpbmRvdy53Z1VMUygn5Zue6YCA6aG16Z2i77ya5oKo56Gu5a6a5ZCX77yfJywgJ+WbnumAgOmggemdou+8muaCqOeiuuWumuWXju+8nycpKVxuXHRcdFx0KSB7XG5cdFx0XHRcdHN0YXRlbGVtLmVycm9yKHdpbmRvdy53Z1VMUygn55So5oi35Y+W5raI5pON5L2c44CCJywgJ+S9v+eUqOiAheWPlua2iOaTjeS9nOOAgicpKTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdFx0Ly8gRGVjaWRlIHdoZXRoZXIgdG8gbm90aWZ5IHRoZSB1c2VyIG9uIHN1Y2Nlc3Ncblx0XHRcdGlmIChcblx0XHRcdFx0IVR3aW5rbGUuZmx1ZmYuc2tpcFRhbGsgJiZcblx0XHRcdFx0VHdpbmtsZS5nZXRQcmVmKCdvcGVuVGFsa1BhZ2UnKS5pbmNsdWRlcyhwYXJhbXMudHlwZSkgJiZcblx0XHRcdFx0IXBhcmFtcy51c2VySGlkZGVuICYmXG5cdFx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnVXNlck5hbWUnKSAhPT0gcGFyYW1zLnVzZXJcblx0XHRcdCkge1xuXHRcdFx0XHRwYXJhbXMubm90aWZ5VXNlciA9IHRydWU7XG5cdFx0XHRcdC8vIFBhc3MgYWxvbmcgdG8gdGhlIHdhcm4gbW9kdWxlXG5cdFx0XHRcdHBhcmFtcy52YW50aW1lc3RhbXAgPSB0b3AuZ2V0QXR0cmlidXRlKCd0aW1lc3RhbXAnKTtcblx0XHRcdH1cblx0XHRcdGNvbnN0IHF1ZXJ5ID0ge1xuXHRcdFx0XHRhY3Rpb246ICdlZGl0Jyxcblx0XHRcdFx0dGl0bGU6IHBhcmFtcy5wYWdlbmFtZSxcblx0XHRcdFx0c3VtbWFyeSxcblx0XHRcdFx0dGFnczogVHdpbmtsZS5jaGFuZ2VUYWdzLFxuXHRcdFx0XHR0b2tlbjogY3NyZnRva2VuLFxuXHRcdFx0XHR1bmRvOiBsYXN0cmV2aWQsXG5cdFx0XHRcdHVuZG9hZnRlcjogcGFyYW1zLmdvb2RpZCxcblx0XHRcdFx0YmFzZXRpbWVzdGFtcDogdG91Y2hlZCxcblx0XHRcdFx0c3RhcnR0aW1lc3RhbXA6IGxvYWR0aW1lc3RhbXAsXG5cdFx0XHRcdG1pbm9yOiBUd2lua2xlLmdldFByZWYoJ21hcmtSZXZlcnRlZFBhZ2VzQXNNaW5vcicpLmluY2x1ZGVzKHBhcmFtcy50eXBlKSA/IHRydWUgOiB1bmRlZmluZWQsXG5cdFx0XHRcdGJvdDogdHJ1ZSxcblx0XHRcdH07XG5cdFx0XHQvLyBIYW5kbGUgd2F0Y2hpbmcsIHBvc3NpYmxlIGV4cGlyeVxuXHRcdFx0aWYgKFR3aW5rbGUuZ2V0UHJlZignd2F0Y2hSZXZlcnRlZFBhZ2VzJykuaW5jbHVkZXMocGFyYW1zLnR5cGUpKSB7XG5cdFx0XHRcdGNvbnN0IHdhdGNoT3JFeHBpcnkgPSBUd2lua2xlLmdldFByZWYoJ3dhdGNoUmV2ZXJ0ZWRFeHBpcnknKTtcblx0XHRcdFx0aWYgKCF3YXRjaE9yRXhwaXJ5IHx8IHdhdGNoT3JFeHBpcnkgPT09ICdubycpIHtcblx0XHRcdFx0XHRxdWVyeS53YXRjaGxpc3QgPSAnbm9jaGFuZ2UnO1xuXHRcdFx0XHR9IGVsc2UgaWYgKHdhdGNoT3JFeHBpcnkgPT09ICdkZWZhdWx0JyB8fCB3YXRjaE9yRXhwaXJ5ID09PSAncHJlZmVyZW5jZXMnKSB7XG5cdFx0XHRcdFx0cXVlcnkud2F0Y2hsaXN0ID0gJ3ByZWZlcmVuY2VzJztcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRxdWVyeS53YXRjaGxpc3QgPSAnd2F0Y2gnO1xuXHRcdFx0XHRcdC8vIG51bWJlciBhbGxvd2VkIGJ1dCBub3QgdXNlZCBpbiBUd2lua2xlLmNvbmZpZy53YXRjaGxpc3RFbnVtc1xuXHRcdFx0XHRcdGlmICh0eXBlb2Ygd2F0Y2hPckV4cGlyeSA9PT0gJ3N0cmluZycgJiYgd2F0Y2hPckV4cGlyeSAhPT0gJ3llcycpIHtcblx0XHRcdFx0XHRcdHF1ZXJ5LndhdGNobGlzdGV4cGlyeSA9IHdhdGNoT3JFeHBpcnk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRpZiAoIVR3aW5rbGUuZmx1ZmYucm9sbGJhY2tJblBsYWNlKSB7XG5cdFx0XHRcdE1vcmViaXRzLndpa2kuYWN0aW9uQ29tcGxldGVkLnJlZGlyZWN0ID0gcGFyYW1zLnBhZ2VuYW1lO1xuXHRcdFx0fVxuXHRcdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQubm90aWNlID0gJ+WbnumAgOWujOaIkCc7XG5cdFx0XHRjb25zdCBxaXV3ZW5fYXBpID0gbmV3IE1vcmViaXRzLndpa2kuYXBpKFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ+S/neWtmOWbnumAgOWGheWuuScsICflhLLlrZjlm57pgIDlhaflrrknKSxcblx0XHRcdFx0cXVlcnksXG5cdFx0XHRcdFR3aW5rbGUuZmx1ZmYuY2FsbGJhY2tzLmNvbXBsZXRlLFxuXHRcdFx0XHRzdGF0ZWxlbVxuXHRcdFx0KTtcblx0XHRcdHFpdXdlbl9hcGkucGFyYW1zID0gcGFyYW1zO1xuXHRcdFx0cWl1d2VuX2FwaS5wb3N0KCk7XG5cdFx0fSxcblx0XHRjb21wbGV0ZTogKGFwaW9iaikgPT4ge1xuXHRcdFx0Ly8gVE9ETyBNb3N0IG9mIHRoaXMgaXMgY29weS1wYXN0ZWQgZnJvbSBNb3JlYml0cy53aWtpLnBhZ2UjZm5TYXZlU3VjY2Vzcy4gVW5pZnkgaXRcblx0XHRcdGNvbnN0IHhtbCA9IGFwaW9iai5nZXRYTUwoKTtcblx0XHRcdGNvbnN0ICRlZGl0ID0gJCh4bWwpLmZpbmQoJ2VkaXQnKTtcblx0XHRcdGlmICgkKHhtbCkuZmluZCgnY2FwdGNoYScpLmxlbmd0aCA+IDApIHtcblx0XHRcdFx0YXBpb2JqLnN0YXRlbGVtLmVycm9yKFxuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5LiN6IO95Zue6YCA77yM5Zug5pyN5Yqh5Zmo6KaB5rGC5oKo6L6T5YWl6aqM6K+B56CB44CCJywgJ+S4jeiDveWbnumAgO+8jOWboOS8uuacjeWZqOimgeaxguaCqOi8uOWFpempl+itieeivOOAgicpXG5cdFx0XHRcdCk7XG5cdFx0XHR9IGVsc2UgaWYgKCRlZGl0LmF0dHIoJ25vY2hhbmdlJykgPT09ICcnKSB7XG5cdFx0XHRcdGFwaW9iai5zdGF0ZWxlbS5lcnJvcihcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn6KaB5Zue6YCA5Yiw55qE54mI5pys5LiO5b2T5YmN54mI5pys55u45ZCM77yM5rKh5LuA5LmI6KaB5YGa55qEJyxcblx0XHRcdFx0XHRcdCfopoHlm57pgIDliLDnmoTniYjmnKzoiIfnm67liY3niYjmnKznm7jlkIzvvIzmspLku4DpurzopoHlgZrnmoQnXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0YXBpb2JqLnN0YXRlbGVtLmluZm8oJ+WujOaIkCcpO1xuXHRcdFx0XHRjb25zdCB7cGFyYW1zfSA9IGFwaW9iajtcblx0XHRcdFx0aWYgKHBhcmFtcy5ub3RpZnlVc2VyICYmICFwYXJhbXMudXNlckhpZGRlbikge1xuXHRcdFx0XHRcdC8vIG5vdGlmeVVzZXIgb25seSBmcm9tIG1haW4sIG5vdCBmcm9tIHRvUmV2aXNpb25cblx0XHRcdFx0XHRNb3JlYml0cy5zdGF0dXMuaW5mbyh3aW5kb3cud2dVTFMoJ+S/oeaBrycsICfos4foqIonKSwgW1xuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCflvIDlkK/nlKjmiLcgJywgJ+mWi+WVn+S9v+eUqOiAhSAnKSxcblx0XHRcdFx0XHRcdE1vcmViaXRzLmh0bWxOb2RlKCdzdHJvbmcnLCBwYXJhbXMudXNlciksXG5cdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJyDnmoTorqjorrrpobUnLCAnIOeahOiojuirlumggScpLFxuXHRcdFx0XHRcdF0pO1xuXHRcdFx0XHRcdGNvbnN0IHdpbmRvd1F1ZXJ5ID0ge1xuXHRcdFx0XHRcdFx0dGl0bGU6IGBVc2VyIHRhbGs6JHtwYXJhbXMudXNlcn1gLFxuXHRcdFx0XHRcdFx0YWN0aW9uOiAnZWRpdCcsXG5cdFx0XHRcdFx0XHRwcmV2aWV3OiAneWVzJyxcblx0XHRcdFx0XHRcdHZhbmFydGljbGU6IHBhcmFtcy5wYWdlbmFtZS5yZXBsYWNlKC9fL2csICcgJyksXG5cdFx0XHRcdFx0XHR2YW5hcnRpY2xlcmV2aWQ6IHBhcmFtcy5yZXZpZCxcblx0XHRcdFx0XHRcdHZhbnRpbWVzdGFtcDogcGFyYW1zLnZhbnRpbWVzdGFtcCxcblx0XHRcdFx0XHRcdHZhbmFydGljbGVnb29kcmV2aWQ6IHBhcmFtcy5nb29kaWQsXG5cdFx0XHRcdFx0XHR0eXBlOiBwYXJhbXMudHlwZSxcblx0XHRcdFx0XHRcdGNvdW50OiBwYXJhbXMuY291bnQsXG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRzd2l0Y2ggKFR3aW5rbGUuZ2V0UHJlZigndXNlclRhbGtQYWdlTW9kZScpKSB7XG5cdFx0XHRcdFx0XHRjYXNlICd0YWInOlxuXHRcdFx0XHRcdFx0XHR3aW5kb3cub3Blbihtdy51dGlsLmdldFVybCgnJywgd2luZG93UXVlcnkpLCAnX2JsYW5rJywgJ25vb3BlbmVyLG5vcmVmZXJyZXInKTtcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRjYXNlICdibGFuayc6XG5cdFx0XHRcdFx0XHRcdHdpbmRvdy5vcGVuKFxuXHRcdFx0XHRcdFx0XHRcdG13LnV0aWwuZ2V0VXJsKCcnLCB3aW5kb3dRdWVyeSksXG5cdFx0XHRcdFx0XHRcdFx0J19ibGFuaycsXG5cdFx0XHRcdFx0XHRcdFx0J25vb3BlbmVyLG5vcmVmZXJyZXIsbG9jYXRpb249bm8sdG9vbGJhcj1ubyxzdGF0dXM9bm8sZGlyZWN0b3JpZXM9bm8sc2Nyb2xsYmFycz15ZXMsd2lkdGg9MTIwMCxoZWlnaHQ9ODAwJ1xuXHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdC8qIGNhc2UgJ3dpbmRvdyc6ICovXG5cdFx0XHRcdFx0XHQvKiBmYWxscyB0aHJvdWdoICovXG5cdFx0XHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdFx0XHR3aW5kb3cub3Blbihcblx0XHRcdFx0XHRcdFx0XHRtdy51dGlsLmdldFVybCgnJywgd2luZG93UXVlcnkpLFxuXHRcdFx0XHRcdFx0XHRcdHdpbmRvdy5uYW1lID09PSAndHdpbmtsZXdhcm53aW5kb3cnID8gJ19ibGFuaycgOiAndHdpbmtsZXdhcm53aW5kb3cnLFxuXHRcdFx0XHRcdFx0XHRcdHdpbmRvdy5uYW1lID09PSAndHdpbmtsZXdhcm53aW5kb3cnXG5cdFx0XHRcdFx0XHRcdFx0XHQ/ICdub29wZW5lcixub3JlZmVycmVyLCdcblx0XHRcdFx0XHRcdFx0XHRcdDogJycgK1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdCdsb2NhdGlvbj1ubyx0b29sYmFyPW5vLHN0YXR1cz1ubyxkaXJlY3Rvcmllcz1ubyxzY3JvbGxiYXJzPXllcyx3aWR0aD0xMjAwLGhlaWdodD04MDAnXG5cdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0sXG5cdH07XG5cdC8vIElmIGJ1aWx0SW5TdHJpbmcgY29udGFpbnMgdGhlIHN0cmluZyBcIiRVU0VSXCIsIGl0IHdpbGwgYmUgcmVwbGFjZWRcblx0Ly8gYnkgYW4gYXBwcm9wcmlhdGUgdXNlciBsaW5rIGlmIGEgdXNlciBuYW1lIGlzIHByb3ZpZGVkXG5cdFR3aW5rbGUuZmx1ZmYuZm9ybWF0U3VtbWFyeSA9IChidWlsdEluU3RyaW5nLCB1c2VyTmFtZSwgY3VzdG9tU3RyaW5nKSA9PiB7XG5cdFx0bGV0IHJlc3VsdCA9IGJ1aWx0SW5TdHJpbmc7XG5cdFx0Ly8gYXBwZW5kIHVzZXIncyBjdXN0b20gcmVhc29uXG5cdFx0aWYgKGN1c3RvbVN0cmluZykge1xuXHRcdFx0cmVzdWx0ICs9IGDvvJoke01vcmViaXRzLnN0cmluZy50b1VwcGVyQ2FzZUZpcnN0Q2hhcihjdXN0b21TdHJpbmcpfWA7XG5cdFx0fVxuXHRcdC8vIGZpbmQgbnVtYmVyIG9mIFVURi04IGJ5dGVzIHRoZSByZXN1bHRpbmcgc3RyaW5nIHRha2VzIHVwLCBhbmQgcG9zc2libHkgYWRkXG5cdFx0Ly8gYSBjb250cmlidXRpb25zIG9yIGNvbnRyaWJ1dGlvbnMrdGFsayBsaW5rIGlmIGl0IGRvZXNuJ3QgcHVzaCB0aGUgZWRpdCBzdW1tYXJ5XG5cdFx0Ly8gb3ZlciB0aGUgNDk5LWJ5dGUgbGltaXRcblx0XHRpZiAoL1xcJFVTRVIvLnRlc3QoYnVpbHRJblN0cmluZykpIHtcblx0XHRcdGlmICh1c2VyTmFtZSkge1xuXHRcdFx0XHRjb25zdCByZXN1bHRMZW4gPSB1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQocmVzdWx0LnJlcGxhY2UoJyRVU0VSJywgJycpKSkubGVuZ3RoO1xuXHRcdFx0XHRjb25zdCBjb250cmlic0xpbmsgPSBgW1tTcGVjaWFsOkNvbnRyaWJ1dGlvbnMvJHt1c2VyTmFtZX18JHt1c2VyTmFtZX1dXWA7XG5cdFx0XHRcdGNvbnN0IGNvbnRyaWJzTGVuID0gdW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KGNvbnRyaWJzTGluaykpLmxlbmd0aDtcblx0XHRcdFx0aWYgKHJlc3VsdExlbiArIGNvbnRyaWJzTGVuIDw9IDQ5OSkge1xuXHRcdFx0XHRcdGNvbnN0IHRhbGtMaW5rID0gYO+8iFtbVXNlciB0YWxrOiR7dXNlck5hbWV9JHt3aW5kb3cud2dVTFMoJ3zorqjorrpdXe+8iScsICd86KiO6KuWXV3vvIknKX1gO1xuXHRcdFx0XHRcdGlmIChyZXN1bHRMZW4gKyBjb250cmlic0xlbiArIHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudCh0YWxrTGluaykpLmxlbmd0aCA8PSA0OTkpIHtcblx0XHRcdFx0XHRcdHJlc3VsdCA9IE1vcmViaXRzLnN0cmluZy5zYWZlUmVwbGFjZShyZXN1bHQsICckVVNFUicsIGNvbnRyaWJzTGluayArIHRhbGtMaW5rKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0cmVzdWx0ID0gTW9yZWJpdHMuc3RyaW5nLnNhZmVSZXBsYWNlKHJlc3VsdCwgJyRVU0VSJywgY29udHJpYnNMaW5rKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cmVzdWx0ID0gTW9yZWJpdHMuc3RyaW5nLnNhZmVSZXBsYWNlKHJlc3VsdCwgJyRVU0VSJywgdXNlck5hbWUpO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXN1bHQgPSBNb3JlYml0cy5zdHJpbmcuc2FmZVJlcGxhY2UocmVzdWx0LCAnJFVTRVInLCBUd2lua2xlLmZsdWZmLmhpZGRlbk5hbWUpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gcmVzdWx0O1xuXHR9O1xuXHRUd2lua2xlLmFkZEluaXRDYWxsYmFjayhUd2lua2xlLmZsdWZmLCAnZmx1ZmYnKTtcbn0pKGpRdWVyeSk7XG5cbmV4cG9ydCB7fTtcbiIsICIvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10cy1jb21tZW50XG4vLyBAdHMtbm9jaGVja1xuXG4vKiEgVHdpbmtsZS5qcyAtIHR3aW5rbGViYXRjaGRlbGV0ZS5qcyAqL1xuKGZ1bmN0aW9uIHR3aW5rbGViYXRjaGRlbGV0ZSgkKSB7XG5cdGNvbnN0ICRib2R5ID0gJCgnYm9keScpO1xuXHQvKipcblx0ICogdHdpbmtsZWJhdGNoZGVsZXRlLmpzOiBCYXRjaCBkZWxldGUgbW9kdWxlIChzeXNvcHMgb25seSlcblx0ICogTW9kZSBvZiBpbnZvY2F0aW9uOiBUYWIgKFwiRC1iYXRjaFwiKVxuXHQgKiBBY3RpdmUgb246IEV4aXN0aW5nIG5vbi1hcnRpY2xlcywgYW5kIFNwZWNpYWw6UHJlZml4SW5kZXhcblx0ICovXG5cdFR3aW5rbGUuYmF0Y2hkZWxldGUgPSAoKSA9PiB7XG5cdFx0aWYgKFxuXHRcdFx0TW9yZWJpdHMudXNlcklzU3lzb3AgJiZcblx0XHRcdCgobXcuY29uZmlnLmdldCgnd2dDdXJSZXZpc2lvbklkJykgJiYgbXcuY29uZmlnLmdldCgnd2dOYW1lc3BhY2VOdW1iZXInKSA+IDApIHx8XG5cdFx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnQ2Fub25pY2FsU3BlY2lhbFBhZ2VOYW1lJykgPT09ICdQcmVmaXhpbmRleCcgfHxcblx0XHRcdFx0bXcuY29uZmlnLmdldCgnd2dDYW5vbmljYWxTcGVjaWFsUGFnZU5hbWUnKSA9PT0gJ0Jyb2tlblJlZGlyZWN0cycpXG5cdFx0KSB7XG5cdFx0XHRUd2lua2xlLmFkZFBvcnRsZXRMaW5rKFxuXHRcdFx0XHRUd2lua2xlLmJhdGNoZGVsZXRlLmNhbGxiYWNrLFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ+aJueWIoCcsICfmibnliKonKSxcblx0XHRcdFx0J3R3LWJhdGNoJyxcblx0XHRcdFx0d2luZG93LndnVUxTKCfliKDpmaTmraTliIbnsbvmiJbpobXpnaLkuK3nmoTmiYDmnInpk77mjqUnLCAn5Yiq6Zmk5q2k5YiG6aGe5oiW6aCB6Z2i5Lit55qE5omA5pyJ6YCj57WQJylcblx0XHRcdCk7XG5cdFx0fVxuXHR9O1xuXHRUd2lua2xlLmJhdGNoZGVsZXRlLnVubGlua0NhY2hlID0ge307XG5cdC8vIEhhcyB0aGUgc3VicGFnZXMgbGlzdCBiZWVuIGxvYWRlZD9cblx0bGV0IHN1YnBhZ2VzTG9hZGVkO1xuXHRUd2lua2xlLmJhdGNoZGVsZXRlLmNhbGxiYWNrID0gKCkgPT4ge1xuXHRcdHN1YnBhZ2VzTG9hZGVkID0gZmFsc2U7XG5cdFx0Y29uc3QgV2luZG93ID0gbmV3IE1vcmViaXRzLnNpbXBsZVdpbmRvdyg2MDAsIDQwMCk7XG5cdFx0V2luZG93LnNldFRpdGxlKHdpbmRvdy53Z1VMUygn5om56YeP5Yig6ZmkJywgJ+aJueasoeWIqumZpCcpKTtcblx0XHRXaW5kb3cuc2V0U2NyaXB0TmFtZSgnVHdpbmtsZScpO1xuXHRcdFdpbmRvdy5hZGRGb290ZXJMaW5rKHdpbmRvdy53Z1VMUygnVHdpbmtsZeW4ruWKqScsICdUd2lua2xl6Kqq5piOJyksICdIOlRXL0RPQyNiYXRjaGRlbGV0ZScpO1xuXHRcdGNvbnN0IGZvcm0gPSBuZXcgTW9yZWJpdHMucXVpY2tGb3JtKFR3aW5rbGUuYmF0Y2hkZWxldGUuY2FsbGJhY2suZXZhbHVhdGUpO1xuXHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRsaXN0OiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfliKDpmaTpobXpnaInLCAn5Yiq6Zmk6aCB6Z2iJyksXG5cdFx0XHRcdFx0bmFtZTogJ2RlbGV0ZV9wYWdlJyxcblx0XHRcdFx0XHR2YWx1ZTogJ2RlbGV0ZScsXG5cdFx0XHRcdFx0Y2hlY2tlZDogdHJ1ZSxcblx0XHRcdFx0XHRzdWJncm91cDoge1xuXHRcdFx0XHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdFx0XHRcdGxpc3Q6IFtcblx0XHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0XHQn5Yig6Zmk5YWz6IGU55qE6K6o6K666aG177yI55So5oi36K6o6K666aG16Zmk5aSW77yJJyxcblx0XHRcdFx0XHRcdFx0XHRcdCfliKrpmaTpl5zoga/nmoToqI7oq5bpoIHvvIjkvb/nlKjogIXoqI7oq5bpoIHpmaTlpJbvvIknXG5cdFx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdFx0XHRuYW1lOiAnZGVsZXRlX3RhbGsnLFxuXHRcdFx0XHRcdFx0XHRcdHZhbHVlOiAnZGVsZXRlX3RhbGsnLFxuXHRcdFx0XHRcdFx0XHRcdGNoZWNrZWQ6IHRydWUsXG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfliKDpmaTliLDlt7LliKDpobXpnaLnmoTph43lrprlkJHpobUnLCAn5Yiq6Zmk5Yiw5bey5Yiq6aCB6Z2i55qE6YeN5paw5bCO5ZCR6aCB6Z2iJyksXG5cdFx0XHRcdFx0XHRcdFx0bmFtZTogJ2RlbGV0ZV9yZWRpcmVjdHMnLFxuXHRcdFx0XHRcdFx0XHRcdHZhbHVlOiAnZGVsZXRlX3JlZGlyZWN0cycsXG5cdFx0XHRcdFx0XHRcdFx0Y2hlY2tlZDogdHJ1ZSxcblx0XHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WIoOmZpOW3suWIoOmhtemdoueahOWtkOmhtemdoicsICfliKrpmaTlt7LliKrpoIHpnaLnmoTlrZDpoIHpnaInKSxcblx0XHRcdFx0XHRcdFx0XHRuYW1lOiAnZGVsZXRlX3N1YnBhZ2VzJyxcblx0XHRcdFx0XHRcdFx0XHR2YWx1ZTogJ2RlbGV0ZV9zdWJwYWdlcycsXG5cdFx0XHRcdFx0XHRcdFx0Y2hlY2tlZDogZmFsc2UsXG5cdFx0XHRcdFx0XHRcdFx0ZXZlbnQ6IFR3aW5rbGUuYmF0Y2hkZWxldGUuY2FsbGJhY2sudG9nZ2xlU3VicGFnZXMsXG5cdFx0XHRcdFx0XHRcdFx0c3ViZ3JvdXA6IHtcblx0XHRcdFx0XHRcdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdFx0XHRcdFx0XHRsaXN0OiBbXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfliKDpmaTlt7LliKDlrZDpobXpnaLnmoTorqjorrrpobUnLCAn5Yiq6Zmk5bey5Yiq5a2Q6aCB6Z2i55qE6KiO6KuW6aCBJyksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0bmFtZTogJ2RlbGV0ZV9zdWJwYWdlX3RhbGtzJyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR2YWx1ZTogJ2RlbGV0ZV9zdWJwYWdlX3RhbGtzJyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQn5Yig6Zmk5Yiw5bey5Yig5a2Q6aG16Z2i55qE6YeN5a6a5ZCR6aG1Jyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdCfliKrpmaTliLDlt7LliKrlrZDpoIHpnaLnmoTph43mlrDlsI7lkJHpoIHpnaInXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRuYW1lOiAnZGVsZXRlX3N1YnBhZ2VfcmVkaXJlY3RzJyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR2YWx1ZTogJ2RlbGV0ZV9zdWJwYWdlX3JlZGlyZWN0cycsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0J+WPlua2iOaJgOacieW3suWIoOmhtemdoueahOmTvuWFpe+8iOS7heWkhOeQhuadoeebruWRveWQjeepuumXtO+8iScsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQn5Y+W5raI5omA5pyJ5bey5Yiq6aCB6Z2i55qE6YCj5YWl77yI5YOF6JmV55CG5qKd55uu5ZG95ZCN56m66ZaT77yJJ1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0bmFtZTogJ3VubGlua19zdWJwYWdlcycsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dmFsdWU6ICd1bmxpbmtfc3VicGFnZXMnLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XHRcdFx0XSxcblx0XHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Y+W5raI6ZO+5YWl77yI5LuF5aSE55CG5p2h55uu5ZG95ZCN56m66Ze077yJJywgJ+WPlua2iOmAo+WFpe+8iOWDheiZleeQhuaineebruWRveWQjeepuumWk++8iScpLFxuXHRcdFx0XHRcdG5hbWU6ICd1bmxpbmtfcGFnZScsXG5cdFx0XHRcdFx0dmFsdWU6ICd1bmxpbmsnLFxuXHRcdFx0XHRcdGNoZWNrZWQ6IGZhbHNlLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn56e76Zmk5paH5Lu25L2/55So77yI5omA5pyJ5ZG95ZCN56m66Ze077yJJywgJ+enu+mZpOaqlOahiOS9v+eUqO+8iOaJgOacieWRveWQjeepuumWk++8iScpLFxuXHRcdFx0XHRcdG5hbWU6ICd1bmxpbmtfZmlsZScsXG5cdFx0XHRcdFx0dmFsdWU6ICd1bmxpbmtfZmlsZScsXG5cdFx0XHRcdFx0Y2hlY2tlZDogdHJ1ZSxcblx0XHRcdFx0fSxcblx0XHRcdF0sXG5cdFx0fSk7XG5cdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ3NlbGVjdCcsXG5cdFx0XHRuYW1lOiAnY29tbW9uX3JlYXNvbicsXG5cdFx0XHRsYWJlbDogJ+W4uOeUqOeQhueUse+8micsXG5cdFx0XHRzdHlsZTogJ3dpZHRoOiA4NSU7Jyxcblx0XHRcdGxpc3Q6IFR3aW5rbGUuYmF0Y2hkZWxldGUuZGVsZXRlcmVhc29ubGlzdCxcblx0XHRcdGV2ZW50OiBUd2lua2xlLmJhdGNoZGVsZXRlLmNhbGxiYWNrLmNoYW5nZV9jb21tb25fcmVhc29uLFxuXHRcdH0pO1xuXHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdG5hbWU6ICdyZWFzb24nLFxuXHRcdFx0dHlwZTogJ2lucHV0Jyxcblx0XHRcdGxhYmVsOiAn55CG55Sx77yaJyxcblx0XHRcdHNpemU6IDc1LFxuXHRcdH0pO1xuXHRcdGNvbnN0IHF1ZXJ5ID0ge1xuXHRcdFx0YWN0aW9uOiAncXVlcnknLFxuXHRcdFx0cHJvcDogJ3JldmlzaW9uc3xpbmZvfGltYWdlaW5mbycsXG5cdFx0XHRpbnByb3A6ICdwcm90ZWN0aW9uJyxcblx0XHRcdHJ2cHJvcDogJ3NpemV8dXNlcicsXG5cdFx0fTtcblx0XHQvLyBPbiBjYXRlZ29yaWVzXG5cdFx0aWYgKG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlTnVtYmVyJykgPT09IDE0KSB7XG5cdFx0XHRxdWVyeS5nZW5lcmF0b3IgPSAnY2F0ZWdvcnltZW1iZXJzJztcblx0XHRcdHF1ZXJ5LmdjbXRpdGxlID0gbXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpO1xuXHRcdFx0cXVlcnkuZ2NtbGltaXQgPSBUd2lua2xlLmdldFByZWYoJ2JhdGNoTWF4Jyk7XG5cdFx0XHQvLyBPbiBTcGVjaWFsOlByZWZpeEluZGV4XG5cdFx0fSBlbHNlIGlmIChtdy5jb25maWcuZ2V0KCd3Z0Nhbm9uaWNhbFNwZWNpYWxQYWdlTmFtZScpID09PSAnUHJlZml4aW5kZXgnKSB7XG5cdFx0XHRxdWVyeS5nZW5lcmF0b3IgPSAnYWxscGFnZXMnO1xuXHRcdFx0cXVlcnkuZ2FwbGltaXQgPSBUd2lua2xlLmdldFByZWYoJ2JhdGNoTWF4Jyk7XG5cdFx0XHRpZiAobXcudXRpbC5nZXRQYXJhbVZhbHVlKCdwcmVmaXgnKSkge1xuXHRcdFx0XHRxdWVyeS5nYXBuYW1lc3BhY2UgPSBtdy51dGlsLmdldFBhcmFtVmFsdWUoJ25hbWVzcGFjZScpO1xuXHRcdFx0XHRxdWVyeS5nYXBwcmVmaXggPSBtdy51dGlsLmdldFBhcmFtVmFsdWUoJ3ByZWZpeCcpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0bGV0IHBhdGhTcGxpdCA9IGRlY29kZVVSSUNvbXBvbmVudChsb2NhdGlvbi5wYXRobmFtZSkuc3BsaXQoJy8nKTtcblx0XHRcdFx0aWYgKHBhdGhTcGxpdC5sZW5ndGggPCAzIHx8IHBhdGhTcGxpdFsyXSAhPT0gJ1NwZWNpYWw65YmN57yA57Si5byVJykge1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHRjb25zdCB0aXRsZVNwbGl0ID0gcGF0aFNwbGl0WzNdLnNwbGl0KCc6Jyk7XG5cdFx0XHRcdHF1ZXJ5LmdhcG5hbWVzcGFjZSA9IG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlSWRzJylbdGl0bGVTcGxpdFswXS50b0xvd2VyQ2FzZSgpXTtcblx0XHRcdFx0aWYgKHRpdGxlU3BsaXQubGVuZ3RoIDwgMiB8fCBxdWVyeS5nYXBuYW1lc3BhY2UgPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdHF1ZXJ5LmdhcG5hbWVzcGFjZSA9IDA7IC8vIGFydGljbGUgbmFtZXNwYWNlXG5cdFx0XHRcdFx0cXVlcnkuZ2FwcHJlZml4ID0gcGF0aFNwbGl0LnNwbGljZSgzKS5qb2luKCcvJyk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cGF0aFNwbGl0ID0gcGF0aFNwbGl0LnNwbGljZSg0KTtcblx0XHRcdFx0XHRwYXRoU3BsaXQuc3BsaWNlKDAsIDAsIHRpdGxlU3BsaXQuc3BsaWNlKDEpLmpvaW4oJzonKSk7XG5cdFx0XHRcdFx0cXVlcnkuZ2FwcHJlZml4ID0gcGF0aFNwbGl0LmpvaW4oJy8nKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0Ly8gT24gU3BlY2lhbDpCcm9rZW5SZWRpcmVjdHNcblx0XHR9IGVsc2UgaWYgKG13LmNvbmZpZy5nZXQoJ3dnQ2Fub25pY2FsU3BlY2lhbFBhZ2VOYW1lJykgPT09ICdCcm9rZW5SZWRpcmVjdHMnKSB7XG5cdFx0XHRxdWVyeS5nZW5lcmF0b3IgPSAncXVlcnlwYWdlJztcblx0XHRcdHF1ZXJ5LmdxcHBhZ2UgPSAnQnJva2VuUmVkaXJlY3RzJztcblx0XHRcdHF1ZXJ5LmdxcGxpbWl0ID0gVHdpbmtsZS5nZXRQcmVmKCdiYXRjaE1heCcpO1xuXHRcdFx0Ly8gT24gbm9ybWFsIHBhZ2VzXG5cdFx0fSBlbHNlIHtcblx0XHRcdHF1ZXJ5LmdlbmVyYXRvciA9ICdsaW5rcyc7XG5cdFx0XHRxdWVyeS50aXRsZXMgPSBtdy5jb25maWcuZ2V0KCd3Z1BhZ2VOYW1lJyk7XG5cdFx0XHRxdWVyeS5ncGxsaW1pdCA9IFR3aW5rbGUuZ2V0UHJlZignYmF0Y2hNYXgnKTtcblx0XHR9XG5cdFx0Y29uc3Qgc3RhdHVzZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cdFx0c3RhdHVzZGl2LnN0eWxlLnBhZGRpbmcgPSAnMTVweCc7IC8vIGp1c3Qgc28gaXQgZG9lc24ndCBsb29rIGJyb2tlblxuXHRcdFdpbmRvdy5zZXRDb250ZW50KHN0YXR1c2Rpdik7XG5cdFx0TW9yZWJpdHMuc3RhdHVzLmluaXQoc3RhdHVzZGl2KTtcblx0XHRXaW5kb3cuZGlzcGxheSgpO1xuXHRcdFR3aW5rbGUuYmF0Y2hkZWxldGUucGFnZXMgPSB7fTtcblx0XHRjb25zdCBzdGF0ZWxlbSA9IG5ldyBNb3JlYml0cy5zdGF0dXMod2luZG93LndnVUxTKCfmipPlj5bpobXpnaLliJfooagnLCAn5oqT5Y+W6aCB6Z2i5YiX6KGoJykpO1xuXHRcdGNvbnN0IHFpdXdlbl9hcGkgPSBuZXcgTW9yZWJpdHMud2lraS5hcGkoXG5cdFx0XHR3aW5kb3cud2dVTFMoJ+WKoOi9veS4reKApicsICfovInlhaXkuK3igKYnKSxcblx0XHRcdHF1ZXJ5LFxuXHRcdFx0KGFwaW9iaikgPT4ge1xuXHRcdFx0XHRjb25zdCB4bWwgPSBhcGlvYmoucmVzcG9uc2VYTUw7XG5cdFx0XHRcdGNvbnN0ICRwYWdlcyA9ICQoeG1sKS5maW5kKCdwYWdlJykuZmlsdGVyKCc6bm90KFttaXNzaW5nXSknKTsgLy8gOm5vdChbaW1hZ2VyZXBvc2l0b3J5PVwic2hhcmVkXCJdKVxuXHRcdFx0XHQkcGFnZXMuZWFjaCgoX2luZGV4LCBwYWdlKSA9PiB7XG5cdFx0XHRcdFx0Y29uc3QgJHBhZ2UgPSAkKHBhZ2UpO1xuXHRcdFx0XHRcdGNvbnN0IG5zID0gJHBhZ2UuYXR0cignbnMnKTtcblx0XHRcdFx0XHRjb25zdCB0aXRsZSA9ICRwYWdlLmF0dHIoJ3RpdGxlJyk7XG5cdFx0XHRcdFx0Y29uc3QgaXNSZWRpciA9ICRwYWdlLmF0dHIoJ3JlZGlyZWN0JykgPT09ICcnO1xuXHRcdFx0XHRcdGNvbnN0ICRlZGl0cHJvdCA9ICRwYWdlLmZpbmQoJ3ByW3R5cGU9XCJlZGl0XCJdW2xldmVsPVwic3lzb3BcIl0nKTtcblx0XHRcdFx0XHRjb25zdCBpc1Byb3RlY3RlZCA9ICRlZGl0cHJvdC5sZW5ndGggPiAwO1xuXHRcdFx0XHRcdGNvbnN0IHNpemUgPSAkcGFnZS5maW5kKCdyZXYnKS5hdHRyKCdzaXplJyk7XG5cdFx0XHRcdFx0Y29uc3QgbWV0YWRhdGEgPSBbXTtcblx0XHRcdFx0XHRpZiAoaXNSZWRpcikge1xuXHRcdFx0XHRcdFx0bWV0YWRhdGFbbWV0YWRhdGEubGVuZ3RoXSA9IHdpbmRvdy53Z1VMUygn6YeN5a6a5ZCRJywgJ+mHjeaWsOWwjuWQkScpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoaXNQcm90ZWN0ZWQpIHtcblx0XHRcdFx0XHRcdG1ldGFkYXRhW21ldGFkYXRhLmxlbmd0aF0gPVxuXHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+WFqOS/neaKpO+8jCcsICflhajkv53orbfvvIwnKSArXG5cdFx0XHRcdFx0XHRcdCgkZWRpdHByb3QuYXR0cignZXhwaXJ5JykgPT09ICdpbmZpbml0eSdcblx0XHRcdFx0XHRcdFx0XHQ/IHdpbmRvdy53Z1VMUygn5peg6ZmQ5pyfJywgJ+eEoemZkOacnycpXG5cdFx0XHRcdFx0XHRcdFx0OiBgJHtuZXcgTW9yZWJpdHMuZGF0ZSgkZWRpdHByb3QuYXR0cignZXhwaXJ5JykpLmNhbGVuZGFyKCd1dGMnKX0gKFVUQylgKSArXG5cdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn6L+H5pyfJywgJ+mBjuacnycpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAobnMgPT09ICc2Jykge1xuXHRcdFx0XHRcdFx0Ly8gbWltaWMgd2hhdCBkZWxpbWFnZXMgdXNlZCB0byBzaG93IGZvciBmaWxlc1xuXHRcdFx0XHRcdFx0bWV0YWRhdGFbbWV0YWRhdGEubGVuZ3RoXSA9XG5cdFx0XHRcdFx0XHRcdCh3aW5kb3cud2dVTFMoJ+S4iuS8oOiAhe+8micsICfkuIrlgrPogIXvvJonKSArICRwYWdlLmZpbmQoJ2lpJykuYXR0cigndXNlcicpLFxuXHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+acgOWQjue8lui+ke+8micsICfmnIDlvoznt6jovK/vvJonKSArICRwYWdlLmZpbmQoJ3JldicpLmF0dHIoJ3VzZXInKSk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdG1ldGFkYXRhW21ldGFkYXRhLmxlbmd0aF0gPSBtdy5sYW5ndWFnZS5jb252ZXJ0TnVtYmVyKHNpemUpICsgd2luZG93LndnVUxTKCflrZfoioInLCAn5L2N5YWD57WEJyk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFR3aW5rbGUuYmF0Y2hkZWxldGUucGFnZXNbdGl0bGVdID0ge1xuXHRcdFx0XHRcdFx0bGFiZWw6IHRpdGxlICsgKG1ldGFkYXRhLmxlbmd0aCA/IGDvvIgke21ldGFkYXRhLmpvaW4oJ++8jCcpfe+8iWAgOiAnJyksXG5cdFx0XHRcdFx0XHR2YWx1ZTogdGl0bGUsXG5cdFx0XHRcdFx0XHRjaGVja2VkOiB0cnVlLFxuXHRcdFx0XHRcdFx0c3R5bGU6IGlzUHJvdGVjdGVkID8gJ2NvbG9yOiAjZjAwJyA6ICcnLFxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRjb25zdCBmb3JtXyA9IGFwaW9iai5wYXJhbXMuZm9ybTtcblx0XHRcdFx0Zm9ybV8uYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnaGVhZGVyJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflvoXliKDpmaTpobXpnaInLCAn5b6F5Yiq6Zmk6aCB6Z2iJyksXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRmb3JtXy5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdidXR0b24nLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WFqOmAiScsICflhajpgbgnKSxcblx0XHRcdFx0XHRldmVudDogKCkgPT4ge1xuXHRcdFx0XHRcdFx0JChyZXN1bHQpXG5cdFx0XHRcdFx0XHRcdC5maW5kKCdpbnB1dFtuYW1lPXBhZ2VzXTpub3QoOmNoZWNrZWQpJylcblx0XHRcdFx0XHRcdFx0LmVhY2goKF8sIGUpID0+IHtcblx0XHRcdFx0XHRcdFx0XHRlLmNsaWNrKCk7IC8vIGNoZWNrIGl0LCBhbmQgaW52b2tlIGNsaWNrIGV2ZW50IHNvIHRoYXQgc3ViZ3JvdXAgY2FuIGJlIHNob3duXG5cdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0Ly8gQ2hlY2sgYW55IHVuY2hlY2tlZCBzdWJwYWdlcyB0b29cblx0XHRcdFx0XHRcdCRib2R5LmZpbmQoJ2lucHV0W25hbWU9XCJwYWdlcy5zdWJwYWdlc1wiXScpLnByb3AoJ2NoZWNrZWQnLCB0cnVlKTtcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0Zm9ybV8uYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnYnV0dG9uJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflhajkuI3pgIknLCAn5YWo5LiN6YG4JyksXG5cdFx0XHRcdFx0ZXZlbnQ6ICgpID0+IHtcblx0XHRcdFx0XHRcdCQocmVzdWx0KVxuXHRcdFx0XHRcdFx0XHQuZmluZCgnaW5wdXRbbmFtZT1wYWdlc106Y2hlY2tlZCcpXG5cdFx0XHRcdFx0XHRcdC5lYWNoKChfLCBlKSA9PiB7XG5cdFx0XHRcdFx0XHRcdFx0ZS5jbGljaygpOyAvLyB1bmNoZWNrIGl0LCBhbmQgaW52b2tlIGNsaWNrIGV2ZW50IHNvIHRoYXQgc3ViZ3JvdXAgY2FuIGJlIGhpZGRlblxuXHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHR9KTtcblxuXHRcdFx0XHRmb3JtXy5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdFx0bmFtZTogJ3BhZ2VzJyxcblx0XHRcdFx0XHRpZDogJ3R3LWRiYXRjaC1wYWdlcycsXG5cdFx0XHRcdFx0c2hpZnRDbGlja1N1cHBvcnQ6IHRydWUsXG5cdFx0XHRcdFx0bGlzdDogT2JqZWN0LnZhbHVlcyhUd2lua2xlLmJhdGNoZGVsZXRlLnBhZ2VzKS5tYXAoKGUpID0+IHtcblx0XHRcdFx0XHRcdHJldHVybiBlO1xuXHRcdFx0XHRcdH0pLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0Zm9ybV8uYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnc3VibWl0Jyxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGNvbnN0IHJlc3VsdCA9IGZvcm1fLnJlbmRlcigpO1xuXHRcdFx0XHRhcGlvYmoucGFyYW1zLldpbmRvdy5zZXRDb250ZW50KHJlc3VsdCk7XG5cdFx0XHRcdGZvciAoY29uc3QgY2hlY2tib3ggb2YgTW9yZWJpdHMucXVpY2tGb3JtLmdldEVsZW1lbnRzKHJlc3VsdCwgJ3BhZ2VzJykpIHtcblx0XHRcdFx0XHRnZW5lcmF0ZUFycm93TGlua3MoY2hlY2tib3gpO1xuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXHRcdFx0c3RhdGVsZW1cblx0XHQpO1xuXHRcdHFpdXdlbl9hcGkucGFyYW1zID0ge1xuXHRcdFx0Zm9ybSxcblx0XHRcdFdpbmRvdyxcblx0XHR9O1xuXHRcdHFpdXdlbl9hcGkucG9zdCgpO1xuXHR9O1xuXHRjb25zdCBnZW5lcmF0ZUFycm93TGlua3MgPSAoY2hlY2tib3gpID0+IHtcblx0XHRjb25zdCBsaW5rID0gTW9yZWJpdHMuaHRtbE5vZGUoJ2EnLCAnID4nKTtcblx0XHRsaW5rLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAndHctZGJhdGNoLXBhZ2UtbGluaycpO1xuXHRcdGxpbmsuc2V0QXR0cmlidXRlKCdocmVmJywgbXcudXRpbC5nZXRVcmwoY2hlY2tib3gudmFsdWUpKTtcblx0XHRsaW5rLnNldEF0dHJpYnV0ZSgndGFyZ2V0JywgJ19ibGFuaycpO1xuXHRcdGxpbmsuc2V0QXR0cmlidXRlKCdyZWwnLCAnbm9vcGVuZXIgbm9yZWZlcnJlcicpO1xuXHRcdGNoZWNrYm94Lm5leHRFbGVtZW50U2libGluZy5hcHBlbmQobGluayk7XG5cdH07XG5cdFR3aW5rbGUuYmF0Y2hkZWxldGUuZ2VuZXJhdGVOZXdQYWdlTGlzdCA9IChmb3JtKSA9PiB7XG5cdFx0Ly8gVXBkYXRlIHRoZSBsaXN0IG9mIGNoZWNrZWQgcGFnZXMgaW4gVHdpbmtsZS5iYXRjaGRlbGV0ZS5wYWdlcyBvYmplY3Rcblx0XHRjb25zdCBlbGVtZW50cyA9IGZvcm0uZWxlbWVudHMucGFnZXM7XG5cdFx0aWYgKGVsZW1lbnRzIGluc3RhbmNlb2YgTm9kZUxpc3QpIHtcblx0XHRcdC8vIGlmIHRoZXJlIGFyZSBtdWx0aXBsZSBwYWdlc1xuXHRcdFx0Zm9yIChjb25zdCBlbGVtZW50IG9mIGVsZW1lbnRzKSB7XG5cdFx0XHRcdFR3aW5rbGUuYmF0Y2hkZWxldGUucGFnZXNbZWxlbWVudC52YWx1ZV0uY2hlY2tlZCA9IGVsZW1lbnQuY2hlY2tlZDtcblx0XHRcdH1cblx0XHR9IGVsc2UgaWYgKGVsZW1lbnRzIGluc3RhbmNlb2YgSFRNTElucHV0RWxlbWVudCkge1xuXHRcdFx0Ly8gaWYgdGhlcmUgaXMganVzdCBvbmUgcGFnZVxuXHRcdFx0VHdpbmtsZS5iYXRjaGRlbGV0ZS5wYWdlc1tlbGVtZW50cy52YWx1ZV0uY2hlY2tlZCA9IGVsZW1lbnRzLmNoZWNrZWQ7XG5cdFx0fVxuXHRcdHJldHVybiBuZXcgTW9yZWJpdHMucXVpY2tGb3JtLmVsZW1lbnQoe1xuXHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdG5hbWU6ICdwYWdlcycsXG5cdFx0XHRpZDogJ3R3LWRiYXRjaC1wYWdlcycsXG5cdFx0XHRzaGlmdENsaWNrU3VwcG9ydDogdHJ1ZSxcblx0XHRcdGxpc3Q6IE9iamVjdC52YWx1ZXMoVHdpbmtsZS5iYXRjaGRlbGV0ZS5wYWdlcykubWFwKChlKSA9PiB7XG5cdFx0XHRcdHJldHVybiBlO1xuXHRcdFx0fSksXG5cdFx0fSkucmVuZGVyKCk7XG5cdH07XG5cdFR3aW5rbGUuYmF0Y2hkZWxldGUuZGVsZXRlcmVhc29ubGlzdCA9IFtcblx0XHR7XG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfor7fpgInmi6knLCAn6KuL6YG45pOHJyksXG5cdFx0XHR2YWx1ZTogJycsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHQnRzbvvJrljp/kvZzogIXmj5Dor7fliKDpmaTmiJbmuIXnqbrpobXpnaLvvIzkuJTpobXpnaLljp/kvZzogIXku4XmnInkuIDkuronLFxuXHRcdFx0XHQnRzbvvJrljp/kvZzogIXmj5Doq4vliKrpmaTmiJbmuIXnqbrpoIHpnaLvvIzkuJTpoIHpnaLljp/kvZzogIXlg4XmnInkuIDkuronXG5cdFx0XHQpLFxuXHRcdFx0dmFsdWU6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0J1tbUVc6Q1NEI0c2fEc2XV3vvJrljp/kvZzogIXmj5Dor7fliKDpmaTmiJbmuIXnqbrpobXpnaLvvIzkuJTpobXpnaLljp/kvZzogIXku4XmnInkuIDkuronLFxuXHRcdFx0XHQnW1tRVzpDU0QjRzZ8RzZdXe+8muWOn+S9nOiAheaPkOiri+WIqumZpOaIlua4heepuumggemdou+8jOS4lOmggemdouWOn+S9nOiAheWDheacieS4gOS6uidcblx0XHRcdCksXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHQnRznvvJrlraTnq4vpobXpnaLvvIzmr5TlpoLmsqHmnInkuLvpobXpnaLnmoTorqjorrrpobXjgIHmjIflkJHnqbrpobXpnaLnmoTph43lrprlkJHnrYknLFxuXHRcdFx0XHQnRznvvJrlraTnq4vpoIHpnaLvvIzmr5TlpoLmspLmnInkuLvpoIHpnaLnmoToqI7oq5bpoIHjgIHmjIflkJHnqbrpoIHpnaLnmoTph43mlrDlsI7lkJHnrYknXG5cdFx0XHQpLFxuXHRcdFx0dmFsdWU6IHdpbmRvdy53Z1VMUygnW1tRVzpDU0QjRzl8RzldXe+8muWtpOeri+mhtemdoicsICdbW1FXOkNTRCNHOXxHOV1d77ya5a2k56uL6aCB6Z2iJyksXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCdSMe+8muS4jeiDveWPkeaMpeWunumZheS9nOeUqOeahOmHjeWumuWQkeOAgicsICdSMe+8muS4jeiDveeZvOaPruWvpumam+S9nOeUqOeahOmHjeWumuWQkeOAgicpLFxuXHRcdFx0dmFsdWU6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0J1tbUVc6Q1NEI1IxfFIxXV3vvJrkuI3og73lj5HmjKXlrp7pmYXkvZznlKjnmoTph43lrprlkJHjgIInLFxuXHRcdFx0XHQnW1tRVzpDU0QjUjF8UjFdXe+8muS4jeiDveeZvOaPruWvpumam+S9nOeUqOeahOmHjeWumuWQkeOAgidcblx0XHRcdCksXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHQnUjLvvJrlkI3np7DkuI7lr7zlkJHnm67moIfku6PooajkuovniankuI3kuIDoh7TmiJbkuI3lrozlhajkuIDoh7TnmoTph43lrprlkJHjgIInLFxuXHRcdFx0XHQnUjLvvJrlkI3nqLHoiIflsI7lkJHnm67mqJnku6PooajkuovniankuI3kuIDoh7TmiJbkuI3lrozlhajkuIDoh7TnmoTph43lrprlkJHjgIInXG5cdFx0XHQpLFxuXHRcdFx0dmFsdWU6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0J1tbUVc6Q1NEI1IyfFIyXV3vvJrlkI3np7DkuI7lr7zlkJHnm67moIfku6PooajkuovniankuI3kuIDoh7TmiJbkuI3lrozlhajkuIDoh7TnmoTph43lrprlkJHjgIInLFxuXHRcdFx0XHQnW1tRVzpDU0QjUjJ8UjJdXe+8muWQjeeoseiIh+WwjuWQkeebruaomeS7o+ihqOS6i+eJqeS4jeS4gOiHtOaIluS4jeWujOWFqOS4gOiHtOeahOmHjeWumuWQkeOAgidcblx0XHRcdCksXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCdGNO+8muWPr+iiq+abv+S7o+eahOWQiOeQhuS9v+eUqOaWh+S7ticsICdGNO+8muWPr+iiq+abv+S7o+eahOWQiOeQhuS9v+eUqOaqlOahiCcpLFxuXHRcdFx0dmFsdWU6IHdpbmRvdy53Z1VMUygnW1tRVzpDU0QjRjR8RjRdXe+8muWPr+iiq+abv+S7o+eahOWQiOeQhuS9v+eUqOaWh+S7ticsICdbW1FXOkNTRCNGNHxGNF1d77ya5Y+v6KKr5pu/5Luj55qE5ZCI55CG5L2/55So5qqU5qGIJyksXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHQnRjXvvJrmsqHmnInooqvmnaHnm67kvb/nlKjnmoTpnZ7oh6rnlLHokZfkvZzmnYPmlofku7bjgIHmsqHmnInloavlhpnku7vkvZXlkIjnkIbkvb/nlKjkvp3mja7nmoTpnZ7oh6rnlLHokZfkvZzmnYPmlofku7YnLFxuXHRcdFx0XHQnRjXvvJrmspLmnInooqvmop3nm67kvb/nlKjnmoTpnZ7oh6rnlLHniYjmrIrmqpTmoYjjgIHmspLmnInloavlr6vku7vkvZXlkIjnkIbkvb/nlKjkvp3mk5rnmoTpnZ7oh6rnlLHniYjmrIrmqpTmoYgnXG5cdFx0XHQpLFxuXHRcdFx0dmFsdWU6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0J1tbUVc6Q1NEI0Y1fEY1XV3vvJrmsqHmnInooqvmnaHnm67kvb/nlKjnmoTpnZ7oh6rnlLHokZfkvZzmnYPmlofku7bjgIHmsqHmnInloavlhpnku7vkvZXlkIjnkIbkvb/nlKjkvp3mja7nmoTpnZ7oh6rnlLHokZfkvZzmnYPmlofku7YnLFxuXHRcdFx0XHQnW1tRVzpDU0QjRjV8RjVdXe+8muaykuacieiiq+aineebruS9v+eUqOeahOmdnuiHqueUseeJiOasiuaqlOahiOOAgeaykuacieWhq+Wvq+S7u+S9leWQiOeQhuS9v+eUqOS+neaTmueahOmdnuiHqueUseeJiOasiuaqlOahiCdcblx0XHRcdCksXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHQnTzHvvJrnlKjmiLfor7fmsYLliKDpmaToh6rlt7HnmoTnlKjmiLfpobXmiJblhbblrZDpobXpnaInLFxuXHRcdFx0XHQnTzHvvJrkvb/nlKjogIXoq4vmsYLliKrpmaToh6rlt7HnmoTkvb/nlKjogIXpoIHpnaLmiJblhbblrZDpoIHpnaInXG5cdFx0XHQpLFxuXHRcdFx0dmFsdWU6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0J1tbUVc6Q1NEI08xfE8xXV3vvJrnlKjmiLfor7fmsYLliKDpmaToh6rlt7HnmoRbW0hlbHA655So5oi36aG1fOeUqOaIt+mhtV1d5oiW5YW25a2Q6aG16Z2i44CCJyxcblx0XHRcdFx0J1tbUVc6Q1NEI08xfE8xXV3vvJrkvb/nlKjogIXoq4vmsYLliKrpmaToh6rlt7HnmoRbW0hlbHA655So5oi36aG1fOS9v+eUqOiAhemggemdol1d5oiW5YW25a2Q6aCB6Z2i44CCJ1xuXHRcdFx0KSxcblx0XHR9LFxuXHRcdHtcblx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ08y77ya56m655qE5YiG57G777yI5rKh5pyJ5p2h55uu5Lmf5rKh5pyJ5a2Q5YiG57G777yJJywgJ08y77ya56m655qE5YiG6aGe77yI5rKS5pyJ5qKd55uu5Lmf5rKS5pyJ5a2Q5YiG6aGe77yJJyksXG5cdFx0XHR2YWx1ZTogd2luZG93LndnVUxTKFxuXHRcdFx0XHQnW1tRVzpDU0QjTzJ8TzJdXe+8muepuueahOWIhuexu++8iOayoeacieadoeebruS5n+ayoeacieWtkOWIhuexu++8ieOAgicsXG5cdFx0XHRcdCdbW1FXOkNTRCNPMnxPMl1d77ya56m655qE5YiG6aGe77yI5rKS5pyJ5qKd55uu5Lmf5rKS5pyJ5a2Q5YiG6aGe77yJ44CCJ1xuXHRcdFx0KSxcblx0XHR9LFxuXHRcdHtcblx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ08z77ya5bqf5byD6I2J56i/JywgJ08z77ya5bui5qOE6I2J56i/JyksXG5cdFx0XHR2YWx1ZTogd2luZG93LndnVUxTKCdbW1FXOkNTRCNPM3xPM11d77ya5bqf5byD6I2J56i/44CCJywgJ1tbUVc6Q1NEI08zfE8zXV3vvJrlu6Lmo4TojYnnqL/jgIInKSxcblx0XHR9LFxuXHRdO1xuXHRUd2lua2xlLmJhdGNoZGVsZXRlLmNhbGxiYWNrLmNoYW5nZV9jb21tb25fcmVhc29uID0gKGUpID0+IHtcblx0XHRpZiAoZS50YXJnZXQuZm9ybS5yZWFzb24udmFsdWUgIT09ICcnKSB7XG5cdFx0XHRlLnRhcmdldC5mb3JtLnJlYXNvbi52YWx1ZSA9IE1vcmViaXRzLnN0cmluZy5hcHBlbmRQdW5jdHVhdGlvbihlLnRhcmdldC5mb3JtLnJlYXNvbi52YWx1ZSk7XG5cdFx0fVxuXHRcdGUudGFyZ2V0LmZvcm0ucmVhc29uLnZhbHVlICs9IGUudGFyZ2V0LnZhbHVlO1xuXHRcdGUudGFyZ2V0LnZhbHVlID0gJyc7XG5cdH07XG5cdFR3aW5rbGUuYmF0Y2hkZWxldGUuY2FsbGJhY2sudG9nZ2xlU3VicGFnZXMgPSAoZSkgPT4ge1xuXHRcdGNvbnN0IHtmb3JtfSA9IGUudGFyZ2V0O1xuXHRcdGxldCBuZXdQYWdlTGlzdDtcblx0XHRpZiAoZS50YXJnZXQuY2hlY2tlZCkge1xuXHRcdFx0Zm9ybS5kZWxldGVfc3VicGFnZV9yZWRpcmVjdHMuY2hlY2tlZCA9IGZvcm0uZGVsZXRlX3JlZGlyZWN0cy5jaGVja2VkO1xuXHRcdFx0Zm9ybS5kZWxldGVfc3VicGFnZV90YWxrcy5jaGVja2VkID0gZm9ybS5kZWxldGVfdGFsay5jaGVja2VkO1xuXHRcdFx0Zm9ybS51bmxpbmtfc3VicGFnZXMuY2hlY2tlZCA9IGZvcm0udW5saW5rX3BhZ2UuY2hlY2tlZDtcblx0XHRcdC8vIElmIGxpc3RzIG9mIHN1YnBhZ2VzIHdlcmUgYWxyZWFkeSBsb2FkZWQgb25jZSwgdGhleSBhcmVcblx0XHRcdC8vIGF2YWlsYWJsZSB3aXRob3V0IHVzZSBvZiBhbnkgQVBJIGNhbGxzXG5cdFx0XHRpZiAoc3VicGFnZXNMb2FkZWQpIHtcblx0XHRcdFx0Zm9yIChjb25zdCBlbCBvZiBUd2lua2xlLmJhdGNoZGVsZXRlLnBhZ2VzKSB7XG5cdFx0XHRcdFx0Ly8gR2V0IGJhY2sgdGhlIHN1Ymdyb3VwIGZyb20gc3ViZ3JvdXBfLCB3aGVyZSB3ZSBzYXZlZCBpdFxuXHRcdFx0XHRcdGlmIChlbC5zdWJncm91cCA9PT0gbnVsbCAmJiBlbC5zdWJncm91cF8pIHtcblx0XHRcdFx0XHRcdGVsLnN1Ymdyb3VwID0gZWwuc3ViZ3JvdXBfO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRuZXdQYWdlTGlzdCA9IFR3aW5rbGUuYmF0Y2hkZWxldGUuZ2VuZXJhdGVOZXdQYWdlTGlzdChmb3JtKTtcblx0XHRcdFx0JGJvZHkuZmluZCgnI3R3LWRiYXRjaC1wYWdlcycpLnJlcGxhY2VXaXRoKG5ld1BhZ2VMaXN0KTtcblx0XHRcdFx0Zm9yIChjb25zdCBjaGVja2JveCBvZiBNb3JlYml0cy5xdWlja0Zvcm0uZ2V0RWxlbWVudHMobmV3UGFnZUxpc3QsICdwYWdlcycpKSB7XG5cdFx0XHRcdFx0Z2VuZXJhdGVBcnJvd0xpbmtzKGNoZWNrYm94KTtcblx0XHRcdFx0fVxuXHRcdFx0XHRmb3IgKGNvbnN0IGNoZWNrYm94IG9mIE1vcmViaXRzLnF1aWNrRm9ybS5nZXRFbGVtZW50cyhuZXdQYWdlTGlzdCwgJ3BhZ2VzLnN1YnBhZ2VzJykpIHtcblx0XHRcdFx0XHRnZW5lcmF0ZUFycm93TGlua3MoY2hlY2tib3gpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdC8vIFByb2NlZWQgd2l0aCBBUEkgY2FsbHMgdG8gZ2V0IGxpc3Qgb2Ygc3VicGFnZXNcblx0XHRcdGNvbnN0IGxvYWRpbmdUZXh0ID0gYDxzdHJvbmcgaWQ9XCJkYmF0Y2gtc3VicGFnZS1sb2FkaW5nXCI+JHt3aW5kb3cud2dVTFMoJ+WKoOi9veS4rS4uLicsICfovInlhaXkuK0uLi4nKX08L3N0cm9uZz5gO1xuXHRcdFx0JChlLnRhcmdldCkuYWZ0ZXIobG9hZGluZ1RleHQpO1xuXHRcdFx0Y29uc3QgcGFnZXMgPSAkKGZvcm0ucGFnZXMpXG5cdFx0XHRcdC5tYXAoKF9pLCBlbCkgPT4ge1xuXHRcdFx0XHRcdHJldHVybiBlbC52YWx1ZTtcblx0XHRcdFx0fSlcblx0XHRcdFx0LmdldCgpO1xuXHRcdFx0Y29uc3Qgc3VicGFnZUxpc3RlciA9IG5ldyBNb3JlYml0cy5iYXRjaE9wZXJhdGlvbigpO1xuXHRcdFx0c3VicGFnZUxpc3Rlci5zZXRPcHRpb24oJ2NodW5rU2l6ZScsIFR3aW5rbGUuZ2V0UHJlZignYmF0Y2hDaHVua3MnKSk7XG5cdFx0XHRzdWJwYWdlTGlzdGVyLnNldFBhZ2VMaXN0KHBhZ2VzKTtcblx0XHRcdHN1YnBhZ2VMaXN0ZXIucnVuKFxuXHRcdFx0XHQocGFnZU5hbWUpID0+IHtcblx0XHRcdFx0XHRjb25zdCBwYWdlVGl0bGUgPSBtdy5UaXRsZS5uZXdGcm9tVGV4dChwYWdlTmFtZSk7XG5cdFx0XHRcdFx0Ly8gTm8gbmVlZCB0byBsb29rIGZvciBzdWJwYWdlcyBpbiBtYWluL2ZpbGUvbWVkaWF3aWtpIHNwYWNlXG5cdFx0XHRcdFx0aWYgKFswLCA2LCA4XS5pbmNsdWRlcyhwYWdlVGl0bGUubmFtZXNwYWNlKSkge1xuXHRcdFx0XHRcdFx0c3VicGFnZUxpc3Rlci53b3JrZXJTdWNjZXNzKCk7XG5cdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGNvbnN0IHFpdXdlbl9hcGkgPSBuZXcgTW9yZWJpdHMud2lraS5hcGkoXG5cdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+ato+WcqOiOt+WPliAnLCAn5q2j5Zyo5Y+W5b6XICcpICsgcGFnZU5hbWUgKyB3aW5kb3cud2dVTFMoJyDnmoTlrZDpobXpnaInLCAnIOeahOWtkOmggemdoicpLFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRhY3Rpb246ICdxdWVyeScsXG5cdFx0XHRcdFx0XHRcdHByb3A6ICdyZXZpc2lvbnN8aW5mb3xpbWFnZWluZm8nLFxuXHRcdFx0XHRcdFx0XHRnZW5lcmF0b3I6ICdhbGxwYWdlcycsXG5cdFx0XHRcdFx0XHRcdHJ2cHJvcDogJ3NpemUnLFxuXHRcdFx0XHRcdFx0XHRpbnByb3A6ICdwcm90ZWN0aW9uJyxcblx0XHRcdFx0XHRcdFx0Z2FwcHJlZml4OiBgJHtwYWdlVGl0bGUudGl0bGV9L2AsXG5cdFx0XHRcdFx0XHRcdGdhcG5hbWVzcGFjZTogcGFnZVRpdGxlLm5hbWVzcGFjZSxcblx0XHRcdFx0XHRcdFx0Z2FwbGltaXQ6ICdtYXgnLFxuXHRcdFx0XHRcdFx0XHRwYWdlTmFtZUZ1bGw6IHBhZ2VOYW1lLCAvLyBOb3QgdXNlZCBieSBBUEksIGJ1dCBhZGRlZCBmb3IgYWNjZXNzIGluIG9uU3VjY2VzcygpXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0KGFwaW9iaikgPT4ge1xuXHRcdFx0XHRcdFx0XHRjb25zdCB4bWwgPSBhcGlvYmoucmVzcG9uc2VYTUw7XG5cdFx0XHRcdFx0XHRcdGNvbnN0ICRwYWdlcyA9ICQoeG1sKS5maW5kKCdwYWdlJyk7XG5cdFx0XHRcdFx0XHRcdGNvbnN0IHN1YnBhZ2VMaXN0ID0gW107XG5cdFx0XHRcdFx0XHRcdCRwYWdlcy5lYWNoKChfaW5kZXgsIHBhZ2UpID0+IHtcblx0XHRcdFx0XHRcdFx0XHRjb25zdCAkcGFnZSA9ICQocGFnZSk7XG5cdFx0XHRcdFx0XHRcdFx0Y29uc3QgbnMgPSAkcGFnZS5hdHRyKCducycpO1xuXHRcdFx0XHRcdFx0XHRcdGNvbnN0IHRpdGxlID0gJHBhZ2UuYXR0cigndGl0bGUnKTtcblx0XHRcdFx0XHRcdFx0XHRjb25zdCBpc1JlZGlyID0gJHBhZ2UuYXR0cigncmVkaXJlY3QnKSA9PT0gJyc7XG5cdFx0XHRcdFx0XHRcdFx0Y29uc3QgJGVkaXRwcm90ID0gJHBhZ2UuZmluZCgncHJbdHlwZT1cImVkaXRcIl1bbGV2ZWw9XCJzeXNvcFwiXScpO1xuXHRcdFx0XHRcdFx0XHRcdGNvbnN0IGlzUHJvdGVjdGVkID0gJGVkaXRwcm90Lmxlbmd0aCA+IDA7XG5cdFx0XHRcdFx0XHRcdFx0Y29uc3Qgc2l6ZSA9ICRwYWdlLmZpbmQoJ3JldicpLmF0dHIoJ3NpemUnKTtcblx0XHRcdFx0XHRcdFx0XHRjb25zdCBtZXRhZGF0YSA9IFtdO1xuXHRcdFx0XHRcdFx0XHRcdGlmIChpc1JlZGlyKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRtZXRhZGF0YVttZXRhZGF0YS5sZW5ndGhdID0gJ3JlZGlyZWN0Jztcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0aWYgKGlzUHJvdGVjdGVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRtZXRhZGF0YVttZXRhZGF0YS5sZW5ndGhdID1cblx0XHRcdFx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCflhajkv53miqTvvIwnLCAn5YWo5L+d6K2377yMJykgK1xuXHRcdFx0XHRcdFx0XHRcdFx0XHQoJGVkaXRwcm90LmF0dHIoJ2V4cGlyeScpID09PSAnaW5maW5pdHknXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0PyB3aW5kb3cud2dVTFMoJ+aXoOmZkOacnycsICfnhKHpmZDmnJ8nKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdDogYCR7bmV3IE1vcmViaXRzLmRhdGUoJGVkaXRwcm90LmF0dHIoJ2V4cGlyeScpKS5jYWxlbmRhcigndXRjJyl9IChVVEMpYCkgK1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+i/h+acnycsICfpgY7mnJ8nKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0aWYgKG5zID09PSAnNicpIHtcblx0XHRcdFx0XHRcdFx0XHRcdC8vIG1pbWljIHdoYXQgZGVsaW1hZ2VzIHVzZWQgdG8gc2hvdyBmb3IgZmlsZXNcblx0XHRcdFx0XHRcdFx0XHRcdG1ldGFkYXRhW21ldGFkYXRhLmxlbmd0aF0gPVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQod2luZG93LndnVUxTKCfkuIrkvKDogIXvvJonLCAn5LiK5YKz6ICF77yaJykgKyAkcGFnZS5maW5kKCdpaScpLmF0dHIoJ3VzZXInKSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfmnIDlkI7nvJbovpHvvJonLCAn5pyA5b6M57eo6Lyv77yaJykgKyAkcGFnZS5maW5kKCdyZXYnKS5hdHRyKCd1c2VyJykpO1xuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRtZXRhZGF0YVttZXRhZGF0YS5sZW5ndGhdID1cblx0XHRcdFx0XHRcdFx0XHRcdFx0bXcubGFuZ3VhZ2UuY29udmVydE51bWJlcihzaXplKSArIHdpbmRvdy53Z1VMUygn5a2X6IqCJywgJ+S9jeWFg+e1hCcpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRzdWJwYWdlTGlzdFtzdWJwYWdlTGlzdC5sZW5ndGhdID0ge1xuXHRcdFx0XHRcdFx0XHRcdFx0bGFiZWw6IHRpdGxlICsgKG1ldGFkYXRhLmxlbmd0aCA/IGAgKCR7bWV0YWRhdGEuam9pbignOyAnKX0pYCA6ICcnKSxcblx0XHRcdFx0XHRcdFx0XHRcdHZhbHVlOiB0aXRsZSxcblx0XHRcdFx0XHRcdFx0XHRcdGNoZWNrZWQ6IHRydWUsXG5cdFx0XHRcdFx0XHRcdFx0XHRzdHlsZTogaXNQcm90ZWN0ZWQgPyAnY29sb3I6ICNmMDAnIDogJycsXG5cdFx0XHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRcdGlmIChzdWJwYWdlTGlzdC5sZW5ndGgpIHtcblx0XHRcdFx0XHRcdFx0XHRjb25zdCBwYWdlTmFtZV8gPSBhcGlvYmoucXVlcnkucGFnZU5hbWVGdWxsO1xuXHRcdFx0XHRcdFx0XHRcdFR3aW5rbGUuYmF0Y2hkZWxldGUucGFnZXNbcGFnZU5hbWVfXS5zdWJncm91cCA9IHtcblx0XHRcdFx0XHRcdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdFx0XHRcdFx0XHRuYW1lOiAnc3VicGFnZXMnLFxuXHRcdFx0XHRcdFx0XHRcdFx0Y2xhc3NOYW1lOiAnZGJhdGNoLXN1YnBhZ2VzJyxcblx0XHRcdFx0XHRcdFx0XHRcdHNoaWZ0Q2xpY2tTdXBwb3J0OiB0cnVlLFxuXHRcdFx0XHRcdFx0XHRcdFx0bGlzdDogc3VicGFnZUxpc3QsXG5cdFx0XHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRzdWJwYWdlTGlzdGVyLndvcmtlclN1Y2Nlc3MoKTtcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRudWxsIC8qIHN0YXR1c0VsZW1lbnQgKi8sXG5cdFx0XHRcdFx0XHQoKSA9PiB7XG5cdFx0XHRcdFx0XHRcdHN1YnBhZ2VMaXN0ZXIud29ya2VyRmFpbHVyZSgpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0cWl1d2VuX2FwaS5wb3N0KCk7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdCgpID0+IHtcblx0XHRcdFx0XHQvLyBMaXN0ICdlbSBvbiB0aGUgaW50ZXJmYWNlXG5cdFx0XHRcdFx0bmV3UGFnZUxpc3QgPSBUd2lua2xlLmJhdGNoZGVsZXRlLmdlbmVyYXRlTmV3UGFnZUxpc3QoZm9ybSk7XG5cdFx0XHRcdFx0JGJvZHkuZmluZCgnI3R3LWRiYXRjaC1wYWdlcycpLnJlcGxhY2VXaXRoKG5ld1BhZ2VMaXN0KTtcblx0XHRcdFx0XHRmb3IgKGNvbnN0IGNoZWNrYm94IG9mIE1vcmViaXRzLnF1aWNrRm9ybS5nZXRFbGVtZW50cyhuZXdQYWdlTGlzdCwgJ3BhZ2VzJykpIHtcblx0XHRcdFx0XHRcdGdlbmVyYXRlQXJyb3dMaW5rcyhjaGVja2JveCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGZvciAoY29uc3QgY2hlY2tib3ggb2YgTW9yZWJpdHMucXVpY2tGb3JtLmdldEVsZW1lbnRzKG5ld1BhZ2VMaXN0LCAncGFnZXMuc3VicGFnZXMnKSkge1xuXHRcdFx0XHRcdFx0Z2VuZXJhdGVBcnJvd0xpbmtzKGNoZWNrYm94KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0c3VicGFnZXNMb2FkZWQgPSB0cnVlO1xuXHRcdFx0XHRcdC8vIFJlbW92ZSBcIkxvYWRpbmcuLi4gXCIgdGV4dFxuXHRcdFx0XHRcdCRib2R5LmZpbmQoJyNkYmF0Y2gtc3VicGFnZS1sb2FkaW5nJykucmVtb3ZlKCk7XG5cdFx0XHRcdH1cblx0XHRcdCk7XG5cdFx0fSBlbHNlIGlmICghZS50YXJnZXQuY2hlY2tlZCkge1xuXHRcdFx0Zm9yIChjb25zdCBlbCBvZiBUd2lua2xlLmJhdGNoZGVsZXRlLnBhZ2VzKSB7XG5cdFx0XHRcdGlmIChlbC5zdWJncm91cCkge1xuXHRcdFx0XHRcdC8vIFJlbW92ZSBzdWJncm91cCBhZnRlciBzYXZpbmcgaXRzIGNvbnRlbnRzIGluIHN1Ymdyb3VwX1xuXHRcdFx0XHRcdC8vIHNvIHRoYXQgaXQgY2FuIGJlIHJldHJpZXZlZCBlYXNpbHkgaWYgdXNlciBkZWNpZGVzIHRvXG5cdFx0XHRcdFx0Ly8gZGVsZXRlIHRoZSBzdWJwYWdlcyBhZ2FpblxuXHRcdFx0XHRcdGVsLnN1Ymdyb3VwXyA9IGVsLnN1Ymdyb3VwO1xuXHRcdFx0XHRcdGVsLnN1Ymdyb3VwID0gbnVsbDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0bmV3UGFnZUxpc3QgPSBUd2lua2xlLmJhdGNoZGVsZXRlLmdlbmVyYXRlTmV3UGFnZUxpc3QoZm9ybSk7XG5cdFx0XHQkYm9keS5maW5kKCcjdHctZGJhdGNoLXBhZ2VzJykucmVwbGFjZVdpdGgobmV3UGFnZUxpc3QpO1xuXHRcdFx0Zm9yIChjb25zdCBjaGVja2JveCBvZiBNb3JlYml0cy5xdWlja0Zvcm0uZ2V0RWxlbWVudHMobmV3UGFnZUxpc3QsICdwYWdlcycpKSB7XG5cdFx0XHRcdGdlbmVyYXRlQXJyb3dMaW5rcyhjaGVja2JveCk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRUd2lua2xlLmJhdGNoZGVsZXRlLmNhbGxiYWNrLmV2YWx1YXRlID0gKGV2ZW50KSA9PiB7XG5cdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQubm90aWNlID0gd2luZG93LndnVUxTKCfmibnph4/liKDpmaTlt7LlrozmiJAnLCAn5om55qyh5Yiq6Zmk5bey5a6M5oiQJyk7XG5cdFx0Y29uc3QgZm9ybSA9IGV2ZW50LnRhcmdldDtcblx0XHRjb25zdCBudW1Qcm90ZWN0ZWQgPSAkKE1vcmViaXRzLnF1aWNrRm9ybS5nZXRFbGVtZW50cyhmb3JtLCAncGFnZXMnKSkuZmlsdGVyKChfaW5kZXgsIGVsZW1lbnQpID0+IHtcblx0XHRcdHJldHVybiBlbGVtZW50LmNoZWNrZWQgJiYgZWxlbWVudC5uZXh0RWxlbWVudFNpYmxpbmcuc3R5bGUuY29sb3IgPT09ICdyZWQnO1xuXHRcdH0pLmxlbmd0aDtcblx0XHRpZiAoXG5cdFx0XHRudW1Qcm90ZWN0ZWQgPiAwICYmXG5cdFx0XHQhY29uZmlybShcblx0XHRcdFx0d2luZG93LndnVUxTKCfmgqjmraPopoHliKDpmaQgJywgJ+aCqOato+imgeWIqumZpCAnKSArXG5cdFx0XHRcdFx0bXcubGFuZ3VhZ2UuY29udmVydE51bWJlcihudW1Qcm90ZWN0ZWQpICtcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJyDkuKrlhajkv53miqTpobXpnaLvvIzmgqjnoa7lrprlkJfvvJ8nLCAnIOWAi+WFqOS/neitt+mggemdou+8jOaCqOeiuuWumuWXju+8nycpXG5cdFx0XHQpXG5cdFx0KSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdGNvbnN0IHBhZ2VzID0gZm9ybS5nZXRDaGVja2VkKCdwYWdlcycpO1xuXHRcdGNvbnN0IHN1YnBhZ2VzID0gZm9ybS5nZXRDaGVja2VkKCdwYWdlcy5zdWJwYWdlcycpO1xuXHRcdGNvbnN0IHJlYXNvbiA9IGZvcm0ucmVhc29uLnZhbHVlO1xuXHRcdGNvbnN0IGRlbGV0ZV9wYWdlID0gZm9ybS5kZWxldGVfcGFnZS5jaGVja2VkO1xuXHRcdGxldCBkZWxldGVfdGFsaztcblx0XHRsZXQgZGVsZXRlX3JlZGlyZWN0cztcblx0XHRsZXQgZGVsZXRlX3N1YnBhZ2VzO1xuXHRcdGxldCBkZWxldGVfc3VicGFnZV9yZWRpcmVjdHM7XG5cdFx0bGV0IGRlbGV0ZV9zdWJwYWdlX3RhbGtzO1xuXHRcdGxldCB1bmxpbmtfc3VicGFnZXM7XG5cdFx0aWYgKGRlbGV0ZV9wYWdlKSB7XG5cdFx0XHRkZWxldGVfdGFsayA9IGZvcm0uZGVsZXRlX3RhbGsuY2hlY2tlZDtcblx0XHRcdGRlbGV0ZV9yZWRpcmVjdHMgPSBmb3JtLmRlbGV0ZV9yZWRpcmVjdHMuY2hlY2tlZDtcblx0XHRcdGRlbGV0ZV9zdWJwYWdlcyA9IGZvcm0uZGVsZXRlX3N1YnBhZ2VzLmNoZWNrZWQ7XG5cdFx0XHRpZiAoZGVsZXRlX3N1YnBhZ2VzKSB7XG5cdFx0XHRcdGRlbGV0ZV9zdWJwYWdlX3JlZGlyZWN0cyA9IGZvcm0uZGVsZXRlX3N1YnBhZ2VfcmVkaXJlY3RzLmNoZWNrZWQ7XG5cdFx0XHRcdGRlbGV0ZV9zdWJwYWdlX3RhbGtzID0gZm9ybS5kZWxldGVfc3VicGFnZV90YWxrcy5jaGVja2VkO1xuXHRcdFx0XHR1bmxpbmtfc3VicGFnZXMgPSBmb3JtLnVubGlua19zdWJwYWdlcy5jaGVja2VkO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRjb25zdCB1bmxpbmtfcGFnZSA9IGZvcm0udW5saW5rX3BhZ2UuY2hlY2tlZDtcblx0XHRjb25zdCB1bmxpbmtfZmlsZSA9IGZvcm0udW5saW5rX2ZpbGUuY2hlY2tlZDtcblx0XHRpZiAoIXJlYXNvbikge1xuXHRcdFx0dm9pZCBtdy5ub3RpZnkod2luZG93LndnVUxTKCfmgqjpnIDopoHnu5nlh7rkuIDkuKrnkIbnlLEnLCAn5oKo6ZyA6KaB57Wm5Ye65LiA5YCL55CG55SxJyksIHtcblx0XHRcdFx0dHlwZTogJ3dhcm4nLFxuXHRcdFx0XHR0YWc6ICd0d2lua2xlYmF0Y2hkZWxldGUnLFxuXHRcdFx0fSk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdE1vcmViaXRzLnNpbXBsZVdpbmRvdy5zZXRCdXR0b25zRW5hYmxlZChmYWxzZSk7XG5cdFx0TW9yZWJpdHMuc3RhdHVzLmluaXQoZm9ybSk7XG5cdFx0aWYgKCFwYWdlcykge1xuXHRcdFx0TW9yZWJpdHMuc3RhdHVzLmVycm9yKFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ+mUmeivrycsICfpjK/oqqQnKSxcblx0XHRcdFx0d2luZG93LndnVUxTKCfmsqHmnInopoHliKDpmaTnmoTlhoXlrrnvvIzkuK3mraInLCAn5rKS5pyJ6KaB5Yiq6Zmk55qE5YWn5a6577yM5Lit5q2iJylcblx0XHRcdCk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdGNvbnN0IHBhZ2VEZWxldGVyID0gbmV3IE1vcmViaXRzLmJhdGNoT3BlcmF0aW9uKFxuXHRcdFx0ZGVsZXRlX3BhZ2Vcblx0XHRcdFx0PyB3aW5kb3cud2dVTFMoJ+ato+WcqOWIoOmZpOmhtemdoicsICfmraPlnKjliKrpmaTpoIHpnaInKVxuXHRcdFx0XHQ6IHdpbmRvdy53Z1VMUygn5q2j5Zyo5ZCv5Yqo6KaB5rGC55qE5Lu75YqhJywgJ+ato+WcqOWVn+WLleimgeaxgueahOS7u+WLmScpXG5cdFx0KTtcblx0XHRwYWdlRGVsZXRlci5zZXRPcHRpb24oJ2NodW5rU2l6ZScsIFR3aW5rbGUuZ2V0UHJlZignYmF0Y2hDaHVua3MnKSk7XG5cdFx0Ly8gd2Ugb25seSBuZWVkIHRoZSBpbml0aWFsIHN0YXR1cyBsaW5lcyBpZiB3ZSdyZSBkZWxldGluZyB0aGUgcGFnZXMgaW4gdGhlIHBhZ2VzIGFycmF5XG5cdFx0cGFnZURlbGV0ZXIuc2V0T3B0aW9uKCdwcmVzZXJ2ZUluZGl2aWR1YWxTdGF0dXNMaW5lcycsIGRlbGV0ZV9wYWdlKTtcblx0XHRwYWdlRGVsZXRlci5zZXRQYWdlTGlzdChwYWdlcyk7XG5cdFx0cGFnZURlbGV0ZXIucnVuKFxuXHRcdFx0KHBhZ2VOYW1lKSA9PiB7XG5cdFx0XHRcdGNvbnN0IHBhcmFtcyA9IHtcblx0XHRcdFx0XHRwYWdlOiBwYWdlTmFtZSxcblx0XHRcdFx0XHRkZWxldGVfcGFnZSxcblx0XHRcdFx0XHRkZWxldGVfdGFsayxcblx0XHRcdFx0XHRkZWxldGVfcmVkaXJlY3RzLFxuXHRcdFx0XHRcdHVubGlua19wYWdlLFxuXHRcdFx0XHRcdHVubGlua19maWxlOiB1bmxpbmtfZmlsZSAmJiBuZXcgUmVnRXhwKGBeJHtNb3JlYml0cy5uYW1lc3BhY2VSZWdleCg2KX06YCwgJ2knKS50ZXN0KHBhZ2VOYW1lKSxcblx0XHRcdFx0XHRyZWFzb24sXG5cdFx0XHRcdFx0cGFnZURlbGV0ZXIsXG5cdFx0XHRcdH07XG5cdFx0XHRcdGNvbnN0IHFpdXdlbl9wYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShcblx0XHRcdFx0XHRwYWdlTmFtZSxcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+ato+WcqOWIoOmZpOmhtemdoiAnLCAn5q2j5Zyo5Yiq6Zmk6aCB6Z2iICcpICsgcGFnZU5hbWVcblx0XHRcdFx0KTtcblx0XHRcdFx0cWl1d2VuX3BhZ2Uuc2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKHBhcmFtcyk7XG5cdFx0XHRcdGlmIChkZWxldGVfcGFnZSkge1xuXHRcdFx0XHRcdHFpdXdlbl9wYWdlLnNldEVkaXRTdW1tYXJ5KGAke3JlYXNvbn3vvIjmibnph4/vvIlgKTtcblx0XHRcdFx0XHRxaXV3ZW5fcGFnZS5zZXRDaGFuZ2VUYWdzKFR3aW5rbGUuY2hhbmdlVGFncyk7XG5cdFx0XHRcdFx0cWl1d2VuX3BhZ2Uuc3VwcHJlc3NQcm90ZWN0V2FybmluZygpO1xuXHRcdFx0XHRcdHFpdXdlbl9wYWdlLmRlbGV0ZVBhZ2UoVHdpbmtsZS5iYXRjaGRlbGV0ZS5jYWxsYmFja3MuZG9FeHRyYXMsIHBhZ2VEZWxldGVyLndvcmtlckZhaWx1cmUpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFR3aW5rbGUuYmF0Y2hkZWxldGUuY2FsbGJhY2tzLmRvRXh0cmFzKHFpdXdlbl9wYWdlKTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdCgpID0+IHtcblx0XHRcdFx0aWYgKGRlbGV0ZV9zdWJwYWdlcykge1xuXHRcdFx0XHRcdGNvbnN0IHN1YnBhZ2VEZWxldGVyID0gbmV3IE1vcmViaXRzLmJhdGNoT3BlcmF0aW9uKFxuXHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfmraPlnKjliKDpmaTlrZDpobXpnaInLCAn5q2j5Zyo5Yiq6Zmk5a2Q6aCB6Z2iJylcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdHN1YnBhZ2VEZWxldGVyLnNldE9wdGlvbignY2h1bmtTaXplJywgVHdpbmtsZS5nZXRQcmVmKCdiYXRjaENodW5rcycpKTtcblx0XHRcdFx0XHRzdWJwYWdlRGVsZXRlci5zZXRPcHRpb24oJ3ByZXNlcnZlSW5kaXZpZHVhbFN0YXR1c0xpbmVzJywgdHJ1ZSk7XG5cdFx0XHRcdFx0c3VicGFnZURlbGV0ZXIuc2V0UGFnZUxpc3Qoc3VicGFnZXMpO1xuXHRcdFx0XHRcdHN1YnBhZ2VEZWxldGVyLnJ1bigocGFnZU5hbWUpID0+IHtcblx0XHRcdFx0XHRcdGNvbnN0IHBhcmFtcyA9IHtcblx0XHRcdFx0XHRcdFx0cGFnZTogcGFnZU5hbWUsXG5cdFx0XHRcdFx0XHRcdGRlbGV0ZV9wYWdlOiB0cnVlLFxuXHRcdFx0XHRcdFx0XHRkZWxldGVfdGFsazogZGVsZXRlX3N1YnBhZ2VfdGFsa3MsXG5cdFx0XHRcdFx0XHRcdGRlbGV0ZV9yZWRpcmVjdHM6IGRlbGV0ZV9zdWJwYWdlX3JlZGlyZWN0cyxcblx0XHRcdFx0XHRcdFx0dW5saW5rX3BhZ2U6IHVubGlua19zdWJwYWdlcyxcblx0XHRcdFx0XHRcdFx0dW5saW5rX2ZpbGU6IGZhbHNlLFxuXHRcdFx0XHRcdFx0XHRyZWFzb24sXG5cdFx0XHRcdFx0XHRcdHBhZ2VEZWxldGVyOiBzdWJwYWdlRGVsZXRlcixcblx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0XHRjb25zdCBxaXV3ZW5fcGFnZSA9IG5ldyBNb3JlYml0cy53aWtpLnBhZ2UoXG5cdFx0XHRcdFx0XHRcdHBhZ2VOYW1lLFxuXHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+ato+WcqOWIoOmZpOWtkOmhtemdoiAnLCAn5q2j5Zyo5Yiq6Zmk5a2Q6aCB6Z2iICcpICsgcGFnZU5hbWVcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRxaXV3ZW5fcGFnZS5zZXRDYWxsYmFja1BhcmFtZXRlcnMocGFyYW1zKTtcblx0XHRcdFx0XHRcdHFpdXdlbl9wYWdlLnNldEVkaXRTdW1tYXJ5KGAke3JlYXNvbn3vvIjmibnph4/vvIlgKTtcblx0XHRcdFx0XHRcdHFpdXdlbl9wYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdFx0XHRcdHFpdXdlbl9wYWdlLnN1cHByZXNzUHJvdGVjdFdhcm5pbmcoKTtcblx0XHRcdFx0XHRcdHFpdXdlbl9wYWdlLmRlbGV0ZVBhZ2UoVHdpbmtsZS5iYXRjaGRlbGV0ZS5jYWxsYmFja3MuZG9FeHRyYXMsIHBhZ2VEZWxldGVyLndvcmtlckZhaWx1cmUpO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0KTtcblx0fTtcblx0VHdpbmtsZS5iYXRjaGRlbGV0ZS5jYWxsYmFja3MgPSB7XG5cdFx0Ly8gdGhpcyBzdHVwaWQgcGFyYW1ldGVyIG5hbWUgaXMgYSB0ZW1wb3JhcnkgdGhpbmcgdW50aWwgSSBpbXBsZW1lbnQgYW4gb3ZlcmhhdWxcblx0XHQvLyBvZiBNb3JlYml0cy53aWtpLiogY2FsbGJhY2sgcGFyYW1ldGVyc1xuXHRcdGRvRXh0cmFzOiAodGhpbmdXaXRoUGFyYW1ldGVycykgPT4ge1xuXHRcdFx0Y29uc3QgcGFyYW1zID0gdGhpbmdXaXRoUGFyYW1ldGVycy5wYXJlbnRcblx0XHRcdFx0PyB0aGluZ1dpdGhQYXJhbWV0ZXJzLnBhcmVudC5nZXRDYWxsYmFja1BhcmFtZXRlcnMoKVxuXHRcdFx0XHQ6IHRoaW5nV2l0aFBhcmFtZXRlcnMuZ2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKCk7XG5cdFx0XHQvLyB0aGUgaW5pdGlhbCBiYXRjaCBvcGVyYXRpb24ncyBqb2IgaXMgdG8gZGVsZXRlIHRoZSBwYWdlLCBhbmQgdGhhdCBoYXNcblx0XHRcdC8vIHN1Y2NlZWRlZCBieSBub3dcblx0XHRcdHBhcmFtcy5wYWdlRGVsZXRlci53b3JrZXJTdWNjZXNzKHRoaW5nV2l0aFBhcmFtZXRlcnMpO1xuXHRcdFx0bGV0IHF1ZXJ5O1xuXHRcdFx0bGV0IHFpdXdlbl9hcGk7XG5cdFx0XHRpZiAocGFyYW1zLnVubGlua19wYWdlKSB7XG5cdFx0XHRcdFR3aW5rbGUuYmF0Y2hkZWxldGUudW5saW5rQ2FjaGUgPSB7fTtcblx0XHRcdFx0cXVlcnkgPSB7XG5cdFx0XHRcdFx0YWN0aW9uOiAncXVlcnknLFxuXHRcdFx0XHRcdGxpc3Q6ICdiYWNrbGlua3MnLFxuXHRcdFx0XHRcdGJsZmlsdGVycmVkaXI6ICdub25yZWRpcmVjdHMnLFxuXHRcdFx0XHRcdGJsbmFtZXNwYWNlOiBbMF0sXG5cdFx0XHRcdFx0Ymx0aXRsZTogcGFyYW1zLnBhZ2UsXG5cdFx0XHRcdFx0YmxsaW1pdDogJ21heCcsIC8vIDUwMCBpcyBtYXggZm9yIG5vcm1hbCB1c2VycywgNTAwMCBmb3IgYm90cyBhbmQgc3lzb3BzXG5cdFx0XHRcdH07XG5cblx0XHRcdFx0cWl1d2VuX2FwaSA9IG5ldyBNb3JlYml0cy53aWtpLmFwaShcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+ato+WcqOiOt+WPlumTvuWFpScsICfmraPlnKjlj5blvpfpgKPlhaUnKSxcblx0XHRcdFx0XHRxdWVyeSxcblx0XHRcdFx0XHRUd2lua2xlLmJhdGNoZGVsZXRlLmNhbGxiYWNrcy51bmxpbmtCYWNrbGlua3NNYWluXG5cdFx0XHRcdCk7XG5cdFx0XHRcdHFpdXdlbl9hcGkucGFyYW1zID0gcGFyYW1zO1xuXHRcdFx0XHRxaXV3ZW5fYXBpLnBvc3QoKTtcblx0XHRcdH1cblx0XHRcdGlmIChwYXJhbXMudW5saW5rX2ZpbGUpIHtcblx0XHRcdFx0cXVlcnkgPSB7XG5cdFx0XHRcdFx0YWN0aW9uOiAncXVlcnknLFxuXHRcdFx0XHRcdGxpc3Q6ICdpbWFnZXVzYWdlJyxcblx0XHRcdFx0XHRpdXRpdGxlOiBwYXJhbXMucGFnZSxcblx0XHRcdFx0XHRpdWxpbWl0OiAnbWF4JywgLy8gNTAwIGlzIG1heCBmb3Igbm9ybWFsIHVzZXJzLCA1MDAwIGZvciBib3RzIGFuZCBzeXNvcHNcblx0XHRcdFx0fTtcblxuXHRcdFx0XHRxaXV3ZW5fYXBpID0gbmV3IE1vcmViaXRzLndpa2kuYXBpKFxuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5q2j5Zyo6I635Y+W5paH5Lu26ZO+5YWlJywgJ+ato+WcqOWPluW+l+aqlOahiOmAo+WFpScpLFxuXHRcdFx0XHRcdHF1ZXJ5LFxuXHRcdFx0XHRcdFR3aW5rbGUuYmF0Y2hkZWxldGUuY2FsbGJhY2tzLnVubGlua0ltYWdlSW5zdGFuY2VzTWFpblxuXHRcdFx0XHQpO1xuXHRcdFx0XHRxaXV3ZW5fYXBpLnBhcmFtcyA9IHBhcmFtcztcblx0XHRcdFx0cWl1d2VuX2FwaS5wb3N0KCk7XG5cdFx0XHR9XG5cdFx0XHRpZiAocGFyYW1zLmRlbGV0ZV9wYWdlKSB7XG5cdFx0XHRcdGlmIChwYXJhbXMuZGVsZXRlX3JlZGlyZWN0cykge1xuXHRcdFx0XHRcdHF1ZXJ5ID0ge1xuXHRcdFx0XHRcdFx0YWN0aW9uOiAncXVlcnknLFxuXHRcdFx0XHRcdFx0dGl0bGVzOiBwYXJhbXMucGFnZSxcblx0XHRcdFx0XHRcdHByb3A6ICdyZWRpcmVjdHMnLFxuXHRcdFx0XHRcdFx0cmRsaW1pdDogJ21heCcsIC8vIDUwMCBpcyBtYXggZm9yIG5vcm1hbCB1c2VycywgNTAwMCBmb3IgYm90cyBhbmQgc3lzb3BzXG5cdFx0XHRcdFx0fTtcblxuXHRcdFx0XHRcdHFpdXdlbl9hcGkgPSBuZXcgTW9yZWJpdHMud2lraS5hcGkoXG5cdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+ato+WcqOiOt+WPlumHjeWumuWQkScsICfmraPlnKjlj5blvpfph43mlrDlsI7lkJEnKSxcblx0XHRcdFx0XHRcdHF1ZXJ5LFxuXHRcdFx0XHRcdFx0VHdpbmtsZS5iYXRjaGRlbGV0ZS5jYWxsYmFja3MuZGVsZXRlUmVkaXJlY3RzTWFpblxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0cWl1d2VuX2FwaS5wYXJhbXMgPSBwYXJhbXM7XG5cdFx0XHRcdFx0cWl1d2VuX2FwaS5wb3N0KCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHBhcmFtcy5kZWxldGVfdGFsaykge1xuXHRcdFx0XHRcdGNvbnN0IHBhZ2VUaXRsZSA9IG13LlRpdGxlLm5ld0Zyb21UZXh0KHBhcmFtcy5wYWdlKTtcblx0XHRcdFx0XHRpZiAocGFnZVRpdGxlICYmIHBhZ2VUaXRsZS5uYW1lc3BhY2UgJSAyID09PSAwICYmIHBhZ2VUaXRsZS5uYW1lc3BhY2UgIT09IDIpIHtcblx0XHRcdFx0XHRcdHBhZ2VUaXRsZS5uYW1lc3BhY2UrKzsgLy8gbm93IHBhZ2VUaXRsZSBpcyB0aGUgdGFsayBwYWdlIHRpdGxlIVxuXHRcdFx0XHRcdFx0cXVlcnkgPSB7XG5cdFx0XHRcdFx0XHRcdGFjdGlvbjogJ3F1ZXJ5Jyxcblx0XHRcdFx0XHRcdFx0dGl0bGVzOiBwYWdlVGl0bGUudG9UZXh0KCksXG5cdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0cWl1d2VuX2FwaSA9IG5ldyBNb3JlYml0cy53aWtpLmFwaShcblx0XHRcdFx0XHRcdFx0d2luZG93LndnVUxTKCfmraPlnKjmo4Dmn6XorqjorrrpobXpnaLmmK/lkKblrZjlnKgnLCAn5q2j5Zyo5qqi5p+l6KiO6KuW6aCB6Z2i5piv5ZCm5a2Y5ZyoJyksXG5cdFx0XHRcdFx0XHRcdHF1ZXJ5LFxuXHRcdFx0XHRcdFx0XHRUd2lua2xlLmJhdGNoZGVsZXRlLmNhbGxiYWNrcy5kZWxldGVUYWxrXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0cWl1d2VuX2FwaS5wYXJhbXMgPSBwYXJhbXM7XG5cdFx0XHRcdFx0XHRxaXV3ZW5fYXBpLnBhcmFtcy50YWxrUGFnZSA9IHBhZ2VUaXRsZS50b1RleHQoKTtcblx0XHRcdFx0XHRcdHFpdXdlbl9hcGkucG9zdCgpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0sXG5cdFx0ZGVsZXRlUmVkaXJlY3RzTWFpbjogKGFwaW9iaikgPT4ge1xuXHRcdFx0Y29uc3QgeG1sID0gYXBpb2JqLnJlc3BvbnNlWE1MO1xuXHRcdFx0Y29uc3QgcGFnZXMgPSAkKHhtbClcblx0XHRcdFx0LmZpbmQoJ3JkJylcblx0XHRcdFx0Lm1hcCgoX2luZGV4LCBlbGVtZW50KSA9PiB7XG5cdFx0XHRcdFx0cmV0dXJuICQoZWxlbWVudCkuYXR0cigndGl0bGUnKTtcblx0XHRcdFx0fSlcblx0XHRcdFx0LmdldCgpO1xuXHRcdFx0aWYgKCFwYWdlcy5sZW5ndGgpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdFx0Y29uc3QgcmVkaXJlY3REZWxldGVyID0gbmV3IE1vcmViaXRzLmJhdGNoT3BlcmF0aW9uKFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ+ato+WcqOWIoOmZpOWIsCAnLCAn5q2j5Zyo5Yiq6Zmk5YiwICcpICtcblx0XHRcdFx0XHRhcGlvYmoucGFyYW1zLnBhZ2UgK1xuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygnIOeahOmHjeWumuWQkScsICcg55qE6YeN5paw5bCO5ZCRJylcblx0XHRcdCk7XG5cdFx0XHRyZWRpcmVjdERlbGV0ZXIuc2V0T3B0aW9uKCdjaHVua1NpemUnLCBUd2lua2xlLmdldFByZWYoJ2JhdGNoQ2h1bmtzJykpO1xuXHRcdFx0cmVkaXJlY3REZWxldGVyLnNldFBhZ2VMaXN0KHBhZ2VzKTtcblx0XHRcdHJlZGlyZWN0RGVsZXRlci5ydW4oKHBhZ2VOYW1lKSA9PiB7XG5cdFx0XHRcdGNvbnN0IHFpdXdlbl9wYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShwYWdlTmFtZSwgd2luZG93LndnVUxTKCfmraPlnKjliKDpmaQgJywgJ+ato+WcqOWIqumZpCAnKSArIHBhZ2VOYW1lKTtcblx0XHRcdFx0cWl1d2VuX3BhZ2Uuc2V0RWRpdFN1bW1hcnkoXG5cdFx0XHRcdFx0YFtbUVc6Q1NEI0c5fEc5XV06ICR7d2luZG93LndnVUxTKCfmjIflkJHlt7LliKDpobXpnaLigJwnLCAn5oyH5ZCR5bey5Yiq6aCB6Z2i44CMJyl9JHthcGlvYmoucGFyYW1zLnBhZ2V9JHt3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn4oCd55qE6YeN5a6a5ZCRJyxcblx0XHRcdFx0XHRcdCfjgI3nmoTph43mlrDlsI7lkJEnXG5cdFx0XHRcdFx0KX1gXG5cdFx0XHRcdCk7XG5cdFx0XHRcdHFpdXdlbl9wYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdFx0cWl1d2VuX3BhZ2UuZGVsZXRlUGFnZShyZWRpcmVjdERlbGV0ZXIud29ya2VyU3VjY2VzcywgcmVkaXJlY3REZWxldGVyLndvcmtlckZhaWx1cmUpO1xuXHRcdFx0fSk7XG5cdFx0fSxcblx0XHRkZWxldGVUYWxrOiAoYXBpb2JqKSA9PiB7XG5cdFx0XHRjb25zdCB4bWwgPSBhcGlvYmoucmVzcG9uc2VYTUw7XG5cdFx0XHRjb25zdCBleGlzdHMgPSAkKHhtbCkuZmluZCgncGFnZTpub3QoW21pc3NpbmddKScpLmxlbmd0aCA+IDA7XG5cdFx0XHRpZiAoIWV4aXN0cykge1xuXHRcdFx0XHQvLyBubyB0YWxrIHBhZ2U7IGZvcmdldCBhYm91dCBpdFxuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRjb25zdCBwYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShcblx0XHRcdFx0YXBpb2JqLnBhcmFtcy50YWxrUGFnZSxcblx0XHRcdFx0d2luZG93LndnVUxTKCfmraPlnKjliKDpmaTpobXpnaIgJywgJ+ato+WcqOWIqumZpOmggemdoiAnKSArXG5cdFx0XHRcdFx0YXBpb2JqLnBhcmFtcy5wYWdlICtcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJyDnmoTorqjorrrpobUnLCAnIOeahOiojuirlumggScpXG5cdFx0XHQpO1xuXHRcdFx0cGFnZS5zZXRFZGl0U3VtbWFyeShcblx0XHRcdFx0YFtbUVc6Q1NEI0c5fEc5XV06ICR7d2luZG93LndnVUxTKCflt7LliKDpobXpnaLigJwnLCAn5bey5Yiq6aCB6Z2i44CMJyl9JHthcGlvYmoucGFyYW1zLnBhZ2V9JHt3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0J+KAneeahFtbSGVscDrorqjorrrpobV86K6o6K666aG1XV0nLFxuXHRcdFx0XHRcdCfjgI3nmoRbW0hlbHA66KiO6KuW6aCBfOiojuirlumggV1dJ1xuXHRcdFx0XHQpfWBcblx0XHRcdCk7XG5cdFx0XHRwYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdHBhZ2UuZGVsZXRlUGFnZSgpO1xuXHRcdH0sXG5cdFx0dW5saW5rQmFja2xpbmtzTWFpbjogKGFwaW9iaikgPT4ge1xuXHRcdFx0Y29uc3QgeG1sID0gYXBpb2JqLnJlc3BvbnNlWE1MO1xuXHRcdFx0Y29uc3QgcGFnZXMgPSAkKHhtbClcblx0XHRcdFx0LmZpbmQoJ2JsJylcblx0XHRcdFx0Lm1hcCgoX2luZGV4LCBlbGVtZW50KSA9PiB7XG5cdFx0XHRcdFx0cmV0dXJuICQoZWxlbWVudCkuYXR0cigndGl0bGUnKTtcblx0XHRcdFx0fSlcblx0XHRcdFx0LmdldCgpO1xuXHRcdFx0aWYgKCFwYWdlcy5sZW5ndGgpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdFx0Y29uc3QgdW5saW5rZXIgPSBuZXcgTW9yZWJpdHMuYmF0Y2hPcGVyYXRpb24oXG5cdFx0XHRcdGDmraPlnKjlj5bmtojliLAgJHthcGlvYmoucGFyYW1zLnBhZ2V9JHt3aW5kb3cud2dVTFMoJyDnmoTpk77lhaUnLCAnIOeahOmAo+WFpScpfWBcblx0XHRcdCk7XG5cdFx0XHR1bmxpbmtlci5zZXRPcHRpb24oJ2NodW5rU2l6ZScsIFR3aW5rbGUuZ2V0UHJlZignYmF0Y2hDaHVua3MnKSk7XG5cdFx0XHR1bmxpbmtlci5zZXRQYWdlTGlzdChwYWdlcyk7XG5cdFx0XHR1bmxpbmtlci5ydW4oKHBhZ2VOYW1lKSA9PiB7XG5cdFx0XHRcdGNvbnN0IHFpdXdlbl9wYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShcblx0XHRcdFx0XHRwYWdlTmFtZSxcblx0XHRcdFx0XHRg5q2j5Zyo5Y+W5raIICR7cGFnZU5hbWV9JHt3aW5kb3cud2dVTFMoJyDkuIrnmoTpk77lhaUnLCAnIOS4iueahOmAo+WFpScpfWBcblx0XHRcdFx0KTtcblx0XHRcdFx0Y29uc3QgcGFyYW1zID0ge1xuXHRcdFx0XHRcdC4uLmFwaW9iai5wYXJhbXMsXG5cdFx0XHRcdH07XG5cdFx0XHRcdHBhcmFtcy50aXRsZSA9IHBhZ2VOYW1lO1xuXHRcdFx0XHRwYXJhbXMudW5saW5rZXIgPSB1bmxpbmtlcjtcblx0XHRcdFx0cWl1d2VuX3BhZ2Uuc2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKHBhcmFtcyk7XG5cdFx0XHRcdHFpdXdlbl9wYWdlLmxvYWQoVHdpbmtsZS5iYXRjaGRlbGV0ZS5jYWxsYmFja3MudW5saW5rQmFja2xpbmtzKTtcblx0XHRcdH0pO1xuXHRcdH0sXG5cdFx0dW5saW5rQmFja2xpbmtzOiAocGFnZW9iaikgPT4ge1xuXHRcdFx0Y29uc3QgcGFyYW1zID0gcGFnZW9iai5nZXRDYWxsYmFja1BhcmFtZXRlcnMoKTtcblx0XHRcdGlmICghcGFnZW9iai5leGlzdHMoKSkge1xuXHRcdFx0XHQvLyB3ZSBwcm9iYWJseSBqdXN0IGRlbGV0ZWQgaXQsIGFzIGEgcmVjdXJzaXZlIGJhY2tsaW5rXG5cdFx0XHRcdHBhcmFtcy51bmxpbmtlci53b3JrZXJTdWNjZXNzKHBhZ2VvYmopO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRsZXQgdGV4dDtcblx0XHRcdGlmIChwYXJhbXMudGl0bGUgaW4gVHdpbmtsZS5iYXRjaGRlbGV0ZS51bmxpbmtDYWNoZSkge1xuXHRcdFx0XHR0ZXh0ID0gVHdpbmtsZS5iYXRjaGRlbGV0ZS51bmxpbmtDYWNoZVtwYXJhbXMudGl0bGVdO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dGV4dCA9IHBhZ2VvYmouZ2V0UGFnZVRleHQoKTtcblx0XHRcdH1cblx0XHRcdGNvbnN0IG9sZF90ZXh0ID0gdGV4dDtcblx0XHRcdGNvbnN0IHFpdXdlbl9wYWdlID0gbmV3IE1vcmViaXRzLndpa2l0ZXh0LnBhZ2UodGV4dCk7XG5cdFx0XHR0ZXh0ID0gcWl1d2VuX3BhZ2UucmVtb3ZlTGluayhwYXJhbXMucGFnZSkuZ2V0VGV4dCgpO1xuXHRcdFx0VHdpbmtsZS5iYXRjaGRlbGV0ZS51bmxpbmtDYWNoZVtwYXJhbXMudGl0bGVdID0gdGV4dDtcblx0XHRcdGlmICh0ZXh0ID09PSBvbGRfdGV4dCkge1xuXHRcdFx0XHQvLyBOb3RoaW5nIHRvIGRvLCByZXR1cm5cblx0XHRcdFx0cGFyYW1zLnVubGlua2VyLndvcmtlclN1Y2Nlc3MocGFnZW9iaik7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdHBhZ2VvYmouc2V0RWRpdFN1bW1hcnkoXG5cdFx0XHRcdHdpbmRvdy53Z1VMUygn5Y+W5raI5Yiw5bey5Yig6aG16Z2iJywgJ+WPlua2iOWIsOW3suWIqumggemdoicpICsgcGFyYW1zLnBhZ2UgKyB3aW5kb3cud2dVTFMoJ+eahOmTvuWFpScsICfnmoTpgKPlhaUnKVxuXHRcdFx0KTtcblx0XHRcdHBhZ2VvYmouc2V0Q2hhbmdlVGFncyhUd2lua2xlLmNoYW5nZVRhZ3MpO1xuXHRcdFx0cGFnZW9iai5zZXRQYWdlVGV4dCh0ZXh0KTtcblx0XHRcdHBhZ2VvYmouc2V0Q3JlYXRlT3B0aW9uKCdub2NyZWF0ZScpO1xuXHRcdFx0cGFnZW9iai5zZXRNYXhDb25mbGljdFJldHJpZXMoMTApO1xuXHRcdFx0cGFnZW9iai5zYXZlKHBhcmFtcy51bmxpbmtlci53b3JrZXJTdWNjZXNzLCBwYXJhbXMudW5saW5rZXIud29ya2VyRmFpbHVyZSk7XG5cdFx0fSxcblx0XHR1bmxpbmtJbWFnZUluc3RhbmNlc01haW46IChhcGlvYmopID0+IHtcblx0XHRcdGNvbnN0IHhtbCA9IGFwaW9iai5yZXNwb25zZVhNTDtcblx0XHRcdGNvbnN0IHBhZ2VzID0gJCh4bWwpXG5cdFx0XHRcdC5maW5kKCdpdScpXG5cdFx0XHRcdC5tYXAoKF9pbmRleCwgZWxlbWVudCkgPT4ge1xuXHRcdFx0XHRcdHJldHVybiAkKGVsZW1lbnQpLmF0dHIoJ3RpdGxlJyk7XG5cdFx0XHRcdH0pXG5cdFx0XHRcdC5nZXQoKTtcblx0XHRcdGlmICghcGFnZXMubGVuZ3RoKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdGNvbnN0IHVubGlua2VyID0gbmV3IE1vcmViaXRzLmJhdGNoT3BlcmF0aW9uKFxuXHRcdFx0XHRg5q2j5Zyo5Y+W5raI5YiwICR7YXBpb2JqLnBhcmFtcy5wYWdlfSR7d2luZG93LndnVUxTKCcg55qE6ZO+5YWlJywgJyDnmoTpgKPlhaUnKX1gXG5cdFx0XHQpO1xuXHRcdFx0dW5saW5rZXIuc2V0T3B0aW9uKCdjaHVua1NpemUnLCBUd2lua2xlLmdldFByZWYoJ2JhdGNoQ2h1bmtzJykpO1xuXHRcdFx0dW5saW5rZXIuc2V0UGFnZUxpc3QocGFnZXMpO1xuXHRcdFx0dW5saW5rZXIucnVuKChwYWdlTmFtZSkgPT4ge1xuXHRcdFx0XHRjb25zdCBxaXV3ZW5fcGFnZSA9IG5ldyBNb3JlYml0cy53aWtpLnBhZ2UoXG5cdFx0XHRcdFx0cGFnZU5hbWUsXG5cdFx0XHRcdFx0YOWPlua2iCAke3BhZ2VOYW1lfSR7d2luZG93LndnVUxTKCcg55qE5paH5Lu25L2/55SoJywgJyDnmoTmqpTmoYjkvb/nlKgnKX1gXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGNvbnN0IHBhcmFtcyA9IHtcblx0XHRcdFx0XHQuLi5hcGlvYmoucGFyYW1zLFxuXHRcdFx0XHR9O1xuXHRcdFx0XHRwYXJhbXMudGl0bGUgPSBwYWdlTmFtZTtcblx0XHRcdFx0cGFyYW1zLnVubGlua2VyID0gdW5saW5rZXI7XG5cdFx0XHRcdHFpdXdlbl9wYWdlLnNldENhbGxiYWNrUGFyYW1ldGVycyhwYXJhbXMpO1xuXHRcdFx0XHRxaXV3ZW5fcGFnZS5sb2FkKFR3aW5rbGUuYmF0Y2hkZWxldGUuY2FsbGJhY2tzLnVubGlua0ltYWdlSW5zdGFuY2VzKTtcblx0XHRcdH0pO1xuXHRcdH0sXG5cdFx0dW5saW5rSW1hZ2VJbnN0YW5jZXM6IChwYWdlb2JqKSA9PiB7XG5cdFx0XHRjb25zdCBwYXJhbXMgPSBwYWdlb2JqLmdldENhbGxiYWNrUGFyYW1ldGVycygpO1xuXHRcdFx0aWYgKCFwYWdlb2JqLmV4aXN0cygpKSB7XG5cdFx0XHRcdC8vIHdlIHByb2JhYmx5IGp1c3QgZGVsZXRlZCBpdCwgYXMgYSByZWN1cnNpdmUgYmFja2xpbmtcblx0XHRcdFx0cGFyYW1zLnVubGlua2VyLndvcmtlclN1Y2Nlc3MocGFnZW9iaik7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdGNvbnN0IGltYWdlID0gcGFyYW1zLnBhZ2UucmVwbGFjZShuZXcgUmVnRXhwKGBeJHtNb3JlYml0cy5uYW1lc3BhY2VSZWdleCg2KX06YCksICcnKTtcblx0XHRcdGxldCB0ZXh0O1xuXHRcdFx0aWYgKHBhcmFtcy50aXRsZSBpbiBUd2lua2xlLmJhdGNoZGVsZXRlLnVubGlua0NhY2hlKSB7XG5cdFx0XHRcdHRleHQgPSBUd2lua2xlLmJhdGNoZGVsZXRlLnVubGlua0NhY2hlW3BhcmFtcy50aXRsZV07XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0ZXh0ID0gcGFnZW9iai5nZXRQYWdlVGV4dCgpO1xuXHRcdFx0fVxuXHRcdFx0Y29uc3Qgb2xkX3RleHQgPSB0ZXh0O1xuXHRcdFx0Y29uc3QgcWl1d2VuX3BhZ2UgPSBuZXcgTW9yZWJpdHMud2lraXRleHQucGFnZSh0ZXh0KTtcblx0XHRcdHRleHQgPSBxaXV3ZW5fcGFnZVxuXHRcdFx0XHQuY29tbWVudE91dEltYWdlKGltYWdlLCB3aW5kb3cud2dVTFMoJ+WboOaWh+S7tuW3suWIoO+8jOaVheazqOinoycsICflm6DmqpTmoYjlt7LliKrvvIzmlYXoqLvop6MnKSlcblx0XHRcdFx0LmdldFRleHQoKTtcblx0XHRcdFR3aW5rbGUuYmF0Y2hkZWxldGUudW5saW5rQ2FjaGVbcGFyYW1zLnRpdGxlXSA9IHRleHQ7XG5cdFx0XHRpZiAodGV4dCA9PT0gb2xkX3RleHQpIHtcblx0XHRcdFx0cGFnZW9ialxuXHRcdFx0XHRcdC5nZXRTdGF0dXNFbGVtZW50KClcblx0XHRcdFx0XHQuZXJyb3IoXG5cdFx0XHRcdFx0XHRg5ZyoICR7cGFnZW9iai5nZXRQYWdlTmFtZSgpfSDkuIrlj5bmtoggJHtpbWFnZX0ke3dpbmRvdy53Z1VMUygnIOeahOaWh+S7tuS9v+eUqOWksei0pScsICcg55qE5qqU5qGI5L2/55So5aSx5pWXJyl9YFxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdHBhcmFtcy51bmxpbmtlci53b3JrZXJGYWlsdXJlKHBhZ2VvYmopO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRwYWdlb2JqLnNldEVkaXRTdW1tYXJ5KFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ+WPlua2iOS9v+eUqOW3suiiq+WIoOmZpOaWh+S7ticsICflj5bmtojkvb/nlKjlt7LooqvliKrpmaTmqpTmoYgnKSArXG5cdFx0XHRcdFx0aW1hZ2UgK1xuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn77yM5Zug5Li677yaJywgJ++8jOWboOeCuu+8micpICtcblx0XHRcdFx0XHRwYXJhbXMucmVhc29uXG5cdFx0XHQpO1xuXHRcdFx0cGFnZW9iai5zZXRDaGFuZ2VUYWdzKFR3aW5rbGUuY2hhbmdlVGFncyk7XG5cdFx0XHRwYWdlb2JqLnNldFBhZ2VUZXh0KHRleHQpO1xuXHRcdFx0cGFnZW9iai5zZXRDcmVhdGVPcHRpb24oJ25vY3JlYXRlJyk7XG5cdFx0XHRwYWdlb2JqLnNldE1heENvbmZsaWN0UmV0cmllcygxMCk7XG5cdFx0XHRwYWdlb2JqLnNhdmUocGFyYW1zLnVubGlua2VyLndvcmtlclN1Y2Nlc3MsIHBhcmFtcy51bmxpbmtlci53b3JrZXJGYWlsdXJlKTtcblx0XHR9LFxuXHR9O1xuXHRUd2lua2xlLmFkZEluaXRDYWxsYmFjayhUd2lua2xlLmJhdGNoZGVsZXRlLCAnYmF0Y2hkZWxldGUnKTtcbn0pKGpRdWVyeSk7XG5cbmV4cG9ydCB7fTtcbiIsICIvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10cy1jb21tZW50XG4vLyBAdHMtbm9jaGVja1xuLyohIFR3aW5rbGUuanMgLSB0d2lua2xlYmF0Y2h1bmRlbGV0ZS5qcyAqL1xuKGZ1bmN0aW9uIHR3aW5rbGViYXRjaHVuZGVsZXRlKCQpIHtcblx0LyoqXG5cdCAqIHR3aW5rbGViYXRjaHVuZGVsZXRlLmpzOiBCYXRjaCB1bmRlbGV0ZSBtb2R1bGVcblx0ICogTW9kZSBvZiBpbnZvY2F0aW9uOiBUYWIgKFwiVW5kLWJhdGNoXCIpXG5cdCAqIEFjdGl2ZSBvbjogRXhpc3RpbmcgdXNlciBhbmQgcHJvamVjdCBwYWdlc1xuXHQgKi9cblx0VHdpbmtsZS5iYXRjaHVuZGVsZXRlID0gKCkgPT4ge1xuXHRcdGlmIChcblx0XHRcdCFNb3JlYml0cy51c2VySXNTeXNvcCB8fFxuXHRcdFx0IW13LmNvbmZpZy5nZXQoJ3dnQXJ0aWNsZUlkJykgfHxcblx0XHRcdChtdy5jb25maWcuZ2V0KCd3Z05hbWVzcGFjZU51bWJlcicpICE9PSBtdy5jb25maWcuZ2V0KCd3Z05hbWVzcGFjZUlkcycpLnVzZXIgJiZcblx0XHRcdFx0bXcuY29uZmlnLmdldCgnd2dOYW1lc3BhY2VOdW1iZXInKSAhPT0gbXcuY29uZmlnLmdldCgnd2dOYW1lc3BhY2VJZHMnKS5wcm9qZWN0KVxuXHRcdCkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRUd2lua2xlLmFkZFBvcnRsZXRMaW5rKFxuXHRcdFx0VHdpbmtsZS5iYXRjaHVuZGVsZXRlLmNhbGxiYWNrLFxuXHRcdFx0d2luZG93LndnVUxTKCfmibnlpI0nLCAn5om55b6pJyksXG5cdFx0XHQndHctYmF0Y2gtdW5kZWwnLFxuXHRcdFx0d2luZG93LndnVUxTKCflj43liKDpmaTpobXpnaInLCAn5Y+N5Yiq6Zmk6aCB6Z2iJylcblx0XHQpO1xuXHR9O1xuXHRUd2lua2xlLmJhdGNodW5kZWxldGUuY2FsbGJhY2sgPSAoKSA9PiB7XG5cdFx0Y29uc3QgV2luZG93ID0gbmV3IE1vcmViaXRzLnNpbXBsZVdpbmRvdyg2MDAsIDQwMCk7XG5cdFx0V2luZG93LnNldFNjcmlwdE5hbWUoJ1R3aW5rbGUnKTtcblx0XHRXaW5kb3cuc2V0VGl0bGUod2luZG93LndnVUxTKCfmibnph4/lj43liKDpmaQnLCAn5om55qyh5Y+N5Yiq6ZmkJykpO1xuXHRcdFdpbmRvdy5hZGRGb290ZXJMaW5rKHdpbmRvdy53Z1VMUygnVHdpbmtsZeW4ruWKqScsICdUd2lua2xl6Kqq5piOJyksICdIOlRXL0RPQyNiYXRjaHVuZGVsZXRlJyk7XG5cdFx0Y29uc3QgZm9ybSA9IG5ldyBNb3JlYml0cy5xdWlja0Zvcm0oVHdpbmtsZS5iYXRjaHVuZGVsZXRlLmNhbGxiYWNrLmV2YWx1YXRlKTtcblx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnY2hlY2tib3gnLFxuXHRcdFx0bGlzdDogW1xuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6Iul5a2Y5Zyo5bey5Yig6Zmk55qE6K6o6K666aG177yM5Lmf5oGi5aSNJywgJ+iLpeWtmOWcqOW3suWIqumZpOeahOiojuirlumgge+8jOS5n+aBouW+qScpLFxuXHRcdFx0XHRcdG5hbWU6ICd1bmRlbF90YWxrJyxcblx0XHRcdFx0XHR2YWx1ZTogJ3VuZGVsX3RhbGsnLFxuXHRcdFx0XHRcdGNoZWNrZWQ6IHRydWUsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0pO1xuXHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRuYW1lOiAncmVhc29uJyxcblx0XHRcdGxhYmVsOiAn55CG55Sx77yaJyxcblx0XHRcdHNpemU6IDYwLFxuXHRcdH0pO1xuXHRcdGNvbnN0IHN0YXR1c2RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXHRcdHN0YXR1c2Rpdi5zdHlsZS5wYWRkaW5nID0gJzE1cHgnOyAvLyBqdXN0IHNvIGl0IGRvZXNuJ3QgbG9vayBicm9rZW5cblx0XHRXaW5kb3cuc2V0Q29udGVudChzdGF0dXNkaXYpO1xuXHRcdE1vcmViaXRzLnN0YXR1cy5pbml0KHN0YXR1c2Rpdik7XG5cdFx0V2luZG93LmRpc3BsYXkoKTtcblx0XHRjb25zdCBxdWVyeSA9IHtcblx0XHRcdGFjdGlvbjogJ3F1ZXJ5Jyxcblx0XHRcdGdlbmVyYXRvcjogJ2xpbmtzJyxcblx0XHRcdHByb3A6ICdpbmZvJyxcblx0XHRcdGlucHJvcDogJ3Byb3RlY3Rpb24nLFxuXHRcdFx0dGl0bGVzOiBtdy5jb25maWcuZ2V0KCd3Z1BhZ2VOYW1lJyksXG5cdFx0XHRncGxsaW1pdDogVHdpbmtsZS5nZXRQcmVmKCdiYXRjaE1heCcpLFxuXHRcdH07XG5cdFx0Y29uc3Qgc3RhdGVsZW0gPSBuZXcgTW9yZWJpdHMuc3RhdHVzKHdpbmRvdy53Z1VMUygn5oqT5Y+W6aG16Z2i5YiX6KGoJywgJ+aKk+WPlumggemdouWIl+ihqCcpKTtcblx0XHRjb25zdCBxaXV3ZW5fYXBpID0gbmV3IE1vcmViaXRzLndpa2kuYXBpKFxuXHRcdFx0d2luZG93LndnVUxTKCfliqDovb3kuK3igKYnLCAn6LyJ5YWl5Lit4oCmJyksXG5cdFx0XHRxdWVyeSxcblx0XHRcdChhcGlvYmopID0+IHtcblx0XHRcdFx0Y29uc3QgeG1sID0gYXBpb2JqLnJlc3BvbnNlWE1MO1xuXHRcdFx0XHRjb25zdCAkcGFnZXMgPSAkKHhtbCkuZmluZCgncGFnZVttaXNzaW5nXScpO1xuXHRcdFx0XHRjb25zdCBsaXN0ID0gW107XG5cdFx0XHRcdCRwYWdlcy5lYWNoKChfaW5kZXgsIHBhZ2UpID0+IHtcblx0XHRcdFx0XHRjb25zdCAkcGFnZSA9ICQocGFnZSk7XG5cdFx0XHRcdFx0Y29uc3QgdGl0bGUgPSAkcGFnZS5hdHRyKCd0aXRsZScpO1xuXHRcdFx0XHRcdGNvbnN0ICRlZGl0cHJvdCA9ICRwYWdlLmZpbmQoJ3ByW3R5cGU9XCJjcmVhdGVcIl1bbGV2ZWw9XCJzeXNvcFwiXScpO1xuXHRcdFx0XHRcdGNvbnN0IGlzUHJvdGVjdGVkID0gJGVkaXRwcm90Lmxlbmd0aCA+IDA7XG5cdFx0XHRcdFx0bGlzdFtsaXN0Lmxlbmd0aF0gPSB7XG5cdFx0XHRcdFx0XHRsYWJlbDpcblx0XHRcdFx0XHRcdFx0dGl0bGUgK1xuXHRcdFx0XHRcdFx0XHQoaXNQcm90ZWN0ZWRcblx0XHRcdFx0XHRcdFx0XHQ/IGDvvIgke3dpbmRvdy53Z1VMUygn5YWo5L+d5oqk77yMJywgJ+WFqOS/neitt++8jCcpfSR7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdCRlZGl0cHJvdC5hdHRyKCdleHBpcnknKSA9PT0gJ2luZmluaXR5J1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdD8gd2luZG93LndnVUxTKCfml6DpmZDmnJ8nLCAn54Sh6ZmQ5pyfJylcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ6IGAke25ldyBNb3JlYml0cy5kYXRlKCRlZGl0cHJvdC5hdHRyKCdleHBpcnknKSkuY2FsZW5kYXIoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdCd1dGMnXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQpfSAoVVRDKSR7d2luZG93LndnVUxTKCfov4fmnJ8nLCAn6YGO5pyfJyl9YFxuXHRcdFx0XHRcdFx0XHRcdFx0fe+8iWBcblx0XHRcdFx0XHRcdFx0XHQ6ICcnKSxcblx0XHRcdFx0XHRcdHZhbHVlOiB0aXRsZSxcblx0XHRcdFx0XHRcdGNoZWNrZWQ6IHRydWUsXG5cdFx0XHRcdFx0XHRzdHlsZTogaXNQcm90ZWN0ZWQgPyAnY29sb3I6ICNmMDAnIDogJycsXG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGFwaW9iai5wYXJhbXMuZm9ybS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdoZWFkZXInLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+W+heaBouWkjemhtemdoicsICflvoXmgaLlvqnpoIHpnaInKSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGFwaW9iai5wYXJhbXMuZm9ybS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdidXR0b24nLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WFqOmAiScsICflhajpgbgnKSxcblx0XHRcdFx0XHRldmVudDogKGUpID0+IHtcblx0XHRcdFx0XHRcdCQoTW9yZWJpdHMucXVpY2tGb3JtLmdldEVsZW1lbnRzKGUudGFyZ2V0LmZvcm0sICdwYWdlcycpKS5wcm9wKCdjaGVja2VkJywgdHJ1ZSk7XG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGFwaW9iai5wYXJhbXMuZm9ybS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdidXR0b24nLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WFqOS4jemAiScsICflhajkuI3pgbgnKSxcblx0XHRcdFx0XHRldmVudDogKGUpID0+IHtcblx0XHRcdFx0XHRcdCQoTW9yZWJpdHMucXVpY2tGb3JtLmdldEVsZW1lbnRzKGUudGFyZ2V0LmZvcm0sICdwYWdlcycpKS5wcm9wKCdjaGVja2VkJywgZmFsc2UpO1xuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRhcGlvYmoucGFyYW1zLmZvcm0uYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnY2hlY2tib3gnLFxuXHRcdFx0XHRcdG5hbWU6ICdwYWdlcycsXG5cdFx0XHRcdFx0c2hpZnRDbGlja1N1cHBvcnQ6IHRydWUsXG5cdFx0XHRcdFx0bGlzdCxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGFwaW9iai5wYXJhbXMuZm9ybS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdzdWJtaXQnLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0Y29uc3QgcmVzdWx0ID0gYXBpb2JqLnBhcmFtcy5mb3JtLnJlbmRlcigpO1xuXHRcdFx0XHRhcGlvYmoucGFyYW1zLldpbmRvdy5zZXRDb250ZW50KHJlc3VsdCk7XG5cdFx0XHR9LFxuXHRcdFx0c3RhdGVsZW1cblx0XHQpO1xuXHRcdHFpdXdlbl9hcGkucGFyYW1zID0ge1xuXHRcdFx0Zm9ybSxcblx0XHRcdFdpbmRvdyxcblx0XHR9O1xuXHRcdHFpdXdlbl9hcGkucG9zdCgpO1xuXHR9O1xuXHRUd2lua2xlLmJhdGNodW5kZWxldGUuY2FsbGJhY2suZXZhbHVhdGUgPSAoZXZlbnQpID0+IHtcblx0XHRNb3JlYml0cy53aWtpLmFjdGlvbkNvbXBsZXRlZC5ub3RpY2UgPSB3aW5kb3cud2dVTFMoJ+WPjeWIoOmZpOW3suWujOaIkCcsICflj43liKrpmaTlt7LlrozmiJAnKTtcblx0XHRjb25zdCBudW1Qcm90ZWN0ZWQgPSAkKE1vcmViaXRzLnF1aWNrRm9ybS5nZXRFbGVtZW50cyhldmVudC50YXJnZXQsICdwYWdlcycpKS5maWx0ZXIoKF9pbmRleCwgZWxlbWVudCkgPT4ge1xuXHRcdFx0cmV0dXJuIGVsZW1lbnQuY2hlY2tlZCAmJiBlbGVtZW50Lm5leHRFbGVtZW50U2libGluZy5zdHlsZS5jb2xvciA9PT0gJ3JlZCc7XG5cdFx0fSkubGVuZ3RoO1xuXHRcdGlmIChcblx0XHRcdG51bVByb3RlY3RlZCA+IDAgJiZcblx0XHRcdCFjb25maXJtKFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ+aCqOato+imgeWPjeWIoOmZpCAnLCAn5oKo5q2j6KaB5Y+N5Yiq6ZmkICcpICtcblx0XHRcdFx0XHRudW1Qcm90ZWN0ZWQgK1xuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygnIOS4quWFqOS/neaKpOmhtemdou+8jOaCqOehruWumuWQl++8nycsICcg5YCL5YWo5L+d6K236aCB6Z2i77yM5oKo56K65a6a5ZeO77yfJylcblx0XHRcdClcblx0XHQpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0Y29uc3QgcGFnZXMgPSBldmVudC50YXJnZXQuZ2V0Q2hlY2tlZCgncGFnZXMnKTtcblx0XHRjb25zdCByZWFzb24gPSBldmVudC50YXJnZXQucmVhc29uLnZhbHVlO1xuXHRcdGNvbnN0IHVuZGVsX3RhbGsgPSBldmVudC50YXJnZXQucmVhc29uLnZhbHVlO1xuXHRcdGlmICghcmVhc29uKSB7XG5cdFx0XHR2b2lkIG13Lm5vdGlmeSgn5oKo6ZyA6KaB5oyH5a6a55CG55Sx44CCJywge1xuXHRcdFx0XHR0eXBlOiAnd2FybicsXG5cdFx0XHRcdHRhZzogJ3R3aW5rbGViYXRjaHVuZGVsZXRlJyxcblx0XHRcdH0pO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRNb3JlYml0cy5zaW1wbGVXaW5kb3cuc2V0QnV0dG9uc0VuYWJsZWQoZmFsc2UpO1xuXHRcdE1vcmViaXRzLnN0YXR1cy5pbml0KGV2ZW50LnRhcmdldCk7XG5cdFx0aWYgKCFwYWdlcykge1xuXHRcdFx0TW9yZWJpdHMuc3RhdHVzLmVycm9yKFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ+mUmeivrycsICfpjK/oqqQnKSxcblx0XHRcdFx0d2luZG93LndnVUxTKCfmsqHku4DkuYjopoHlj43liKDpmaTnmoTvvIzlj5bmtojmk43kvZwnLCAn5rKS5LuA6bq86KaB5Y+N5Yiq6Zmk55qE77yM5Y+W5raI5pON5L2cJylcblx0XHRcdCk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdGNvbnN0IHBhZ2VVbmRlbGV0ZXIgPSBuZXcgTW9yZWJpdHMuYmF0Y2hPcGVyYXRpb24od2luZG93LndnVUxTKCflj43liKDpmaTpobXpnaInLCAn5Y+N5Yiq6Zmk6aCB6Z2iJykpO1xuXHRcdHBhZ2VVbmRlbGV0ZXIuc2V0T3B0aW9uKCdjaHVua1NpemUnLCBUd2lua2xlLmdldFByZWYoJ2JhdGNoQ2h1bmtzJykpO1xuXHRcdHBhZ2VVbmRlbGV0ZXIuc2V0T3B0aW9uKCdwcmVzZXJ2ZUluZGl2aWR1YWxTdGF0dXNMaW5lcycsIHRydWUpO1xuXHRcdHBhZ2VVbmRlbGV0ZXIuc2V0UGFnZUxpc3QocGFnZXMpO1xuXHRcdHBhZ2VVbmRlbGV0ZXIucnVuKChwYWdlTmFtZSkgPT4ge1xuXHRcdFx0Y29uc3QgcGFyYW1zID0ge1xuXHRcdFx0XHRwYWdlOiBwYWdlTmFtZSxcblx0XHRcdFx0dW5kZWxfdGFsayxcblx0XHRcdFx0cmVhc29uLFxuXHRcdFx0XHRwYWdlVW5kZWxldGVyLFxuXHRcdFx0fTtcblx0XHRcdGNvbnN0IHFpdXdlbl9wYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShwYWdlTmFtZSwgd2luZG93LndnVUxTKCflj43liKDpmaTpobXpnaInLCAn5Y+N5Yiq6Zmk6aCB6Z2iJykgKyBwYWdlTmFtZSk7XG5cdFx0XHRxaXV3ZW5fcGFnZS5zZXRDYWxsYmFja1BhcmFtZXRlcnMocGFyYW1zKTtcblx0XHRcdHFpdXdlbl9wYWdlLnNldEVkaXRTdW1tYXJ5KGAke3JlYXNvbn0gKOaJuemHjylgKTtcblx0XHRcdHFpdXdlbl9wYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdHFpdXdlbl9wYWdlLnN1cHByZXNzUHJvdGVjdFdhcm5pbmcoKTtcblx0XHRcdHFpdXdlbl9wYWdlLnNldE1heFJldHJpZXMoMyk7IC8vIHRlbXBvcmFyeSBpbmNyZWFzZSBmcm9tIDIgdG8gbWFrZSBiYXRjaHVuZGVsZXRlIG1vcmUgbGlrZWx5IHRvIHN1Y2NlZWRcblx0XHRcdHFpdXdlbl9wYWdlLnVuZGVsZXRlUGFnZShUd2lua2xlLmJhdGNodW5kZWxldGUuY2FsbGJhY2tzLmRvRXh0cmFzLCBwYWdlVW5kZWxldGVyLndvcmtlckZhaWx1cmUpO1xuXHRcdH0pO1xuXHR9O1xuXHRUd2lua2xlLmJhdGNodW5kZWxldGUuY2FsbGJhY2tzID0ge1xuXHRcdC8vIHRoaXMgc3R1cGlkIHBhcmFtZXRlciBuYW1lIGlzIGEgdGVtcG9yYXJ5IHRoaW5nIHVudGlsIEkgaW1wbGVtZW50IGFuIG92ZXJoYXVsXG5cdFx0Ly8gb2YgTW9yZWJpdHMud2lraS4qIGNhbGxiYWNrIHBhcmFtZXRlcnNcblx0XHRkb0V4dHJhczogKHRoaW5nV2l0aFBhcmFtZXRlcnMpID0+IHtcblx0XHRcdGNvbnN0IHBhcmFtcyA9IHRoaW5nV2l0aFBhcmFtZXRlcnMucGFyZW50XG5cdFx0XHRcdD8gdGhpbmdXaXRoUGFyYW1ldGVycy5wYXJlbnQuZ2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKClcblx0XHRcdFx0OiB0aGluZ1dpdGhQYXJhbWV0ZXJzLmdldENhbGxiYWNrUGFyYW1ldGVycygpO1xuXHRcdFx0Ly8gdGhlIGluaXRpYWwgYmF0Y2ggb3BlcmF0aW9uJ3Mgam9iIGlzIHRvIGRlbGV0ZSB0aGUgcGFnZSwgYW5kIHRoYXQgaGFzXG5cdFx0XHQvLyBzdWNjZWVkZWQgYnkgbm93XG5cdFx0XHRwYXJhbXMucGFnZVVuZGVsZXRlci53b3JrZXJTdWNjZXNzKHRoaW5nV2l0aFBhcmFtZXRlcnMpO1xuXHRcdFx0bGV0IHF1ZXJ5O1xuXHRcdFx0bGV0IHFpdXdlbl9hcGk7XG5cdFx0XHRpZiAocGFyYW1zLnVuZGVsX3RhbGspIHtcblx0XHRcdFx0Y29uc3QgdGFsa3BhZ2VuYW1lID0gbmV3IG13LlRpdGxlKHBhcmFtcy5wYWdlKS5nZXRUYWxrUGFnZSgpLmdldFByZWZpeGVkVGV4dCgpO1xuXHRcdFx0XHRpZiAodGFsa3BhZ2VuYW1lICE9PSBwYXJhbXMucGFnZSkge1xuXHRcdFx0XHRcdHF1ZXJ5ID0ge1xuXHRcdFx0XHRcdFx0YWN0aW9uOiAncXVlcnknLFxuXHRcdFx0XHRcdFx0cHJvcDogJ2RlbGV0ZWRyZXZpc2lvbnMnLFxuXHRcdFx0XHRcdFx0ZHJ2cHJvcDogJ2lkcycsXG5cdFx0XHRcdFx0XHRkcnZsaW1pdDogMSxcblx0XHRcdFx0XHRcdHRpdGxlczogdGFsa3BhZ2VuYW1lLFxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0cWl1d2VuX2FwaSA9IG5ldyBNb3JlYml0cy53aWtpLmFwaShcblx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5qOA5p+l6K6o6K666aG155qE5bey5Yig54mI5pysJywgJ+aqouafpeiojuirlumggeeahOW3suWIqueJiOacrCcpLFxuXHRcdFx0XHRcdFx0cXVlcnksXG5cdFx0XHRcdFx0XHRUd2lua2xlLmJhdGNodW5kZWxldGUuY2FsbGJhY2tzLnVuZGVsZXRlVGFsa1xuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0cWl1d2VuX2FwaS5wYXJhbXMgPSBwYXJhbXM7XG5cdFx0XHRcdFx0cWl1d2VuX2FwaS5wYXJhbXMudGFsa1BhZ2UgPSB0YWxrcGFnZW5hbWU7XG5cdFx0XHRcdFx0cWl1d2VuX2FwaS5wb3N0KCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXHRcdHVuZGVsZXRlVGFsazogKGFwaW9iaikgPT4ge1xuXHRcdFx0Y29uc3QgeG1sID0gYXBpb2JqLnJlc3BvbnNlWE1MO1xuXHRcdFx0Y29uc3QgZXhpc3RzID0gJCh4bWwpLmZpbmQoJ3BhZ2U6bm90KFttaXNzaW5nXSknKS5sZW5ndGggPiAwO1xuXHRcdFx0Y29uc3QgZGVscmV2cyA9ICQoeG1sKS5maW5kKCdyZXYnKS5hdHRyKCdyZXZpZCcpO1xuXHRcdFx0aWYgKGV4aXN0cyB8fCAhZGVscmV2cykge1xuXHRcdFx0XHQvLyBwYWdlIGV4aXN0cyBvciBoYXMgbm8gZGVsZXRlZCByZXZpc2lvbnM7IGZvcmdldCBhYm91dCBpdFxuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRjb25zdCBwYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShcblx0XHRcdFx0YXBpb2JqLnBhcmFtcy50YWxrUGFnZSxcblx0XHRcdFx0d2luZG93LndnVUxTKCfmraPlnKjlj43liKDpmaQnLCAn5q2j5Zyo5Y+N5Yiq6ZmkJykgKyBhcGlvYmoucGFyYW1zLnBhZ2UgKyB3aW5kb3cud2dVTFMoJ+eahOiuqOiuuumhtScsICfnmoToqI7oq5bpoIEnKVxuXHRcdFx0KTtcblx0XHRcdHBhZ2Uuc2V0RWRpdFN1bW1hcnkoXG5cdFx0XHRcdHdpbmRvdy53Z1VMUygn5Y+N5Yig6Zmk4oCcJywgJ+WPjeWIqumZpOOAjCcpICtcblx0XHRcdFx0XHRhcGlvYmoucGFyYW1zLnBhZ2UgK1xuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn4oCd55qEW1tIZWxwOuiuqOiuuumhtXzorqjorrrpobVdXScsICfjgI3nmoRbW0hlbHA66KiO6KuW6aCBfOiojuirlumggV1dJylcblx0XHRcdCk7XG5cdFx0XHRwYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdHBhZ2UudW5kZWxldGVQYWdlKCk7XG5cdFx0fSxcblx0fTtcblx0VHdpbmtsZS5hZGRJbml0Q2FsbGJhY2soVHdpbmtsZS5iYXRjaHVuZGVsZXRlLCAnYmF0Y2h1bmRlbGV0ZScpO1xufSkoalF1ZXJ5KTtcblxuZXhwb3J0IHt9O1xuIiwgIi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXRzLWNvbW1lbnRcbi8vIEB0cy1ub2NoZWNrXG5cbi8qISBUd2lua2xlLmpzIC0gdHdpbmtsZWJhdGNocHJvdGVjdC5qcyAqL1xuKGZ1bmN0aW9uIHR3aW5rbGViYXRjaHByb3RlY3QoJCkge1xuXHQvKipcblx0ICogdHdpbmtsZWJhdGNocHJvdGVjdC5qczogQmF0Y2ggcHJvdGVjdCBtb2R1bGUgKHN5c29wcyBvbmx5KVxuXHQgKiBNb2RlIG9mIGludm9jYXRpb246IFRhYiAoXCJQLWJhdGNoXCIpXG5cdCAqIEFjdGl2ZSBvbjogRXhpc3RpbmcgcHJvamVjdCBwYWdlcyBhbmQgdXNlciBwYWdlcztcblx0ICogZXhpc3RpbmcgYW5kIG5vbi1leGlzdGluZyBjYXRlZ29yaWVzOyBTcGVjaWFsOlByZWZpeEluZGV4XG5cdCAqL1xuXHRUd2lua2xlLmJhdGNocHJvdGVjdCA9ICgpID0+IHtcblx0XHRpZiAoXG5cdFx0XHRNb3JlYml0cy51c2VySXNTeXNvcCAmJlxuXHRcdFx0KChtdy5jb25maWcuZ2V0KCd3Z0FydGljbGVJZCcpID4gMCAmJiBbMiwgNF0uaW5jbHVkZXMobXcuY29uZmlnLmdldCgnd2dOYW1lc3BhY2VOdW1iZXInKSkpIHx8XG5cdFx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlTnVtYmVyJykgPT09IDE0IHx8XG5cdFx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnQ2Fub25pY2FsU3BlY2lhbFBhZ2VOYW1lJykgPT09ICdQcmVmaXhpbmRleCcpXG5cdFx0KSB7XG5cdFx0XHRUd2lua2xlLmFkZFBvcnRsZXRMaW5rKFR3aW5rbGUuYmF0Y2hwcm90ZWN0LmNhbGxiYWNrLCAn5om55L+dJywgJ3R3LXBiYXRjaCcsICfmibnph4/kv53miqTpk77lh7rpobXpnaInKTtcblx0XHR9XG5cdH07XG5cdFR3aW5rbGUuYmF0Y2hwcm90ZWN0LnVubGlua0NhY2hlID0ge307XG5cdFR3aW5rbGUuYmF0Y2hwcm90ZWN0LmNhbGxiYWNrID0gKCkgPT4ge1xuXHRcdGNvbnN0IFdpbmRvdyA9IG5ldyBNb3JlYml0cy5zaW1wbGVXaW5kb3coNjAwLCA0MDApO1xuXHRcdFdpbmRvdy5zZXRUaXRsZSgn5om55L+dJyk7XG5cdFx0V2luZG93LnNldFNjcmlwdE5hbWUoJ1R3aW5rbGUnKTtcblx0XHRXaW5kb3cuYWRkRm9vdGVyTGluaygn5L+d5oqk5pa56ZKIJywgJ1FXOlBST1QnKTtcblx0XHRXaW5kb3cuYWRkRm9vdGVyTGluayh3aW5kb3cud2dVTFMoJ+W4ruWKqeaWh+ahoycsICfluavliqnmlofmqpQnKSwgJ0g6VFcvRE9DI+S/neaKpCcpO1xuXHRcdFdpbmRvdy5hZGRGb290ZXJMaW5rKHdpbmRvdy53Z1VMUygn6Zeu6aKY5Y+N6aaIJywgJ+WVj+mhjOWPjemliycpLCAnSFQ6VFcnKTtcblx0XHRjb25zdCBmb3JtID0gbmV3IE1vcmViaXRzLnF1aWNrRm9ybShUd2lua2xlLmJhdGNocHJvdGVjdC5jYWxsYmFjay5ldmFsdWF0ZSk7XG5cdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdGV2ZW50OiBUd2lua2xlLnByb3RlY3QuZm9ybWV2ZW50cy5lZGl0bW9kaWZ5LFxuXHRcdFx0bGlzdDogW1xuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6ICfkv67mlLnnvJbovpHkv53miqQnLFxuXHRcdFx0XHRcdHZhbHVlOiAnZWRpdG1vZGlmeScsXG5cdFx0XHRcdFx0bmFtZTogJ2VkaXRtb2RpZnknLFxuXHRcdFx0XHRcdHRvb2x0aXA6ICfku4XpmZDnjrDmnInpobXpnaLjgIInLFxuXHRcdFx0XHRcdGNoZWNrZWQ6IHRydWUsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0pO1xuXHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdzZWxlY3QnLFxuXHRcdFx0bmFtZTogJ2VkaXRsZXZlbCcsXG5cdFx0XHRsYWJlbDogJ+e8lui+keadg+mZkO+8micsXG5cdFx0XHRldmVudDogVHdpbmtsZS5wcm90ZWN0LmZvcm1ldmVudHMuZWRpdGxldmVsLFxuXHRcdFx0bGlzdDogVHdpbmtsZS5wcm90ZWN0LnByb3RlY3Rpb25MZXZlbHMsXG5cdFx0fSk7XG5cdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ3NlbGVjdCcsXG5cdFx0XHRuYW1lOiAnZWRpdGV4cGlyeScsXG5cdFx0XHRsYWJlbDogJ+e7iOatouaXtumXtO+8micsXG5cdFx0XHRldmVudDogKGV2ZW50KSA9PiB7XG5cdFx0XHRcdGlmIChldmVudC50YXJnZXQudmFsdWUgPT09ICdjdXN0b20nKSB7XG5cdFx0XHRcdFx0VHdpbmtsZS5wcm90ZWN0LmRvQ3VzdG9tRXhwaXJ5KGV2ZW50LnRhcmdldCk7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRsaXN0OiBUd2lua2xlLnByb3RlY3QucHJvdGVjdGlvbkxlbmd0aHMsIC8vIERlZmF1bHQgKDIgZGF5cykgc2V0IGFmdGVyIHJlbmRlclxuXHRcdH0pO1xuXHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRldmVudDogVHdpbmtsZS5wcm90ZWN0LmZvcm1ldmVudHMubW92ZW1vZGlmeSxcblx0XHRcdGxpc3Q6IFtcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGxhYmVsOiAn5L+u5pS556e75Yqo5L+d5oqkJyxcblx0XHRcdFx0XHR2YWx1ZTogJ21vdmVtb2RpZnknLFxuXHRcdFx0XHRcdG5hbWU6ICdtb3ZlbW9kaWZ5Jyxcblx0XHRcdFx0XHR0b29sdGlwOiAn5LuF6ZmQ546w5pyJ6aG16Z2i44CCJyxcblx0XHRcdFx0XHRjaGVja2VkOiB0cnVlLFxuXHRcdFx0XHR9LFxuXHRcdFx0XSxcblx0XHR9KTtcblx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnc2VsZWN0Jyxcblx0XHRcdG5hbWU6ICdtb3ZlbGV2ZWwnLFxuXHRcdFx0bGFiZWw6ICfnp7vliqjmnYPpmZDvvJonLFxuXHRcdFx0ZXZlbnQ6IFR3aW5rbGUucHJvdGVjdC5mb3JtZXZlbnRzLm1vdmVsZXZlbCxcblx0XHRcdGxpc3Q6IFR3aW5rbGUucHJvdGVjdC5wcm90ZWN0aW9uTGV2ZWxzLmZpbHRlcihcblx0XHRcdFx0Ly8gQXV0b2NvbmZpcm1lZCBpcyByZXF1aXJlZCBmb3IgYSBtb3ZlLCByZWR1bmRhbnRcblx0XHRcdFx0KHByb3RMZXZlbCkgPT4ge1xuXHRcdFx0XHRcdHJldHVybiBwcm90TGV2ZWwudmFsdWUgIT09ICdhdXRvY29uZmlybWVkJztcblx0XHRcdFx0fVxuXHRcdFx0KSxcblx0XHR9KTtcblx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnc2VsZWN0Jyxcblx0XHRcdG5hbWU6ICdtb3ZlZXhwaXJ5Jyxcblx0XHRcdGxhYmVsOiAn57uI5q2i5pe26Ze077yaJyxcblx0XHRcdGV2ZW50OiAoZXZlbnQpID0+IHtcblx0XHRcdFx0aWYgKGV2ZW50LnRhcmdldC52YWx1ZSA9PT0gJ2N1c3RvbScpIHtcblx0XHRcdFx0XHRUd2lua2xlLnByb3RlY3QuZG9DdXN0b21FeHBpcnkoZXZlbnQudGFyZ2V0KTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdGxpc3Q6IFR3aW5rbGUucHJvdGVjdC5wcm90ZWN0aW9uTGVuZ3RocywgLy8gRGVmYXVsdCAoMiBkYXlzKSBzZXQgYWZ0ZXIgcmVuZGVyXG5cdFx0fSk7XG5cdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ2NoZWNrYm94Jyxcblx0XHRcdGV2ZW50OiAoZXZlbnQpID0+IHtcblx0XHRcdFx0ZXZlbnQudGFyZ2V0LmZvcm0uY3JlYXRlbGV2ZWwuZGlzYWJsZWQgPSAhZXZlbnQudGFyZ2V0LmNoZWNrZWQ7XG5cdFx0XHRcdGV2ZW50LnRhcmdldC5mb3JtLmNyZWF0ZWV4cGlyeS5kaXNhYmxlZCA9XG5cdFx0XHRcdFx0IWV2ZW50LnRhcmdldC5jaGVja2VkIHx8IGV2ZW50LnRhcmdldC5mb3JtLmNyZWF0ZWxldmVsLnZhbHVlID09PSAnYWxsJztcblx0XHRcdFx0ZXZlbnQudGFyZ2V0LmZvcm0uY3JlYXRlbGV2ZWwuc3R5bGUuY29sb3IgPSBldmVudC50YXJnZXQuY2hlY2tlZCA/ICcnIDogJ3RyYW5zcGFyZW50Jztcblx0XHRcdFx0ZXZlbnQudGFyZ2V0LmZvcm0uY3JlYXRlZXhwaXJ5LnN0eWxlLmNvbG9yID0gZXZlbnQudGFyZ2V0LmNoZWNrZWQgPyAnJyA6ICd0cmFuc3BhcmVudCc7XG5cdFx0XHR9LFxuXHRcdFx0bGlzdDogW1xuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6ICfkv67mlLnliJvlu7rkv53miqQnLFxuXHRcdFx0XHRcdHZhbHVlOiAnY3JlYXRlbW9kaWZ5Jyxcblx0XHRcdFx0XHRuYW1lOiAnY3JlYXRlbW9kaWZ5Jyxcblx0XHRcdFx0XHR0b29sdGlwOiAn5LuF6ZmQ5LiN5a2Y5Zyo55qE6aG16Z2i44CCJyxcblx0XHRcdFx0XHRjaGVja2VkOiB0cnVlLFxuXHRcdFx0XHR9LFxuXHRcdFx0XSxcblx0XHR9KTtcblx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnc2VsZWN0Jyxcblx0XHRcdG5hbWU6ICdjcmVhdGVsZXZlbCcsXG5cdFx0XHRsYWJlbDogJ+WIm+W7uuadg+mZkO+8micsXG5cdFx0XHRldmVudDogVHdpbmtsZS5wcm90ZWN0LmZvcm1ldmVudHMuY3JlYXRlbGV2ZWwsXG5cdFx0XHRsaXN0OiBUd2lua2xlLnByb3RlY3QucHJvdGVjdGlvbkxldmVscyxcblx0XHR9KTtcblx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnc2VsZWN0Jyxcblx0XHRcdG5hbWU6ICdjcmVhdGVleHBpcnknLFxuXHRcdFx0bGFiZWw6ICfnu4jmraLml7bpl7TvvJonLFxuXHRcdFx0ZXZlbnQ6IChldmVudCkgPT4ge1xuXHRcdFx0XHRpZiAoZXZlbnQudGFyZ2V0LnZhbHVlID09PSAnY3VzdG9tJykge1xuXHRcdFx0XHRcdFR3aW5rbGUucHJvdGVjdC5kb0N1c3RvbUV4cGlyeShldmVudC50YXJnZXQpO1xuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXHRcdFx0bGlzdDogVHdpbmtsZS5wcm90ZWN0LnByb3RlY3Rpb25MZW5ndGhzLCAvLyBEZWZhdWx0IChpbmRlZmluaXRlKSBzZXQgYWZ0ZXIgcmVuZGVyXG5cdFx0fSk7XG5cdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ2hlYWRlcicsXG5cdFx0XHRsYWJlbDogJycsIC8vIGhvcml6b250YWwgcnVsZVxuXHRcdH0pO1xuXHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdpbnB1dCcsXG5cdFx0XHRuYW1lOiAncmVhc29uJyxcblx0XHRcdGxhYmVsOiAn55CG55Sx77yI5L+d5oqk5pel5b+X77yJJyxcblx0XHRcdHNpemU6IDYwLFxuXHRcdH0pO1xuXHRcdGNvbnN0IHF1ZXJ5ID0ge1xuXHRcdFx0YWN0aW9uOiAncXVlcnknLFxuXHRcdFx0cHJvcDogJ3JldmlzaW9uc3xpbmZvfGltYWdlaW5mbycsXG5cdFx0XHRydnByb3A6ICdzaXplfHVzZXInLFxuXHRcdFx0aW5wcm9wOiAncHJvdGVjdGlvbicsXG5cdFx0XHRmb3JtYXQ6ICdqc29uJyxcblx0XHR9O1xuXHRcdGlmIChtdy5jb25maWcuZ2V0KCd3Z05hbWVzcGFjZU51bWJlcicpID09PSAxNCkge1xuXHRcdFx0Ly8gY2F0ZWdvcmllc1xuXHRcdFx0cXVlcnkuZ2VuZXJhdG9yID0gJ2NhdGVnb3J5bWVtYmVycyc7XG5cdFx0XHRxdWVyeS5nY210aXRsZSA9IG13LmNvbmZpZy5nZXQoJ3dnUGFnZU5hbWUnKTtcblx0XHRcdHF1ZXJ5LmdjbWxpbWl0ID0gVHdpbmtsZS5nZXRQcmVmKCdiYXRjaE1heCcpO1xuXHRcdH0gZWxzZSBpZiAobXcuY29uZmlnLmdldCgnd2dDYW5vbmljYWxTcGVjaWFsUGFnZU5hbWUnKSA9PT0gJ1ByZWZpeGluZGV4Jykge1xuXHRcdFx0cXVlcnkuZ2VuZXJhdG9yID0gJ2FsbHBhZ2VzJztcblx0XHRcdHF1ZXJ5LmdhcG5hbWVzcGFjZSA9XG5cdFx0XHRcdG13LnV0aWwuZ2V0UGFyYW1WYWx1ZSgnbmFtZXNwYWNlJykgfHwgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnc2VsZWN0W25hbWU9bmFtZXNwYWNlXScpWzBdLnZhbHVlO1xuXHRcdFx0cXVlcnkuZ2FwcHJlZml4ID1cblx0XHRcdFx0bXcudXRpbC5nZXRQYXJhbVZhbHVlKCdwcmVmaXgnKSB8fCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dFtuYW1lPXByZWZpeF0nKVswXS52YWx1ZTtcblx0XHRcdHF1ZXJ5LmdhcGxpbWl0ID0gVHdpbmtsZS5nZXRQcmVmKCdiYXRjaE1heCcpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRxdWVyeS5nZW5lcmF0b3IgPSAnbGlua3MnO1xuXHRcdFx0cXVlcnkudGl0bGVzID0gbXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpO1xuXHRcdFx0cXVlcnkuZ3BsbGltaXQgPSBUd2lua2xlLmdldFByZWYoJ2JhdGNoTWF4Jyk7XG5cdFx0fVxuXHRcdGNvbnN0IHN0YXR1c2RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXHRcdHN0YXR1c2Rpdi5zdHlsZS5wYWRkaW5nID0gJzE1cHgnOyAvLyBqdXN0IHNvIGl0IGRvZXNuJ3QgbG9vayBicm9rZW5cblx0XHRXaW5kb3cuc2V0Q29udGVudChzdGF0dXNkaXYpO1xuXHRcdE1vcmViaXRzLnN0YXR1cy5pbml0KHN0YXR1c2Rpdik7XG5cdFx0V2luZG93LmRpc3BsYXkoKTtcblx0XHRjb25zdCBzdGF0ZWxlbSA9IG5ldyBNb3JlYml0cy5zdGF0dXMoJ+aKk+WPlumhtemdouWIl+ihqCcpO1xuXHRcdGNvbnN0IHFpdXdlbl9hcGkgPSBuZXcgTW9yZWJpdHMud2lraS5hcGkoXG5cdFx0XHQn5Yqg6L295Lit4oCm4oCmJyxcblx0XHRcdHF1ZXJ5LFxuXHRcdFx0KGFwaW9iaikgPT4ge1xuXHRcdFx0XHRjb25zdCByZXNwb25zZSA9IGFwaW9iai5nZXRSZXNwb25zZSgpO1xuXHRcdFx0XHRjb25zdCBwYWdlcyA9IChyZXNwb25zZS5xdWVyeSAmJiByZXNwb25zZS5xdWVyeS5wYWdlcykgfHwgW107XG5cdFx0XHRcdGNvbnN0IGxpc3QgPSBbXTtcblx0XHRcdFx0cGFnZXMuc29ydChUd2lua2xlLnNvcnRCeU5hbWVzcGFjZSk7XG5cdFx0XHRcdGZvciAoY29uc3QgcGFnZSBvZiBwYWdlcykge1xuXHRcdFx0XHRcdGNvbnN0IG1ldGFkYXRhID0gW107XG5cdFx0XHRcdFx0Y29uc3QgbWlzc2luZyA9ICEhcGFnZS5taXNzaW5nO1xuXHRcdFx0XHRcdGxldCBlZGl0UHJvdDtcblx0XHRcdFx0XHRpZiAobWlzc2luZykge1xuXHRcdFx0XHRcdFx0bWV0YWRhdGFbbWV0YWRhdGEubGVuZ3RoXSA9ICfpobXpnaLkuI3lrZjlnKgnO1xuXHRcdFx0XHRcdFx0ZWRpdFByb3QgPSBwYWdlLnByb3RlY3Rpb24uZmluZExhc3QoKHByb3RlY3Rpb24pID0+IHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHByb3RlY3Rpb24udHlwZSA9PT0gJ2NyZWF0ZScgJiYgcHJvdGVjdGlvbi5sZXZlbCA9PT0gJ3N5c29wJztcblx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRpZiAocGFnZS5yZWRpcmVjdCkge1xuXHRcdFx0XHRcdFx0XHRtZXRhZGF0YVttZXRhZGF0YS5sZW5ndGhdID0gJ+mHjeWumuWQkSc7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZiAocGFnZS5ucyA9PT0gNikge1xuXHRcdFx0XHRcdFx0XHRtZXRhZGF0YVttZXRhZGF0YS5sZW5ndGhdID1cblx0XHRcdFx0XHRcdFx0XHQoYOS4iuS8oOiAhe+8miR7cGFnZS5pbWFnZWluZm9bMF0udXNlcn1gLCBg5pyA5ZCO57yW6L6R6ICF77yaJHtwYWdlLnJldmlzaW9uc1swXS51c2VyfWApO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0bWV0YWRhdGFbbWV0YWRhdGEubGVuZ3RoXSA9IGAke213Lmxhbmd1YWdlLmNvbnZlcnROdW1iZXIocGFnZS5yZXZpc2lvbnNbMF0uc2l6ZSl95a2X6IqCYDtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGVkaXRQcm90ID0gcGFnZS5wcm90ZWN0aW9uLmZpbmRMYXN0KChwcm90ZWN0aW9uKSA9PiB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBwcm90ZWN0aW9uLnR5cGUgPT09ICdlZGl0JyAmJiBwcm90ZWN0aW9uLmxldmVsID09PSAnc3lzb3AnO1xuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmIChlZGl0UHJvdCkge1xuXHRcdFx0XHRcdFx0bWV0YWRhdGFbbWV0YWRhdGEubGVuZ3RoXSA9IGAke21pc3NpbmcgPyAn55m957q4JyA6ICcnfeWFqOS/neaKpCR7XG5cdFx0XHRcdFx0XHRcdGVkaXRQcm90LmV4cGlyeSA9PT0gJ2luZmluaXR5J1xuXHRcdFx0XHRcdFx0XHRcdD8gJ++8iOawuOS5he+8iSdcblx0XHRcdFx0XHRcdFx0XHQ6IGDvvIgke25ldyBNb3JlYml0cy5kYXRlKGVkaXRQcm90LmV4cGlyeSkuY2FsZW5kYXIoJ3V0YycpfSAoVVRDKei/h+acn++8iWBcblx0XHRcdFx0XHRcdH1gO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRjb25zdCB7dGl0bGV9ID0gcGFnZTtcblx0XHRcdFx0XHRsaXN0W2xpc3QubGVuZ3RoXSA9IHtcblx0XHRcdFx0XHRcdGxhYmVsOiB0aXRsZSArIChtZXRhZGF0YS5sZW5ndGggPiAwID8gYCAoJHttZXRhZGF0YS5qb2luKCc7ICcpfSlgIDogJycpLFxuXHRcdFx0XHRcdFx0dmFsdWU6IHRpdGxlLFxuXHRcdFx0XHRcdFx0Y2hlY2tlZDogdHJ1ZSxcblx0XHRcdFx0XHRcdHN0eWxlOiBlZGl0UHJvdCA/ICdjb2xvcjogI2YwMCcgOiAnJyxcblx0XHRcdFx0XHR9O1xuXHRcdFx0XHR9XG5cdFx0XHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdFx0XHR0eXBlOiAnaGVhZGVyJyxcblx0XHRcdFx0XHRsYWJlbDogJ+W+heS/neaKpOmhtemdoicsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2J1dHRvbicsXG5cdFx0XHRcdFx0bGFiZWw6ICflhajpgIknLFxuXHRcdFx0XHRcdGV2ZW50OiAoZXZlbnQpID0+IHtcblx0XHRcdFx0XHRcdCQoTW9yZWJpdHMucXVpY2tGb3JtLmdldEVsZW1lbnRzKGV2ZW50LnRhcmdldC5mb3JtLCAncGFnZXMnKSkucHJvcCgnY2hlY2tlZCcsIHRydWUpO1xuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHRcdFx0dHlwZTogJ2J1dHRvbicsXG5cdFx0XHRcdFx0bGFiZWw6ICflhajkuI3pgIknLFxuXHRcdFx0XHRcdGV2ZW50OiAoZXZlbnQpID0+IHtcblx0XHRcdFx0XHRcdCQoTW9yZWJpdHMucXVpY2tGb3JtLmdldEVsZW1lbnRzKGV2ZW50LnRhcmdldC5mb3JtLCAncGFnZXMnKSkucHJvcCgnY2hlY2tlZCcsIGZhbHNlKTtcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdFx0bmFtZTogJ3BhZ2VzJyxcblx0XHRcdFx0XHRzaGlmdENsaWNrU3VwcG9ydDogdHJ1ZSxcblx0XHRcdFx0XHRsaXN0LFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0XHRcdHR5cGU6ICdzdWJtaXQnLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0Y29uc3QgcmVzdWx0ID0gZm9ybS5yZW5kZXIoKTtcblx0XHRcdFx0V2luZG93LnNldENvbnRlbnQocmVzdWx0KTtcblx0XHRcdFx0Ly8gU2V0IGRlZmF1bHRzXG5cdFx0XHRcdHJlc3VsdC5lZGl0ZXhwaXJ5LnZhbHVlID0gJzIgZGF5cyc7XG5cdFx0XHRcdHJlc3VsdC5tb3ZlZXhwaXJ5LnZhbHVlID0gJzIgZGF5cyc7XG5cdFx0XHRcdHJlc3VsdC5jcmVhdGVleHBpcnkudmFsdWUgPSAnaW5maW5pdHknO1xuXHRcdFx0XHRmb3IgKGNvbnN0IGxpbmtzIG9mIE1vcmViaXRzLnF1aWNrRm9ybS5nZXRFbGVtZW50cyhyZXN1bHQsICfkuKrpobXpnaInKSkge1xuXHRcdFx0XHRcdFR3aW5rbGUuZ2VuZXJhdGVBcnJvd0xpbmtzKGxpbmtzKTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdHN0YXRlbGVtXG5cdFx0KTtcblx0XHRxaXV3ZW5fYXBpLnBvc3QoKTtcblx0fTtcblx0VHdpbmtsZS5iYXRjaHByb3RlY3QuY3VycmVudFByb3RlY3RDb3VudGVyID0gMDtcblx0VHdpbmtsZS5iYXRjaHByb3RlY3QuY3VycmVudHByb3RlY3RvciA9IDA7XG5cdFR3aW5rbGUuYmF0Y2hwcm90ZWN0LmNhbGxiYWNrLmV2YWx1YXRlID0gKGV2ZW50KSA9PiB7XG5cdFx0TW9yZWJpdHMud2lraS5hY3Rpb25Db21wbGV0ZWQubm90aWNlID0gJ+aJuemHj+S/neaKpOWujOaIkCc7XG5cdFx0Y29uc3QgZm9ybSA9IGV2ZW50LnRhcmdldDtcblx0XHRjb25zdCBudW1Qcm90ZWN0ZWQgPSAkKE1vcmViaXRzLnF1aWNrRm9ybS5nZXRFbGVtZW50cyhmb3JtLCAn5Liq6aG16Z2iJykpLmZpbHRlcigoX2luZGV4LCBlbGVtZW50KSA9PiB7XG5cdFx0XHRyZXR1cm4gZWxlbWVudC5jaGVja2VkICYmIGVsZW1lbnQubmV4dEVsZW1lbnRTaWJsaW5nLnN0eWxlLmNvbG9yID09PSAnI2YwMCc7XG5cdFx0fSkubGVuZ3RoO1xuXHRcdGlmIChcblx0XHRcdG51bVByb3RlY3RlZCA+IDAgJiZcblx0XHRcdCFjb25maXJtKGDmgqjljbPlsIblr7kke213Lmxhbmd1YWdlLmNvbnZlcnROdW1iZXIobnVtUHJvdGVjdGVkKX3kuKrlhajkv53miqTpobXpnaLov5vooYzmk43kvZzjgILmgqjnoa7lrprlkJfvvJ9gKVxuXHRcdCkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRjb25zdCBpbnB1dCA9IE1vcmViaXRzLnF1aWNrRm9ybS5nZXRJbnB1dERhdGEoZm9ybSk7XG5cdFx0aWYgKCFpbnB1dC5yZWFzb24pIHtcblx0XHRcdHZvaWQgbXcubm90aWZ5KCfmgqjlv4Xpobvnu5nlh7rkuIDkuKrnkIbnlLHjgIInLCB7XG5cdFx0XHRcdHR5cGU6ICd3YXJuJyxcblx0XHRcdFx0dGFnOiAndHdpbmtsZWJhdGNocHJvdGVjdCcsXG5cdFx0XHR9KTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0TW9yZWJpdHMuc2ltcGxlV2luZG93LnNldEJ1dHRvbnNFbmFibGVkKGZhbHNlKTtcblx0XHRNb3JlYml0cy5zdGF0dXMuaW5pdChmb3JtKTtcblx0XHRpZiAoaW5wdXQucGFnZXMubGVuZ3RoID09PSAwKSB7XG5cdFx0XHRNb3JlYml0cy5zdGF0dXMuZXJyb3IoJ0Vycm9yJywgJ+W+heS/neaKpOmhtemdouS4jeWtmOWcqO+8jOeoi+W6j+e7iOatoicpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRjb25zdCBiYXRjaE9wZXJhdGlvbiA9IG5ldyBNb3JlYml0cy5iYXRjaE9wZXJhdGlvbign5bqU55So5L+d5oqk6K6+572uJyk7XG5cdFx0YmF0Y2hPcGVyYXRpb24uc2V0T3B0aW9uKCdjaHVua1NpemUnLCBUd2lua2xlLmdldFByZWYoJ2JhdGNoQ2h1bmtzJykpO1xuXHRcdGJhdGNoT3BlcmF0aW9uLnNldE9wdGlvbigncHJlc2VydmVJbmRpdmlkdWFsU3RhdHVzTGluZXMnLCB0cnVlKTtcblx0XHRiYXRjaE9wZXJhdGlvbi5zZXRQYWdlTGlzdChpbnB1dC5wYWdlcyk7XG5cdFx0YmF0Y2hPcGVyYXRpb24ucnVuKChwYWdlTmFtZSkgPT4ge1xuXHRcdFx0Y29uc3QgcXVlcnkgPSB7XG5cdFx0XHRcdGFjdGlvbjogJ3F1ZXJ5Jyxcblx0XHRcdFx0dGl0bGVzOiBwYWdlTmFtZSxcblx0XHRcdFx0Zm9ybWF0OiAnanNvbicsXG5cdFx0XHR9O1xuXHRcdFx0Y29uc3QgcWl1d2VuX2FwaSA9IG5ldyBNb3JlYml0cy53aWtpLmFwaShcblx0XHRcdFx0YOato+WcqOajgOafpemhtemdouKAnCR7cGFnZU5hbWV94oCd5piv5ZCm5a2Y5ZyoYCxcblx0XHRcdFx0cXVlcnksXG5cdFx0XHRcdFR3aW5rbGUuYmF0Y2hwcm90ZWN0LmNhbGxiYWNrcy5tYWluLFxuXHRcdFx0XHRudWxsLFxuXHRcdFx0XHRiYXRjaE9wZXJhdGlvbi53b3JrZXJGYWlsdXJlXG5cdFx0XHQpO1xuXHRcdFx0cWl1d2VuX2FwaS5wYXJhbXMgPSB7XG5cdFx0XHRcdHBhZ2U6IHBhZ2VOYW1lLFxuXHRcdFx0XHRiYXRjaE9wZXJhdGlvbixcblx0XHRcdFx0Li4uaW5wdXQsXG5cdFx0XHR9O1xuXHRcdFx0cWl1d2VuX2FwaS5wb3N0KCk7XG5cdFx0fSk7XG5cdH07XG5cdFR3aW5rbGUuYmF0Y2hwcm90ZWN0LmNhbGxiYWNrcyA9IHtcblx0XHRtYWluOiAoYXBpb2JqKSA9PiB7XG5cdFx0XHRjb25zdCByZXNwb25zZSA9IGFwaW9iai5nZXRSZXNwb25zZSgpO1xuXHRcdFx0aWYgKHJlc3BvbnNlLnF1ZXJ5Lm5vcm1hbGl6ZWQpIHtcblx0XHRcdFx0YXBpb2JqLnBhcmFtcy5wYWdlID0gcmVzcG9uc2UucXVlcnkubm9ybWFsaXplZFswXS50bztcblx0XHRcdH1cblx0XHRcdGNvbnN0IGV4aXN0cyA9ICFyZXNwb25zZS5xdWVyeS5wYWdlc1swXS5taXNzaW5nO1xuXHRcdFx0Y29uc3QgcGFnZSA9IG5ldyBNb3JlYml0cy53aWtpLnBhZ2UoYXBpb2JqLnBhcmFtcy5wYWdlLCBg5q2j5Zyo5L+d5oqkJHthcGlvYmoucGFyYW1zLnBhZ2V9YCk7XG5cdFx0XHRsZXQgdGFrZW5BY3Rpb24gPSBmYWxzZTtcblx0XHRcdGlmIChleGlzdHMgJiYgYXBpb2JqLnBhcmFtcy5lZGl0bW9kaWZ5KSB7XG5cdFx0XHRcdHBhZ2Uuc2V0RWRpdFByb3RlY3Rpb24oYXBpb2JqLnBhcmFtcy5lZGl0bGV2ZWwsIGFwaW9iai5wYXJhbXMuZWRpdGV4cGlyeSk7XG5cdFx0XHRcdHRha2VuQWN0aW9uID0gdHJ1ZTtcblx0XHRcdH1cblx0XHRcdGlmIChleGlzdHMgJiYgYXBpb2JqLnBhcmFtcy5tb3ZlbW9kaWZ5KSB7XG5cdFx0XHRcdHBhZ2Uuc2V0TW92ZVByb3RlY3Rpb24oYXBpb2JqLnBhcmFtcy5tb3ZlbGV2ZWwsIGFwaW9iai5wYXJhbXMubW92ZWV4cGlyeSk7XG5cdFx0XHRcdHRha2VuQWN0aW9uID0gdHJ1ZTtcblx0XHRcdH1cblx0XHRcdGlmICghZXhpc3RzICYmIGFwaW9iai5wYXJhbXMuY3JlYXRlbW9kaWZ5KSB7XG5cdFx0XHRcdHBhZ2Uuc2V0Q3JlYXRlUHJvdGVjdGlvbihhcGlvYmoucGFyYW1zLmNyZWF0ZWxldmVsLCBhcGlvYmoucGFyYW1zLmNyZWF0ZWV4cGlyeSk7XG5cdFx0XHRcdHRha2VuQWN0aW9uID0gdHJ1ZTtcblx0XHRcdH1cblx0XHRcdGlmICghdGFrZW5BY3Rpb24pIHtcblx0XHRcdFx0TW9yZWJpdHMuc3RhdHVzLndhcm4oXG5cdFx0XHRcdFx0YOato+WcqOS/neaKpOKAnCR7YXBpb2JqLnBhcmFtcy5wYWdlfWAsXG5cdFx0XHRcdFx0YOKAnemhtemdoiR7ZXhpc3RzID8gJ+WtmOWcqCcgOiAn5LiN5a2Y5ZyoJ33vvJvml6Dkuovlj6/lgZrvvIzot7Pov4dgXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGFwaW9iai5wYXJhbXMuYmF0Y2hPcGVyYXRpb24ud29ya2VyRmFpbHVyZShhcGlvYmopO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRwYWdlLnNldEVkaXRTdW1tYXJ5KGFwaW9iai5wYXJhbXMucmVhc29uKTtcblx0XHRcdHBhZ2Uuc2V0Q2hhbmdlVGFncyhUd2lua2xlLmNoYW5nZVRhZ3MpO1xuXHRcdFx0cGFnZS5wcm90ZWN0KGFwaW9iai5wYXJhbXMuYmF0Y2hPcGVyYXRpb24ud29ya2VyU3VjY2VzcywgYXBpb2JqLnBhcmFtcy5iYXRjaE9wZXJhdGlvbi53b3JrZXJGYWlsdXJlKTtcblx0XHR9LFxuXHR9O1xuXHRUd2lua2xlLmFkZEluaXRDYWxsYmFjayhUd2lua2xlLmJhdGNocHJvdGVjdCwgJ2JhdGNocHJvdGVjdCcpO1xufSkoalF1ZXJ5KTtcblxuZXhwb3J0IHt9O1xuIiwgIi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXRzLWNvbW1lbnRcbi8vIEB0cy1ub2NoZWNrXG5cbi8qISBUd2lua2xlLmpzIC0gdHdpbmtsZWNsb3NlLmpzICovXG4oZnVuY3Rpb24gdHdpbmtsZWNsb3NlKCQpIHtcblx0Y29uc3QgJGJvZHkgPSAkKCdib2R5Jyk7XG5cdC8qKlxuXHQgKiB0d2lua2xlY2xvc2UuanM6IFhGRCBjbG9zaW5nIG1vZHVsZVxuXHQgKiBNb2RlIG9mIGludm9jYXRpb246IExpbmtzIGFmdGVyIHNlY3Rpb24gaGVhZGluZ1xuXHQgKiBBY3RpdmUgb246IEFmRCBkYXRlZCBhcmNoaXZlIHBhZ2VzXG5cdCAqIENvbmZpZyBkaXJlY3RpdmVzIGluOiBUd2lua2xlQ29uZmlnXG5cdCAqL1xuXHRUd2lua2xlLmNsb3NlID0gKCkgPT4ge1xuXHRcdGlmIChcblx0XHRcdFR3aW5rbGUuZ2V0UHJlZignWGZkQ2xvc2UnKSA9PT0gJ2hpZGUnIHx8XG5cdFx0XHQhL15RaXV3ZW4oW18gXXRhbGspPzrlrZjlup/orqjorrpcXC/orrDlvZUoPzpcXC9cXGQrKXszfSQvLnRlc3QobXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpKVxuXHRcdCkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRtdy5ob29rKCd3aWtpcGFnZS5jb250ZW50JykuYWRkKChpdGVtKSA9PiB7XG5cdFx0XHRpZiAoaXRlbS5hdHRyKCdpZCcpID09PSAnbXctY29udGVudC10ZXh0Jykge1xuXHRcdFx0XHRUd2lua2xlLmNsb3NlLmFkZExpbmtzKCk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH07XG5cdFR3aW5rbGUuY2xvc2UuYWRkTGlua3MgPSAoKSA9PiB7XG5cdFx0Y29uc3Qgc3BhblRhZyA9IChjb2xvciwgY29udGVudCkgPT4ge1xuXHRcdFx0Y29uc3Qgc3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcblx0XHRcdHNwYW4uc3R5bGUuY29sb3IgPSBjb2xvcjtcblx0XHRcdHNwYW4uYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY29udGVudCkpO1xuXHRcdFx0cmV0dXJuIHNwYW47XG5cdFx0fTtcblx0XHQkYm9keVxuXHRcdFx0LmZpbmQoXG5cdFx0XHRcdCdoMTpoYXMoLm13LWhlYWRsaW5lKSxoMjpoYXMoLm13LWhlYWRsaW5lKSxoMzpoYXMoLm13LWhlYWRsaW5lKSxoNDpoYXMoLm13LWhlYWRsaW5lKSxoNTpoYXMoLm13LWhlYWRsaW5lKSxoNjpoYXMoLm13LWhlYWRsaW5lKScsXG5cdFx0XHRcdCcjYm9keUNvbnRlbnQnXG5cdFx0XHQpXG5cdFx0XHQuZWFjaCgoaW5kZXgsIGVsZW1lbnQpID0+IHtcblx0XHRcdFx0ZWxlbWVudC5kYXRhc2V0LnNlY3Rpb24gPSBpbmRleCArIDE7XG5cdFx0XHR9KTtcblx0XHRjb25zdCBzZWxlY3RvciA9ICc6aGFzKC5tdy1oZWFkbGluZSBhOm9ubHktb2YtdHlwZSk6bm90KDpoYXMoKyBkaXYuTmF2RnJhbWUpKSc7XG5cdFx0Y29uc3QgdGl0bGVzID0gJGJvZHkuZmluZCgnI2JvZHlDb250ZW50JykuZmluZChgaDIke3NlbGVjdG9yfTpub3QoOmhhcygrIHAgKyBoMykpLCBoMyR7c2VsZWN0b3J9YCk7IC8vIHJlYWxseSBuZWVkcyB0byB3b3JrIG9uXG5cdFx0Y29uc3QgZGVsTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0cm9uZycpO1xuXHRcdGNvbnN0IGRlbExpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG5cdFx0ZGVsTGluay5hcHBlbmRDaGlsZChzcGFuVGFnKCdCbGFjaycsICdbJykpO1xuXHRcdGRlbExpbmsuYXBwZW5kQ2hpbGQoc3BhblRhZygnUmVkJywgd2luZG93LndnVUxTKCflhbPpl63orqjorronLCAn6Zec6ZaJ6KiO6KuWJykpKTtcblx0XHRkZWxMaW5rLmFwcGVuZENoaWxkKHNwYW5UYWcoJ0JsYWNrJywgJ10nKSk7XG5cdFx0ZGVsTm9kZS5hcHBlbmRDaGlsZChkZWxMaW5rKTtcblx0XHRmb3IgKGNvbnN0IGN1cnJlbnQgb2YgdGl0bGVzKSB7XG5cdFx0XHRjb25zdCBoZWFkbGluZWhyZWYgPSAkKGN1cnJlbnQpXG5cdFx0XHRcdC5maW5kKCcubXctaGVhZGxpbmUgYTpub3QoLmV4dC1kaXNjdXNzaW9udG9vbHMtaW5pdC1zZWN0aW9uLXN1YnNjcmliZS1saW5rKScpXG5cdFx0XHRcdC5hdHRyKCdocmVmJyk7XG5cdFx0XHRpZiAoaGVhZGxpbmVocmVmICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0bGV0IHRpdGxlID0gbnVsbDtcblx0XHRcdFx0aWYgKGhlYWRsaW5laHJlZi5pbmNsdWRlcygncmVkbGluaz0xJykpIHtcblx0XHRcdFx0XHR0aXRsZSA9IGhlYWRsaW5laHJlZi5zbGljZSgxOSwgLTIyKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRjb25zdCBtID0gaGVhZGxpbmVocmVmLm1hdGNoKC9cXC93aWtpXFwvKFteP10rKS8sICckMScpO1xuXHRcdFx0XHRcdGlmIChtICE9PSBudWxsKSB7XG5cdFx0XHRcdFx0XHRbLCB0aXRsZV0gPSBtO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAodGl0bGUgIT09IG51bGwpIHtcblx0XHRcdFx0XHR0aXRsZSA9IGRlY29kZVVSSUNvbXBvbmVudCh0aXRsZSk7XG5cdFx0XHRcdFx0dGl0bGUgPSB0aXRsZS5yZXBsYWNlKC9fL2csICcgJyk7IC8vIE5vcm1hbGl6ZSBmb3IgdXNpbmcgaW4gaW50ZXJmYWNlIGFuZCBzdW1tYXJ5XG5cdFx0XHRcdFx0Y29uc3QgcGFnZW5vdGV4aXN0ID0gJChjdXJyZW50KS5maW5kKCcubXctaGVhZGxpbmUgYScpLmhhc0NsYXNzKCduZXcnKTtcblx0XHRcdFx0XHRjb25zdCB7c2VjdGlvbn0gPSBjdXJyZW50LmRhdGFzZXQ7XG5cdFx0XHRcdFx0Y29uc3QgW25vZGVdID0gY3VycmVudC5xdWVyeVNlbGVjdG9yQWxsKCcubXctaGVhZGxpbmUnKTtcblx0XHRcdFx0XHRub2RlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCcgJykpO1xuXHRcdFx0XHRcdGNvbnN0IHRtcE5vZGUgPSBkZWxOb2RlLmNsb25lTm9kZSh0cnVlKTtcblx0XHRcdFx0XHR0bXBOb2RlLmZpcnN0Q2hpbGQuaHJlZiA9IGAjJHtzZWN0aW9ufWA7XG5cdFx0XHRcdFx0JCh0bXBOb2RlLmZpcnN0Q2hpbGQpLm9uKCdjbGljaycsICgpID0+IHtcblx0XHRcdFx0XHRcdFR3aW5rbGUuY2xvc2UuY2FsbGJhY2sodGl0bGUsIHNlY3Rpb24sIHBhZ2Vub3RleGlzdCk7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0bm9kZS5hcHBlbmRDaGlsZCh0bXBOb2RlKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fTtcblx0Ly8gS2VlcCB0aGlzIHN5bmNocm9uaXplZCB3aXRoIHt7ZGVsaH19XG5cdFR3aW5rbGUuY2xvc2UuY29kZXMgPSBbXG5cdFx0e1xuXHRcdFx0a2V5OiB3aW5kb3cud2dVTFMoJ+ivt+axguaXoOaViCcsICfoq4vmsYLnhKHmlYgnKSxcblx0XHRcdHZhbHVlOiB7XG5cdFx0XHRcdGlyOiB7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6K+35rGC5peg5pWIJywgJ+iri+axgueEoeaViCcpLFxuXHRcdFx0XHRcdGFjdGlvbjogJ2tlZXAnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHRyZXA6IHtcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfph43lpI3mj5Dlh7rvvIzml6DmlYgnLCAn6YeN6KSH5o+Q5Ye677yM54Sh5pWIJyksXG5cdFx0XHRcdFx0YWN0aW9uOiAna2VlcCcsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdG5lOiB7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn55uu5qCH6aG16Z2i5oiW5paH5Lu25LiN5a2Y5Zyo77yM5peg5pWIJywgJ+ebruaomemggemdouaIluaqlOahiOS4jeWtmOWcqO+8jOeEoeaViCcpLFxuXHRcdFx0XHRcdGFjdGlvbjogJ2tlZXAnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHRucToge1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+aPkOWIoOiAheacquiOt+WPluaPkOWIoOi1hOagvO+8jOaXoOaViCcsICfmj5DliKrogIXmnKrlj5blvpfmj5DliKros4fmoLzvvIznhKHmlYgnKSxcblx0XHRcdFx0XHRhY3Rpb246ICdrZWVwJyxcblx0XHRcdFx0fSxcblx0XHRcdH0sXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRrZXk6ICfkv53nlZknLFxuXHRcdFx0dmFsdWU6IHtcblx0XHRcdFx0azoge1xuXHRcdFx0XHRcdGxhYmVsOiAn5L+d55WZJyxcblx0XHRcdFx0XHRhY3Rpb246ICdrZWVwJyxcblx0XHRcdFx0XHRhZG1pbm9ubHk6IHRydWUsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHNrOiB7XG5cdFx0XHRcdFx0bGFiZWw6ICflv6vpgJ/kv53nlZknLFxuXHRcdFx0XHRcdGFjdGlvbjogJ2tlZXAnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR0azoge1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+aaguaXtuS/neeVme+8jOaUueaMgue7tOaKpOaooeadv++8iOWFs+azqOW6puetie+8iScsICfmmqvmmYLkv53nlZnvvIzmlLnmjpvntq3orbfmqKHmnb/vvIjpl5zms6jluqbnrYnvvIknKSxcblx0XHRcdFx0XHR2YWx1ZTogd2luZG93LndnVUxTKCfmmoLml7bkv53nlZknLCAn5pqr5pmC5L+d55WZJyksXG5cdFx0XHRcdFx0YWN0aW9uOiAna2VlcCcsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHJyOiB7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6K+35rGC55CG55Sx5raI5aSxJywgJ+iri+axgueQhueUsea2iOWksScpLFxuXHRcdFx0XHRcdGFjdGlvbjogJ2tlZXAnLFxuXHRcdFx0XHRcdHNlbGVjdGVkOiBUd2lua2xlLmdldFByZWYoJ1hmZENsb3NlJykgPT09ICdub25hZG1pbm9ubHknLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHRkYW46IHtcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfliKDlkI7ph43lu7onLCAn5Yiq5b6M6YeN5bu6JyksXG5cdFx0XHRcdFx0YWN0aW9uOiAna2VlcCcsXG5cdFx0XHRcdFx0YWRtaW5vbmx5OiB0cnVlLFxuXHRcdFx0XHR9LFxuXHRcdFx0fSxcblx0XHR9LFxuXHRcdHtcblx0XHRcdGtleTogd2luZG93LndnVUxTKCfliKDpmaQnLCAn5Yiq6ZmkJyksXG5cdFx0XHR2YWx1ZToge1xuXHRcdFx0XHRkOiB7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Yig6ZmkJywgJ+WIqumZpCcpLFxuXHRcdFx0XHRcdGFjdGlvbjogJ2RlbCcsXG5cdFx0XHRcdFx0YWRtaW5vbmx5OiB0cnVlLFxuXHRcdFx0XHRcdHNlbGVjdGVkOiBUd2lua2xlLmdldFByZWYoJ1hmZENsb3NlJykgPT09ICdhbGwnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHRpYzoge1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WbvuWDj+WboOS+teadg+iiq+WIoCcsICflnJblg4/lm6DkvrXmrIrooqvliKonKSxcblx0XHRcdFx0XHRhY3Rpb246ICdkZWwnLFxuXHRcdFx0XHRcdGFkbWlub25seTogdHJ1ZSxcblx0XHRcdFx0fSxcblx0XHRcdH0sXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRrZXk6IHdpbmRvdy53Z1VMUygn5b+r6YCf5Yig6ZmkJywgJ+W/q+mAn+WIqumZpCcpLFxuXHRcdFx0dmFsdWU6IHtcblx0XHRcdFx0c2Q6IHtcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflv6vpgJ/liKDpmaQnLCAn5b+r6YCf5Yiq6ZmkJyksXG5cdFx0XHRcdFx0YWN0aW9uOiAnZGVsJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0bHNzZDoge1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+aXoOadpea6kOaIluiRl+S9nOadg+S/oeaBr++8jOW/q+mAn+WIoOmZpCcsICfnhKHkvobmupDmiJbniYjmrIros4foqIrvvIzlv6vpgJ/liKrpmaQnKSxcblx0XHRcdFx0XHRhY3Rpb246ICdkZWwnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHRzdmc6IHtcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflt7LmlLnnlKhTVkflm77lvaLvvIzlv6vpgJ/liKDpmaQnLCAn5bey5pS555SoU1ZH5ZyW5b2i77yM5b+r6YCf5Yiq6ZmkJyksXG5cdFx0XHRcdFx0YWN0aW9uOiAnZGVsJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0ZHJlcDoge1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+Wkmuasoeiiq+WIoOmZpO+8jOadoeebrumUgeWumicsICflpJrmrKHooqvliKrpmaTvvIzmop3nm67pjpblrponKSxcblx0XHRcdFx0XHRhY3Rpb246ICdkZWwnLFxuXHRcdFx0XHRcdGFkbWlub25seTogdHJ1ZSxcblx0XHRcdFx0fSxcblx0XHRcdH0sXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRrZXk6IHdpbmRvdy53Z1VMUygn5YW25LuW5aSE55CG5pa55rOVJywgJ+WFtuS7luiZleeQhuaWueazlScpLFxuXHRcdFx0dmFsdWU6IHtcblx0XHRcdFx0Yzoge1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+i9rOS6pOS+teadgycsICfovYnkuqTkvrXmrIonKSxcblx0XHRcdFx0XHRhY3Rpb246ICdub29wJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0cjoge1xuXHRcdFx0XHRcdGxhYmVsOiAn6YeN5a6a5ZCRJyxcblx0XHRcdFx0XHRhY3Rpb246ICdrZWVwJyxcblx0XHRcdFx0XHRhZG1pbm9ubHk6IHRydWUsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdGNyOiB7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5YiG57G76YeN5a6a5ZCRJywgJ+WIhumhnumHjeWumuWQkScpLFxuXHRcdFx0XHRcdGFjdGlvbjogJ2tlZXAnLFxuXHRcdFx0XHRcdGFkbWlub25seTogdHJ1ZSxcblx0XHRcdFx0fSxcblx0XHRcdFx0bToge1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+enu+WKqCcsICfnp7vli5UnKSxcblx0XHRcdFx0XHRhY3Rpb246ICdrZWVwJyxcblx0XHRcdFx0XHRhZG1pbm9ubHk6IHRydWUsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdG1lcmdlOiB7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5bm25YWlJywgJ+S9teWFpScpLFxuXHRcdFx0XHRcdGFjdGlvbjogJ2tlZXAnLFxuXHRcdFx0XHRcdGFkbWlub25seTogdHJ1ZSxcblx0XHRcdFx0fSxcblx0XHRcdFx0bWVyZ2VhcHByb3ZlZDoge1xuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WFgeiuuOW5tuWFpScsICflhYHoqLHkvbXlhaUnKSxcblx0XHRcdFx0XHRhY3Rpb246ICdrZWVwJyxcblx0XHRcdFx0XHRhZG1pbm9ubHk6IHRydWUsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdG5jOiB7XG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5peg5YWx6K+G5pqC5pe25L+d55WZJywgJ+eEoeWFseitmOaaq+aZguS/neeVmScpLFxuXHRcdFx0XHRcdHZhbHVlOiB3aW5kb3cud2dVTFMoJ+aXoOWFseivhicsICfnhKHlhbHorZgnKSxcblx0XHRcdFx0XHRhY3Rpb246ICdrZWVwJyxcblx0XHRcdFx0fSxcblx0XHRcdH0sXG5cdFx0fSxcblx0XTtcblx0VHdpbmtsZS5jbG9zZS5jYWxsYmFjayA9ICh0aXRsZSwgc2VjdGlvbiwgbm9vcCkgPT4ge1xuXHRcdGNvbnN0IFdpbmRvdyA9IG5ldyBNb3JlYml0cy5zaW1wbGVXaW5kb3coNDEwLCAyMDApO1xuXHRcdFdpbmRvdy5zZXRUaXRsZShg5YWz6Zet5a2Y5bqf6K6o6K66IFxcdTAwQjcgJHt0aXRsZX1gKTtcblx0XHRXaW5kb3cuc2V0U2NyaXB0TmFtZSgnVHdpbmtsZScpO1xuXHRcdFdpbmRvdy5hZGRGb290ZXJMaW5rKCflrZjlup/orqjorrrorr7nva4nLCAnSDpUVy9QUkVGI+WFs+mXreWtmOW6n+iuqOiuuicpO1xuXHRcdFdpbmRvdy5hZGRGb290ZXJMaW5rKCdUd2lua2xl5biu5YqpJywgJ0g6VFcvRE9DI+WFs+mXreWtmOW6n+iuqOiuuicpO1xuXHRcdGNvbnN0IGZvcm0gPSBuZXcgTW9yZWJpdHMucXVpY2tGb3JtKFR3aW5rbGUuY2xvc2UuY2FsbGJhY2suZXZhbHVhdGUpO1xuXHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdzZWxlY3QnLFxuXHRcdFx0bGFiZWw6ICflpITnkIbnu5PmnpzvvJonLFxuXHRcdFx0bmFtZTogJ3N1Yl9ncm91cCcsXG5cdFx0XHRldmVudDogVHdpbmtsZS5jbG9zZS5jYWxsYmFjay5jaGFuZ2VfY29kZSxcblx0XHR9KTtcblx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnaW5wdXQnLFxuXHRcdFx0bmFtZTogJ3NkcmVhc29uJyxcblx0XHRcdGxhYmVsOiAn6YCf5Yig55CG55Sx77yaJyxcblx0XHRcdHRvb2x0aXA6ICfnlKjkuo7liKDpmaTml6Xlv5fvvIzkvb/nlKh7e2RlbGV0ZX1955qE5Y+C5pWw5qC85byP77yM5L6L5aaCIEExIOaIliBBMXxHMScsXG5cdFx0XHRoaWRkZW46IHRydWUsXG5cdFx0fSk7XG5cdFx0Zm9ybS5hcHBlbmQoe1xuXHRcdFx0dHlwZTogJ2lucHV0Jyxcblx0XHRcdG5hbWU6ICdyZW1hcmsnLFxuXHRcdFx0bGFiZWw6ICfooaXlhYXor7TmmI7vvJonLFxuXHRcdH0pO1xuXHRcdGZvcm0uYXBwZW5kKHtcblx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRsaXN0OiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRsYWJlbDogJ+WPquWFs+mXreiuqOiuuu+8jOS4jei/m+ihjOWFtuS7luaTjeS9nCcsXG5cdFx0XHRcdFx0dmFsdWU6ICdub29wJyxcblx0XHRcdFx0XHRuYW1lOiAnbm9vcCcsXG5cdFx0XHRcdFx0ZXZlbnQ6IFR3aW5rbGUuY2xvc2UuY2FsbGJhY2suY2hhbmdlX29wZXJhdGlvbixcblx0XHRcdFx0XHRjaGVja2VkOiBub29wLFxuXHRcdFx0XHR9LFxuXHRcdFx0XSxcblx0XHR9KTtcblx0XHRpZiAobmV3IG13LlRpdGxlKHRpdGxlKS5uYW1lc3BhY2UgJSAyID09PSAwICYmIG5ldyBtdy5UaXRsZSh0aXRsZSkubmFtZXNwYWNlICE9PSAyKSB7XG5cdFx0XHQvLyBoaWRlIG9wdGlvbiBmb3IgdXNlciBwYWdlcywgdG8gYXZvaWQgYWNjaWRlbnRhbGx5IGRlbGV0aW5nIHVzZXIgdGFsayBwYWdlXG5cdFx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHRcdHR5cGU6ICdjaGVja2JveCcsXG5cdFx0XHRcdGxpc3Q6IFtcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRsYWJlbDogJ+WIoOmZpOWFs+iBlOeahOiuqOiuuumhtScsXG5cdFx0XHRcdFx0XHR2YWx1ZTogJ3RhbGtwYWdlJyxcblx0XHRcdFx0XHRcdG5hbWU6ICd0YWxrcGFnZScsXG5cdFx0XHRcdFx0XHR0b29sdGlwOiAn5Yig6Zmk5pe26ZmE5bim5Yig6Zmk5q2k6aG16Z2i55qE6K6o6K666aG144CCJyxcblx0XHRcdFx0XHRcdGNoZWNrZWQ6IHRydWUsXG5cdFx0XHRcdFx0XHRldmVudDogKGUpID0+IHtcblx0XHRcdFx0XHRcdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XSxcblx0XHRcdH0pO1xuXHRcdH1cblx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnY2hlY2tib3gnLFxuXHRcdFx0bGlzdDogW1xuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bGFiZWw6ICfliKDpmaTph43lrprlkJHpobUnLFxuXHRcdFx0XHRcdHZhbHVlOiAncmVkaXJlY3RzJyxcblx0XHRcdFx0XHRuYW1lOiAncmVkaXJlY3RzJyxcblx0XHRcdFx0XHR0b29sdGlwOiAn5Yig6Zmk5Yiw5q2k6aG155qE6YeN5a6a5ZCR44CCJyxcblx0XHRcdFx0XHRjaGVja2VkOiB0cnVlLFxuXHRcdFx0XHRcdGV2ZW50OiAoZSkgPT4ge1xuXHRcdFx0XHRcdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHR9LFxuXHRcdFx0XSxcblx0XHR9KTtcblx0XHRmb3JtLmFwcGVuZCh7XG5cdFx0XHR0eXBlOiAnc3VibWl0Jyxcblx0XHR9KTtcblx0XHRjb25zdCByZXN1bHQgPSBmb3JtLnJlbmRlcigpO1xuXHRcdFdpbmRvdy5zZXRDb250ZW50KHJlc3VsdCk7XG5cdFx0V2luZG93LmRpc3BsYXkoKTtcblx0XHRjb25zdCBbc3ViX2dyb3VwXSA9IHJlc3VsdC5xdWVyeVNlbGVjdG9yQWxsKCdzZWxlY3QnKTsgLy8gaGFja1xuXHRcdGNvbnN0IHJlc3VsdERhdGEgPSB7XG5cdFx0XHR0aXRsZSxcblx0XHRcdHNlY3Rpb246IE51bWJlci5wYXJzZUludChzZWN0aW9uLCAxMCksXG5cdFx0XHRub29wLFxuXHRcdH07XG5cdFx0JChyZXN1bHQpLmRhdGEoJ3Jlc3VsdERhdGEnLCByZXN1bHREYXRhKTtcblx0XHQvLyB3b3JrZXIgZnVuY3Rpb24gdG8gY3JlYXRlIHRoZSBjb21ibyBib3ggZW50cmllc1xuXHRcdGNvbnN0IGNyZWF0ZUVudHJpZXMgPSAoY29udGVudHMsIGNvbnRhaW5lcikgPT4ge1xuXHRcdFx0Zm9yIChjb25zdCBbaXRlbUtleSwgaXRlbVByb3BlcnRpZXNdIG9mIE9iamVjdC5lbnRyaWVzKGNvbnRlbnRzKSkge1xuXHRcdFx0XHRjb25zdCBrZXkgPSB0eXBlb2YgaXRlbUtleSA9PT0gJ3N0cmluZycgPyBpdGVtS2V5IDogaXRlbVByb3BlcnRpZXMudmFsdWU7XG5cdFx0XHRcdGNvbnN0IGVsZW0gPSBuZXcgTW9yZWJpdHMucXVpY2tGb3JtLmVsZW1lbnQoe1xuXHRcdFx0XHRcdHR5cGU6ICdvcHRpb24nLFxuXHRcdFx0XHRcdGxhYmVsOiBgJHtrZXl977yaJHtpdGVtUHJvcGVydGllcy5sYWJlbH1gLFxuXHRcdFx0XHRcdHZhbHVlOiBrZXksXG5cdFx0XHRcdFx0c2VsZWN0ZWQ6IGl0ZW1Qcm9wZXJ0aWVzLnNlbGVjdGVkLFxuXHRcdFx0XHRcdGRpc2FibGVkOlxuXHRcdFx0XHRcdFx0KFR3aW5rbGUuZ2V0UHJlZignWGZkQ2xvc2UnKSAhPT0gJ2FsbCcgJiYgaXRlbVByb3BlcnRpZXMuYWRtaW5vbmx5KSB8fCBpdGVtUHJvcGVydGllcy5kaXNhYmxlZCxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGNvbnN0IGVsZW1SZW5kZXJlZCA9IGNvbnRhaW5lci5hcHBlbmRDaGlsZChlbGVtLnJlbmRlcigpKTtcblx0XHRcdFx0JChlbGVtUmVuZGVyZWQpLmRhdGEoJ21lc3NhZ2VEYXRhJywgaXRlbVByb3BlcnRpZXMpO1xuXHRcdFx0fVxuXHRcdH07XG5cdFx0Zm9yIChjb25zdCBncm91cCBvZiBUd2lua2xlLmNsb3NlLmNvZGVzKSB7XG5cdFx0XHRsZXQgb3B0Z3JvdXAgPSBuZXcgTW9yZWJpdHMucXVpY2tGb3JtLmVsZW1lbnQoe1xuXHRcdFx0XHR0eXBlOiAnb3B0Z3JvdXAnLFxuXHRcdFx0XHRsYWJlbDogZ3JvdXAua2V5LFxuXHRcdFx0fSk7XG5cdFx0XHRvcHRncm91cCA9IG9wdGdyb3VwLnJlbmRlcigpO1xuXHRcdFx0c3ViX2dyb3VwLmFwcGVuZENoaWxkKG9wdGdyb3VwKTtcblx0XHRcdC8vIGNyZWF0ZSB0aGUgb3B0aW9uc1xuXHRcdFx0Y3JlYXRlRW50cmllcyhncm91cC52YWx1ZSwgb3B0Z3JvdXApO1xuXHRcdH1cblx0XHRjb25zdCBldmVudCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdFdmVudCcpO1xuXHRcdGV2ZW50LmluaXRFdmVudCgnY2hhbmdlJywgdHJ1ZSwgdHJ1ZSk7XG5cdFx0cmVzdWx0LnN1Yl9ncm91cC5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcblx0fTtcblx0VHdpbmtsZS5jbG9zZS5jYWxsYmFjay5jaGFuZ2Vfb3BlcmF0aW9uID0gKGUpID0+IHtcblx0XHRjb25zdCBub29wID0gZS50YXJnZXQuY2hlY2tlZDtcblx0XHRjb25zdCBjb2RlID0gZS50YXJnZXQuZm9ybS5zdWJfZ3JvdXAudmFsdWU7XG5cdFx0Y29uc3QgbWVzc2FnZURhdGEgPSAkKGUudGFyZ2V0LmZvcm0uc3ViX2dyb3VwKS5maW5kKGBvcHRpb25bdmFsdWU9XCIke2NvZGV9XCJdYCkuZGF0YSgnbWVzc2FnZURhdGEnKTtcblx0XHRjb25zdCB7dGFsa3BhZ2V9ID0gZS50YXJnZXQuZm9ybTtcblx0XHRjb25zdCB7cmVkaXJlY3RzfSA9IGUudGFyZ2V0LmZvcm07XG5cdFx0aWYgKG5vb3AgfHwgbWVzc2FnZURhdGEuYWN0aW9uID09PSAna2VlcCcpIHtcblx0XHRcdGlmICh0YWxrcGFnZSkge1xuXHRcdFx0XHR0YWxrcGFnZS5jaGVja2VkID0gZmFsc2U7XG5cdFx0XHRcdHRhbGtwYWdlLmRpc2FibGVkID0gdHJ1ZTtcblx0XHRcdH1cblx0XHRcdHJlZGlyZWN0cy5jaGVja2VkID0gZmFsc2U7XG5cdFx0XHRyZWRpcmVjdHMuZGlzYWJsZWQgPSB0cnVlO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRpZiAodGFsa3BhZ2UpIHtcblx0XHRcdFx0dGFsa3BhZ2UuY2hlY2tlZCA9IHRydWU7XG5cdFx0XHRcdHRhbGtwYWdlLmRpc2FibGVkID0gZmFsc2U7XG5cdFx0XHR9XG5cdFx0XHRyZWRpcmVjdHMuY2hlY2tlZCA9IHRydWU7XG5cdFx0XHRyZWRpcmVjdHMuZGlzYWJsZWQgPSBmYWxzZTtcblx0XHR9XG5cdH07XG5cdFR3aW5rbGUuY2xvc2UuY2FsbGJhY2suY2hhbmdlX2NvZGUgPSAoZSkgPT4ge1xuXHRcdGNvbnN0IHJlc3VsdERhdGEgPSAkKGUudGFyZ2V0LmZvcm0pLmRhdGEoJ3Jlc3VsdERhdGEnKTtcblx0XHRjb25zdCBtZXNzYWdlRGF0YSA9ICQoZS50YXJnZXQpLmZpbmQoYG9wdGlvblt2YWx1ZT1cIiR7ZS50YXJnZXQudmFsdWV9XCJdYCkuZGF0YSgnbWVzc2FnZURhdGEnKTtcblx0XHRjb25zdCB7bm9vcH0gPSBlLnRhcmdldC5mb3JtO1xuXHRcdGNvbnN0IHt0YWxrcGFnZX0gPSBlLnRhcmdldC5mb3JtO1xuXHRcdGNvbnN0IHtyZWRpcmVjdHN9ID0gZS50YXJnZXQuZm9ybTtcblx0XHRpZiAocmVzdWx0RGF0YS5ub29wIHx8IG1lc3NhZ2VEYXRhLmFjdGlvbiA9PT0gJ25vb3AnKSB7XG5cdFx0XHRub29wLmNoZWNrZWQgPSB0cnVlO1xuXHRcdFx0bm9vcC5kaXNhYmxlZCA9IHRydWU7XG5cdFx0XHRpZiAodGFsa3BhZ2UpIHtcblx0XHRcdFx0dGFsa3BhZ2UuY2hlY2tlZCA9IGZhbHNlO1xuXHRcdFx0XHR0YWxrcGFnZS5kaXNhYmxlZCA9IHRydWU7XG5cdFx0XHR9XG5cdFx0XHRyZWRpcmVjdHMuY2hlY2tlZCA9IGZhbHNlO1xuXHRcdFx0cmVkaXJlY3RzLmRpc2FibGVkID0gdHJ1ZTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0bm9vcC5jaGVja2VkID0gZmFsc2U7XG5cdFx0XHRub29wLmRpc2FibGVkID0gZmFsc2U7XG5cdFx0XHRpZiAobWVzc2FnZURhdGEuYWN0aW9uID09PSAna2VlcCcpIHtcblx0XHRcdFx0aWYgKHRhbGtwYWdlKSB7XG5cdFx0XHRcdFx0dGFsa3BhZ2UuY2hlY2tlZCA9IGZhbHNlO1xuXHRcdFx0XHRcdHRhbGtwYWdlLmRpc2FibGVkID0gdHJ1ZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZWRpcmVjdHMuY2hlY2tlZCA9IGZhbHNlO1xuXHRcdFx0XHRyZWRpcmVjdHMuZGlzYWJsZWQgPSB0cnVlO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aWYgKHRhbGtwYWdlKSB7XG5cdFx0XHRcdFx0dGFsa3BhZ2UuY2hlY2tlZCA9IHRydWU7XG5cdFx0XHRcdFx0dGFsa3BhZ2UuZGlzYWJsZWQgPSBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZWRpcmVjdHMuY2hlY2tlZCA9IHRydWU7XG5cdFx0XHRcdHJlZGlyZWN0cy5kaXNhYmxlZCA9IGZhbHNlO1xuXHRcdFx0fVxuXHRcdFx0aWYgKGUudGFyZ2V0LnZhbHVlID09PSAnc2QnKSB7XG5cdFx0XHRcdGUudGFyZ2V0LmZvcm0uc2RyZWFzb24ucGFyZW50RWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2hpZGRlbicpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZS50YXJnZXQuZm9ybS5zZHJlYXNvbi5wYXJlbnRFbGVtZW50LnNldEF0dHJpYnV0ZSgnaGlkZGVuJywgJycpO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcblx0VHdpbmtsZS5jbG9zZS5jYWxsYmFjay5ldmFsdWF0ZSA9IChlKSA9PiB7XG5cdFx0Y29uc3QgY29kZSA9IGUudGFyZ2V0LnN1Yl9ncm91cC52YWx1ZTtcblx0XHRjb25zdCByZXN1bHREYXRhID0gJChlLnRhcmdldCkuZGF0YSgncmVzdWx0RGF0YScpO1xuXHRcdGNvbnN0IG1lc3NhZ2VEYXRhID0gJChlLnRhcmdldC5zdWJfZ3JvdXApLmZpbmQoYG9wdGlvblt2YWx1ZT1cIiR7Y29kZX1cIl1gKS5kYXRhKCdtZXNzYWdlRGF0YScpO1xuXHRcdGNvbnN0IG5vb3AgPSBlLnRhcmdldC5ub29wLmNoZWNrZWQ7XG5cdFx0Y29uc3QgdGFsa3BhZ2UgPSBlLnRhcmdldC50YWxrcGFnZSAmJiBlLnRhcmdldC50YWxrcGFnZS5jaGVja2VkO1xuXHRcdGNvbnN0IHJlZGlyZWN0cyA9IGUudGFyZ2V0LnJlZGlyZWN0cy5jaGVja2VkO1xuXHRcdGNvbnN0IHBhcmFtcyA9IHtcblx0XHRcdHRpdGxlOiByZXN1bHREYXRhLnRpdGxlLFxuXHRcdFx0Y29kZSxcblx0XHRcdHJlbWFyazogZS50YXJnZXQucmVtYXJrLnZhbHVlLFxuXHRcdFx0c2RyZWFzb246IGUudGFyZ2V0LnNkcmVhc29uLnZhbHVlLFxuXHRcdFx0c2VjdGlvbjogcmVzdWx0RGF0YS5zZWN0aW9uLFxuXHRcdFx0cGFyZW50U2VjdGlvbjogcmVzdWx0RGF0YS5wYXJlbnRTZWN0aW9uLFxuXHRcdFx0bWVzc2FnZURhdGEsXG5cdFx0XHR0YWxrcGFnZSxcblx0XHRcdHJlZGlyZWN0cyxcblx0XHR9O1xuXHRcdE1vcmViaXRzLnNpbXBsZVdpbmRvdy5zZXRCdXR0b25zRW5hYmxlZChmYWxzZSk7XG5cdFx0TW9yZWJpdHMuc3RhdHVzLmluaXQoZS50YXJnZXQpO1xuXHRcdE1vcmViaXRzLndpa2kuYWN0aW9uQ29tcGxldGVkLm5vdGljZSA9ICfmk43kvZzlrozmiJAnO1xuXHRcdGlmIChub29wIHx8IG1lc3NhZ2VEYXRhLmFjdGlvbiA9PT0gJ25vb3AnKSB7XG5cdFx0XHRUd2lua2xlLmNsb3NlLmNhbGxiYWNrcy50YWxrZW5kKHBhcmFtcyk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHN3aXRjaCAobWVzc2FnZURhdGEuYWN0aW9uKSB7XG5cdFx0XHRcdGNhc2UgJ2RlbCc6XG5cdFx0XHRcdFx0VHdpbmtsZS5jbG9zZS5jYWxsYmFja3MuZGVsKHBhcmFtcyk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgJ2tlZXAnOiB7XG5cdFx0XHRcdFx0Y29uc3QgcWl1d2VuX3BhZ2UgPSBuZXcgTW9yZWJpdHMud2lraS5wYWdlKHBhcmFtcy50aXRsZSwgJ+enu+mZpOWtmOW6n+iuqOiuuuaooeadvycpO1xuXHRcdFx0XHRcdHFpdXdlbl9wYWdlLnNldENhbGxiYWNrUGFyYW1ldGVycyhwYXJhbXMpO1xuXHRcdFx0XHRcdHFpdXdlbl9wYWdlLmxvYWQoVHdpbmtsZS5jbG9zZS5jYWxsYmFja3Mua2VlcCk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHR2b2lkIG13Lm5vdGlmeShg5YWz6Zet5a2Y5bqf6K6o6K6677ya5pyq5a6a5LmJICR7Y29kZX1gLCB7XG5cdFx0XHRcdFx0XHR0eXBlOiAnd2FybicsXG5cdFx0XHRcdFx0XHR0YWc6ICd0d2lua2xlY2xvc2UnLFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcblx0VHdpbmtsZS5jbG9zZS5jYWxsYmFja3MgPSB7XG5cdFx0ZGVsOiAocGFyYW1zKSA9PiB7XG5cdFx0XHRsZXQgcXVlcnk7XG5cdFx0XHRsZXQgcWl1d2VuX2FwaTtcblx0XHRcdE1vcmViaXRzLndpa2kuYWRkQ2hlY2twb2ludCgpO1xuXHRcdFx0Y29uc3QgcGFnZSA9IG5ldyBNb3JlYml0cy53aWtpLnBhZ2UocGFyYW1zLnRpdGxlLCAn5Yig6Zmk6aG16Z2iJyk7XG5cdFx0XHRpZiAocGFyYW1zLmNvZGUgPT09ICdzZCcpIHtcblx0XHRcdFx0VHdpbmtsZS5zcGVlZHkuY2FsbGJhY2tzLnBhcnNlV2lraXRleHQocGFyYW1zLnRpdGxlLCBge3tkZWxldGV8JHtwYXJhbXMuc2RyZWFzb259fX1gLCAocmVhc29uKSA9PiB7XG5cdFx0XHRcdFx0cmVhc29uID0gcHJvbXB0KCfovpPlhaXliKDpmaTnkIbnlLHvvIzmiJbngrnlh7vnoa7lrprku6XmjqXlj5foh6rliqjnlJ/miJDnmoTvvJonLCByZWFzb24pO1xuXHRcdFx0XHRcdGlmIChyZWFzb24gPT09IG51bGwpIHtcblx0XHRcdFx0XHRcdHBhZ2UuZ2V0U3RhdHVzRWxlbWVudCgpLndhcm4oJ+ayoeacieaJp+ihjOWIoOmZpCcpO1xuXHRcdFx0XHRcdFx0VHdpbmtsZS5jbG9zZS5jYWxsYmFja3MudGFsa2VuZChwYXJhbXMpO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRwYWdlLnNldEVkaXRTdW1tYXJ5KHJlYXNvbik7XG5cdFx0XHRcdFx0XHRwYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdFx0XHRcdHBhZ2UuZGVsZXRlUGFnZSgoKSA9PiB7XG5cdFx0XHRcdFx0XHRcdHBhZ2UuZ2V0U3RhdHVzRWxlbWVudCgpLmluZm8oJ+WujOaIkCcpO1xuXHRcdFx0XHRcdFx0XHRUd2lua2xlLmNsb3NlLmNhbGxiYWNrcy50YWxrZW5kKHBhcmFtcyk7XG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cGFnZS5zZXRFZGl0U3VtbWFyeShg5a2Y5bqf6K6o6K666YCa6L+H77yaW1ske213LmNvbmZpZy5nZXQoJ3dnUGFnZU5hbWUnKX0jJHtwYXJhbXMudGl0bGV9XV1gKTtcblx0XHRcdFx0cGFnZS5zZXRDaGFuZ2VUYWdzKFR3aW5rbGUuY2hhbmdlVGFncyk7XG5cdFx0XHRcdHBhZ2UuZGVsZXRlUGFnZSgoKSA9PiB7XG5cdFx0XHRcdFx0cGFnZS5nZXRTdGF0dXNFbGVtZW50KCkuaW5mbygn5a6M5oiQJyk7XG5cdFx0XHRcdFx0VHdpbmtsZS5jbG9zZS5jYWxsYmFja3MudGFsa2VuZChwYXJhbXMpO1xuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHRcdGlmIChwYXJhbXMucmVkaXJlY3RzKSB7XG5cdFx0XHRcdHF1ZXJ5ID0ge1xuXHRcdFx0XHRcdGFjdGlvbjogJ3F1ZXJ5Jyxcblx0XHRcdFx0XHR0aXRsZXM6IHBhcmFtcy50aXRsZSxcblx0XHRcdFx0XHRwcm9wOiAncmVkaXJlY3RzJyxcblx0XHRcdFx0XHRyZGxpbWl0OiAnbWF4JywgLy8gNTAwIGlzIG1heCBmb3Igbm9ybWFsIHVzZXJzLCA1MDAwIGZvciBib3RzIGFuZCBzeXNvcHNcblx0XHRcdFx0fTtcblxuXHRcdFx0XHRxaXV3ZW5fYXBpID0gbmV3IE1vcmViaXRzLndpa2kuYXBpKFxuXHRcdFx0XHRcdCfmraPlnKjojrflj5bph43lrprlkJEnLFxuXHRcdFx0XHRcdHF1ZXJ5LFxuXHRcdFx0XHRcdFR3aW5rbGUuY2xvc2UuY2FsbGJhY2tzLmRlbGV0ZVJlZGlyZWN0c01haW5cblx0XHRcdFx0KTtcblx0XHRcdFx0cWl1d2VuX2FwaS5wYXJhbXMgPSBwYXJhbXM7XG5cdFx0XHRcdHFpdXdlbl9hcGkucG9zdCgpO1xuXHRcdFx0fVxuXHRcdFx0aWYgKHBhcmFtcy50YWxrUGFnZSkge1xuXHRcdFx0XHRjb25zdCBwYWdlVGl0bGUgPSBtdy5UaXRsZS5uZXdGcm9tVGV4dChwYXJhbXMudGl0bGUpO1xuXHRcdFx0XHRpZiAocGFnZVRpdGxlICYmIHBhZ2VUaXRsZS5uYW1lc3BhY2UgJSAyID09PSAwICYmIHBhZ2VUaXRsZS5uYW1lc3BhY2UgIT09IDIpIHtcblx0XHRcdFx0XHRwYWdlVGl0bGUubmFtZXNwYWNlKys7IC8vIG5vdyBwYWdlVGl0bGUgaXMgdGhlIHRhbGsgcGFnZSB0aXRsZSFcblx0XHRcdFx0XHRxdWVyeSA9IHtcblx0XHRcdFx0XHRcdGFjdGlvbjogJ3F1ZXJ5Jyxcblx0XHRcdFx0XHRcdHRpdGxlczogcGFnZVRpdGxlLnRvVGV4dCgpLFxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0cWl1d2VuX2FwaSA9IG5ldyBNb3JlYml0cy53aWtpLmFwaShcblx0XHRcdFx0XHRcdCfmraPlnKjmo4Dmn6XorqjorrrpobXpnaLmmK/lkKblrZjlnKgnLFxuXHRcdFx0XHRcdFx0cXVlcnksXG5cdFx0XHRcdFx0XHRUd2lua2xlLmNsb3NlLmNhbGxiYWNrcy5kZWxldGVUYWxrXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRxaXV3ZW5fYXBpLnBhcmFtcyA9IHBhcmFtcztcblx0XHRcdFx0XHRxaXV3ZW5fYXBpLmFwaW9iai5wYXJhbXMudGFsa1BhZ2UgPSBwYWdlVGl0bGUudG9UZXh0KCk7XG5cdFx0XHRcdFx0cWl1d2VuX2FwaS5wb3N0KCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdE1vcmViaXRzLndpa2kucmVtb3ZlQ2hlY2twb2ludCgpO1xuXHRcdH0sXG5cdFx0ZGVsZXRlUmVkaXJlY3RzTWFpbjogKGFwaW9iaikgPT4ge1xuXHRcdFx0Y29uc3QgeG1sID0gYXBpb2JqLnJlc3BvbnNlWE1MO1xuXHRcdFx0Y29uc3QgcGFnZXMgPSAkKHhtbClcblx0XHRcdFx0LmZpbmQoJ3JkJylcblx0XHRcdFx0Lm1hcCgoX2luZGV4LCBlbGVtZW50KSA9PiB7XG5cdFx0XHRcdFx0cmV0dXJuICQoZWxlbWVudCkuYXR0cigndGl0bGUnKTtcblx0XHRcdFx0fSlcblx0XHRcdFx0LmdldCgpO1xuXHRcdFx0aWYgKHBhZ2VzLmxlbmd0aCA9PT0gMCkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRjb25zdCByZWRpcmVjdERlbGV0ZXIgPSBuZXcgTW9yZWJpdHMuYmF0Y2hPcGVyYXRpb24oXG5cdFx0XHRcdHdpbmRvdy53Z1VMUygn5q2j5Zyo5Yig6Zmk5YiwICcsICfmraPlnKjliKrpmaTliLAgJykgK1xuXHRcdFx0XHRcdGFwaW9iai5wYXJhbXMudGl0bGUgK1xuXHRcdFx0XHRcdHdpbmRvdy53Z1VMUygnIOeahOmHjeWumuWQkScsICcg55qE6YeN5paw5bCO5ZCRJylcblx0XHRcdCk7XG5cdFx0XHRyZWRpcmVjdERlbGV0ZXIuc2V0T3B0aW9uKCdjaHVua1NpemUnLCBUd2lua2xlLmdldFByZWYoJ2JhdGNoZGVsZXRlQ2h1bmtzJykpO1xuXHRcdFx0cmVkaXJlY3REZWxldGVyLnNldFBhZ2VMaXN0KHBhZ2VzKTtcblx0XHRcdHJlZGlyZWN0RGVsZXRlci5ydW4oKHBhZ2VOYW1lKSA9PiB7XG5cdFx0XHRcdGNvbnN0IHFpdXdlbl9wYWdlID0gbmV3IE1vcmViaXRzLndpa2kucGFnZShwYWdlTmFtZSwgd2luZG93LndnVUxTKCfmraPlnKjliKDpmaQgJywgJ+ato+WcqOWIqumZpCAnKSArIHBhZ2VOYW1lKTtcblx0XHRcdFx0cWl1d2VuX3BhZ2Uuc2V0RWRpdFN1bW1hcnkoXG5cdFx0XHRcdFx0YFtbUVc6Q1NEI0c1fEc1XV3vvJoke3dpbmRvdy53Z1VMUygn5oyH5ZCR5bey5Yig6aG16Z2i4oCcJywgJ+aMh+WQkeW3suWIqumggemdouOAjCcpfSR7YXBpb2JqLnBhcmFtcy50aXRsZX0ke3dpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfigJ3nmoTph43lrprlkJEnLFxuXHRcdFx0XHRcdFx0J+OAjeeahOmHjeaWsOWwjuWQkSdcblx0XHRcdFx0XHQpfWBcblx0XHRcdFx0KTtcblx0XHRcdFx0cWl1d2VuX3BhZ2Uuc2V0Q2hhbmdlVGFncyhUd2lua2xlLmNoYW5nZVRhZ3MpO1xuXHRcdFx0XHRxaXV3ZW5fcGFnZS5kZWxldGVQYWdlKHJlZGlyZWN0RGVsZXRlci53b3JrZXJTdWNjZXNzLCByZWRpcmVjdERlbGV0ZXIud29ya2VyRmFpbHVyZSk7XG5cdFx0XHR9KTtcblx0XHR9LFxuXHRcdGRlbGV0ZVRhbGs6IChhcGlvYmopID0+IHtcblx0XHRcdGNvbnN0IHhtbCA9IGFwaW9iai5yZXNwb25zZVhNTDtcblx0XHRcdGNvbnN0IGV4aXN0cyA9ICQoeG1sKS5maW5kKCdwYWdlOm5vdChbbWlzc2luZ10pJykubGVuZ3RoID4gMDtcblx0XHRcdGlmICghZXhpc3RzKSB7XG5cdFx0XHRcdC8vIG5vIHRhbGsgcGFnZTsgZm9yZ2V0IGFib3V0IGl0XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdGNvbnN0IHBhZ2UgPSBuZXcgTW9yZWJpdHMud2lraS5wYWdlKFxuXHRcdFx0XHRhcGlvYmoucGFyYW1zLnRhbGtQYWdlLFxuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ+ato+WcqOWIoOmZpOmhtemdoiAnLCAn5q2j5Zyo5Yiq6Zmk6aCB6Z2iICcpICtcblx0XHRcdFx0XHRhcGlvYmoucGFyYW1zLnRpdGxlICtcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJyDnmoTorqjorrrpobUnLCAnIOeahOiojuirlumggScpXG5cdFx0XHQpO1xuXHRcdFx0cGFnZS5zZXRFZGl0U3VtbWFyeShcblx0XHRcdFx0YFtbUVc6Q1NEI0c1fEc1XV3vvJoke3dpbmRvdy53Z1VMUygn5bey5Yig6aG16Z2i4oCcJywgJ+W3suWIqumggemdouOAjCcpfSR7YXBpb2JqLnBhcmFtcy50aXRsZX0ke3dpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHQn4oCd55qEW1tIZWxwOuiuqOiuuumhtXzorqjorrrpobVdXScsXG5cdFx0XHRcdFx0J+OAjeeahFtbSGVscDroqI7oq5bpoIF86KiO6KuW6aCBXV0nXG5cdFx0XHRcdCl9YFxuXHRcdFx0KTtcblx0XHRcdHBhZ2Uuc2V0Q2hhbmdlVGFncyhUd2lua2xlLmNoYW5nZVRhZ3MpO1xuXHRcdFx0cGFnZS5kZWxldGVQYWdlKCk7XG5cdFx0fSxcblx0XHRrZWVwOiAocGFnZW9iaikgPT4ge1xuXHRcdFx0Y29uc3Qgc3RhdGVsZW0gPSBwYWdlb2JqLmdldFN0YXR1c0VsZW1lbnQoKTtcblx0XHRcdGlmICghcGFnZW9iai5leGlzdHMoKSkge1xuXHRcdFx0XHRzdGF0ZWxlbS5lcnJvcign6aG16Z2i5LiN5a2Y5Zyo77yM5Y+v6IO95bey6KKr5Yig6ZmkJyk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdGNvbnN0IHRleHQgPSBwYWdlb2JqLmdldFBhZ2VUZXh0KCk7XG5cdFx0XHRjb25zdCBwYXJhbXMgPSBwYWdlb2JqLmdldENhbGxiYWNrUGFyYW1ldGVycygpO1xuXHRcdFx0Y29uc3QgcGFnZXRpdGxlID0gbXcuVGl0bGUubmV3RnJvbVRleHQocGFyYW1zLnRpdGxlKTtcblx0XHRcdGlmIChwYWdldGl0bGUuZ2V0TmFtZXNwYWNlSWQoKSAlIDIgPT09IDApIHtcblx0XHRcdFx0Y29uc3QgdGFsa3BhZ2V0aXRsZSA9IG5ldyBtdy5UaXRsZShwYWdldGl0bGUuZ2V0TWFpblRleHQoKSwgcGFnZXRpdGxlLmdldE5hbWVzcGFjZUlkKCkgKyAxKTtcblx0XHRcdFx0Y29uc3QgdGFsa3BhZ2UgPSBuZXcgTW9yZWJpdHMud2lraS5wYWdlKFxuXHRcdFx0XHRcdHRhbGtwYWdldGl0bGUudG9TdHJpbmcoKSxcblx0XHRcdFx0XHR3aW5kb3cud2dVTFMoJ+agh+iusOiuqOiuuumhtScsICfmqJnoqJjoqI7oq5bpoIEnKVxuXHRcdFx0XHQpO1xuXHRcdFx0XHRjb25zdCByZWFzb24gPSBwYXJhbXMubWVzc2FnZURhdGEudmFsdWUgfHwgcGFyYW1zLm1lc3NhZ2VEYXRhLmxhYmVsO1xuXHRcdFx0XHRjb25zdCB2ZmRrZXB0ID0gYHt7T2xkIHZmZCBtdWx0aXwke213LmNvbmZpZ1xuXHRcdFx0XHRcdC5nZXQoJ3dnUGFnZU5hbWUnKVxuXHRcdFx0XHRcdC5zcGxpdCgnLycpXG5cdFx0XHRcdFx0LnNsaWNlKDIpXG5cdFx0XHRcdFx0LmpvaW4oJy8nKX18JHtyZWFzb259fX1cXG5gO1xuXHRcdFx0XHR0YWxrcGFnZS5zZXRQcmVwZW5kVGV4dCh2ZmRrZXB0KTtcblx0XHRcdFx0dGFsa3BhZ2Uuc2V0RWRpdFN1bW1hcnkoYFtbJHttdy5jb25maWcuZ2V0KCd3Z1BhZ2VOYW1lJyl9IyR7cGFyYW1zLnRpdGxlfV1d77yaJHtyZWFzb259YCk7XG5cdFx0XHRcdHRhbGtwYWdlLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdFx0dGFsa3BhZ2Uuc2V0Q3JlYXRlT3B0aW9uKCdyZWNyZWF0ZScpO1xuXHRcdFx0XHR0YWxrcGFnZS5wcmVwZW5kKCk7XG5cdFx0XHR9XG5cdFx0XHRsZXQgbmV3dGV4dCA9IHRleHQucmVwbGFjZShcblx0XHRcdFx0Lzxub2luY2x1ZGU+XFxzKlxce1xceyhbcnNhaWZ0Y212XWZkKShcXHwoPzpcXHtcXHtbXnt9XSpcXH1cXH18W157fV0pKik/XFx9XFx9XFxzKjxcXC9ub2luY2x1ZGU+XFxzKi9naSxcblx0XHRcdFx0Jydcblx0XHRcdCk7XG5cdFx0XHRuZXd0ZXh0ID0gbmV3dGV4dC5yZXBsYWNlKC9cXHtcXHsoW3JzYWlmdGNtdl1mZCkoXFx8KD86XFx7XFx7W157fV0qXFx9XFx9fFtee31dKSopP1xcfVxcfVxccyovZ2ksICcnKTtcblx0XHRcdGlmIChwYXJhbXMuY29kZSAhPT0gJ3RrJykge1xuXHRcdFx0XHRuZXd0ZXh0ID0gbmV3dGV4dC5yZXBsYWNlKFxuXHRcdFx0XHRcdC97eyhub3RhYmlsaXR5fGZhbWV8bWFpcnznn6XlkI3luqZ86YeN6KaB5oCnfOaYvuiRl+aAp3zpoa/okZfmgKd855+l5ZCN5bqm5LiN6LazfOS6uueJqemHjeimgeaAp3zph43opoHmgKfkuI3otrN8bm90YWJsZXzlhbPms6jluqZ85YWz5rOo5bqm5LiN6LazfOmXnOazqOW6pnzpl5zms6jluqbkuI3otrN86YeN6KaBfOmHjeimgeW6pikoXFx8KD86e3tbXnt9XSp9fXxbXnt9XSkqKT99fVxcbiovZ2ksXG5cdFx0XHRcdFx0Jydcblx0XHRcdFx0KTtcblx0XHRcdFx0bmV3dGV4dCA9IG5ld3RleHQucmVwbGFjZShcblx0XHRcdFx0XHQve3soc3Vic3R1YnzlsI/lsI/kvZzlk4F8Y29kfOWwj+Wwj+aineebrnzlsI/lsI/mnaHnm64pKFxcfCg/Ont7W157fV0qfX18W157fV0pKik/fX1cXG4qL2dpLFxuXHRcdFx0XHRcdCcnXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0XHRpZiAocGFyYW1zLmNvZGUgPT09ICdtZXJnZWFwcHJvdmVkJykge1xuXHRcdFx0XHRjb25zdCB0YWcgPSAne3snXG5cdFx0XHRcdFx0LmNvbmNhdCgnc3Vic3Q6Jylcblx0XHRcdFx0XHQuY29uY2F0KGBNZXJnZSBhcHByb3ZlZC9hdXRvfGRpc2N1c3M9JHttdy5jb25maWcuZ2V0KCd3Z1BhZ2VOYW1lJyl9IyR7cGFyYW1zLnRpdGxlfX19XFxuYCk7XG5cdFx0XHRcdC8vIEluc2VydCB0YWcgYWZ0ZXIgc2hvcnQgZGVzY3JpcHRpb24gb3IgYW55IGhhdG5vdGVzXG5cdFx0XHRcdGNvbnN0IHFpdXdlbl9wYWdlID0gbmV3IE1vcmViaXRzLndpa2l0ZXh0LnBhZ2UobmV3dGV4dCk7XG5cdFx0XHRcdG5ld3RleHQgPSBxaXV3ZW5fcGFnZS5pbnNlcnRBZnRlclRlbXBsYXRlcyh0YWcsIFR3aW5rbGUuaGF0bm90ZVJlZ2V4KS5nZXRUZXh0KCk7XG5cdFx0XHR9XG5cdFx0XHRpZiAobmV3dGV4dCA9PT0gdGV4dCkge1xuXHRcdFx0XHRzdGF0ZWxlbS53YXJuKCfmnKrmib7liLDlrZjlup/orqjorrrmqKHmnb/vvIzlj6/og73lt7Looqvnp7vpmaQnKTtcblx0XHRcdFx0VHdpbmtsZS5jbG9zZS5jYWxsYmFja3MudGFsa2VuZChwYXJhbXMpO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRjb25zdCBlZGl0c3VtbWFyeSA9IGDlrZjlup/orqjorrrlhbPpl63vvJpbWyR7bXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpfSMke3BhcmFtcy50aXRsZX1dXWA7XG5cdFx0XHRwYWdlb2JqLnNldFBhZ2VUZXh0KG5ld3RleHQpO1xuXHRcdFx0cGFnZW9iai5zZXRFZGl0U3VtbWFyeShlZGl0c3VtbWFyeSk7XG5cdFx0XHRwYWdlb2JqLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdHBhZ2VvYmouc2V0Q3JlYXRlT3B0aW9uKCdub2NyZWF0ZScpO1xuXHRcdFx0cGFnZW9iai5zYXZlKFR3aW5rbGUuY2xvc2UuY2FsbGJhY2tzLmtlZXBDb21wbGV0ZSk7XG5cdFx0fSxcblx0XHRrZWVwQ29tcGxldGU6IChwYWdlb2JqKSA9PiB7XG5cdFx0XHRjb25zdCBwYXJhbXMgPSBwYWdlb2JqLmdldENhbGxiYWNrUGFyYW1ldGVycygpO1xuXHRcdFx0VHdpbmtsZS5jbG9zZS5jYWxsYmFja3MudGFsa2VuZChwYXJhbXMpO1xuXHRcdH0sXG5cdFx0dGFsa2VuZDogKHBhcmFtcykgPT4ge1xuXHRcdFx0Y29uc3QgcWl1d2VuX3BhZ2UgPSBuZXcgTW9yZWJpdHMud2lraS5wYWdlKG13LmNvbmZpZy5nZXQoJ3dnUGFnZU5hbWUnKSwgJ+WFs+mXreiuqOiuuicpO1xuXHRcdFx0cWl1d2VuX3BhZ2Uuc2V0Q2FsbGJhY2tQYXJhbWV0ZXJzKHBhcmFtcyk7XG5cdFx0XHRxaXV3ZW5fcGFnZS5zZXRQYWdlU2VjdGlvbihwYXJhbXMuc2VjdGlvbik7XG5cdFx0XHRxaXV3ZW5fcGFnZS5sb2FkKFR3aW5rbGUuY2xvc2UuY2FsbGJhY2tzLnNhdmVUYWxrKTtcblx0XHR9LFxuXHRcdHNhdmVUYWxrOiAocGFnZW9iaikgPT4ge1xuXHRcdFx0Y29uc3Qgc3RhdGVsZW0gPSBwYWdlb2JqLmdldFN0YXR1c0VsZW1lbnQoKTtcblx0XHRcdGxldCB0ZXh0ID0gcGFnZW9iai5nZXRQYWdlVGV4dCgpO1xuXHRcdFx0Y29uc3QgcGFyYW1zID0gcGFnZW9iai5nZXRDYWxsYmFja1BhcmFtZXRlcnMoKTtcblx0XHRcdGlmICh0ZXh0LmluY2x1ZGVzKCd7e2RlbGgnKSkge1xuXHRcdFx0XHRzdGF0ZWxlbS5lcnJvcign6K6o6K665bey6KKr5YWz6ZetJyk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdGNvbnN0IHNiZWdpbiA9IHRleHQuaW5jbHVkZXMoJzxzZWN0aW9uIGJlZ2luPWJhY2tsb2cgLz4nKTtcblx0XHRcdGNvbnN0IHNlbmQgPSB0ZXh0LmluY2x1ZGVzKCc8c2VjdGlvbiBlbmQ9YmFja2xvZyAvPicpO1xuXHRcdFx0dGV4dCA9IHRleHQucmVwbGFjZSgnXFxuPHNlY3Rpb24gYmVnaW49YmFja2xvZyAvPicsICcnKTtcblx0XHRcdHRleHQgPSB0ZXh0LnJlcGxhY2UoJ1xcbjxzZWN0aW9uIGVuZD1iYWNrbG9nIC8+JywgJycpO1xuXHRcdFx0Y29uc3QgYmFyID0gdGV4dC5zcGxpdCgnXFxuLS0tLVxcbicpO1xuXHRcdFx0Y29uc3Qgc3BsaXQgPSBiYXJbMF0uc3BsaXQoJ1xcbicpO1xuXHRcdFx0dGV4dCA9IGAke3NwbGl0WzBdfVxcbnt7ZGVsaHwke3BhcmFtcy5jb2RlfX19XFxuYDtcblx0XHRcdHRleHQgKz0gc3BsaXQuc2xpY2UoMSkuam9pbignXFxuJyk7XG5cdFx0XHRjb25zdCByZWFzb24gPSBwYXJhbXMubWVzc2FnZURhdGEudmFsdWUgfHwgcGFyYW1zLm1lc3NhZ2VEYXRhLmxhYmVsO1xuXHRcdFx0dGV4dCArPSBgXFxuPGhyPlxcbjogJHtyZWFzb259YDtcblx0XHRcdGlmIChwYXJhbXMucmVtYXJrKSB7XG5cdFx0XHRcdHRleHQgKz0gYO+8miR7TW9yZWJpdHMuc3RyaW5nLmFwcGVuZFB1bmN0dWF0aW9uKHBhcmFtcy5yZW1hcmspfWA7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0ZXh0ICs9ICfjgIInO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCFNb3JlYml0cy51c2VySXNTeXNvcCkge1xuXHRcdFx0XHR0ZXh0ICs9ICd7eycuY29uY2F0KCdzdWJzdDonKS5jb25jYXQoJ05BQ319Jyk7XG5cdFx0XHR9XG5cdFx0XHR0ZXh0ICs9ICctLX5+Jy5jb25jYXQoJ35+JywgJ1xcbnt7ZGVsZn19Jyk7XG5cdFx0XHRpZiAoYmFyWzFdKSB7XG5cdFx0XHRcdHRleHQgKz0gYFxcbi0tLS1cXG4ke2Jhci5zbGljZSgxKS5qb2luKCdcXG4tLS0tXFxuJyl9YDtcblx0XHRcdH1cblx0XHRcdGlmIChzZW5kKSB7XG5cdFx0XHRcdHRleHQgKz0gJ1xcbjxzZWN0aW9uIGVuZD1iYWNrbG9nIC8+Jztcblx0XHRcdH1cblx0XHRcdGlmIChzYmVnaW4pIHtcblx0XHRcdFx0Ly8gZ3VhcmFudGVlZCB0byBiZSBhdCB0bmUgZW5kP1xuXHRcdFx0XHR0ZXh0ICs9ICdcXG48c2VjdGlvbiBiZWdpbj1iYWNrbG9nIC8+Jztcblx0XHRcdH1cblx0XHRcdHBhZ2VvYmouc2V0UGFnZVRleHQodGV4dCk7XG5cdFx0XHRwYWdlb2JqLnNldEVkaXRTdW1tYXJ5KGAvKiAke3BhcmFtcy50aXRsZX0gKi8gJHtyZWFzb259YCk7XG5cdFx0XHRwYWdlb2JqLnNldENoYW5nZVRhZ3MoVHdpbmtsZS5jaGFuZ2VUYWdzKTtcblx0XHRcdHBhZ2VvYmouc2V0Q3JlYXRlT3B0aW9uKCdub2NyZWF0ZScpO1xuXHRcdFx0cGFnZW9iai5zYXZlKFR3aW5rbGUuY2xvc2UuY2FsbGJhY2tzLmRpc2FibGVMaW5rKTtcblx0XHR9LFxuXHRcdGRpc2FibGVMaW5rOiAocGFnZW9iaikgPT4ge1xuXHRcdFx0Y29uc3QgcGFyYW1zID0gcGFnZW9iai5nZXRDYWxsYmFja1BhcmFtZXRlcnMoKTtcblx0XHRcdCQoYHN0cm9uZyBhW2hyZWY9IyR7cGFyYW1zLnNlY3Rpb259XSBzcGFuYCkuY3NzKCdjb2xvcicsICcjODA4MDgwJyk7XG5cdFx0fSxcblx0fTtcblx0VHdpbmtsZS5hZGRJbml0Q2FsbGJhY2soVHdpbmtsZS5jbG9zZSwgJ2Nsb3NlJyk7XG59KShqUXVlcnkpO1xuXG5leHBvcnQge307XG4iLCAiLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHMtY29tbWVudFxuLy8gQHRzLW5vY2hlY2tcblxuLyohIFR3aW5rbGUuanMgLSB0d2lua2xlY29uZmlnLmpzICovXG4oZnVuY3Rpb24gdHdpbmtsZWNvbmZpZygkKSB7XG5cdGNvbnN0ICRib2R5ID0gJCgnYm9keScpO1xuXHQvKipcblx0ICogdHdpbmtsZWNvbmZpZy5qczogUHJlZmVyZW5jZXMgbW9kdWxlXG5cdCAqIE1vZGUgb2YgaW52b2NhdGlvbjogQWRkcyBjb25maWd1cmF0aW9uIGZvcm0gdG8gSGVscDpUd2lua2xlL+WPguaVsOiuvue9rixcblx0ICogYW5kIGFkZHMgYW4gYWQgYm94IHRvIHRoZSB0b3Agb2YgdXNlciBzdWJwYWdlcyBiZWxvbmdpbmcgdG8gdGhlXG5cdCAqIGN1cnJlbnRseSBsb2dnZWQtaW4gdXNlciB3aGljaCBlbmQgaW4gJy5qcydcblx0ICogQWN0aXZlIG9uOiBXaGF0IEkganVzdCBzYWlkLiBZZWFoLlxuXHQgKi9cblx0VHdpbmtsZS5jb25maWcgPSB7fTtcblx0VHdpbmtsZS5jb25maWcud2F0Y2hsaXN0RW51bXMgPSB7XG5cdFx0eWVzOiB3aW5kb3cud2dVTFMoJ+awuOS5heWKoOWFpeWIsOebkeinhuWIl+ihqCcsICfmsLjkuYXliqDlhaXliLDnm6PoppbmuIXllq4nKSxcblx0XHRubzogd2luZG93LndnVUxTKCfkuI3liqDlhaXliLDnm5Hop4bliJfooagnLCAn5LiN5Yqg5YWl5Yiw55uj6KaW5riF5ZauJyksXG5cdFx0ZGVmYXVsdDogd2luZG93LndnVUxTKCfpgbXlrojnq5nngrnorr7nva4nLCAn6YG15a6I56uZ6bue6Kit5a6aJyksXG5cdFx0JzEgd2Vlayc6IHdpbmRvdy53Z1VMUygn5Yqg5YWl5Yiw55uR6KeG5YiX6KGoMeWRqCcsICfliqDlhaXliLDnm6PoppbmuIXllq4x6YCxJyksXG5cdFx0JzEgbW9udGgnOiB3aW5kb3cud2dVTFMoJ+WKoOWFpeWIsOebkeinhuWIl+ihqDHkuKrmnIgnLCAn5Yqg5YWl5Yiw55uj6KaW5riF5ZauMeWAi+aciCcpLFxuXHRcdCczIG1vbnRocyc6IHdpbmRvdy53Z1VMUygn5Yqg5YWl5Yiw55uR6KeG5YiX6KGoM+S4quaciCcsICfliqDlhaXliLDnm6PoppbmuIXllq4z5YCL5pyIJyksXG5cdFx0JzYgbW9udGhzJzogd2luZG93LndnVUxTKCfliqDlhaXliLDnm5Hop4bliJfooag25Liq5pyIJywgJ+WKoOWFpeWIsOebo+imlua4heWWrjblgIvmnIgnKSxcblx0fTtcblx0VHdpbmtsZS5jb25maWcuY29tbW9uU2V0cyA9IHtcblx0XHRjc2RDcml0ZXJpYToge1xuXHRcdFx0ZGI6IHdpbmRvdy53Z1VMUygn6Ieq5a6a5LmJ55CG55SxJywgJ+iHquiogueQhueUsScpLFxuXHRcdFx0ZzE6ICdHMScsXG5cdFx0XHRnMjogJ0cyJyxcblx0XHRcdGczOiAnRzMnLFxuXHRcdFx0ZzQ6ICdHNCcsXG5cdFx0XHRnNTogJ0c1Jyxcblx0XHRcdGc2OiAnRzYnLFxuXHRcdFx0Zzc6ICdHNycsXG5cdFx0XHRnODogJ0c4Jyxcblx0XHRcdGc5OiAnRzknLFxuXHRcdFx0YTE6ICdBMScsXG5cdFx0XHRhMjogJ0EyJyxcblx0XHRcdGEzOiAnQTMnLFxuXHRcdFx0bzE6ICdPMScsXG5cdFx0XHRvMjogJ08yJyxcblx0XHRcdG8zOiAnTzMnLFxuXHRcdFx0ZjE6ICdGMScsXG5cdFx0XHRmMjogJ0YyJyxcblx0XHRcdGYzOiAnRjMnLFxuXHRcdFx0ZjQ6ICdGNCcsXG5cdFx0XHRmNTogJ0Y1Jyxcblx0XHRcdHIxOiAnUjEnLFxuXHRcdFx0cjI6ICdSMicsXG5cdFx0fSxcblx0XHRjc2RDcml0ZXJpYURpc3BsYXlPcmRlcjogW1xuXHRcdFx0J2RiJyxcblx0XHRcdCdnMScsXG5cdFx0XHQnZzInLFxuXHRcdFx0J2czJyxcblx0XHRcdCdnNCcsXG5cdFx0XHQnZzUnLFxuXHRcdFx0J2c2Jyxcblx0XHRcdCdnNycsXG5cdFx0XHQnZzgnLFxuXHRcdFx0J2c5Jyxcblx0XHRcdCdhMScsXG5cdFx0XHQnYTInLFxuXHRcdFx0J2EzJyxcblx0XHRcdCdvMScsXG5cdFx0XHQnbzInLFxuXHRcdFx0J28zJyxcblx0XHRcdCdmMScsXG5cdFx0XHQnZjInLFxuXHRcdFx0J2YzJyxcblx0XHRcdCdmNCcsXG5cdFx0XHQnZjUnLFxuXHRcdFx0J3IxJyxcblx0XHRcdCdyMicsXG5cdFx0XSxcblx0XHRjc2RDcml0ZXJpYU5vdGlmaWNhdGlvbjoge1xuXHRcdFx0ZGI6IHdpbmRvdy53Z1VMUygn6Ieq5a6a5LmJ55CG55SxJywgJ+iHquiogueQhueUsScpLFxuXHRcdFx0ZzE6ICdHMScsXG5cdFx0XHRnMjogJ0cyJyxcblx0XHRcdGczOiAnRzMnLFxuXHRcdFx0ZzQ6ICdHNCcsXG5cdFx0XHRnNTogJ0c1Jyxcblx0XHRcdGc2OiAnRzYnLFxuXHRcdFx0Zzc6ICdHNycsXG5cdFx0XHRnODogJ0c4Jyxcblx0XHRcdGc5OiAnRzknLFxuXHRcdFx0YTE6ICdBMScsXG5cdFx0XHRhMjogJ0EyJyxcblx0XHRcdGEzOiAnQTMnLFxuXHRcdFx0bzE6ICdPMScsXG5cdFx0XHRvMjogJ08yJyxcblx0XHRcdG8zOiAnTzMnLFxuXHRcdFx0ZjE6ICdGMScsXG5cdFx0XHRmMjogJ0YyJyxcblx0XHRcdGYzOiAnRjMnLFxuXHRcdFx0ZjQ6ICdGNCcsXG5cdFx0XHRmNTogJ0Y1Jyxcblx0XHRcdHIxOiAnUjEnLFxuXHRcdFx0cjI6ICdSMicsXG5cdFx0fSxcblx0XHRjc2RDcml0ZXJpYU5vdGlmaWNhdGlvbkRpc3BsYXlPcmRlcjogW1xuXHRcdFx0J2RiJyxcblx0XHRcdCdnMScsXG5cdFx0XHQnZzInLFxuXHRcdFx0J2czJyxcblx0XHRcdCdnNCcsXG5cdFx0XHQnZzUnLFxuXHRcdFx0J2c2Jyxcblx0XHRcdCdnNycsXG5cdFx0XHQnZzgnLFxuXHRcdFx0J2c5Jyxcblx0XHRcdCdhMScsXG5cdFx0XHQnYTInLFxuXHRcdFx0J2EzJyxcblx0XHRcdCdvMScsXG5cdFx0XHQnbzInLFxuXHRcdFx0J28zJyxcblx0XHRcdCdmMScsXG5cdFx0XHQnZjInLFxuXHRcdFx0J2YzJyxcblx0XHRcdCdmNCcsXG5cdFx0XHQnZjUnLFxuXHRcdFx0J3IxJyxcblx0XHRcdCdyMicsXG5cdFx0XSxcblx0XHRjc2RBbmRESUNyaXRlcmlhOiB7XG5cdFx0XHRkYjogd2luZG93LndnVUxTKCfoh6rlrprkuYnnkIbnlLEnLCAn6Ieq6KiC55CG55SxJyksXG5cdFx0XHRnMTogJ0cxJyxcblx0XHRcdGcyOiAnRzInLFxuXHRcdFx0ZzM6ICdHMycsXG5cdFx0XHRnNDogJ0c0Jyxcblx0XHRcdGc1OiAnRzUnLFxuXHRcdFx0ZzY6ICdHNicsXG5cdFx0XHRnNzogJ0c3Jyxcblx0XHRcdGc4OiAnRzgnLFxuXHRcdFx0Zzk6ICdHOScsXG5cdFx0XHRhMTogJ0ExJyxcblx0XHRcdGEyOiAnQTInLFxuXHRcdFx0YTM6ICdBMycsXG5cdFx0XHRvMTogJ08xJyxcblx0XHRcdG8yOiAnTzInLFxuXHRcdFx0bzM6ICdPMycsXG5cdFx0XHRmMTogJ0YxJyxcblx0XHRcdGYyOiAnRjInLFxuXHRcdFx0ZjM6ICdGMycsXG5cdFx0XHRmNDogJ0Y0Jyxcblx0XHRcdGY1OiAnRjUnLFxuXHRcdFx0cjE6ICdSMScsXG5cdFx0XHRyMjogJ1IyJyxcblx0XHR9LFxuXHRcdGNzZEFuZERJQ3JpdGVyaWFEaXNwbGF5T3JkZXI6IFtcblx0XHRcdCdkYicsXG5cdFx0XHQnZzEnLFxuXHRcdFx0J2cyJyxcblx0XHRcdCdnMycsXG5cdFx0XHQnZzQnLFxuXHRcdFx0J2c1Jyxcblx0XHRcdCdnNicsXG5cdFx0XHQnZzcnLFxuXHRcdFx0J2c4Jyxcblx0XHRcdCdnOScsXG5cdFx0XHQnYTEnLFxuXHRcdFx0J2EyJyxcblx0XHRcdCdhMycsXG5cdFx0XHQnbzEnLFxuXHRcdFx0J28yJyxcblx0XHRcdCdvMycsXG5cdFx0XHQnZjEnLFxuXHRcdFx0J2YyJyxcblx0XHRcdCdmMycsXG5cdFx0XHQnZjQnLFxuXHRcdFx0J2Y1Jyxcblx0XHRcdCdyMScsXG5cdFx0XHQncjInLFxuXHRcdF0sXG5cdFx0eGZkQ3JpdGVyaWE6IHtcblx0XHRcdGRlbGV0ZTogd2luZG93LndnVUxTKCfliKDpmaQnLCAn5Yiq6ZmkJyksXG5cdFx0XHRtZXJnZTogd2luZG93LndnVUxTKCflkIjlubYnLCAn5ZCI5L21JyksXG5cdFx0XHRmd2Rjc2Q6IHdpbmRvdy53Z1VMUygn6L2s5Lqk6Ieq5b+r6YCf5Yig6Zmk5YCZ6YCJJywgJ+i9ieS6pOiHquW/q+mAn+WIqumZpOWAmemBuCcpLFxuXHRcdFx0ZmFtZTogd2luZG93LndnVUxTKCfmibnph4/lhbPms6jluqbmj5DliKAnLCAn5om55qyh6Zec5rOo5bqm5o+Q5YiqJyksXG5cdFx0XHRzdWJzdHViOiB3aW5kb3cud2dVTFMoJ+aJuemHj+Wwj+Wwj+S9nOWTgeaPkOWIoCcsICfmibnmrKHlsI/lsI/kvZzlk4Hmj5DliKonKSxcblx0XHRcdGJhdGNoOiB3aW5kb3cud2dVTFMoJ+aJuemHj+WFtuS7luaPkOWIoCcsICfmibnmrKHlhbbku5bmj5DliKonKSxcblx0XHR9LFxuXHRcdHhmZENyaXRlcmlhRGlzcGxheU9yZGVyOiBbJ2RlbGV0ZScsICdtZXJnZScsICdmd2Rjc2QnLCAnZmFtZScsICdzdWJzdHViJywgJ2JhdGNoJ10sXG5cdFx0bmFtZXNwYWNlc05vU3BlY2lhbDoge1xuXHRcdFx0MDogd2luZG93LndnVUxTKCfvvIjmnaHnm67vvIknLCAn77yI5qKd55uu77yJJyksXG5cdFx0XHQxOiAnVGFsaycsXG5cdFx0XHQyOiAnVXNlcicsXG5cdFx0XHQzOiAnVXNlciB0YWxrJyxcblx0XHRcdDQ6ICdRaXV3ZW4nLFxuXHRcdFx0NTogJ1FpdXdlbiB0YWxrJyxcblx0XHRcdDY6ICdGaWxlJyxcblx0XHRcdDc6ICdGaWxlIHRhbGsnLFxuXHRcdFx0ODogJ01lZGlhV2lraScsXG5cdFx0XHQ5OiAnTWVkaWFXaWtpIHRhbGsnLFxuXHRcdFx0MTA6ICdUZW1wbGF0ZScsXG5cdFx0XHQxMTogJ1RlbXBsYXRlIHRhbGsnLFxuXHRcdFx0MTI6ICdIZWxwJyxcblx0XHRcdDEzOiAnSGVscCB0YWxrJyxcblx0XHRcdDE0OiAnQ2F0ZWdvcnknLFxuXHRcdFx0MTU6ICdDYXRlZ29yeSB0YWxrJyxcblx0XHRcdDExODogJ0RyYWZ0Jyxcblx0XHRcdDExOTogJ0RyYWZ0IHRhbGsnLFxuXHRcdFx0MjA0OiAnTkVBJyxcblx0XHRcdDIwNTogJ05FQSB0YWxrJyxcblx0XHRcdDIwNjogJ0FkZGVuZHVtJyxcblx0XHRcdDIwNzogJ0FkZGVuZHVtIHRhbGsnLFxuXHRcdFx0ODI4OiAnTW9kdWxlJyxcblx0XHRcdDgyOTogJ01vZHVsZSB0YWxrJyxcblx0XHR9LFxuXHR9O1xuXHQvKipcblx0ICogU2VjdGlvbiBlbnRyeSBmb3JtYXQ6XG5cdCAqXG5cdCAqIHtcblx0ICogICB0aXRsZTogPGh1bWFuLXJlYWRhYmxlIHNlY3Rpb24gdGl0bGU+LFxuXHQgKiAgIG1vZHVsZTogPG5hbWUgb2YgdGhlIGFzc29jaWF0ZWQgbW9kdWxlLCB1c2VkIHRvIGxpbmsgdG8gc2VjdGlvbnM+LFxuXHQgKiAgIGFkbWluT25seTogPHRydWUgZm9yIGFkbWluLW9ubHkgc2VjdGlvbnM+LFxuXHQgKiAgIGhpZGRlbjogPHRydWUgZm9yIGFkdmFuY2VkIHByZWZlcmVuY2VzIHRoYXQgcmFyZWx5IG5lZWQgdG8gYmUgY2hhbmdlZCAtIHRoZXkgY2FuIHN0aWxsIGJlIG1vZGlmaWVkIGJ5IG1hbnVhbGx5IGVkaXRpbmcgdHdpbmtsZW9wdGlvbnMuanM+LFxuXHQgKiAgIHByZWZlcmVuY2VzOiBbXG5cdCAqICAgICB7XG5cdCAqICAgICAgIG5hbWU6IDxUd2lua2xlQ29uZmlnIHByb3BlcnR5IG5hbWU+LFxuXHQgKiAgICAgICBsYWJlbDogPGh1bWFuLXJlYWRhYmxlIHNob3J0IGRlc2NyaXB0aW9uIC0gdXNlZCBhcyBhIGZvcm0gbGFiZWw+LFxuXHQgKiAgICAgICBoZWxwdGlwOiA8KG9wdGlvbmFsKSBodW1hbi1yZWFkYWJsZSB0ZXh0ICh1c2luZyB2YWxpZCBIVE1MKSB0aGF0IGNvbXBsZW1lbnRzIHRoZSBkZXNjcmlwdGlvbiwgbGlrZSBsaW1pdHMsIHdhcm5pbmdzLCBldGMuPlxuXHQgKiAgICAgICBhZG1pbk9ubHk6IDx0cnVlIGZvciBhZG1pbi1vbmx5IHByZWZlcmVuY2VzPixcblx0ICogICAgICAgdHlwZTogPHN0cmluZ3xib29sZWFufGludGVnZXJ8ZW51bXxzZXR8Y3VzdG9tTGlzdD4gKGN1c3RvbUxpc3Qgc3RvcmVzIGFuIGFycmF5IG9mIEpTT04gb2JqZWN0cyB7IHZhbHVlLCBsYWJlbCB9KSxcblx0ICogICAgICAgZW51bVZhbHVlczogPGZvciB0eXBlID0gXCJlbnVtXCI6IGEgSlNPTiBvYmplY3Qgd2hlcmUgdGhlIGtleXMgYXJlIHRoZSBpbnRlcm5hbCBuYW1lcyBhbmQgdGhlIHZhbHVlcyBhcmUgaHVtYW4tcmVhZGFibGUgc3RyaW5ncz4sXG5cdCAqICAgICAgIHNldFZhbHVlczogPGZvciB0eXBlID0gXCJzZXRcIjogYSBKU09OIG9iamVjdCB3aGVyZSB0aGUga2V5cyBhcmUgdGhlIGludGVybmFsIG5hbWVzIGFuZCB0aGUgdmFsdWVzIGFyZSBodW1hbi1yZWFkYWJsZSBzdHJpbmdzPixcblx0ICogICAgICAgc2V0RGlzcGxheU9yZGVyOiA8KG9wdGlvbmFsKSBmb3IgdHlwZSA9IFwic2V0XCI6IGFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIGtleXMgb2Ygc2V0VmFsdWVzIChhcyBzdHJpbmdzKSBpbiB0aGUgb3JkZXIgdGhhdCB0aGV5IGFyZSBkaXNwbGF5ZWQ+LFxuXHQgKiAgICAgICBjdXN0b21MaXN0VmFsdWVUaXRsZTogPGZvciB0eXBlID0gXCJjdXN0b21MaXN0XCI6IHRoZSBoZWFkaW5nIGZvciB0aGUgbGVmdCBcInZhbHVlXCIgY29sdW1uIGluIHRoZSBjdXN0b20gbGlzdCBlZGl0b3I+LFxuXHQgKiAgICAgICBjdXN0b21MaXN0TGFiZWxUaXRsZTogPGZvciB0eXBlID0gXCJjdXN0b21MaXN0XCI6IHRoZSBoZWFkaW5nIGZvciB0aGUgcmlnaHQgXCJsYWJlbFwiIGNvbHVtbiBpbiB0aGUgY3VzdG9tIGxpc3QgZWRpdG9yPlxuXHQgKiAgICAgfSxcblx0ICogICAgIC4gLiAuXG5cdCAqICAgXVxuXHQgKiB9LFxuXHQgKiAuIC4gLlxuXHQgKlxuXHQgKi9cblx0VHdpbmtsZS5jb25maWcuc2VjdGlvbnMgPSBbXG5cdFx0e1xuXHRcdFx0dGl0bGU6IHdpbmRvdy53Z1VMUygn5bi46KeEJywgJ+W4uOimjycpLFxuXHRcdFx0bW9kdWxlOiAnZ2VuZXJhbCcsXG5cdFx0XHRwcmVmZXJlbmNlczogW1xuXHRcdFx0XHQvLyBUd2lua2xlQ29uZmlnLnVzZXJUYWxrUGFnZU1vZGUgbWF5IHRha2UgYXJndW1lbnRzOlxuXHRcdFx0XHQvLyAnd2luZG93Jzogb3BlbiBhIG5ldyB3aW5kb3csIHJlbWVtYmVyIHRoZSBvcGVuZWQgd2luZG93XG5cdFx0XHRcdC8vICd0YWInOiBvcGVucyBpbiBhIG5ldyB0YWIsIGlmIHBvc3NpYmxlLlxuXHRcdFx0XHQvLyAnYmxhbmsnOiBmb3JjZSBvcGVuIGluIGEgbmV3IHdpbmRvdywgZXZlbiBpZiBzdWNoIGEgd2luZG93IGV4aXN0c1xuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ3VzZXJUYWxrUGFnZU1vZGUnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+W9k+imgeaJk+W8gOeUqOaIt+iuqOiuuumhteaXticsICfnlbbopoHmiZPplovkvb/nlKjogIXoqI7oq5bpoIHmmYInKSxcblx0XHRcdFx0XHR0eXBlOiAnZW51bScsXG5cdFx0XHRcdFx0ZW51bVZhbHVlczoge1xuXHRcdFx0XHRcdFx0d2luZG93OiB3aW5kb3cud2dVTFMoJ+WcqOeql+WPo+S4re+8jOabv+aNouaIkOWFtuWug+eUqOaIt+WvueivnemhtScsICflnKjnlbbliY3liIbpoIHvvIzmm7/mj5vmiJDlhbblroPnlKjmiLboqI7oq5bpoIEnKSxcblx0XHRcdFx0XHRcdHRhYjogd2luZG93LndnVUxTKCflnKjmlrDmoIfnrb7pobXkuK0nLCAn5Zyo5paw5YiG6aCB5LitJyksXG5cdFx0XHRcdFx0XHRibGFuazogd2luZG93LndnVUxTKCflnKjlhajmlrDnmoTnqpflj6PkuK0nLCAn5Zyo5paw6KaW56qX5LitJyksXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0fSxcblx0XHRcdFx0Ly8gVHdpbmtsZUNvbmZpZy5kaWFsb2dMYXJnZUZvbnQgKGJvb2xlYW4pXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnZGlhbG9nTGFyZ2VGb250Jyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflnKhUd2lua2xl5a+56K+d5qGG5Lit5L2/55So5aSn5Y+35a2X5L2TJywgJ+WcqFR3aW5rbGXlsI3oqbHmlrnloYrkuK3kvb/nlKjlpKfomZ/lrZflnosnKSxcblx0XHRcdFx0XHR0eXBlOiAnYm9vbGVhbicsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdC8vIFR3aW5rbGUuY29uZmlnLmRpc2FibGVkTW9kdWxlcyAoYXJyYXkpXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnZGlzYWJsZWRNb2R1bGVzJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflhbPpl63mjIflrprnmoRUd2lua2xl5qih5Z2XJywgJ+mXnOmWieaMh+WumueahFR3aW5rbGXmqKHntYQnKSxcblx0XHRcdFx0XHRoZWxwdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn5oKo5Zyo5q2k6YCJ5oup55qE5Yqf6IO95bCG5peg5rOV5L2/55So77yM5Y+W5raI6YCJ5oup5Lul6YeN5paw5ZCv55So5Yqf6IO944CCJyxcblx0XHRcdFx0XHRcdCfmgqjlnKjmraTpgbjmk4fnmoTlip/og73lsIfnhKHms5Xkvb/nlKjvvIzlj5bmtojpgbjmk4fku6Xph43mlrDllZ/nlKjlip/og73jgIInXG5cdFx0XHRcdFx0KSxcblx0XHRcdFx0XHR0eXBlOiAnc2V0Jyxcblx0XHRcdFx0XHRzZXRWYWx1ZXM6IHtcblx0XHRcdFx0XHRcdGFydjogd2luZG93LndnVUxTKCflkYrnirYnLCAn5ZGK54uAJyksXG5cdFx0XHRcdFx0XHR3YXJuOiAn6K2m5ZGKJyxcblx0XHRcdFx0XHRcdGJsb2NrOiB3aW5kb3cud2dVTFMoJ+WwgeemgScsICflsIHpjpYnKSxcblx0XHRcdFx0XHRcdHRhbGtiYWNrOiAn6YCa5ZGKJyxcblx0XHRcdFx0XHRcdHNwZWVkeTogd2luZG93LndnVUxTKCfpgJ/liKAnLCAn6YCf5YiqJyksXG5cdFx0XHRcdFx0XHRjb3B5dmlvOiB3aW5kb3cud2dVTFMoJ+S+teadgycsICfkvrXmrIonKSxcblx0XHRcdFx0XHRcdHhmZDogd2luZG93LndnVUxTKCfmj5DliKAnLCAn5o+Q5YiqJyksXG5cdFx0XHRcdFx0XHRpbWFnZTogd2luZG93LndnVUxTKCflm77mnYMnLCAn5ZyW5qyKJyksXG5cdFx0XHRcdFx0XHRwcm90ZWN0OiB3aW5kb3cud2dVTFMoJ+S/neaKpCcsICfkv53orbcnKSxcblx0XHRcdFx0XHRcdHRhZzogd2luZG93LndnVUxTKCfmoIforrAnLCAn5qiZ6KiYJyksXG5cdFx0XHRcdFx0XHRzdHViOiAn5bCP5L2c5ZOBJyxcblx0XHRcdFx0XHRcdGRpZmY6IHdpbmRvdy53Z1VMUygn5beu5byCJywgJ+W3rueVsCcpLFxuXHRcdFx0XHRcdFx0dW5saW5rOiB3aW5kb3cud2dVTFMoJ+mTvuWFpScsICfpgKPlhaUnKSxcblx0XHRcdFx0XHRcdGZsdWZmOiAn5Zue6YCAJyxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHR9LFxuXHRcdFx0XHQvLyBUd2lua2xlLmNvbmZpZy5kaXNhYmxlZFN5c29wTW9kdWxlcyAoYXJyYXkpXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnZGlzYWJsZWRTeXNvcE1vZHVsZXMnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WFs+mXreaMh+WumueahFR3aW5rbGXnrqHnkIblkZjmqKHlnZcnLCAn6Zec6ZaJ5oyH5a6a55qEVHdpbmtsZeeuoeeQhuWToeaooee1hCcpLFxuXHRcdFx0XHRcdGhlbHB0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfmgqjlnKjmraTpgInmi6nnmoTlip/og73lsIbml6Dms5Xkvb/nlKjvvIzlj5bmtojpgInmi6nku6Xph43mlrDlkK/nlKjlip/og73jgIInLFxuXHRcdFx0XHRcdFx0J+aCqOWcqOatpOmBuOaTh+eahOWKn+iDveWwh+eEoeazleS9v+eUqO+8jOWPlua2iOmBuOaTh+S7pemHjeaWsOWVn+eUqOWKn+iDveOAgidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdGFkbWluT25seTogdHJ1ZSxcblx0XHRcdFx0XHR0eXBlOiAnc2V0Jyxcblx0XHRcdFx0XHRzZXRWYWx1ZXM6IHtcblx0XHRcdFx0XHRcdGJhdGNoZGVsZXRlOiB3aW5kb3cud2dVTFMoJ+aJueWIoCcsICfmibnliKonKSxcblx0XHRcdFx0XHRcdGJhdGNodW5kZWxldGU6IHdpbmRvdy53Z1VMUygn5om55aSNJywgJ+aJueW+qScpLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0dGl0bGU6IHdpbmRvdy53Z1VMUygn5ZGK54q2JywgJ+WRiueLgCcpLFxuXHRcdFx0bW9kdWxlOiAnYXJ2Jyxcblx0XHRcdHByZWZlcmVuY2VzOiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnc3BpV2F0Y2hSZXBvcnQnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WPkei1t+WCgOWEoeiwg+afpeaXtuWKoOWFpeWIsOebkeinhuWIl+ihqCcsICfnmbzotbflgoDlhKHoqr/mn6XmmYLliqDlhaXliLDnm6PoppbmuIXllq4nKSxcblx0XHRcdFx0XHR0eXBlOiAnZW51bScsXG5cdFx0XHRcdFx0ZW51bVZhbHVlczogVHdpbmtsZS5jb25maWcud2F0Y2hsaXN0RW51bXMsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0dGl0bGU6IHdpbmRvdy53Z1VMUygn5bCB56aB55So5oi3JywgJ+WwgemOluS9v+eUqOiAhScpLFxuXHRcdFx0bW9kdWxlOiAnYmxvY2snLFxuXHRcdFx0YWRtaW5Pbmx5OiB0cnVlLFxuXHRcdFx0cHJlZmVyZW5jZXM6IFtcblx0XHRcdFx0Ly8gVHdpbmtsZUNvbmZpZy5kZWZhdWx0VG9CbG9jazY0IChib29sZWFuKVxuXHRcdFx0XHQvLyBXaGV0aGVyIHRvIGRlZmF1bHQgdG8ganVzdCBibG9ja2luZyB0aGUgLzY0IG9uIG9yIG9mZlxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ2RlZmF1bHRUb0Jsb2NrNjQnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WvueS6jklQdjblnLDlnYDvvIzpu5jorqTpgInmi6nlsIHnpoEvNjTmrrUnLCAn5bCN5pa8SVB2NuWcsOWdgO+8jOmgkOioremBuOaTh+WwgemOli82NOautScpLFxuXHRcdFx0XHRcdHR5cGU6ICdib29sZWFuJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0Ly8gVHdpbmtsZUNvbmZpZy5kZWZhdWx0VG9QYXJ0aWFsQmxvY2tzIChib29sZWFuKVxuXHRcdFx0XHQvLyBXaGV0aGVyIHRvIGRlZmF1bHQgcGFydGlhbCBibG9ja3Mgb24gb3Igb2ZmXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnZGVmYXVsdFRvUGFydGlhbEJsb2NrcycsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5omT5byA5bCB56aB6I+c5Y2V5pe26buY6K6k6YCJ5oup6YOo5YiG5bCB56aBJywgJ+aJk+mWi+WwgemOlumBuOWWruaZgumgkOioremBuOaTh+mDqOWIhuWwgemOlicpLFxuXHRcdFx0XHRcdHR5cGU6ICdib29sZWFuJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0Ly8gVHdpbmtsZUNvbmZpZy53YXRjaEJsb2NrTm90aWNlcyAoc3RyaW5nKVxuXHRcdFx0XHQvLyBXYXRjaGxpc3Qgc2V0dGluZyBmb3IgdGhlIHBhZ2Ugd2hpY2ggaGFzIGJlZW4gZGlzcGF0Y2hlZCBhbiB3YXJuaW5nIG9yIG5vdGljZVxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ3dhdGNoQmxvY2tOb3RpY2VzJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+WPkemAgeWwgeemgeaooeadv+aXtuWKoOWFpeeUqOaIt+iuqOiuuumhteWIsOebkeinhuWIl+ihqCcsXG5cdFx0XHRcdFx0XHQn55m86YCB5bCB6Y6W5qih5p2/5pmC5Yqg5YWl5L2/55So6ICF6KiO6KuW6aCB5Yiw55uj6KaW5riF5ZauJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0dHlwZTogJ2VudW0nLFxuXHRcdFx0XHRcdGVudW1WYWx1ZXM6IFR3aW5rbGUuY29uZmlnLndhdGNobGlzdEVudW1zLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ2N1c3RvbUJsb2NrUmVhc29uTGlzdCcsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6Ieq5a6a5LmJ5bCB56aB55CG55SxJywgJ+iHquioguWwgemOlueQhueUsScpLFxuXHRcdFx0XHRcdGhlbHB0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfmgqjlj6/ku6XliqDlhaXluLjnlKjnmoTlsIHnpoHnkIbnlLHjgILoh6rlrprkuYnnmoTlsIHnpoHnkIbnlLHkvJrlh7rnjrDlnKjkuIDoiKznmoTlsIHnpoHnkIbnlLHkuIvmlrnjgIInLFxuXHRcdFx0XHRcdFx0J+aCqOWPr+S7peWKoOWFpeW4uOeUqOeahOWwgemOlueQhueUseOAguiHquiogueahOWwgemOlueQhueUseacg+WHuuePvuWcqOS4gOiIrOeahOWwgemOlueQhueUseS4i+aWueOAgidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdHR5cGU6ICdjdXN0b21MaXN0Jyxcblx0XHRcdFx0XHRjdXN0b21MaXN0VmFsdWVUaXRsZTogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+S9v+eUqOWwgeemgeaooeadv++8iOm7mOiupOS4uiB1dy1ibG9jazHvvIknLFxuXHRcdFx0XHRcdFx0J+S9v+eUqOWwgemOluaooeadv++8iOmgkOioreeCuiB1dy1ibG9jazHvvIknXG5cdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRjdXN0b21MaXN0TGFiZWxUaXRsZTogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+KAnOeUseS6juKApuaCqOW3suiiq+WwgeemgeKAneWPiuWwgeemgeaXpeW/l+eQhueUsScsXG5cdFx0XHRcdFx0XHQn44CM55Sx5pa84oCm5oKo5bey6KKr5bCB6Y6W44CN5Y+K5bCB6Y6W5pel6KqM55CG55SxJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0dGl0bGU6IHdpbmRvdy53Z1VMUygn5Zu+54mH5Yig6ZmkJywgJ+WclueJh+WIqumZpCcpLFxuXHRcdFx0bW9kdWxlOiAnaW1hZ2UnLFxuXHRcdFx0cHJlZmVyZW5jZXM6IFtcblx0XHRcdFx0Ly8gVHdpbmtsZUNvbmZpZy5ub3RpZnlVc2VyT25EZWxpIChib29sZWFuKVxuXHRcdFx0XHQvLyBJZiB0aGUgdXNlciBzaG91bGQgYmUgbm90aWZpZWQgYWZ0ZXIgcGxhY2luZyBhIGZpbGUgZGVsZXRpb24gdGFnXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnbm90aWZ5VXNlck9uRGVsaScsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6buY6K6k5Yu+6YCJ4oCc6YCa55+l5Yib5bu66ICF4oCdJywgJ+mgkOioreWLvumBuOOAjOmAmuefpeW7uueri+iAheOAjScpLFxuXHRcdFx0XHRcdHR5cGU6ICdib29sZWFuJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0Ly8gVHdpbmtsZUNvbmZpZy5kZWxpV2F0Y2hQYWdlIChzdHJpbmcpXG5cdFx0XHRcdC8vIFRoZSB3YXRjaGxpc3Qgc2V0dGluZyBvZiB0aGUgcGFnZSB0YWdnZWQgZm9yIGRlbGV0aW9uLlxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ2RlbGlXYXRjaFBhZ2UnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+agh+iusOWbvueJh+aXtuWKoOWFpeWIsOebkeinhuWIl+ihqCcsICfmqJnoqJjlnJbniYfmmYLliqDlhaXliLDnm6PoppbmuIXllq4nKSxcblx0XHRcdFx0XHR0eXBlOiAnZW51bScsXG5cdFx0XHRcdFx0ZW51bVZhbHVlczogVHdpbmtsZS5jb25maWcud2F0Y2hsaXN0RW51bXMsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdC8vIFR3aW5rbGVDb25maWcuZGVsaVdhdGNoVXNlciAoc3RyaW5nKVxuXHRcdFx0XHQvLyBUaGUgd2F0Y2hsaXN0IHNldHRpbmcgb2YgdGhlIHVzZXIgdGFsayBwYWdlIGlmIGEgbm90aWZpY2F0aW9uIGlzIHBsYWNlZC5cblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdkZWxpV2F0Y2hVc2VyJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmoIforrDlm77niYfml7bliqDlhaXliJvlu7rogIXorqjorrrpobXliLDnm5Hop4bliJfooagnLCAn5qiZ6KiY5ZyW54mH5pmC5Yqg5YWl5bu656uL6ICF6KiO6KuW6aCB5Yiw55uj6KaW5riF5ZauJyksXG5cdFx0XHRcdFx0dHlwZTogJ2VudW0nLFxuXHRcdFx0XHRcdGVudW1WYWx1ZXM6IFR3aW5rbGUuY29uZmlnLndhdGNobGlzdEVudW1zLFxuXHRcdFx0XHR9LFxuXHRcdFx0XSxcblx0XHR9LFxuXHRcdHtcblx0XHRcdHRpdGxlOiB3aW5kb3cud2dVTFMoJ+S/neaKpCcsICfkv53orbcnKSxcblx0XHRcdG1vZHVsZTogJ3Byb3RlY3QnLFxuXHRcdFx0cHJlZmVyZW5jZXM6IFtcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICd3YXRjaFJlcXVlc3RlZFBhZ2VzJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfor7fmsYLkv53miqTpobXpnaLml7bliqDlhaXliLDnm5Hop4bliJfooagnLCAn6KuL5rGC5L+d6K236aCB6Z2i5pmC5Yqg5YWl5Yiw55uj6KaW5riF5ZauJyksXG5cdFx0XHRcdFx0dHlwZTogJ2VudW0nLFxuXHRcdFx0XHRcdGVudW1WYWx1ZXM6IFR3aW5rbGUuY29uZmlnLndhdGNobGlzdEVudW1zLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ3dhdGNoUFBUYWdnZWRQYWdlcycsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5qCH6K6w5L+d5oqk5qih5p2/5pe25Yqg5YWl5Yiw55uR6KeG5YiX6KGoJywgJ+aomeiomOS/neitt+aooeadv+aZguWKoOWFpeWIsOebo+imlua4heWWricpLFxuXHRcdFx0XHRcdHR5cGU6ICdlbnVtJyxcblx0XHRcdFx0XHRlbnVtVmFsdWVzOiBUd2lua2xlLmNvbmZpZy53YXRjaGxpc3RFbnVtcyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICd3YXRjaFByb3RlY3RlZFBhZ2VzJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfkv53miqTml7bliqDlhaXliLDnm5Hop4bliJfooagnLCAn5L+d6K235pmC5Yqg5YWl5Yiw55uj6KaW5riF5ZauJyksXG5cdFx0XHRcdFx0aGVscHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+iLpeWcqOS/neaKpOWQjuS5n+agh+iusOmhtemdou+8jOWImeS9v+eUqOagh+iusOmhtemdoueahOWPguaVsOiuvue9ruOAgicsXG5cdFx0XHRcdFx0XHQn6Iul5Zyo5L+d6K235b6M5Lmf5qiZ6KiY6aCB6Z2i77yM5YmH5L2/55So5qiZ6KiY6aCB6Z2i55qE5YGP5aW96Kit5a6a44CCJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0YWRtaW5Pbmx5OiB0cnVlLFxuXHRcdFx0XHRcdHR5cGU6ICdlbnVtJyxcblx0XHRcdFx0XHRlbnVtVmFsdWVzOiBUd2lua2xlLmNvbmZpZy53YXRjaGxpc3RFbnVtcyxcblx0XHRcdFx0fSxcblx0XHRcdF0sXG5cdFx0fSxcblx0XHR7XG5cdFx0XHR0aXRsZTogJ+WbnumAgCcsXG5cdFx0XHQvLyB0d2lua2xlZmx1ZmYgbW9kdWxlXG5cdFx0XHRtb2R1bGU6ICdmbHVmZicsXG5cdFx0XHRwcmVmZXJlbmNlczogW1xuXHRcdFx0XHQvLyBUd2lua2xlQ29uZmlnLmF1dG9NZW51QWZ0ZXJSb2xsYmFjayAoYm9vbClcblx0XHRcdFx0Ly8gT3B0aW9uIHRvIGF1dG9tYXRpY2FsbHkgb3BlbiB0aGUgd2FybmluZyBtZW51IGlmIHRoZSB1c2VyIHRhbGsgcGFnZSBpcyBvcGVuZWQgcG9zdC1yZXZlcnNpb25cblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdhdXRvTWVudUFmdGVyUm9sbGJhY2snLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn5ZyoVHdpbmtsZeWbnumAgOWQjuiHquWKqOaJk+W8gOeUqOaIt+iuqOiuuumhteS4iueahFR3aW5rbGXorablkYroj5zljZUnLFxuXHRcdFx0XHRcdFx0J+WcqFR3aW5rbGXlm57pgIDlvozoh6rli5XmiZPplovkvb/nlKjogIXoqI7oq5bpoIHkuIrnmoRUd2lua2xl6K2m5ZGK6YG45ZauJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0aGVscHRpcDogd2luZG93LndnVUxTKCfku4XlnKjpgInlj5bkuIvmlrnlr7nlupTmoYbml7bmiY3miafooYwnLCAn5YOF5Zyo6YG45Y+W5LiL5pa55bCN5oeJ5qGG5pmC5omN5Z+36KGMJyksXG5cdFx0XHRcdFx0dHlwZTogJ2Jvb2xlYW4nLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHQvLyBUd2lua2xlQ29uZmlnLm9wZW5UYWxrUGFnZSAoYXJyYXkpXG5cdFx0XHRcdC8vIFdoYXQgdHlwZXMgb2YgYWN0aW9ucyB0aGF0IHNob3VsZCByZXN1bHQgaW4gb3BlbmluZyBvZiB0YWxrIHBhZ2Vcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdvcGVuVGFsa1BhZ2UnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WcqOi/meS6m+exu+Wei+eahOWbnumAgOWQjuaJk+W8gOeUqOaIt+iuqOiuuumhtScsICflnKjpgJnkupvpoZ7liKXnmoTlm57pgIDlvozmiZPplovkvb/nlKjogIXoqI7oq5bpoIEnKSxcblx0XHRcdFx0XHR0eXBlOiAnc2V0Jyxcblx0XHRcdFx0XHRzZXRWYWx1ZXM6IHtcblx0XHRcdFx0XHRcdG5vcm06IHdpbmRvdy53Z1VMUygn5bi46KeE5Zue6YCAJywgJ+W4uOimj+WbnumAgCcpLFxuXHRcdFx0XHRcdFx0dmFuZDogd2luZG93LndnVUxTKCfnoLTlnY/lm57pgIAnLCAn56C05aOe5Zue6YCAJyksXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0fSxcblx0XHRcdFx0Ly8gVHdpbmtsZUNvbmZpZy5vcGVuVGFsa1BhZ2VPbkF1dG9SZXZlcnQgKGJvb2wpXG5cdFx0XHRcdC8vIERlZmluZXMgaWYgdGFsayBwYWdlIHNob3VsZCBiZSBvcGVuZWQgd2hlbiBjYWxsaW5nIHJldmVydCBmcm9tIGNvbnRyaWJzIG9yIHJlY2VudCBjaGFuZ2VzIHBhZ2VzLiBJZiBzZXQgdG8gdHJ1ZSwgb3BlblRhbGtQYWdlIGRlZmluZXMgdGhlbiBpZiB0YWxrIHBhZ2Ugd2lsbCBiZSBvcGVuZWQuXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnb3BlblRhbGtQYWdlT25BdXRvUmV2ZXJ0Jyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+WcqOS7jueUqOaIt+i0oeeMruWPiuacgOi/keabtOaUueS4reWPkei1t+WbnumAgOaXtuaJk+W8gOeUqOaIt+iuqOiuuumhtScsXG5cdFx0XHRcdFx0XHQn5Zyo5b6e5L2/55So6ICF6LKi54275Y+K6L+R5pyf6K6K5pu05Lit55m86LW35Zue6YCA5pmC5omT6ZaL5L2/55So6ICF6KiO6KuW6aCBJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0aGVscHRpcDogd2luZG93LndnVUxTKCflvZPlroPmiZPlvIDml7bvvIzkvp3otZbkuIrkuIDkuKrorr7nva7jgIInLCAn55W25a6D5omT6ZaL5pmC77yM5L6d6LO05LiK5LiA5YCL6Kit5a6a44CCJyksXG5cdFx0XHRcdFx0dHlwZTogJ2Jvb2xlYW4nLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHQvLyBUd2lua2xlQ29uZmlnLnJvbGxiYWNrSW5QbGFjZSAoYm9vbClcblx0XHRcdFx0Ly9cblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdyb2xsYmFja0luUGxhY2UnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn5Zyo5LuO55So5oi36LSh54yu5Y+K5pyA6L+R5pu05pS55Lit5Y+R6LW35Zue6YCA5pe25LiN5Yi35paw6aG16Z2iJyxcblx0XHRcdFx0XHRcdCflnKjlvp7kvb/nlKjogIXosqLnjbvlj4rov5HmnJ/orormm7TkuK3nmbzotbflm57pgIDmmYLkuI3ph43mlrDmlbTnkIbpoIHpnaInXG5cdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRoZWxwdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn5b2T5a6D5omT5byA5pe277yMVHdpbmtsZeWwhuS4jeS8muWcqOS7jueUqOaIt+i0oeeMruWPiuacgOi/keabtOaUueS4reWPkei1t+WbnumAgOaXtuWIt+aWsOmhtemdou+8jOWFgeiuuOaCqOS4gOasoeaAp+WbnumAgOWkmuS4que8lui+keOAgicsXG5cdFx0XHRcdFx0XHQn55W25a6D5omT6ZaL5pmC77yMVHdpbmtsZeWwh+S4jeacg+WcqOW+nuS9v+eUqOiAheiyoueNu+WPiui/keacn+iuiuabtOS4reeZvOi1t+WbnumAgOaZgumHjeaWsOaVtOeQhumggemdou+8jOWFgeioseaCqOS4gOasoeaAp+WbnumAgOWkmuWAi+e3qOi8r+OAgidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdHR5cGU6ICdib29sZWFuJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0Ly8gVHdpbmtsZUNvbmZpZy5tYXJrUmV2ZXJ0ZWRQYWdlc0FzTWlub3IgKGFycmF5KVxuXHRcdFx0XHQvLyBXaGF0IHR5cGVzIG9mIGFjdGlvbnMgdGhhdCBzaG91bGQgcmVzdWx0IGluIG1hcmtpbmcgZWRpdCBhcyBtaW5vclxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ21hcmtSZXZlcnRlZFBhZ2VzQXNNaW5vcicsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5bCG6L+Z5Lqb57G75Z6L55qE5Zue6YCA5qCH6K6w5Li65bCP5L+u5pS5JywgJ+Wwh+mAmeS6m+mhnuWIpeeahOWbnumAgOaomeiomOeCuuWwj+S/ruaUuScpLFxuXHRcdFx0XHRcdHR5cGU6ICdzZXQnLFxuXHRcdFx0XHRcdHNldFZhbHVlczoge1xuXHRcdFx0XHRcdFx0bm9ybTogd2luZG93LndnVUxTKCfluLjop4Tlm57pgIAnLCAn5bi46KaP5Zue6YCAJyksXG5cdFx0XHRcdFx0XHR2YW5kOiB3aW5kb3cud2dVTFMoJ+egtOWdj+WbnumAgCcsICfnoLTlo57lm57pgIAnKSxcblx0XHRcdFx0XHRcdHRvcmV2OiB3aW5kb3cud2dVTFMoJ+KAnOaBouWkjeatpOeJiOacrOKAnScsICfjgIzmgaLlvqnmraTniYjmnKzjgI0nKSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHR9LFxuXHRcdFx0XHQvLyBUd2lua2xlQ29uZmlnLndhdGNoUmV2ZXJ0ZWRQYWdlcyAoYXJyYXkpXG5cdFx0XHRcdC8vIFdoYXQgdHlwZXMgb2YgYWN0aW9ucyB0aGF0IHNob3VsZCByZXN1bHQgaW4gZm9yY2VkIGFkZGl0aW9uIHRvIHdhdGNobGlzdFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ3dhdGNoUmV2ZXJ0ZWRQYWdlcycsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5oqK6L+Z5Lqb57G75Z6L55qE5Zue6YCA5Yqg5YWl5Yiw55uR6KeG5YiX6KGoJywgJ+aKiumAmeS6m+mhnuWIpeeahOWbnumAgOWKoOWFpeWIsOebo+imlua4heWWricpLFxuXHRcdFx0XHRcdHR5cGU6ICdzZXQnLFxuXHRcdFx0XHRcdHNldFZhbHVlczoge1xuXHRcdFx0XHRcdFx0bm9ybTogd2luZG93LndnVUxTKCfluLjop4Tlm57pgIAnLCAn5bi46KaP5Zue6YCAJyksXG5cdFx0XHRcdFx0XHR2YW5kOiB3aW5kb3cud2dVTFMoJ+egtOWdj+WbnumAgCcsICfnoLTlo57lm57pgIAnKSxcblx0XHRcdFx0XHRcdHRvcmV2OiB3aW5kb3cud2dVTFMoJ+KAnOaBouWkjeatpOeJiOacrOKAnScsICfjgIzmgaLlvqnmraTniYjmnKzjgI0nKSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHR9LFxuXHRcdFx0XHQvLyBUd2lua2xlQ29uZmlnLndhdGNoUmV2ZXJ0ZWRFeHBpcnlcblx0XHRcdFx0Ly8gSWYgYW55IG9mIHRoZSBhYm92ZSBpdGVtcyBhcmUgc2VsZWN0ZWQsIHdoZXRoZXIgdG8gZXhwaXJlIHRoZSB3YXRjaFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ3dhdGNoUmV2ZXJ0ZWRFeHBpcnknLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+W9k+WbnumAgOmhtemdouaXtu+8jOWKoOWFpeWIsOebkeinhuWIl+ihqOeahOacn+mZkCcsICfnlbblm57pgIDpoIHpnaLmmYLvvIzliqDlhaXliLDnm6PoppbmuIXllq7nmoTmnJ/pmZAnKSxcblx0XHRcdFx0XHR0eXBlOiAnZW51bScsXG5cdFx0XHRcdFx0ZW51bVZhbHVlczogVHdpbmtsZS5jb25maWcud2F0Y2hsaXN0RW51bXMsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdC8vIFR3aW5rbGVDb25maWcub2ZmZXJSZWFzb25Pbk5vcm1hbFJldmVydCAoYm9vbGVhbilcblx0XHRcdFx0Ly8gSWYgdG8gb2ZmZXIgYSBwcm9tcHQgZm9yIGV4dHJhIHN1bW1hcnkgcmVhc29uIGZvciBub3JtYWwgcmV2ZXJ0cywgZGVmYXVsdCB0byB0cnVlXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnb2ZmZXJSZWFzb25Pbk5vcm1hbFJldmVydCcsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5bi46KeE5Zue6YCA5pe26K+i6Zeu55CG55SxJywgJ+W4uOimj+WbnumAgOaZguipouWVj+eQhueUsScpLFxuXHRcdFx0XHRcdGhlbHB0aXA6IHdpbmRvdy53Z1VMUygn4oCc5bi46KeE4oCd5Zue6YCA5piv5Lit6Ze055qE6YKj5LiqW+WbnumAgF3pk77mjqXjgIInLCAn44CM5bi46KaP44CN5Zue6YCA5piv5Lit6ZaT55qE6YKj5YCLW+WbnumAgF3pgKPntZDjgIInKSxcblx0XHRcdFx0XHR0eXBlOiAnYm9vbGVhbicsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnY29uZmlybU9uRmx1ZmYnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WbnumAgOWJjeimgeaxguehruiupO+8iOaJgOacieiuvuWkh++8iScsICflm57pgIDliY3opoHmsYLnorroqo3vvIjmiYDmnInoo53nva7vvIknKSxcblx0XHRcdFx0XHRoZWxwdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn5a+55LqO5L2/55So56e75Yqo6K6+5aSH55qE55So5oi377yM5oiW6ICF5oSP5b+X5LiN5Z2a5a6a55qE44CCJyxcblx0XHRcdFx0XHRcdCflsI3mlrzkvb/nlKjooYzli5Xoo53nva7nmoTkvb/nlKjogIXvvIzmiJbogIXmhI/lv5fkuI3loIXlrprnmoTjgIInXG5cdFx0XHRcdFx0KSxcblx0XHRcdFx0XHR0eXBlOiAnYm9vbGVhbicsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdC8vIFR3aW5rbGVDb25maWcuc2hvd1JvbGxiYWNrTGlua3MgKGFycmF5KVxuXHRcdFx0XHQvLyBXaGVyZSBUd2lua2xlIHNob3VsZCBzaG93IHJvbGxiYWNrIGxpbmtzOlxuXHRcdFx0XHQvLyBkaWZmLCBvdGhlcnMsIG1pbmUsIGNvbnRyaWJzLCBoaXN0b3J5LCByZWNlbnRcblx0XHRcdFx0Ly8gTm90ZSBmcm9tIFRUTzogfGNvbnRyaWJzfCBzZWVtcyB0byBiZSBlcXVhbCB0byB8b3RoZXJzfCArIHxtaW5lfCwgaS5lLiByZWR1bmRhbnQsIHNvIEkgbGVmdCBpdCBvdXQgaGVyZXNcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdzaG93Um9sbGJhY2tMaW5rcycsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Zyo6L+Z5Lqb6aG16Z2i5LiK5pi+56S65Zue6YCA6ZO+5o6lJywgJ+WcqOmAmeS6m+mggemdouS4iumhr+ekuuWbnumAgOmAo+e1kCcpLFxuXHRcdFx0XHRcdHR5cGU6ICdzZXQnLFxuXHRcdFx0XHRcdHNldFZhbHVlczoge1xuXHRcdFx0XHRcdFx0ZGlmZjogd2luZG93LndnVUxTKCflt67lvIInLCAn5beu55WwJyksXG5cdFx0XHRcdFx0XHRoaXN0b3J5OiB3aW5kb3cud2dVTFMoJ+WOhuWPsuiusOW9lScsICfmrbflj7LoqJjpjIQnKSxcblx0XHRcdFx0XHRcdG90aGVyczogd2luZG93LndnVUxTKCflhbblroPnlKjmiLfnmoTotKHnjK4nLCAn5YW25a6D5L2/55So6ICF55qE6LKi5427JyksXG5cdFx0XHRcdFx0XHRtaW5lOiB3aW5kb3cud2dVTFMoJ+aIkeeahOi0oeeMricsICfmiJHnmoTosqLnjbsnKSxcblx0XHRcdFx0XHRcdHJlY2VudGNoYW5nZXM6IHdpbmRvdy53Z1VMUygn5pyA6L+R5pu05pS5JywgJ+i/keacn+iuiuabtCcpLFxuXHRcdFx0XHRcdFx0cmVjZW50Y2hhbmdlc2xpbmtlZDogd2luZG93LndnVUxTKCfnm7jlhbPmm7TmlLknLCAn55u46Zec6K6K5pu0JyksXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdjdXN0b21SZXZlcnRTdW1tYXJ5Jyxcblx0XHRcdFx0XHRsYWJlbDogJ+WbnumAgOeQhueUsScsXG5cdFx0XHRcdFx0aGVscHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+WcqOafpeeci+W3ruW8guaXtuWPr+mAie+8jOS7heWWhOaEj+WbnumAgOOAgeW4uOinhOWbnumAgOOAgeaBouWkjeatpOeJiOacrCcsXG5cdFx0XHRcdFx0XHQn5Zyo5qqi6KaW5beu55Ww5pmC5Y+v6YG477yM5YOF5ZaE5oSP5Zue6YCA44CB5bi46KaP5Zue6YCA44CB5oGi5b6p5q2k54mI5pysJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0dHlwZTogJ2N1c3RvbUxpc3QnLFxuXHRcdFx0XHRcdGN1c3RvbUxpc3RWYWx1ZVRpdGxlOiAn55CG55SxJyxcblx0XHRcdFx0XHRjdXN0b21MaXN0TGFiZWxUaXRsZTogd2luZG93LndnVUxTKCfmmL7npLrnmoTmloflrZcnLCAn6aGv56S655qE5paH5a2XJyksXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0dGl0bGU6IHdpbmRvdy53Z1VMUygn5b+r6YCf5Yig6ZmkJywgJ+W/q+mAn+WIqumZpCcpLFxuXHRcdFx0bW9kdWxlOiAnc3BlZWR5Jyxcblx0XHRcdHByZWZlcmVuY2VzOiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnc3BlZWR5U2VsZWN0aW9uU3R5bGUnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+S7gOS5iOaXtuWAmeaJp+ihjOagh+iusOaIluWIoOmZpCcsICfku4DpurzmmYLlgJnln7fooYzmqJnoqJjmiJbliKrpmaQnKSxcblx0XHRcdFx0XHR0eXBlOiAnZW51bScsXG5cdFx0XHRcdFx0ZW51bVZhbHVlczoge1xuXHRcdFx0XHRcdFx0YnV0dG9uQ2xpY2s6IHdpbmRvdy53Z1VMUygn5b2T5oiR54K54oCc5o+Q5Lqk4oCd5pe2JywgJ+eVtuaIkem7nuOAjOaPkOS6pOOAjeaZgicpLFxuXHRcdFx0XHRcdFx0cmFkaW9DbGljazogd2luZG93LndnVUxTKCflvZPmiJHngrnkuIDkuKrpgInpobnml7YnLCAn55W25oiR6bue5LiA5YCL6YG46aCF5pmCJyksXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0fSxcblx0XHRcdFx0Ly8gVHdpbmtsZUNvbmZpZy53YXRjaFNwZWVkeVBhZ2VzIChhcnJheSlcblx0XHRcdFx0Ly8gV2hldGhlciB0byBhZGQgc3BlZWR5IHRhZ2dlZCBwYWdlcyB0byB3YXRjaGxpc3Rcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICd3YXRjaFNwZWVkeVBhZ2VzJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCflsIbku6XkuIvnkIbnlLHliqDlhaXliLDnm5Hop4bliJfooagnLCAn5bCH5Lul5LiL55CG55Sx5Yqg5YWl5Yiw55uj6KaW5riF5ZauJyksXG5cdFx0XHRcdFx0dHlwZTogJ3NldCcsXG5cdFx0XHRcdFx0c2V0VmFsdWVzOiBUd2lua2xlLmNvbmZpZy5jb21tb25TZXRzLmNzZENyaXRlcmlhLFxuXHRcdFx0XHRcdHNldERpc3BsYXlPcmRlcjogVHdpbmtsZS5jb25maWcuY29tbW9uU2V0cy5jc2RDcml0ZXJpYURpc3BsYXlPcmRlcixcblx0XHRcdFx0fSxcblx0XHRcdFx0Ly8gVHdpbmtsZUNvbmZpZy53YXRjaFNwZWVkeUV4cGlyeVxuXHRcdFx0XHQvLyBJZiBhbnkgb2YgdGhlIGFib3ZlIGl0ZW1zIGFyZSBzZWxlY3RlZCwgd2hldGhlciB0byBleHBpcmUgdGhlIHdhdGNoXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnd2F0Y2hTcGVlZHlFeHBpcnknLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+W9k+agh+iusOmhtemdouaXtu+8jOWKoOWFpeWIsOebkeinhuWIl+ihqOeahOacn+mZkCcsICfnlbbmqJnoqJjpoIHpnaLmmYLvvIzliqDlhaXliLDnm6PoppbmuIXllq7nmoTmnJ/pmZAnKSxcblx0XHRcdFx0XHR0eXBlOiAnZW51bScsXG5cdFx0XHRcdFx0ZW51bVZhbHVlczogVHdpbmtsZS5jb25maWcud2F0Y2hsaXN0RW51bXMsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdC8vIFR3aW5rbGVDb25maWcubWFya1NwZWVkeVBhZ2VzQXNQYXRyb2xsZWQgKGJvb2xlYW4pXG5cdFx0XHRcdC8vIElmLCB3aGVuIGFwcGx5aW5nIHNwZWVkeSB0ZW1wbGF0ZSB0byBwYWdlLCB0byBtYXJrIHRoZSBwYWdlIGFzIHBhdHJvbGxlZCAoaWYgdGhlIHBhZ2Ugd2FzIHJlYWNoZWQgZnJvbSBOZXdQYWdlcylcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdtYXJrU3BlZWR5UGFnZXNBc1BhdHJvbGxlZCcsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5qCH6K6w5pe25qCH6K6w6aG16Z2i5Li65bey5beh5p+l77yI5aaC5Y+v6IO977yJJywgJ+aomeiomOaZguaomeiomOmggemdoueCuuW3suW3oeafpe+8iOWmguWPr+iDve+8iScpLFxuXHRcdFx0XHRcdHR5cGU6ICdib29sZWFuJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0Ly8gVHdpbmtsZUNvbmZpZy5ub3RpZnlVc2VyT25TcGVlZHlEZWxldGlvbk5vbWluYXRpb24gKGFycmF5KVxuXHRcdFx0XHQvLyBXaGF0IHR5cGVzIG9mIGFjdGlvbnMgc2hvdWxkIHJlc3VsdCB0aGF0IHRoZSBhdXRob3Igb2YgdGhlIHBhZ2UgYmVpbmcgbm90aWZpZWQgb2Ygbm9taW5hdGlvblxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ25vdGlmeVVzZXJPblNwZWVkeURlbGV0aW9uTm9taW5hdGlvbicsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5LuF5Zyo5L2/55So5Lul5LiL55CG55Sx5pe26YCa55+l6aG16Z2i5Yib5bu66ICFJywgJ+WDheWcqOS9v+eUqOS7peS4i+eQhueUseaZgumAmuefpemggemdouW7uueri+iAhScpLFxuXHRcdFx0XHRcdGhlbHB0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCflsL3nrqHmgqjlnKjlr7nor53moYbkuK3pgInmi6npgJrnn6XvvIzpgJrnn6Xku43lj6rkvJrlnKjkvb/nlKjov5nkupvnkIbnlLHml7blj5Hlh7rjgIInLFxuXHRcdFx0XHRcdFx0J+WEmOeuoeaCqOWcqOWwjeipseaWueWhiuS4remBuOaTh+mAmuefpe+8jOmAmuefpeS7jeWPquacg+WcqOS9v+eUqOmAmeS6m+eQhueUseaZgueZvOWHuuOAgidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdHR5cGU6ICdzZXQnLFxuXHRcdFx0XHRcdHNldFZhbHVlczogVHdpbmtsZS5jb25maWcuY29tbW9uU2V0cy5jc2RDcml0ZXJpYU5vdGlmaWNhdGlvbixcblx0XHRcdFx0XHRzZXREaXNwbGF5T3JkZXI6IFR3aW5rbGUuY29uZmlnLmNvbW1vblNldHMuY3NkQ3JpdGVyaWFOb3RpZmljYXRpb25EaXNwbGF5T3JkZXIsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdC8vIFR3aW5rbGVDb25maWcucHJvbXB0Rm9yU3BlZWR5RGVsZXRpb25TdW1tYXJ5IChhcnJheSBvZiBzdHJpbmdzKVxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ3Byb21wdEZvclNwZWVkeURlbGV0aW9uU3VtbWFyeScsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5L2/55So5Lul5LiL55CG55Sx5Yig6Zmk5pe25YWB6K6457yW6L6R5Yig6Zmk55CG55SxJywgJ+S9v+eUqOS7peS4i+eQhueUseWIqumZpOaZguWFgeiosee3qOi8r+WIqumZpOeQhueUsScpLFxuXHRcdFx0XHRcdGFkbWluT25seTogdHJ1ZSxcblx0XHRcdFx0XHR0eXBlOiAnc2V0Jyxcblx0XHRcdFx0XHRzZXRWYWx1ZXM6IFR3aW5rbGUuY29uZmlnLmNvbW1vblNldHMuY3NkQW5kRElDcml0ZXJpYSxcblx0XHRcdFx0XHRzZXREaXNwbGF5T3JkZXI6IFR3aW5rbGUuY29uZmlnLmNvbW1vblNldHMuY3NkQW5kRElDcml0ZXJpYURpc3BsYXlPcmRlcixcblx0XHRcdFx0fSxcblx0XHRcdFx0Ly8gVHdpbmtsZUNvbmZpZy5vcGVuVXNlclRhbGtQYWdlT25TcGVlZHlEZWxldGUgKGFycmF5IG9mIHN0cmluZ3MpXG5cdFx0XHRcdC8vIFdoYXQgdHlwZXMgb2YgYWN0aW9ucyB0aGF0IHNob3VsZCByZXN1bHQgdXNlciB0YWxrIHBhZ2UgdG8gYmUgb3BlbmVkIHdoZW4gc3BlZWRpbHkgZGVsZXRpbmcgKGFkbWluIG9ubHkpXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnb3BlblVzZXJUYWxrUGFnZU9uU3BlZWR5RGVsZXRlJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfkvb/nlKjku6XkuIvnkIbnlLHml7bmiZPlvIDnlKjmiLforqjorrrpobUnLCAn5L2/55So5Lul5LiL55CG55Sx5pmC5omT6ZaL5L2/55So6ICF6KiO6KuW6aCBJyksXG5cdFx0XHRcdFx0YWRtaW5Pbmx5OiB0cnVlLFxuXHRcdFx0XHRcdHR5cGU6ICdzZXQnLFxuXHRcdFx0XHRcdHNldFZhbHVlczogVHdpbmtsZS5jb25maWcuY29tbW9uU2V0cy5jc2RBbmRESUNyaXRlcmlhLFxuXHRcdFx0XHRcdHNldERpc3BsYXlPcmRlcjogVHdpbmtsZS5jb25maWcuY29tbW9uU2V0cy5jc2RBbmRESUNyaXRlcmlhRGlzcGxheU9yZGVyLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHQvLyBUd2lua2xlQ29uZmlnLmRlbGV0ZVRhbGtQYWdlT25EZWxldGUgKGJvb2xlYW4pXG5cdFx0XHRcdC8vIElmIHRhbGsgcGFnZSBpZiBleGlzdHMgc2hvdWxkIGFsc28gYmUgZGVsZXRlZCAoQ1NEIEc4KSB3aGVuIHNwZWR5aW5nIGEgcGFnZSAoYWRtaW4gb25seSlcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdkZWxldGVUYWxrUGFnZU9uRGVsZXRlJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfpu5jorqTli77pgInigJzliKDpmaTorqjorrrpobXigJ0nLCAn6aCQ6Kit5Yu+6YG444CM5Yiq6Zmk6KiO6KuW6aCB44CNJyksXG5cdFx0XHRcdFx0YWRtaW5Pbmx5OiB0cnVlLFxuXHRcdFx0XHRcdHR5cGU6ICdib29sZWFuJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdkZWxldGVSZWRpcmVjdHNPbkRlbGV0ZScsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6buY6K6k5Yu+6YCJ4oCc5Yig6Zmk6YeN5a6a5ZCR4oCdJywgJ+mgkOioreWLvumBuOOAjOWIqumZpOmHjeaWsOWwjuWQkeOAjScpLFxuXHRcdFx0XHRcdGFkbWluT25seTogdHJ1ZSxcblx0XHRcdFx0XHR0eXBlOiAnYm9vbGVhbicsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdC8vIFR3aW5rbGVDb25maWcuZGVsZXRlU3lzb3BEZWZhdWx0VG9EZWxldGUgKGJvb2xlYW4pXG5cdFx0XHRcdC8vIE1ha2UgdGhlIENTRCBzY3JlZW4gZGVmYXVsdCB0byBcImRlbGV0ZVwiIGluc3RlYWQgb2YgXCJ0YWdcIiAoYWRtaW4gb25seSlcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdkZWxldGVTeXNvcERlZmF1bHRUb0RlbGV0ZScsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6buY6K6k5Li655u05o6l5Yig6Zmk6ICM5LiN5piv5qCH6K6wJywgJ+mgkOioreeCuuebtOaOpeWIqumZpOiAjOS4jeaYr+aomeiomCcpLFxuXHRcdFx0XHRcdGhlbHB0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfoi6Xlt7LmlL7nva7lv6vpgJ/liKDpmaTmoIforrDvvIzliJnmsLjov5zpu5jorqTkuLrliKDpmaTmqKHlvI/jgIInLFxuXHRcdFx0XHRcdFx0J+iLpeW3suaUvue9ruW/q+mAn+WIqumZpOaomeiomO+8jOWJh+awuOmBoOmgkOioreeCuuWIqumZpOaooeW8j+OAgidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdGFkbWluT25seTogdHJ1ZSxcblx0XHRcdFx0XHR0eXBlOiAnYm9vbGVhbicsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdC8vIFR3aW5rbGVDb25maWcuc3BlZWR5V2luZG93V2lkdGggKGludGVnZXIpXG5cdFx0XHRcdC8vIERlZmluZXMgdGhlIHdpZHRoIG9mIHRoZSBUd2lua2xlIFNEIHdpbmRvdyBpbiBwaXhlbHNcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdzcGVlZHlXaW5kb3dXaWR0aCcsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5b+r6YCf5Yig6Zmk5a+56K+d5qGG5a695bqm77yI5YOP57Sg77yJJywgJ+W/q+mAn+WIqumZpOWwjeipseaWueWhiuWvrOW6pu+8iOWDj+e0oO+8iScpLFxuXHRcdFx0XHRcdHR5cGU6ICdpbnRlZ2VyJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0Ly8gVHdpbmtsZUNvbmZpZy5zcGVlZHlXaW5kb3dXaWR0aCAoaW50ZWdlcilcblx0XHRcdFx0Ly8gRGVmaW5lcyB0aGUgd2lkdGggb2YgdGhlIFR3aW5rbGUgU0Qgd2luZG93IGluIHBpeGVsc1xuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ3NwZWVkeVdpbmRvd0hlaWdodCcsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5b+r6YCf5Yig6Zmk5a+56K+d5qGG6auY5bqm77yI5YOP57Sg77yJJywgJ+W/q+mAn+WIqumZpOWwjeipseaWueWhiumrmOW6pu+8iOWDj+e0oO+8iScpLFxuXHRcdFx0XHRcdGhlbHB0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfoi6XmgqjmnInkuIDlj7DlvojlpKfnmoTmmL7npLrlmajvvIzmgqjlj6/ku6XlsIbmraTosIPpq5jjgIInLFxuXHRcdFx0XHRcdFx0J+iLpeaCqOacieS4gOWPsOW+iOWkp+eahOmhr+ekuuWZqO+8jOaCqOWPr+S7peWwh+atpOiqv+mrmOOAgidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdHR5cGU6ICdpbnRlZ2VyJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdsb2dTcGVlZHlOb21pbmF0aW9ucycsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Zyo55So5oi356m66Ze05Lit6K6w5b2V5omA5pyJ5b+r6YCf5Yig6Zmk5o+Q5ZCNJywgJ+WcqOS9v+eUqOiAheepuumWk+S4reiomOmMhOaJgOacieW/q+mAn+WIqumZpOaPkOWQjScpLFxuXHRcdFx0XHRcdGhlbHB0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfpnZ7nrqHnkIblkZjml6Dms5Xorr/pl67liLDlt7LliKDpmaTnmoTotKHnjK7vvIznlKjmiLfnqbrpl7Tml6Xlv5fmj5DkvpvkuobkuIDkuKrlvojlpb3nmoTmlrnms5XmnaXorrDlvZXov5nkupvljoblj7LjgIInLFxuXHRcdFx0XHRcdFx0J+mdnueuoeeQhuWToeeEoeazleWtmOWPluWIsOW3suWIqumZpOeahOiyoueNu++8jOS9v+eUqOiAheepuumWk+aXpeiqjOaPkOS+m+S6huS4gOWAi+W+iOWlveeahOaWueazleS+huiomOmMhOmAmeS6m+att+WPsuOAgidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdHR5cGU6ICdib29sZWFuJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdzcGVlZHlMb2dQYWdlTmFtZScsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Zyo5q2k6aG15L+d55WZ5pel5b+XJywgJ+WcqOatpOmggeS/neeVmeaXpeiqjCcpLFxuXHRcdFx0XHRcdGhlbHB0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCflnKjmraTmoYbkuK3ovpPlhaXlrZDpobXpnaLlkI3np7DvvIzmgqjlsIblnKhVc2VyOjxpPueUqOaIt+WQjTwvaT4vPGk+5a2Q6aG16Z2iPC9pPuaJvuWIsENTROaXpeW/l+OAguS7heWcqOWQr+eUqOaXpeW/l+aXtuW3peS9nOOAgicsXG5cdFx0XHRcdFx0XHQn5Zyo5q2k5qGG5Lit6Ly45YWl5a2Q6aCB6Z2i5ZCN56ix77yM5oKo5bCH5ZyoVXNlcjo8aT7kvb/nlKjogIXlkI3nqLE8L2k+LzxpPuWtkOmggemdojwvaT7mib7liLBDU0Tml6XoqozjgILlg4XlnKjllZ/nlKjml6XoqozmmYLlt6XkvZzjgIInXG5cdFx0XHRcdFx0KSxcblx0XHRcdFx0XHR0eXBlOiAnc3RyaW5nJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdub0xvZ09uU3BlZWR5Tm9taW5hdGlvbicsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Zyo5L2/55So5Lul5LiL55CG55Sx5pe25LiN5YGa6K6w5b2VJywgJ+WcqOS9v+eUqOS7peS4i+eQhueUseaZguS4jeWBmuiomOmMhCcpLFxuXHRcdFx0XHRcdHR5cGU6ICdzZXQnLFxuXHRcdFx0XHRcdHNldFZhbHVlczogVHdpbmtsZS5jb25maWcuY29tbW9uU2V0cy5jc2RBbmRESUNyaXRlcmlhLFxuXHRcdFx0XHRcdHNldERpc3BsYXlPcmRlcjogVHdpbmtsZS5jb25maWcuY29tbW9uU2V0cy5jc2RBbmRESUNyaXRlcmlhRGlzcGxheU9yZGVyLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ2VubGFyZ2VHN0lucHV0Jyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmianlpKdDU0QgRzfnmoTmjInpkq4nLCAn5pO05aSnQ1NEIEc355qE5oyJ6YiVJyksXG5cdFx0XHRcdFx0aGVscHRpcDogd2luZG93LndnVUxTKCfmiankuLrpu5jorqTnmoTkuKTlgI3lpKfjgIInLCAn5pO054K66aCQ6Kit55qE5YWp5YCN5aSn44CCJyksXG5cdFx0XHRcdFx0dHlwZTogJ2Jvb2xlYW4nLFxuXHRcdFx0XHR9LFxuXHRcdFx0XSxcblx0XHR9LFxuXHRcdHtcblx0XHRcdHRpdGxlOiB3aW5kb3cud2dVTFMoJ+agh+iusCcsICfmqJnoqJgnKSxcblx0XHRcdG1vZHVsZTogJ3RhZycsXG5cdFx0XHRwcmVmZXJlbmNlczogW1xuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ3dhdGNoVGFnZ2VkUGFnZXMnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+agh+iusOaXtuWKoOWFpeWIsOebkeinhuWIl+ihqCcsICfmqJnoqJjmmYLliqDlhaXliLDnm6PoppbmuIXllq4nKSxcblx0XHRcdFx0XHR0eXBlOiAnZW51bScsXG5cdFx0XHRcdFx0ZW51bVZhbHVlczogVHdpbmtsZS5jb25maWcud2F0Y2hsaXN0RW51bXMsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnd2F0Y2hNZXJnZURpc2N1c3Npb25zJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfliqDlhaXlkIjlubborqjorrrml7bnm5Hop4borqjorrrpobUnLCAn5Yqg5YWl5ZCI5L216KiO6KuW5pmC55uj6KaW6KiO6KuW6aCBJyksXG5cdFx0XHRcdFx0dHlwZTogJ2VudW0nLFxuXHRcdFx0XHRcdGVudW1WYWx1ZXM6IFR3aW5rbGUuY29uZmlnLndhdGNobGlzdEVudW1zLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ21hcmtUYWdnZWRQYWdlc0FzTWlub3InLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+Wwhuagh+iusOagh+iusOS4uuWwj+S/ruaUuScsICflsIfmqJnoqJjmqJnoqJjngrrlsI/kv67mlLknKSxcblx0XHRcdFx0XHR0eXBlOiAnYm9vbGVhbicsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnbWFya1RhZ2dlZFBhZ2VzQXNQYXRyb2xsZWQnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+m7mOiupOWLvumAieKAnOagh+iusOmhtemdouS4uuW3suW3oeafpeKAneahhicsICfpoJDoqK3li77pgbjjgIzmqJnoqJjpoIHpnaLngrrlt7Llt6Hmn6XjgI3moYYnKSxcblx0XHRcdFx0XHR0eXBlOiAnYm9vbGVhbicsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnZ3JvdXBCeURlZmF1bHQnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn6buY6K6k5Yu+6YCJ4oCc5ZCI5bm25Yiwe3ttdWx0aXBsZSBpc3N1ZXN9feKAneWkjemAieahhicsXG5cdFx0XHRcdFx0XHQn6aCQ6Kit5Yu+6YG444CM5ZCI5L215Yiwe3ttdWx0aXBsZSBpc3N1ZXN9feOAjeaguOWPluaWueWhiidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdHR5cGU6ICdib29sZWFuJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICd0YWdBcnRpY2xlU29ydE9yZGVyJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmnaHnm67moIforrDnmoTpu5jorqTmn6XnnIvmlrnlvI8nLCAn5qKd55uu5qiZ6KiY55qE6aCQ6Kit5qqi6KaW5pa55byPJyksXG5cdFx0XHRcdFx0dHlwZTogJ2VudW0nLFxuXHRcdFx0XHRcdGVudW1WYWx1ZXM6IHtcblx0XHRcdFx0XHRcdGNhdDogd2luZG93LndnVUxTKCfmjInnsbvlnosnLCAn5oyJ6aGe5YilJyksXG5cdFx0XHRcdFx0XHRhbHBoYTogJ+aMieWtl+avjScsXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdjdXN0b21UYWdMaXN0Jyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfoh6rlrprkuYnmnaHnm67nu7TmiqTmoIforrAnLCAn6Ieq6KiC5qKd55uu57at6K235qiZ6KiYJyksXG5cdFx0XHRcdFx0aGVscHRpcDogd2luZG93LndnVUxTKCfov5nkupvkvJrlh7rnjrDlnKjliJfooajnmoTmnKvlsL7jgIInLCAn6YCZ5Lqb5pyD5Ye654++5Zyo5YiX6KGo55qE5pyr5bC+44CCJyksXG5cdFx0XHRcdFx0dHlwZTogJ2N1c3RvbUxpc3QnLFxuXHRcdFx0XHRcdGN1c3RvbUxpc3RWYWx1ZVRpdGxlOiB3aW5kb3cud2dVTFMoJ+aooeadv+WQje+8iOS4jeWQq+Wkp+aLrOWPt++8iScsICfmqKHmnb/lkI3vvIjkuI3lkKvlpKfmi6zomZ/vvIknKSxcblx0XHRcdFx0XHRjdXN0b21MaXN0TGFiZWxUaXRsZTogd2luZG93LndnVUxTKCfmmL7npLrnmoTmloflrZcnLCAn6aGv56S655qE5paH5a2XJyksXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnY3VzdG9tRmlsZVRhZ0xpc3QnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+iHquWumuS5ieaWh+S7tue7tOaKpOagh+iusCcsICfoh6roqILmqpTmoYjntq3orbfmqJnoqJgnKSxcblx0XHRcdFx0XHRoZWxwdGlwOiB3aW5kb3cud2dVTFMoJ+i/meS6m+S8muWHuueOsOWcqOWIl+ihqOeahOacq+WwvuOAgicsICfpgJnkupvmnIPlh7rnj77lnKjliJfooajnmoTmnKvlsL7jgIInKSxcblx0XHRcdFx0XHR0eXBlOiAnY3VzdG9tTGlzdCcsXG5cdFx0XHRcdFx0Y3VzdG9tTGlzdFZhbHVlVGl0bGU6IHdpbmRvdy53Z1VMUygn5qih5p2/5ZCN77yI5LiN5ZCr5aSn5ous5Y+377yJJywgJ+aooeadv+WQje+8iOS4jeWQq+Wkp+aLrOiZn++8iScpLFxuXHRcdFx0XHRcdGN1c3RvbUxpc3RMYWJlbFRpdGxlOiB3aW5kb3cud2dVTFMoJ+aYvuekuueahOaWh+WtlycsICfpoa/npLrnmoTmloflrZcnKSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdjdXN0b21SZWRpcmVjdFRhZ0xpc3QnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+iHquWumuS5iemHjeWumuWQkee7tOaKpOagh+iusCcsICfoh6roqILph43mlrDlsI7lkJHntq3orbfmqJnoqJgnKSxcblx0XHRcdFx0XHRoZWxwdGlwOiB3aW5kb3cud2dVTFMoJ+i/meS6m+S8muWHuueOsOWcqOWIl+ihqOeahOacq+WwvuOAgicsICfpgJnkupvmnIPlh7rnj77lnKjliJfooajnmoTmnKvlsL7jgIInKSxcblx0XHRcdFx0XHR0eXBlOiAnY3VzdG9tTGlzdCcsXG5cdFx0XHRcdFx0Y3VzdG9tTGlzdFZhbHVlVGl0bGU6IHdpbmRvdy53Z1VMUygn5qih5p2/5ZCN77yI5LiN5ZCr5aSn5ous5Y+377yJJywgJ+aooeadv+WQje+8iOS4jeWQq+Wkp+aLrOiZn++8iScpLFxuXHRcdFx0XHRcdGN1c3RvbUxpc3RMYWJlbFRpdGxlOiB3aW5kb3cud2dVTFMoJ+aYvuekuueahOaWh+WtlycsICfpoa/npLrnmoTmloflrZcnKSxcblx0XHRcdFx0fSxcblx0XHRcdF0sXG5cdFx0fSxcblx0XHR7XG5cdFx0XHR0aXRsZTogJ+Wwj+S9nOWTgScsXG5cdFx0XHRtb2R1bGU6ICdzdHViJyxcblx0XHRcdHByZWZlcmVuY2VzOiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnd2F0Y2hTdHViYmVkUGFnZXMnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+agh+iusOaXtuWKoOWFpeWIsOebkeinhuWIl+ihqCcsICfmqJnoqJjmmYLliqDlhaXliLDnm6PoppbmuIXllq4nKSxcblx0XHRcdFx0XHR0eXBlOiAnYm9vbGVhbicsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnbWFya1N0dWJiZWRQYWdlc0FzTWlub3InLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WwhuWwj+S9nOWTgeagh+iusOS4uuWwj+S/ruaUuScsICflsIflsI/kvZzlk4HmqJnoqJjngrrlsI/kv67mlLknKSxcblx0XHRcdFx0XHR0eXBlOiAnYm9vbGVhbicsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnbWFya1N0dWJiZWRQYWdlc0FzUGF0cm9sbGVkJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfpu5jorqTli77pgInigJzmoIforrDpobXpnaLkuLrlt7Llt6Hmn6XigJ3moYYnLCAn6aCQ6Kit5Yu+6YG444CM5qiZ6KiY6aCB6Z2i54K65bey5beh5p+l44CN5qGGJyksXG5cdFx0XHRcdFx0dHlwZTogJ2Jvb2xlYW4nLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ3N0dWJBcnRpY2xlU29ydE9yZGVyJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmnaHnm67lsI/kvZzlk4HnmoTpu5jorqTmn6XnnIvmlrnlvI8nLCAn5qKd55uu5bCP5L2c5ZOB55qE6aCQ6Kit5qqi6KaW5pa55byPJyksXG5cdFx0XHRcdFx0dHlwZTogJ2VudW0nLFxuXHRcdFx0XHRcdGVudW1WYWx1ZXM6IHtcblx0XHRcdFx0XHRcdGNhdDogd2luZG93LndnVUxTKCfmjInnsbvlnosnLCAn5oyJ6aGe5YilJyksXG5cdFx0XHRcdFx0XHRhbHBoYTogJ+aMieWtl+avjScsXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdjdXN0b21TdHViTGlzdCcsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6Ieq5a6a5LmJ5p2h55uu5bCP5L2c5ZOB5qCH6K6wJywgJ+iHquioguaineebruWwj+S9nOWTgeaomeiomCcpLFxuXHRcdFx0XHRcdGhlbHB0aXA6IHdpbmRvdy53Z1VMUygn6L+Z5Lqb5Lya5Ye6546w5Zyo5YiX6KGo55qE5pyr5bC+44CCJywgJ+mAmeS6m+acg+WHuuePvuWcqOWIl+ihqOeahOacq+WwvuOAgicpLFxuXHRcdFx0XHRcdHR5cGU6ICdjdXN0b21MaXN0Jyxcblx0XHRcdFx0XHRjdXN0b21MaXN0VmFsdWVUaXRsZTogd2luZG93LndnVUxTKCfmqKHmnb/lkI3vvIjkuI3lkKvlpKfmi6zlj7fvvIknLCAn5qih5p2/5ZCN77yI5LiN5ZCr5aSn5ous6Jmf77yJJyksXG5cdFx0XHRcdFx0Y3VzdG9tTGlzdExhYmVsVGl0bGU6IHdpbmRvdy53Z1VMUygn5pi+56S655qE5paH5a2XJywgJ+mhr+ekuueahOaWh+WtlycpLFxuXHRcdFx0XHR9LFxuXHRcdFx0XSxcblx0XHR9LFxuXHRcdHtcblx0XHRcdHRpdGxlOiAn6YCa5ZGKJyxcblx0XHRcdG1vZHVsZTogJ3RhbGtiYWNrJyxcblx0XHRcdHByZWZlcmVuY2VzOiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnbWFya1RhbGtiYWNrQXNNaW5vcicsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5bCG6YCa5ZGK5qCH6K6w5Li65bCP5L+u5pS5JywgJ+Wwh+mAmuWRiuaomeiomOeCuuWwj+S/ruaUuScpLFxuXHRcdFx0XHRcdHR5cGU6ICdib29sZWFuJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdpbnNlcnRUYWxrYmFja1NpZ25hdHVyZScsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6YCa5ZGK5pe25Yqg5YWl562+5ZCNJywgJ+mAmuWRiuaZguWKoOWFpeewveWQjScpLFxuXHRcdFx0XHRcdHR5cGU6ICdib29sZWFuJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICd0YWxrYmFja0hlYWRpbmcnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+mAmuWRiuaJgOeUqOeahOWwj+iKguagh+mimCcsICfpgJrlkYrmiYDnlKjnmoTlsI/nr4DmqJnpoYwnKSxcblx0XHRcdFx0XHR0eXBlOiAnc3RyaW5nJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdtYWlsSGVhZGluZycsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn4oCc5pyJ5paw6YKu5Lu24oCd5omA55So55qE5bCP6IqC5qCH6aKYJywgJ+OAjOacieaWsOmDteS7tuOAjeaJgOeUqOeahOWwj+evgOaomemhjCcpLFxuXHRcdFx0XHRcdHR5cGU6ICdzdHJpbmcnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XSxcblx0XHR9LFxuXHRcdHtcblx0XHRcdHRpdGxlOiB3aW5kb3cud2dVTFMoJ+WPlua2iOmTvuWFpScsICflj5bmtojpgKPlhaUnKSxcblx0XHRcdG1vZHVsZTogJ3VubGluaycsXG5cdFx0XHRwcmVmZXJlbmNlczogW1xuXHRcdFx0XHQvLyBUd2lua2xlQ29uZmlnLnVubGlua05hbWVzcGFjZXMgKGFycmF5KVxuXHRcdFx0XHQvLyBJbiB3aGF0IG5hbWVzcGFjZXMgdW5saW5rIHNob3VsZCBoYXBwZW4sIGRlZmF1bHQgaW4gMCAoYXJ0aWNsZSkgYW5kIDEwMCAocG9ydGFsKVxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ3VubGlua05hbWVzcGFjZXMnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WPlua2iOS7peS4i+WRveWQjeepuumXtOS4reeahOWPjeWQkemTvuaOpScsICflj5bmtojku6XkuIvlkb3lkI3nqbrplpPkuK3nmoTlj43lkJHpgKPntZAnKSxcblx0XHRcdFx0XHRoZWxwdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn6K+36YG/5YWN6YCJ5oup6K6o6K666aG177yM5Zug6L+Z5qC35Lya5a+86Ie0VHdpbmtsZeivleWbvuS/ruaUueiuqOiuuuWtmOaho+OAgicsXG5cdFx0XHRcdFx0XHQn6KuL6YG/5YWN6YG45pOH6KiO6KuW6aCB77yM5Zug6YCZ5qij5pyD5bCO6Ie0VHdpbmtsZeippuWcluS/ruaUueiojuirluWtmOaqlOOAgidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdHR5cGU6ICdzZXQnLFxuXHRcdFx0XHRcdHNldFZhbHVlczogVHdpbmtsZS5jb25maWcuY29tbW9uU2V0cy5uYW1lc3BhY2VzTm9TcGVjaWFsLFxuXHRcdFx0XHR9LFxuXHRcdFx0XSxcblx0XHR9LFxuXHRcdHtcblx0XHRcdHRpdGxlOiB3aW5kb3cud2dVTFMoJ+itpuWRiueUqOaItycsICforablkYrkvb/nlKjogIUnKSxcblx0XHRcdG1vZHVsZTogJ3dhcm4nLFxuXHRcdFx0cHJlZmVyZW5jZXM6IFtcblx0XHRcdFx0Ly8gVHdpbmtsZUNvbmZpZy5kZWZhdWx0V2FybmluZ0dyb3VwIChpbnQpXG5cdFx0XHRcdC8vIGlmIHRydWUsIHdhdGNoIHRoZSBwYWdlIHdoaWNoIGhhcyBiZWVuIGRpc3BhdGNoZWQgYW4gd2FybmluZyBvciBub3RpY2UsIGlmIGZhbHNlLCBkZWZhdWx0IGFwcGxpZXNcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdkZWZhdWx0V2FybmluZ0dyb3VwJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfpu5jorqTorablkYrnuqfliKsnLCAn6aCQ6Kit6K2m5ZGK57Sa5YilJyksXG5cdFx0XHRcdFx0dHlwZTogJ2VudW0nLFxuXHRcdFx0XHRcdGVudW1WYWx1ZXM6IHtcblx0XHRcdFx0XHRcdDE6ICcx77ya5rOo5oSPJyxcblx0XHRcdFx0XHRcdDI6ICcy77ya6K2m5ZGKJyxcblx0XHRcdFx0XHRcdDM6IHdpbmRvdy53Z1VMUygn5Y2V5bGC57qn5o+Q6YaSJywgJ+WWruWxpOe0muaPkOmGkicpLFxuXHRcdFx0XHRcdFx0NDogd2luZG93LndnVUxTKCfljZXlsYLnuqforablkYonLCAn5Zau5bGk57Sa6K2m5ZGKJyksXG5cdFx0XHRcdFx0XHQ1OiB3aW5kb3cud2dVTFMoJ+iHquWumuS5ieaPkOmGkuaIluitpuWRiicsICfoh6roqILmj5DphpLmiJborablkYonKSxcblx0XHRcdFx0XHRcdDY6ICfmiYDmnInorablkYrmqKHmnb8nLFxuXHRcdFx0XHRcdFx0Nzogd2luZG93LndnVUxTKCfoh6rliqjpgInmi6nlsYLnuqcnLCAn6Ieq5YuV6YG45pOH5bGk57SaJyksXG5cdFx0XHRcdFx0XHQvLyA4IHdhcyB1c2VkIGZvciBibG9jayB0ZW1wbGF0ZXMgYmVmb3JlICMyNjBcblx0XHRcdFx0XHRcdC8vIDkgd2FzIGRlcHJlY2F0ZWRcblx0XHRcdFx0XHRcdC8vIDEwIHdhcyBkZXByZWNhdGVkXG5cdFx0XHRcdFx0XHQvLyAxMSB3YXMgZGVwcmVjYXRlZFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdH0sXG5cdFx0XHRcdC8vIFR3aW5rbGVDb25maWcuY29tYmluZWRTaW5nbGV0TWVudXMgKGJvb2xlYW4pXG5cdFx0XHRcdC8vIGlmIHRydWUsIHNob3cgb25lIG1lbnUgd2l0aCBib3RoIHNpbmdsZS1pc3N1ZSBub3RpY2VzIGFuZCB3YXJuaW5ncyBpbnN0ZWFkIG9mIHR3byBzZXBhcmF0ZWx5XG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnY29tYmluZWRTaW5nbGV0TWVudXMnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WwhuS4pOS4quWNleWxgue6p+iPnOWNleWQiOW5tuaIkOS4gOS4qicsICflsIflhanlgIvllq7lsaTntJrpgbjllq7lkIjkvbXmiJDkuIDlgIsnKSxcblx0XHRcdFx0XHRoZWxwdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn5b2T5ZCv55So5q2k6YCJ6aG55pe277yM5peg6K666buY6K6k6K2m5ZGK57qn5Yir6YCJ5oup5Y2V5bGC57qn6YCa55+l5oiW5Y2V5bGC57qn6K2m5ZGK55qG5bGe5LqO5q2k6aG544CCJyxcblx0XHRcdFx0XHRcdCfnlbbllZ/nlKjmraTpgbjpoIXmmYLvvIznhKHoq5bpoJDoqK3orablkYrntJrliKXpgbjmk4fllq7lsaTntJrpgJrnn6XmiJbllq7lsaTntJrorablkYrnmoblsazmlrzmraTpoIXjgIInXG5cdFx0XHRcdFx0KSxcblx0XHRcdFx0XHR0eXBlOiAnYm9vbGVhbicsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdC8vIFR3aW5rbGVDb25maWcud2F0Y2hXYXJuaW5ncyAoc3RyaW5nKVxuXHRcdFx0XHQvLyBXYXRjaGxpc3Qgc2V0dGluZyBmb3IgdGhlIHBhZ2Ugd2hpY2ggaGFzIGJlZW4gZGlzcGF0Y2hlZCBhbiB3YXJuaW5nIG9yIG5vdGljZVxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ3dhdGNoV2FybmluZ3MnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+itpuWRiuaXtuWKoOWFpeeUqOaIt+iuqOiuuumhteWIsOebkeinhuWIl+ihqCcsICforablkYrmmYLliqDlhaXkvb/nlKjogIXoqI7oq5bpoIHliLDnm6PoppbmuIXllq4nKSxcblx0XHRcdFx0XHR0eXBlOiAnZW51bScsXG5cdFx0XHRcdFx0ZW51bVZhbHVlczogVHdpbmtsZS5jb25maWcud2F0Y2hsaXN0RW51bXMsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdC8vIFR3aW5rbGVDb25maWcub2xkU2VsZWN0IChib29sZWFuKVxuXHRcdFx0XHQvLyBpZiB0cnVlLCB1c2UgdGhlIG5hdGl2ZSBzZWxlY3QgbWVudSByYXRoZXIgdGhlIGpxdWVyeSBjaG9zZW4tYmFzZWQgb25lXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnb2xkU2VsZWN0Jyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfkvb/nlKjkuI3lj6/mkJzntKLnmoTnu4/lhbjoj5zljZUnLCAn5L2/55So5LiN5Y+v5pCc5bCL55qE57aT5YW46YG45ZauJyksXG5cdFx0XHRcdFx0dHlwZTogJ2Jvb2xlYW4nLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ2N1c3RvbVdhcm5pbmdMaXN0Jyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfoh6rlrprkuYnorablkYrmqKHmnb8nLCAn6Ieq6KiC6K2m5ZGK5qih5p2/JyksXG5cdFx0XHRcdFx0aGVscHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+aCqOWPr+S7peWKoOWFpeaooeadv+aIlueUqOaIt+WtkOmhtemdouOAguiHquWumuS5ieitpuWRiuS8muWHuueOsOWcqOitpuWRiuWvueivneahhuS4reKAnOiHquWumuS5ieitpuWRiuKAneS4gOiKguOAgicsXG5cdFx0XHRcdFx0XHQn5oKo5Y+v5Lul5Yqg5YWl5qih5p2/5oiW5L2/55So6ICF5a2Q6aCB6Z2i44CC6Ieq6KiC6K2m5ZGK5pyD5Ye654++5Zyo6K2m5ZGK5bCN6Kmx5pa55aGK5Lit44CM6Ieq6KiC6K2m5ZGK44CN5LiA56+A44CCJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0dHlwZTogJ2N1c3RvbUxpc3QnLFxuXHRcdFx0XHRcdGN1c3RvbUxpc3RWYWx1ZVRpdGxlOiB3aW5kb3cud2dVTFMoJ+aooeadv+WQje+8iOS4jeWQq+Wkp+aLrOWPt++8iScsICfmqKHmnb/lkI3vvIjkuI3lkKvlpKfmi6zomZ/vvIknKSxcblx0XHRcdFx0XHRjdXN0b21MaXN0TGFiZWxUaXRsZTogd2luZG93LndnVUxTKCfmmL7npLrnmoTmloflrZfvvIjlkoznvJbovpHmkZjopoHvvIknLCAn6aGv56S655qE5paH5a2X77yI5ZKM57eo6Lyv5pGY6KaB77yJJyksXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0dGl0bGU6IHdpbmRvdy53Z1VMUygn5a2Y5bqf6K6o6K66JywgJ+WtmOW7ouiojuirlicpLFxuXHRcdFx0bW9kdWxlOiAneGZkJyxcblx0XHRcdHByZWZlcmVuY2VzOiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnbG9nWGZkTm9taW5hdGlvbnMnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WcqOeUqOaIt+epuumXtOS4reiusOW9leaJgOacieWtmOW6n+iuqOiuuuaPkOWQjScsICflnKjkvb/nlKjogIXnqbrplpPkuK3oqJjpjITmiYDmnInlrZjlu6LoqI7oq5bmj5DlkI0nKSxcblx0XHRcdFx0XHRoZWxwdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn6K+l5pel5b+X5L6b5oKo6L+96Liq5omA5pyJ6YCa6L+HVHdpbmtsZeaPkOS6pOeahOWtmOW6n+iuqOiuuicsXG5cdFx0XHRcdFx0XHQn6Kmy5pel6KqM5L6b5oKo6L+96Lmk5omA5pyJ6YCP6YGOVHdpbmtsZeaPkOS6pOeahOWtmOW7ouiojuirlidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdHR5cGU6ICdib29sZWFuJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICd4ZmRMb2dQYWdlTmFtZScsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Zyo5q2k6aG15L+d55WZ5pel5b+XJywgJ+WcqOatpOmggeS/neeVmeaXpeiqjCcpLFxuXHRcdFx0XHRcdGhlbHB0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCflnKjmraTmoYbkuK3ovpPlhaXlrZDpobXpnaLlkI3np7DvvIzmgqjlsIblnKhVc2VyOjxpPueUqOaIt+WQjTwvaT4vPGk+5a2Q6aG16Z2iPC9pPuaJvuWIsFhGROaXpeW/l+OAguS7heWcqOWQr+eUqOaXpeW/l+aXtuW3peS9nOOAgicsXG5cdFx0XHRcdFx0XHQn5Zyo5q2k5qGG5Lit6Ly45YWl5a2Q6aCB6Z2i5ZCN56ix77yM5oKo5bCH5ZyoVXNlcjo8aT7kvb/nlKjogIXlkI3nqLE8L2k+LzxpPuWtkOmggemdojwvaT7mib7liLBYRkTml6XoqozjgILlg4XlnKjllZ/nlKjml6XoqozmmYLlt6XkvZzjgIInXG5cdFx0XHRcdFx0KSxcblx0XHRcdFx0XHR0eXBlOiAnc3RyaW5nJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdub0xvZ09uWGZkTm9taW5hdGlvbicsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Zyo5L2/55So5Lul5LiL55CG55Sx5pe25LiN5YGa6K6w5b2VJywgJ+WcqOS9v+eUqOS7peS4i+eQhueUseaZguS4jeWBmuiomOmMhCcpLFxuXHRcdFx0XHRcdHR5cGU6ICdzZXQnLFxuXHRcdFx0XHRcdHNldFZhbHVlczogVHdpbmtsZS5jb25maWcuY29tbW9uU2V0cy54ZmRDcml0ZXJpYSxcblx0XHRcdFx0XHRzZXREaXNwbGF5T3JkZXI6IFR3aW5rbGUuY29uZmlnLmNvbW1vblNldHMueGZkQ3JpdGVyaWFEaXNwbGF5T3JkZXIsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdC8vIFR3aW5rbGVDb25maWcueGZkV2F0Y2hQYWdlIChzdHJpbmcpXG5cdFx0XHRcdC8vIFRoZSB3YXRjaGxpc3Qgc2V0dGluZyBvZiB0aGUgcGFnZSBiZWluZyBub21pbmF0ZWQgZm9yIFhmRC5cblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICd4ZmRXYXRjaFBhZ2UnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+WKoOWFpeaPkOWQjeeahOmhtemdouWIsOebkeinhuWIl+ihqCcsICfliqDlhaXmj5DlkI3nmoTpoIHpnaLliLDnm6PoppbmuIXllq4nKSxcblx0XHRcdFx0XHR0eXBlOiAnZW51bScsXG5cdFx0XHRcdFx0ZW51bVZhbHVlczogVHdpbmtsZS5jb25maWcud2F0Y2hsaXN0RW51bXMsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdC8vIFR3aW5rbGVDb25maWcueGZkV2F0Y2hEaXNjdXNzaW9uIChzdHJpbmcpXG5cdFx0XHRcdC8vIFRoZSB3YXRjaGxpc3Qgc2V0dGluZyBvZiB0aGUgbmV3bHkgY3JlYXRlZCBYZkQgcGFnZSAoZm9yIHRob3NlIHByb2Nlc3NlcyB0aGF0IGNyZWF0ZSBkaXNjdXNzaW9uIHBhZ2VzIGZvciBlYWNoIG5vbWluYXRpb24pLFxuXHRcdFx0XHQvLyBvciB0aGUgbGlzdCBwYWdlIGZvciB0aGUgb3RoZXIgcHJvY2Vzc2VzLlxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ3hmZFdhdGNoRGlzY3Vzc2lvbicsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Yqg5YWl5a2Y5bqf6K6o6K666aG15Yiw55uR6KeG5YiX6KGoJywgJ+WKoOWFpeWtmOW7ouiojuirlumggeWIsOebo+imlua4heWWricpLFxuXHRcdFx0XHRcdGhlbHB0aXA6IHdpbmRvdy53Z1VMUygn5b2T5pel55qE6aG16Z2i44CCJywgJ+eVtuaXpeeahOmggemdouOAgicpLFxuXHRcdFx0XHRcdHR5cGU6ICdlbnVtJyxcblx0XHRcdFx0XHRlbnVtVmFsdWVzOiBUd2lua2xlLmNvbmZpZy53YXRjaGxpc3RFbnVtcyxcblx0XHRcdFx0fSxcblx0XHRcdFx0Ly8gVHdpbmtsZUNvbmZpZy54ZmRXYXRjaFVzZXIgKHN0cmluZylcblx0XHRcdFx0Ly8gVGhlIHdhdGNobGlzdCBzZXR0aW5nIG9mIHRoZSB1c2VyIHRhbGsgcGFnZSBpZiB0aGV5IHJlY2VpdmUgYSBub3RpZmljYXRpb24uXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAneGZkV2F0Y2hVc2VyJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+WKoOWFpeWIm+W7uuiAheiuqOiuuumhteWIsOebkeinhuWIl+ihqO+8iOWcqOmAmuefpeaXtu+8iScsXG5cdFx0XHRcdFx0XHQn5Yqg5YWl5bu656uL6ICF6KiO6KuW6aCB5Yiw55uj6KaW5riF5Zau77yI5Zyo6YCa55+l5pmC77yJJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0dHlwZTogJ2VudW0nLFxuXHRcdFx0XHRcdGVudW1WYWx1ZXM6IFR3aW5rbGUuY29uZmlnLndhdGNobGlzdEVudW1zLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ21hcmtYZmRQYWdlc0FzUGF0cm9sbGVkJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfmoIforrDml7bmoIforrDpobXpnaLkuLrlt7Llt6Hmn6XvvIjlpoLlj6/og73vvIknLCAn5qiZ6KiY5pmC5qiZ6KiY6aCB6Z2i54K65bey5beh5p+l77yI5aaC5Y+v6IO977yJJyksXG5cdFx0XHRcdFx0aGVscHRpcDogd2luZG93LndnVUxTKFxuXHRcdFx0XHRcdFx0J+WfuuS6juaKgOacr+WOn+WboO+8jOmhtemdouS7heS8muWcqOeUsVNwZWNpYWw6TmV3UGFnZXPliLDovr7ml7booqvmoIforrDkuLrlt7Llt6Hmn6XjgIInLFxuXHRcdFx0XHRcdFx0J+WfuuaWvOaKgOihk+WOn+WboO+8jOmggemdouWDheacg+WcqOeUsVNwZWNpYWw6TmV3UGFnZXPliLDpgZTmmYLooqvmqJnoqJjngrrlt7Llt6Hmn6XjgIInXG5cdFx0XHRcdFx0KSxcblx0XHRcdFx0XHR0eXBlOiAnYm9vbGVhbicsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnRndkQ3NkVG9YZmQnLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoJ+aPkOWIoOexu+Wei+WinuWKoOi9rOS6pOiHquW/q+mAn+WIoOmZpOWAmemAiScsICfmj5DliKrpoZ7liKXlop7liqDovYnkuqToh6rlv6vpgJ/liKrpmaTlgJnpgbgnKSxcblx0XHRcdFx0XHRoZWxwdGlwOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn6K+356Gu5L+d5oKo5YWF5YiG5LqG6KejW1tRaXV3ZW465b+r6YCf5Yig6Zmk5pa56ZKIXV3miY3lvIDlkK/mraTlip/og73jgIInLFxuXHRcdFx0XHRcdFx0J+iri+eiuuS/neaCqOWFheWIhuS6huino1tbUWl1d2VuOuW/q+mAn+WIqumZpOaWuemHnV1d5omN6ZaL5ZWf5q2k5Yqf6IO944CCJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0dHlwZTogJ2Jvb2xlYW4nLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ2FmZERlZmF1bHRDYXRlZ29yeScsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6buY6K6k5o+Q5Yig57G75Z6LJywgJ+mgkOioreaPkOWIqumhnuWIpScpLFxuXHRcdFx0XHRcdGhlbHB0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfoi6XpgInmi6nigJznm7jlkIzkuo7kuIrmrKHpgInmi6nigJ3lsIbkvb/nlKhsb2NhbFN0b3JhZ2XmnaXorrDlv4bjgIInLFxuXHRcdFx0XHRcdFx0J+iLpemBuOaTh+OAjOebuOWQjOaWvOS4iuasoemBuOaTh+OAjeWwh+S9v+eUqGxvY2FsU3RvcmFnZeS+huiomOaGtuOAgidcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdHR5cGU6ICdlbnVtJyxcblx0XHRcdFx0XHRlbnVtVmFsdWVzOiB7XG5cdFx0XHRcdFx0XHRkZWxldGU6IHdpbmRvdy53Z1VMUygn5Yig6ZmkJywgJ+WIqumZpCcpLFxuXHRcdFx0XHRcdFx0c2FtZTogd2luZG93LndnVUxTKCfnm7jlkIzkuo7kuIrmrKHpgInmi6knLCAn55u45ZCM5pa85LiK5qyh6YG45pOHJyksXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdhZmRGYW1lRGVmYXVsdFJlYXNvbicsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn6buY6K6k5YWz5rOo5bqm5o+Q5Yig55CG55SxJywgJ+mgkOioremXnOazqOW6puaPkOWIqueQhueUsScpLFxuXHRcdFx0XHRcdGhlbHB0aXA6IHdpbmRvdy53Z1VMUygn55So5LqO5om56YeP5o+Q5Yig44CCJywgJ+eUqOaWvOaJueasoeaPkOWIquOAgicpLFxuXHRcdFx0XHRcdHR5cGU6ICdzdHJpbmcnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ2FmZFN1YnN0dWJEZWZhdWx0UmVhc29uJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfpu5jorqTlsI/lsI/kvZzlk4Hmj5DliKDnkIbnlLEnLCAn6aCQ6Kit5bCP5bCP5L2c5ZOB5o+Q5Yiq55CG55SxJyksXG5cdFx0XHRcdFx0aGVscHRpcDogd2luZG93LndnVUxTKCfnlKjkuo7mibnph4/mj5DliKDjgIInLCAn55So5pa85om55qyh5o+Q5Yiq44CCJyksXG5cdFx0XHRcdFx0dHlwZTogJ3N0cmluZycsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0dGl0bGU6IHdpbmRvdy53Z1VMUygn5YWz6Zet5a2Y5bqf6K6o6K66JywgJ+mXnOmWieWtmOW7ouiojuirlicpLFxuXHRcdFx0bW9kdWxlOiAnY2xvc2UnLFxuXHRcdFx0cHJlZmVyZW5jZXM6IFtcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdYZmRDbG9zZScsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5Zyo5a2Y5bqf6K6o6K665pi+56S65YWz6Zet6K6o6K665oyJ6ZKuJywgJ+WcqOWtmOW7ouiojuirlumhr+ekuumXnOmWieiojuirluaMiemIlScpLFxuXHRcdFx0XHRcdGhlbHB0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfor7fnoa7kv53mgqjlhYXliIbkuobop6NbW1FpdXdlbjrliKDpmaTmlrnpkohdXeaJjeW8gOWQr+atpOWKn+iDveOAgicsXG5cdFx0XHRcdFx0XHQn6KuL56K65L+d5oKo5YWF5YiG5LqG6KejW1tRaXV3ZW465Yiq6Zmk5pa56YedXV3miY3plovllZ/mraTlip/og73jgIInXG5cdFx0XHRcdFx0KSxcblx0XHRcdFx0XHR0eXBlOiAnZW51bScsXG5cdFx0XHRcdFx0ZW51bVZhbHVlczoge1xuXHRcdFx0XHRcdFx0aGlkZTogd2luZG93LndnVUxTKCfkuI3mmL7npLonLCAn5LiN6aGv56S6JyksXG5cdFx0XHRcdFx0XHRub25hZG1pbm9ubHk6IHdpbmRvdy53Z1VMUygn5Y+q5YyF5ZCr6Z2e566h55CG5ZGY5Y+v5L2/55So6YCJ6aG5JywgJ+WPquWMheWQq+mdnueuoeeQhuWToeWPr+S9v+eUqOmBuOmghScpLFxuXHRcdFx0XHRcdFx0YWxsOiB3aW5kb3cud2dVTFMoJ+aYvuekuuaJgOaciemAiemhuScsICfpoa/npLrmiYDmnInpgbjpoIUnKSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHR9LFxuXHRcdFx0XSxcblx0XHR9LFxuXHRcdHtcblx0XHRcdHRpdGxlOiB3aW5kb3cud2dVTFMoJ+S+teeKr+iRl+S9nOadgycsICfkvrXniq/okZfkvZzmrIonKSxcblx0XHRcdG1vZHVsZTogJ2NvcHl2aW8nLFxuXHRcdFx0cHJlZmVyZW5jZXM6IFtcblx0XHRcdFx0Ly8gVHdpbmtsZUNvbmZpZy5jb3B5dmlvV2F0Y2hQYWdlIChzdHJpbmcpXG5cdFx0XHRcdC8vIFRoZSB3YXRjaGxpc3Qgc2V0dGluZyBvZiB0aGUgcGFnZSBiZWluZyBub21pbmF0ZWQgZm9yIFhmRC5cblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdjb3B5dmlvV2F0Y2hQYWdlJyxcblx0XHRcdFx0XHRsYWJlbDogd2luZG93LndnVUxTKCfliqDlhaXmj5DmiqXnmoTpobXpnaLliLDnm5Hop4bliJfooagnLCAn5Yqg5YWl5o+Q5aCx55qE6aCB6Z2i5Yiw55uj6KaW5riF5ZauJyksXG5cdFx0XHRcdFx0dHlwZTogJ2VudW0nLFxuXHRcdFx0XHRcdGVudW1WYWx1ZXM6IFR3aW5rbGUuY29uZmlnLndhdGNobGlzdEVudW1zLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHQvLyBUd2lua2xlQ29uZmlnLmNvcHl2aW9XYXRjaFVzZXIgKHN0cmluZylcblx0XHRcdFx0Ly8gVGhlIHdhdGNobGlzdCBzZXR0aW5nIG9mIHRoZSB1c2VyIGlmIGhlIHJlY2VpdmVzIGEgbm90aWZpY2F0aW9uLlxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ2NvcHl2aW9XYXRjaFVzZXInLFxuXHRcdFx0XHRcdGxhYmVsOiB3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHQn5Yqg5YWl5Yib5bu66ICF6K6o6K666aG15Yiw55uR6KeG5YiX6KGo77yI5Zyo6YCa55+l5pe277yJJyxcblx0XHRcdFx0XHRcdCfliqDlhaXlu7rnq4vogIXoqI7oq5bpoIHliLDnm6PoppbmuIXllq7vvIjlnKjpgJrnn6XmmYLvvIknXG5cdFx0XHRcdFx0KSxcblx0XHRcdFx0XHR0eXBlOiAnZW51bScsXG5cdFx0XHRcdFx0ZW51bVZhbHVlczogVHdpbmtsZS5jb25maWcud2F0Y2hsaXN0RW51bXMsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdC8vIFR3aW5rbGVDb25maWcubWFya0NvcHl2aW9QYWdlc0FzUGF0cm9sbGVkIChib29sZWFuKVxuXHRcdFx0XHQvLyBJZiwgd2hlbiBhcHBseWluZyBjb3B5dmlvIHRlbXBsYXRlIHRvIHBhZ2UsIHRvIG1hcmsgdGhlIHBhZ2UgYXMgcGF0cm9sbGVkIChpZiB0aGUgcGFnZSB3YXMgcmVhY2hlZCBmcm9tIE5ld1BhZ2VzKVxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ21hcmtDb3B5dmlvUGFnZXNBc1BhdHJvbGxlZCcsXG5cdFx0XHRcdFx0bGFiZWw6IHdpbmRvdy53Z1VMUygn5qCH6K6w5pe25qCH6K6w6aG16Z2i5Li65bey5beh5p+l77yI5aaC5Y+v6IO977yJJywgJ+aomeiomOaZguaomeiomOmggemdoueCuuW3suW3oeafpe+8iOWmguWPr+iDve+8iScpLFxuXHRcdFx0XHRcdGhlbHB0aXA6IHdpbmRvdy53Z1VMUyhcblx0XHRcdFx0XHRcdCfln7rkuo7mioDmnK/ljp/lm6DvvIzpobXpnaLku4XkvJrlnKjnlLFTcGVjaWFsOk5ld1BhZ2Vz5Yiw6L6+5pe26KKr5qCH6K6w5Li65bey5beh5p+l44CCJyxcblx0XHRcdFx0XHRcdCfln7rmlrzmioDooZPljp/lm6DvvIzpoIHpnaLlg4XmnIPlnKjnlLFTcGVjaWFsOk5ld1BhZ2Vz5Yiw6YGU5pmC6KKr5qiZ6KiY54K65bey5beh5p+l44CCJ1xuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0dHlwZTogJ2Jvb2xlYW4nLFxuXHRcdFx0XHR9LFxuXHRcdFx0XSxcblx0XHR9LFxuXHRcdHtcblx0XHRcdHRpdGxlOiB3aW5kb3cud2dVTFMoJ+makOiXjycsICfpmrHol48nKSxcblx0XHRcdGhpZGRlbjogdHJ1ZSxcblx0XHRcdHByZWZlcmVuY2VzOiBbXG5cdFx0XHRcdC8vIHR3aW5rbGUuanM6IHBvcnRsZXQgc2V0dXBcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdwb3J0bGV0QXJlYScsXG5cdFx0XHRcdFx0dHlwZTogJ3N0cmluZycsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAncG9ydGxldElkJyxcblx0XHRcdFx0XHR0eXBlOiAnc3RyaW5nJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdwb3J0bGV0TmFtZScsXG5cdFx0XHRcdFx0dHlwZTogJ3N0cmluZycsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAncG9ydGxldFR5cGUnLFxuXHRcdFx0XHRcdHR5cGU6ICdzdHJpbmcnLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0bmFtZTogJ3BvcnRsZXROZXh0Jyxcblx0XHRcdFx0XHR0eXBlOiAnc3RyaW5nJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0Ly8gdHdpbmtsZWZsdWZmLmpzOiBkZWZpbmVzIGhvdyBtYW55IHJldmlzaW9uIHRvIHF1ZXJ5IG1heGltdW0sIG1heGltdW0gcG9zc2libGUgaXMgNTAsIGRlZmF1bHQgaXMgNTBcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdyZXZlcnRNYXhSZXZpc2lvbnMnLFxuXHRcdFx0XHRcdHR5cGU6ICdpbnRlZ2VyJyxcblx0XHRcdFx0fSxcblx0XHRcdFx0Ly8gdHdpbmtsZWJhdGNoZGVsZXRlLmpzOiBIb3cgbWFueSBwYWdlcyBzaG91bGQgYmUgcHJvY2Vzc2VkIG1heGltdW1cblx0XHRcdFx0e1xuXHRcdFx0XHRcdG5hbWU6ICdiYXRjaE1heCcsXG5cdFx0XHRcdFx0dHlwZTogJ2ludGVnZXInLFxuXHRcdFx0XHRcdGFkbWluT25seTogdHJ1ZSxcblx0XHRcdFx0fSxcblx0XHRcdFx0Ly8gSG93IG1hbnkgcGFnZXMgc2hvdWxkIGJlIHByb2Nlc3NlZCBhdCBhIHRpbWUgYnkgZGVwcm9kIGFuZCBiYXRjaGRlbGV0ZS9wcm90ZWN0L3VuZGVsZXRlXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRuYW1lOiAnYmF0Y2hDaHVua3MnLFxuXHRcdFx0XHRcdHR5cGU6ICdpbnRlZ2VyJyxcblx0XHRcdFx0XHRhZG1pbk9ubHk6IHRydWUsXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdF07IC8vIGVuZCBvZiBUd2lua2xlLmNvbmZpZy5zZWN0aW9uc1xuXHRUd2lua2xlLmNvbmZpZy5pbml0ID0gKCkgPT4ge1xuXHRcdC8vIGNyZWF0ZSB0aGUgY29uZmlnIHBhZ2UgYXQgVHdpbmtsZS5nZXRQcmVmKCdjb25maWdQYWdlJylcblx0XHRpZiAobXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpID09PSBUd2lua2xlLmdldFByZWYoJ2NvbmZpZ1BhZ2UnKSAmJiBtdy5jb25maWcuZ2V0KCd3Z0FjdGlvbicpID09PSAndmlldycpIHtcblx0XHRcdGlmICghZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3R3aW5rbGUtY29uZmlnJykpIHtcblx0XHRcdFx0cmV0dXJuOyAvLyBtYXliZSB0aGUgcGFnZSBpcyBtaXNjb25maWd1cmVkLCBvciBzb21ldGhpbmcgLSBidXQgYW55IGF0dGVtcHQgdG8gbW9kaWZ5IGl0IHdpbGwgYmUgcG9pbnRsZXNzXG5cdFx0XHR9XG5cdFx0XHRjb25zdCBjb250ZW50ZGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3R3aW5rbGUtY29uZmlnLWNvbnRlbnQnKTtcblx0XHRcdGNvbnRlbnRkaXYudGV4dENvbnRlbnQgPSAnJzsgLy8gY2xlYXIgY2hpbGRyZW5cblx0XHRcdC8vIHN0YXJ0IGEgdGFibGUgb2YgY29udGVudHNcblx0XHRcdGNvbnN0IHRvY3RhYmxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cdFx0XHR0b2N0YWJsZS5jbGFzc05hbWUgPSAndG9jJztcblx0XHRcdHRvY3RhYmxlLnN0eWxlLm1hcmdpbkxlZnQgPSAnMC40ZW0nO1xuXHRcdFx0Ly8gY3JlYXRlIFRPQyB0aXRsZVxuXHRcdFx0Y29uc3QgdG9jdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblx0XHRcdHRvY3RpdGxlLmlkID0gJ3RvY3RpdGxlJztcblx0XHRcdGNvbnN0IHRvY2gyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTtcblx0XHRcdHRvY2gyLnRleHRDb250ZW50ID0gd2luZG93LndnVUxTKCfnm67lvZUgJywgJ+ebrumMhCAnKTtcblx0XHRcdHRvY3RpdGxlLmFwcGVuZENoaWxkKHRvY2gyKTtcblx0XHRcdC8vIGFkZCBUT0Mgc2hvdy9oaWRlIGxpbmtcblx0XHRcdGNvbnN0IHRvY3RvZ2dsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcblx0XHRcdHRvY3RvZ2dsZS5jbGFzc05hbWUgPSAndG9jdG9nZ2xlJztcblx0XHRcdHRvY3RvZ2dsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnWycpKTtcblx0XHRcdGNvbnN0IHRvY3RvZ2dsZWxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG5cdFx0XHR0b2N0b2dnbGVsaW5rLmNsYXNzTmFtZSA9ICdpbnRlcm5hbCc7XG5cdFx0XHR0b2N0b2dnbGVsaW5rLnNldEF0dHJpYnV0ZSgnaHJlZicsICcjdHctdG9jc2hvd2hpZGUnKTtcblx0XHRcdHRvY3RvZ2dsZWxpbmsudGV4dENvbnRlbnQgPSB3aW5kb3cud2dVTFMoJ+makOiXjycsICfpmrHol48nKTtcblx0XHRcdHRvY3RvZ2dsZS5hcHBlbmRDaGlsZCh0b2N0b2dnbGVsaW5rKTtcblx0XHRcdHRvY3RvZ2dsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnXScpKTtcblx0XHRcdHRvY3RpdGxlLmFwcGVuZENoaWxkKHRvY3RvZ2dsZSk7XG5cdFx0XHR0b2N0YWJsZS5hcHBlbmRDaGlsZCh0b2N0aXRsZSk7XG5cdFx0XHQvLyBjcmVhdGUgaXRlbSBjb250YWluZXI6IHRoaXMgaXMgd2hhdCB3ZSBhZGQgc3R1ZmYgdG9cblx0XHRcdGNvbnN0IHRvY3VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcblx0XHRcdHRvY3RvZ2dsZWxpbmsuYWRkRXZlbnRMaXN0ZW5lcihcblx0XHRcdFx0J2NsaWNrJyxcblx0XHRcdFx0KCkgPT4ge1xuXHRcdFx0XHRcdGNvbnN0ICR0b2N1bCA9ICQodG9jdWwpO1xuXHRcdFx0XHRcdCR0b2N1bC50b2dnbGUoKTtcblx0XHRcdFx0XHRpZiAoJHRvY3VsLmZpbmQoJzp2aXNpYmxlJykubGVuZ3RoKSB7XG5cdFx0XHRcdFx0XHR0b2N0b2dnbGVsaW5rLnRleHRDb250ZW50ID0gd2luZG93LndnVUxTKCfpmpDol48nLCAn6Zqx6JePJyk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHRvY3RvZ2dsZWxpbmsudGV4dENvbnRlbnQgPSB3aW5kb3cud2dVTFMoJ+aYvuekuicsICfpoa/npLonKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0sXG5cdFx0XHRcdGZhbHNlXG5cdFx0XHQpO1xuXHRcdFx0dG9jdGFibGUuYXBwZW5kQ2hpbGQodG9jdWwpO1xuXHRcdFx0Y29udGVudGRpdi5hcHBlbmRDaGlsZCh0b2N0YWJsZSk7XG5cdFx0XHRjb25zdCBjb250ZW50Zm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvcm0nKTtcblx0XHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zY3JpcHQtdXJsXG5cdFx0XHRjb250ZW50Zm9ybS5zZXRBdHRyaWJ1dGUoJ2FjdGlvbicsICdqYXZhc2NyaXB0OnZvaWQoMCknKTsgLy8gd2FzICN0dy1zYXZlIC0gY2hhbmdlZCB0byB2b2lkKDApIHRvIHdvcmsgYXJvdW5kIENocm9tZSBpc3N1ZVxuXHRcdFx0Y29udGVudGZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgVHdpbmtsZS5jb25maWcuc2F2ZSwgdHJ1ZSk7XG5cdFx0XHRjb250ZW50ZGl2LmFwcGVuZENoaWxkKGNvbnRlbnRmb3JtKTtcblx0XHRcdGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RhYmxlJyk7XG5cdFx0XHRjb250YWluZXIuc3R5bGUud2lkdGggPSAnMTAwJSc7XG5cdFx0XHRjb250ZW50Zm9ybS5hcHBlbmRDaGlsZChjb250YWluZXIpO1xuXHRcdFx0JChUd2lua2xlLmNvbmZpZy5zZWN0aW9ucykuZWFjaCgoc2VjdGlvbmtleSwgc2VjdGlvbikgPT4ge1xuXHRcdFx0XHRpZiAoc2VjdGlvbi5oaWRkZW4gfHwgKHNlY3Rpb24uYWRtaW5Pbmx5ICYmICFNb3JlYml0cy51c2VySXNTeXNvcCkpIHtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTsgLy8gaS5lLiBcImNvbnRpbnVlXCIgaW4gdGhpcyBjb250ZXh0XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gYWRkIHRvIFRPQ1xuXHRcdFx0XHRjb25zdCB0b2NsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG5cdFx0XHRcdHRvY2xpLmNsYXNzTmFtZSA9ICd0b2NsZXZlbC0xJztcblx0XHRcdFx0Y29uc3QgdG9jYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcblx0XHRcdFx0dG9jYS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBgIyR7c2VjdGlvbi5tb2R1bGV9YCk7XG5cdFx0XHRcdHRvY2EuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoc2VjdGlvbi50aXRsZSkpO1xuXHRcdFx0XHR0b2NsaS5hcHBlbmRDaGlsZCh0b2NhKTtcblx0XHRcdFx0dG9jdWwuYXBwZW5kQ2hpbGQodG9jbGkpO1xuXHRcdFx0XHRsZXQgcm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndHInKTtcblx0XHRcdFx0bGV0IGNlbGwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZCcpO1xuXHRcdFx0XHRjZWxsLnNldEF0dHJpYnV0ZSgnY29sc3BhbicsICczJyk7XG5cdFx0XHRcdGNvbnN0IGhlYWRpbmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoNCcpO1xuXHRcdFx0XHRoZWFkaW5nLnN0eWxlLmJvcmRlckJvdHRvbSA9ICcxcHggc29saWQgIzgwODA4MCc7XG5cdFx0XHRcdGhlYWRpbmcuc3R5bGUubWFyZ2luVG9wID0gJzAuMmVtJztcblx0XHRcdFx0aGVhZGluZy5pZCA9IHNlY3Rpb24ubW9kdWxlO1xuXHRcdFx0XHRoZWFkaW5nLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHNlY3Rpb24udGl0bGUpKTtcblx0XHRcdFx0Y2VsbC5hcHBlbmRDaGlsZChoZWFkaW5nKTtcblx0XHRcdFx0cm93LmFwcGVuZENoaWxkKGNlbGwpO1xuXHRcdFx0XHRjb250YWluZXIuYXBwZW5kQ2hpbGQocm93KTtcblx0XHRcdFx0bGV0IHJvd2NvdW50ID0gMTsgLy8gZm9yIHJvdyBiYW5kaW5nXG5cdFx0XHRcdC8vIGFkZCBlYWNoIG9mIHRoZSBwcmVmZXJlbmNlcyB0byB0aGUgZm9ybVxuXHRcdFx0XHQkKHNlY3Rpb24ucHJlZmVyZW5jZXMpLmVhY2goKHByZWZrZXksIHByZWYpID0+IHtcblx0XHRcdFx0XHRpZiAocHJlZi5hZG1pbk9ubHkgJiYgIU1vcmViaXRzLnVzZXJJc1N5c29wKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTsgLy8gaS5lLiBcImNvbnRpbnVlXCIgaW4gdGhpcyBjb250ZXh0XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0cm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndHInKTtcblx0XHRcdFx0XHRyb3cuc3R5bGUubWFyZ2luQm90dG9tID0gJzAuMmVtJztcblx0XHRcdFx0XHQvLyBjcmVhdGUgb2RkIHJvdyBiYW5kaW5nXG5cdFx0XHRcdFx0aWYgKHJvd2NvdW50KysgJSAyID09PSAwKSB7XG5cdFx0XHRcdFx0XHRyb3cuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ3JnYigxMjggMTI4IDEyOC8uMSknO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRjZWxsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGQnKTtcblx0XHRcdFx0XHRsZXQgbGFiZWw7XG5cdFx0XHRcdFx0bGV0IGlucHV0O1xuXHRcdFx0XHRcdGNvbnN0IGdvdFByZWYgPSBUd2lua2xlLmdldFByZWYocHJlZi5uYW1lKTtcblx0XHRcdFx0XHRzd2l0Y2ggKHByZWYudHlwZSkge1xuXHRcdFx0XHRcdFx0Y2FzZSAnYm9vbGVhbic6XG5cdFx0XHRcdFx0XHRcdC8vIGNyZWF0ZSBhIGNoZWNrYm94XG5cdFx0XHRcdFx0XHRcdGNlbGwuc2V0QXR0cmlidXRlKCdjb2xzcGFuJywgJzInKTtcblx0XHRcdFx0XHRcdFx0bGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuXHRcdFx0XHRcdFx0XHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG5cdFx0XHRcdFx0XHRcdGlucHV0LnNldEF0dHJpYnV0ZSgndHlwZScsICdjaGVja2JveCcpO1xuXHRcdFx0XHRcdFx0XHRpbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywgcHJlZi5uYW1lKTtcblx0XHRcdFx0XHRcdFx0aW5wdXQuc2V0QXR0cmlidXRlKCduYW1lJywgcHJlZi5uYW1lKTtcblx0XHRcdFx0XHRcdFx0aWYgKGdvdFByZWYgPT09IHRydWUpIHtcblx0XHRcdFx0XHRcdFx0XHRpbnB1dC5jaGVja2VkID0gdHJ1ZTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRsYWJlbC5hcHBlbmRDaGlsZChpbnB1dCk7XG5cdFx0XHRcdFx0XHRcdGxhYmVsLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHByZWYubGFiZWwpKTtcblx0XHRcdFx0XHRcdFx0Y2VsbC5hcHBlbmRDaGlsZChsYWJlbCk7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0Y2FzZSAnc3RyaW5nJzogLy8gY3JlYXRlIGFuIGlucHV0IGJveFxuXHRcdFx0XHRcdFx0Y2FzZSAnaW50ZWdlcic6XG5cdFx0XHRcdFx0XHRcdC8vIGFkZCBsYWJlbCB0byBmaXJzdCBjb2x1bW5cblx0XHRcdFx0XHRcdFx0Y2VsbC5zdHlsZS50ZXh0QWxpZ24gPSAncmlnaHQnO1xuXHRcdFx0XHRcdFx0XHRjZWxsLnN0eWxlLnBhZGRpbmdSaWdodCA9ICcwLjVlbSc7XG5cdFx0XHRcdFx0XHRcdGxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcblx0XHRcdFx0XHRcdFx0bGFiZWwuc2V0QXR0cmlidXRlKCdmb3InLCBwcmVmLm5hbWUpO1xuXHRcdFx0XHRcdFx0XHRsYWJlbC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShgJHtwcmVmLmxhYmVsfe+8mmApKTtcblx0XHRcdFx0XHRcdFx0Y2VsbC5hcHBlbmRDaGlsZChsYWJlbCk7XG5cdFx0XHRcdFx0XHRcdHJvdy5hcHBlbmRDaGlsZChjZWxsKTtcblx0XHRcdFx0XHRcdFx0Ly8gYWRkIGlucHV0IGJveCB0byBzZWNvbmQgY29sdW1uXG5cdFx0XHRcdFx0XHRcdGNlbGwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZCcpO1xuXHRcdFx0XHRcdFx0XHRjZWxsLnN0eWxlLnBhZGRpbmdSaWdodCA9ICcxZW0nO1xuXHRcdFx0XHRcdFx0XHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG5cdFx0XHRcdFx0XHRcdGlucHV0LnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0Jyk7XG5cdFx0XHRcdFx0XHRcdGlucHV0LnNldEF0dHJpYnV0ZSgnaWQnLCBwcmVmLm5hbWUpO1xuXHRcdFx0XHRcdFx0XHRpbnB1dC5zZXRBdHRyaWJ1dGUoJ25hbWUnLCBwcmVmLm5hbWUpO1xuXHRcdFx0XHRcdFx0XHRpZiAocHJlZi50eXBlID09PSAnaW50ZWdlcicpIHtcblx0XHRcdFx0XHRcdFx0XHRpbnB1dC5zZXRBdHRyaWJ1dGUoJ3NpemUnLCA2KTtcblx0XHRcdFx0XHRcdFx0XHRpbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnbnVtYmVyJyk7XG5cdFx0XHRcdFx0XHRcdFx0aW5wdXQuc2V0QXR0cmlidXRlKCdzdGVwJywgJzEnKTsgLy8gaW50ZWdlcnMgb25seVxuXHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0aWYgKGdvdFByZWYpIHtcblx0XHRcdFx0XHRcdFx0XHRpbnB1dC5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgZ290UHJlZik7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0Y2VsbC5hcHBlbmRDaGlsZChpbnB1dCk7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0Y2FzZSAnZW51bSc6IHtcblx0XHRcdFx0XHRcdFx0Ly8gY3JlYXRlIGEgY29tYm8gYm94XG5cdFx0XHRcdFx0XHRcdC8vIGFkZCBsYWJlbCB0byBmaXJzdCBjb2x1bW5cblx0XHRcdFx0XHRcdFx0Ly8gbm90ZTogZHVwbGljYXRlcyB0aGUgY29kZSBhYm92ZSwgdW5kZXIgc3RyaW5nL2ludGVnZXJcblx0XHRcdFx0XHRcdFx0Y2VsbC5zdHlsZS50ZXh0QWxpZ24gPSAncmlnaHQnO1xuXHRcdFx0XHRcdFx0XHRjZWxsLnN0eWxlLnBhZGRpbmdSaWdodCA9ICcwLjVlbSc7XG5cdFx0XHRcdFx0XHRcdGxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcblx0XHRcdFx0XHRcdFx0bGFiZWwuc2V0QXR0cmlidXRlKCdmb3InLCBwcmVmLm5hbWUpO1xuXHRcdFx0XHRcdFx0XHRsYWJlbC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShgJHtwcmVmLmxhYmVsfe+8mmApKTtcblx0XHRcdFx0XHRcdFx0Y2VsbC5hcHBlbmRDaGlsZChsYWJlbCk7XG5cdFx0XHRcdFx0XHRcdHJvdy5hcHBlbmRDaGlsZChjZWxsKTtcblx0XHRcdFx0XHRcdFx0Ly8gYWRkIGlucHV0IGJveCB0byBzZWNvbmQgY29sdW1uXG5cdFx0XHRcdFx0XHRcdGNlbGwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZCcpO1xuXHRcdFx0XHRcdFx0XHRjZWxsLnN0eWxlLnBhZGRpbmdSaWdodCA9ICcxZW0nO1xuXHRcdFx0XHRcdFx0XHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NlbGVjdCcpO1xuXHRcdFx0XHRcdFx0XHRpbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywgcHJlZi5uYW1lKTtcblx0XHRcdFx0XHRcdFx0aW5wdXQuc2V0QXR0cmlidXRlKCduYW1lJywgcHJlZi5uYW1lKTtcblx0XHRcdFx0XHRcdFx0bGV0IG9wdGlvbkV4aXN0cyA9IGZhbHNlO1xuXHRcdFx0XHRcdFx0XHRmb3IgKGNvbnN0IFtlbnVtdmFsdWUsIGVudW1kaXNwbGF5XSBvZiBPYmplY3QuZW50cmllcyhwcmVmLmVudW1WYWx1ZXMpKSB7XG5cdFx0XHRcdFx0XHRcdFx0Y29uc3Qgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG5cdFx0XHRcdFx0XHRcdFx0b3B0aW9uLnNldEF0dHJpYnV0ZSgndmFsdWUnLCBlbnVtdmFsdWUpO1xuXHRcdFx0XHRcdFx0XHRcdGlmIChcblx0XHRcdFx0XHRcdFx0XHRcdGdvdFByZWYgPT09IGVudW12YWx1ZSB8fFxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSGFjayB0byBjb252ZXJ0IG9sZCBib29sZWFuIHdhdGNobGlzdCBwcmVmc1xuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gdG8gY29ycmVzcG9uZGluZyBlbnVtcyAoYWRkZWQgaW4gdjIuMSlcblx0XHRcdFx0XHRcdFx0XHRcdCh0eXBlb2YgZ290UHJlZiA9PT0gJ2Jvb2xlYW4nICYmXG5cdFx0XHRcdFx0XHRcdFx0XHRcdCgoZ290UHJlZiAmJiBlbnVtdmFsdWUgPT09ICd5ZXMnKSB8fCAoIWdvdFByZWYgJiYgZW51bXZhbHVlID09PSAnbm8nKSkpXG5cdFx0XHRcdFx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRvcHRpb24uc2V0QXR0cmlidXRlKCdzZWxlY3RlZCcsICdzZWxlY3RlZCcpO1xuXHRcdFx0XHRcdFx0XHRcdFx0b3B0aW9uRXhpc3RzID0gdHJ1ZTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0b3B0aW9uLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGVudW1kaXNwbGF5KSk7XG5cdFx0XHRcdFx0XHRcdFx0aW5wdXQuYXBwZW5kQ2hpbGQob3B0aW9uKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHQvLyBBcHBlbmQgdXNlci1kZWZpbmVkIHZhbHVlIHRvIG9wdGlvbnNcblx0XHRcdFx0XHRcdFx0aWYgKCFvcHRpb25FeGlzdHMpIHtcblx0XHRcdFx0XHRcdFx0XHRjb25zdCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcblx0XHRcdFx0XHRcdFx0XHRvcHRpb24uc2V0QXR0cmlidXRlKCd2YWx1ZScsIGdvdFByZWYpO1xuXHRcdFx0XHRcdFx0XHRcdG9wdGlvbi5zZXRBdHRyaWJ1dGUoJ3NlbGVjdGVkJywgJ3NlbGVjdGVkJyk7XG5cdFx0XHRcdFx0XHRcdFx0b3B0aW9uLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGdvdFByZWYpKTtcblx0XHRcdFx0XHRcdFx0XHRpbnB1dC5hcHBlbmRDaGlsZChvcHRpb24pO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdGNlbGwuYXBwZW5kQ2hpbGQoaW5wdXQpO1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGNhc2UgJ3NldCc6IHtcblx0XHRcdFx0XHRcdFx0Ly8gY3JlYXRlIGEgc2V0IG9mIGNoZWNrIGJveGVzXG5cdFx0XHRcdFx0XHRcdC8vIGFkZCBsYWJlbCBmaXJzdCBvZiBhbGxcblx0XHRcdFx0XHRcdFx0Y2VsbC5zZXRBdHRyaWJ1dGUoJ2NvbHNwYW4nLCAnMicpO1xuXHRcdFx0XHRcdFx0XHRsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7IC8vIG5vdCByZWFsbHkgbmVjZXNzYXJ5IHRvIHVzZSBhIGxhYmVsIGVsZW1lbnQgaGVyZSwgYnV0IHdlIGRvIGl0IGZvciBjb25zaXN0ZW5jeSBvZiBzdHlsaW5nXG5cdFx0XHRcdFx0XHRcdGxhYmVsLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGAke3ByZWYubGFiZWx977yaYCkpO1xuXHRcdFx0XHRcdFx0XHRjZWxsLmFwcGVuZENoaWxkKGxhYmVsKTtcblx0XHRcdFx0XHRcdFx0Y29uc3QgY2hlY2tkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblx0XHRcdFx0XHRcdFx0Y2hlY2tkaXYuc3R5bGUucGFkZGluZ0xlZnQgPSAnMWVtJztcblx0XHRcdFx0XHRcdFx0Y29uc3Qgd29ya2VyID0gKGl0ZW1rZXksIGl0ZW12YWx1ZSkgPT4ge1xuXHRcdFx0XHRcdFx0XHRcdGNvbnN0IGNoZWNrbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuXHRcdFx0XHRcdFx0XHRcdGNoZWNrbGFiZWwuc3R5bGUubWFyZ2luUmlnaHQgPSAnMC43ZW0nO1xuXHRcdFx0XHRcdFx0XHRcdGNoZWNrbGFiZWwuc3R5bGUuZGlzcGxheSA9ICdpbmxpbmUtYmxvY2snO1xuXHRcdFx0XHRcdFx0XHRcdGNvbnN0IGNoZWNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcblx0XHRcdFx0XHRcdFx0XHRjaGVjay5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnY2hlY2tib3gnKTtcblx0XHRcdFx0XHRcdFx0XHRjaGVjay5zZXRBdHRyaWJ1dGUoJ2lkJywgYCR7cHJlZi5uYW1lfV8ke2l0ZW1rZXl9YCk7XG5cdFx0XHRcdFx0XHRcdFx0Y2hlY2suc2V0QXR0cmlidXRlKCduYW1lJywgYCR7cHJlZi5uYW1lfV8ke2l0ZW1rZXl9YCk7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKGdvdFByZWYgJiYgZ290UHJlZi5pbmNsdWRlcyhpdGVta2V5KSkge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y2hlY2suY2hlY2tlZCA9IHRydWU7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdC8vIGNhdGVyIGZvciBsZWdhY3kgaW50ZWdlciBhcnJheSB2YWx1ZXMgZm9yIHVubGlua05hbWVzcGFjZXMgKHRoaXMgY2FuIGJlIHJlbW92ZWQgYSBmZXcgeWVhcnMgZG93biB0aGUgdHJhY2suLi4pXG5cdFx0XHRcdFx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdFx0XHRcdFx0cHJlZi5uYW1lID09PSAndW5saW5rTmFtZXNwYWNlcycgJiZcblx0XHRcdFx0XHRcdFx0XHRcdGdvdFByZWYgJiZcblx0XHRcdFx0XHRcdFx0XHRcdGdvdFByZWYuaW5jbHVkZXMoTnVtYmVyLnBhcnNlSW50KGl0ZW1rZXksIDEwKSlcblx0XHRcdFx0XHRcdFx0XHQpIHtcblx0XHRcdFx0XHRcdFx0XHRcdGNoZWNrLmNoZWNrZWQgPSB0cnVlO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRjaGVja2xhYmVsLmFwcGVuZENoaWxkKGNoZWNrKTtcblx0XHRcdFx0XHRcdFx0XHRjaGVja2xhYmVsLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGl0ZW12YWx1ZSkpO1xuXHRcdFx0XHRcdFx0XHRcdGNoZWNrZGl2LmFwcGVuZENoaWxkKGNoZWNrbGFiZWwpO1xuXHRcdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0XHRpZiAocHJlZi5zZXREaXNwbGF5T3JkZXIpIHtcblx0XHRcdFx0XHRcdFx0XHQvLyBhZGQgY2hlY2sgYm94ZXMgYWNjb3JkaW5nIHRvIHRoZSBnaXZlbiBkaXNwbGF5IG9yZGVyXG5cdFx0XHRcdFx0XHRcdFx0Zm9yIChjb25zdCBpdGVtIG9mIHByZWYuc2V0RGlzcGxheU9yZGVyKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHR3b3JrZXIoaXRlbSwgcHJlZi5zZXRWYWx1ZXNbaXRlbV0pO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHQvLyBhZGQgY2hlY2sgYm94ZXMgYWNjb3JkaW5nIHRvIHRoZSBvcmRlciBpdCBnZXRzIGZlZCB0byB1cyAocHJvYmFibHkgc3RyaWN0IGFscGhhYmV0aWNhbClcblx0XHRcdFx0XHRcdFx0XHRmb3IgKGNvbnN0IFtpdGVta2V5LCBpdGVtdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByZWYuc2V0VmFsdWVzKSkge1xuXHRcdFx0XHRcdFx0XHRcdFx0d29ya2VyKGl0ZW1rZXksIGl0ZW12YWx1ZSk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdGNlbGwuYXBwZW5kQ2hpbGQoY2hlY2tkaXYpO1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGNhc2UgJ2N1c3RvbUxpc3QnOiB7XG5cdFx0XHRcdFx0XHRcdC8vIGFkZCBsYWJlbCB0byBmaXJzdCBjb2x1bW5cblx0XHRcdFx0XHRcdFx0Y2VsbC5zdHlsZS50ZXh0QWxpZ24gPSAncmlnaHQnO1xuXHRcdFx0XHRcdFx0XHRjZWxsLnN0eWxlLnBhZGRpbmdSaWdodCA9ICcwLjVlbSc7XG5cdFx0XHRcdFx0XHRcdGxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcblx0XHRcdFx0XHRcdFx0bGFiZWwuc2V0QXR0cmlidXRlKCdmb3InLCBwcmVmLm5hbWUpO1xuXHRcdFx0XHRcdFx0XHRsYWJlbC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShgJHtwcmVmLmxhYmVsfe+8mmApKTtcblx0XHRcdFx0XHRcdFx0Y2VsbC5hcHBlbmRDaGlsZChsYWJlbCk7XG5cdFx0XHRcdFx0XHRcdHJvdy5hcHBlbmRDaGlsZChjZWxsKTtcblx0XHRcdFx0XHRcdFx0Ly8gYWRkIGJ1dHRvbiB0byBzZWNvbmQgY29sdW1uXG5cdFx0XHRcdFx0XHRcdGNlbGwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZCcpO1xuXHRcdFx0XHRcdFx0XHRjZWxsLnN0eWxlLnBhZGRpbmdSaWdodCA9ICcxZW0nO1xuXHRcdFx0XHRcdFx0XHRjb25zdCBjdXN0b21MaXN0QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG5cdFx0XHRcdFx0XHRcdGN1c3RvbUxpc3RCdXR0b24uc2V0QXR0cmlidXRlKCdpZCcsIHByZWYubmFtZSk7XG5cdFx0XHRcdFx0XHRcdGN1c3RvbUxpc3RCdXR0b24uc2V0QXR0cmlidXRlKCduYW1lJywgcHJlZi5uYW1lKTtcblx0XHRcdFx0XHRcdFx0Y3VzdG9tTGlzdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnYnV0dG9uJyk7XG5cdFx0XHRcdFx0XHRcdGN1c3RvbUxpc3RCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBUd2lua2xlLmNvbmZpZy5saXN0RGlhbG9nLmRpc3BsYXksIGZhbHNlKTtcblx0XHRcdFx0XHRcdFx0Ly8gdXNlIGpRdWVyeSBkYXRhIG9uIHRoZSBidXR0b24gdG8gc3RvcmUgdGhlIGN1cnJlbnQgY29uZmlnIHZhbHVlXG5cdFx0XHRcdFx0XHRcdCQoY3VzdG9tTGlzdEJ1dHRvbikuZGF0YSh7XG5cdFx0XHRcdFx0XHRcdFx0dmFsdWU6IGdvdFByZWYsXG5cdFx0XHRcdFx0XHRcdFx0cHJlZixcblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRcdGN1c3RvbUxpc3RCdXR0b24uYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUod2luZG93LndnVUxTKCfnvJbovpHpobnnm64nLCAn57eo6Lyv6aCF55uuJykpKTtcblx0XHRcdFx0XHRcdFx0Y2VsbC5hcHBlbmRDaGlsZChjdXN0b21MaXN0QnV0dG9uKTtcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdFx0XHR2b2lkIG13Lm5vdGlmeShgdHdpbmtsZWNvbmZpZzog5pyq55+l57G75Z6L55qE5bGe5oCnICR7cHJlZi5uYW1lfWAsIHtcblx0XHRcdFx0XHRcdFx0XHR0eXBlOiAnd2FybicsXG5cdFx0XHRcdFx0XHRcdFx0dGFnOiAndHdpbmtsZWNvbmZpZycsXG5cdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cm93LmFwcGVuZENoaWxkKGNlbGwpO1xuXHRcdFx0XHRcdC8vIGFkZCBoZWxwIHRpcFxuXHRcdFx0XHRcdGNlbGwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZCcpO1xuXHRcdFx0XHRcdGNlbGwuc3R5bGUuZm9udFNpemUgPSAnOTAlJztcblx0XHRcdFx0XHRjZWxsLnN0eWxlLmNvbG9yID0gJ2dyYXknO1xuXHRcdFx0XHRcdGlmIChwcmVmLmhlbHB0aXApIHtcblx0XHRcdFx0XHRcdC8vIGNvbnZlcnQgbWVudGlvbnMgb2YgdGVtcGxhdGVzIGluIHRoZSBoZWxwdGlwIHRvIGNsaWNrYWJsZSBsaW5rc1xuXHRcdFx0XHRcdFx0Y2VsbC5pbm5lckhUTUwgPSBwcmVmLmhlbHB0aXBcblx0XHRcdFx0XHRcdFx0LnJlcGxhY2UoXG5cdFx0XHRcdFx0XHRcdFx0L3t7KC4rPyl9fS9nLFxuXHRcdFx0XHRcdFx0XHRcdGB7ezxhIGhyZWY9XCIke213LnV0aWwuZ2V0VXJsKCdUZW1wbGF0ZTonKX0kMVwiIHJlbD1cIm5vb3BlbmVyXCIgdGFyZ2V0PVwiX2JsYW5rXCI+JDE8L2E+fX1gXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdFx0LnJlcGxhY2UoXG5cdFx0XHRcdFx0XHRcdFx0L1xcW1xcWyguKz8pXV0vZyxcblx0XHRcdFx0XHRcdFx0XHRgPGEgaHJlZj1cIiR7bXcudXRpbC5nZXRVcmwoJycpfSQxXCIgcmVsPVwibm9vcGVuZXJcIiB0YXJnZXQ9XCJfYmxhbmtcIj4kMTwvYT5gXG5cdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdC8vIGFkZCByZXNldCBsaW5rIChjdXN0b20gbGlzdHMgZG9uJ3QgbmVlZCB0aGlzLCBhcyB0aGVpciBjb25maWcgdmFsdWUgaXNuJ3QgZGlzcGxheWVkIG9uIHRoZSBmb3JtKVxuXHRcdFx0XHRcdGlmIChwcmVmLnR5cGUgIT09ICdjdXN0b21MaXN0Jykge1xuXHRcdFx0XHRcdFx0Y29uc3QgcmVzZXRsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuXHRcdFx0XHRcdFx0cmVzZXRsaW5rLnNldEF0dHJpYnV0ZSgnaHJlZicsICcjdHctcmVzZXQnKTtcblx0XHRcdFx0XHRcdHJlc2V0bGluay5zZXRBdHRyaWJ1dGUoJ2lkJywgYHR3aW5rbGUtY29uZmlnLXJlc2V0LSR7cHJlZi5uYW1lfWApO1xuXHRcdFx0XHRcdFx0cmVzZXRsaW5rLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgVHdpbmtsZS5jb25maWcucmVzZXRQcmVmTGluaywgZmFsc2UpO1xuXHRcdFx0XHRcdFx0cmVzZXRsaW5rLnN0eWxlLmNzc0Zsb2F0ID0gJ3JpZ2h0Jztcblx0XHRcdFx0XHRcdHJlc2V0bGluay5zdHlsZS5tYXJnaW4gPSAnMCAwLjZlbSc7XG5cdFx0XHRcdFx0XHRyZXNldGxpbmsuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUod2luZG93LndnVUxTKCflpI3kvY0nLCAn5b6p5L2NJykpKTtcblx0XHRcdFx0XHRcdGNlbGwuYXBwZW5kQ2hpbGQocmVzZXRsaW5rKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cm93LmFwcGVuZENoaWxkKGNlbGwpO1xuXHRcdFx0XHRcdGNvbnRhaW5lci5hcHBlbmRDaGlsZChyb3cpO1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9KTtcblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9KTtcblx0XHRcdGNvbnN0IGZvb3RlcmJveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXHRcdFx0Zm9vdGVyYm94LnNldEF0dHJpYnV0ZSgnaWQnLCAndHdpbmtsZS1jb25maWctYnV0dG9ucGFuZScpO1xuXHRcdFx0Zm9vdGVyYm94LnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcjQkNDQURGJztcblx0XHRcdGZvb3RlcmJveC5zdHlsZS5wYWRkaW5nID0gJzAuNWVtJztcblx0XHRcdGNvbnN0IHN1Ym1pdEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuXHRcdFx0c3VibWl0QnV0dG9uLnNldEF0dHJpYnV0ZSgnaWQnLCAndHdpbmtsZS1jb25maWctc3VibWl0Jyk7XG5cdFx0XHRzdWJtaXRCdXR0b24uc2V0QXR0cmlidXRlKCd0eXBlJywgJ3N1Ym1pdCcpO1xuXHRcdFx0c3VibWl0QnV0dG9uLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHdpbmRvdy53Z1VMUygn5L+d5a2Y5L+u5pS5JywgJ+WEsuWtmOS/ruaUuScpKSk7XG5cdFx0XHRmb290ZXJib3guYXBwZW5kQ2hpbGQoc3VibWl0QnV0dG9uKTtcblx0XHRcdGNvbnN0IGZvb3RlcnNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG5cdFx0XHRmb290ZXJzcGFuLmNsYXNzTmFtZSA9ICdwbGFpbmxpbmtzJztcblx0XHRcdGZvb3RlcnNwYW4uc3R5bGUubWFyZ2luTGVmdCA9ICcyLjRlbSc7XG5cdFx0XHRmb290ZXJzcGFuLnN0eWxlLmZvbnRTaXplID0gJzkwJSc7XG5cdFx0XHRjb25zdCBmb290ZXJhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuXHRcdFx0Zm9vdGVyYS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCAnI3R3LXJlc2V0LWFsbCcpO1xuXHRcdFx0Zm9vdGVyYS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3R3aW5rbGUtY29uZmlnLXJlc2V0YWxsJyk7XG5cdFx0XHRmb290ZXJhLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgVHdpbmtsZS5jb25maWcucmVzZXRBbGxQcmVmcywgZmFsc2UpO1xuXHRcdFx0Zm9vdGVyYS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh3aW5kb3cud2dVTFMoJ+aBouWkjem7mOiupCcsICfmgaLlvqnpoJDoqK0nKSkpO1xuXHRcdFx0Zm9vdGVyc3Bhbi5hcHBlbmRDaGlsZChmb290ZXJhKTtcblx0XHRcdGZvb3RlcmJveC5hcHBlbmRDaGlsZChmb290ZXJzcGFuKTtcblx0XHRcdGNvbnRlbnRmb3JtLmFwcGVuZENoaWxkKGZvb3RlcmJveCk7XG5cdFx0XHQvLyBzaW5jZSBhbGwgdGhlIHNlY3Rpb24gaGVhZGVycyBleGlzdCBub3csIHdlIGNhbiB0cnkgZ29pbmcgdG8gdGhlIHJlcXVlc3RlZCBhbmNob3Jcblx0XHRcdGlmICh3aW5kb3cubG9jYXRpb24uaGFzaCkge1xuXHRcdFx0XHRjb25zdCBsb2MgPSB3aW5kb3cubG9jYXRpb24uaGFzaDtcblx0XHRcdFx0d2luZG93LmxvY2F0aW9uLmhhc2ggPSAnJztcblx0XHRcdFx0d2luZG93LmxvY2F0aW9uLmhhc2ggPSBsb2M7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIGlmIChcblx0XHRcdG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlTnVtYmVyJykgPT09IG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlSWRzJykudXNlciAmJlxuXHRcdFx0bXcuY29uZmlnLmdldCgnd2dUaXRsZScpLmluZGV4T2YobXcuY29uZmlnLmdldCgnd2dVc2VyTmFtZScpKSA9PT0gMCAmJlxuXHRcdFx0bXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpLnNsaWNlKC0zKSA9PT0gJy5qcydcblx0XHQpIHtcblx0XHRcdGNvbnN0IGJveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXHRcdFx0Ly8gU3R5bGVkIGluIHR3aW5rbGUuY3NzXG5cdFx0XHRib3guc2V0QXR0cmlidXRlKCdpZCcsICd0d2lua2xlLWNvbmZpZy1oZWFkZXJib3gnKTtcblx0XHRcdGxldCBsaW5rO1xuXHRcdFx0Y29uc3Qgc2NyaXB0UGFnZU5hbWUgPSBtdy5jb25maWdcblx0XHRcdFx0LmdldCgnd2dQYWdlTmFtZScpXG5cdFx0XHRcdC5zbGljZShcblx0XHRcdFx0XHRtdy5jb25maWcuZ2V0KCd3Z1BhZ2VOYW1lJykubGFzdEluZGV4T2YoJy8nKSArIDEsXG5cdFx0XHRcdFx0bXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpLmxhc3RJbmRleE9mKCcuanMnKVxuXHRcdFx0XHQpO1xuXHRcdFx0aWYgKHNjcmlwdFBhZ2VOYW1lID09PSAndHdpbmtsZW9wdGlvbnMnKSB7XG5cdFx0XHRcdC8vIHBsYWNlIFwid2h5IG5vdCB0cnkgdGhlIHByZWZlcmVuY2UgcGFuZWxcIiBub3RpY2Vcblx0XHRcdFx0Ym94LnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnY29uZmlnLXR3b3B0LWJveCcpO1xuXHRcdFx0XHRpZiAobXcuY29uZmlnLmdldCgnd2dBcnRpY2xlSWQnKSA+IDApIHtcblx0XHRcdFx0XHQvLyBwYWdlIGV4aXN0c1xuXHRcdFx0XHRcdGJveC5hcHBlbmRDaGlsZChcblx0XHRcdFx0XHRcdGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFxuXHRcdFx0XHRcdFx0XHR3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0J+i/memhteWMheWQq+aCqOeahFR3aW5rbGXlj4LmlbDorr7nva7vvIzmgqjlj6/kvb/nlKgnLFxuXHRcdFx0XHRcdFx0XHRcdCfpgJnpoIHljIXlkKvmgqjnmoRUd2lua2xl5YGP5aW96Kit5a6a77yM5oKo5Y+v5L2/55SoJ1xuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHQvLyBwYWdlIGRvZXMgbm90IGV4aXN0XG5cdFx0XHRcdFx0Ym94LmFwcGVuZENoaWxkKFxuXHRcdFx0XHRcdFx0ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXG5cdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5oKo5Y+v6YWN572u5oKo55qEVHdpbmtsZe+8jOmAmui/h+S9v+eUqCcsICfmgqjlj6/phY3nva7mgqjnmoRUd2lua2xl77yM6YCa6YGO5L2/55SoJylcblx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG5cdFx0XHRcdGxpbmsuc2V0QXR0cmlidXRlKCdocmVmJywgbXcudXRpbC5nZXRVcmwoVHdpbmtsZS5nZXRQcmVmKCdjb25maWdQYWdlJykpKTtcblx0XHRcdFx0bGluay5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh3aW5kb3cud2dVTFMoJ1R3aW5rbGXlj4LmlbDorr7nva7pnaLmnb8nLCAnVHdpbmtsZeWBj+WlveioreWumumdouadvycpKSk7XG5cdFx0XHRcdGJveC5hcHBlbmRDaGlsZChsaW5rKTtcblx0XHRcdFx0Ym94LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHdpbmRvdy53Z1VMUygn77yM5oiW55u05o6l57yW6L6R5pys6aG144CCJywgJ++8jOaIluebtOaOpee3qOi8r+acrOmggeOAgicpKSk7XG5cdFx0XHRcdCQoYm94KS5pbnNlcnRBZnRlcigkYm9keS5maW5kKCcjY29udGVudFN1YicpKTtcblx0XHRcdH0gZWxzZSBpZiAoWyd2ZWN0b3InLCAndmVjdG9yLTIwMjInLCAnZ29uZ2JpJywgJ2NpdGl6ZW4nLCAnY29tbW9uJ10uaW5jbHVkZXMoc2NyaXB0UGFnZU5hbWUpKSB7XG5cdFx0XHRcdC8vIHBsYWNlIFwiTG9va2luZyBmb3IgVHdpbmtsZSBvcHRpb25zP1wiIG5vdGljZVxuXHRcdFx0XHRib3guc2V0QXR0cmlidXRlKCdjbGFzcycsICdjb25maWctdXNlcnNraW4tYm94Jyk7XG5cdFx0XHRcdGJveC5hcHBlbmRDaGlsZChcblx0XHRcdFx0XHRkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcblx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn6Iul5oKo5oOz6YWN572u5oKo55qEVHdpbmtsZe+8jOivt+S9v+eUqCcsICfoi6Xmgqjmg7PphY3nva7mgqjnmoRUd2lua2xl77yM6KuL5L2/55SoJylcblx0XHRcdFx0XHQpXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG5cdFx0XHRcdGxpbmsuc2V0QXR0cmlidXRlKCdocmVmJywgbXcudXRpbC5nZXRVcmwoVHdpbmtsZS5nZXRQcmVmKCdjb25maWdQYWdlJykpKTtcblx0XHRcdFx0bGluay5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh3aW5kb3cud2dVTFMoJ1R3aW5rbGXlj4LmlbDorr7nva7pnaLmnb8nLCAnVHdpbmtsZeWBj+WlveioreWumumdouadvycpKSk7XG5cdFx0XHRcdGJveC5hcHBlbmRDaGlsZChsaW5rKTtcblx0XHRcdFx0Ym94LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCfjgIInKSk7XG5cdFx0XHRcdCQoYm94KS5pbnNlcnRBZnRlcigkYm9keS5maW5kKCcjY29udGVudFN1YicpKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdC8vIGN1c3RvbSBsaXN0LXJlbGF0ZWQgc3R1ZmZcblx0VHdpbmtsZS5jb25maWcubGlzdERpYWxvZyA9IHt9O1xuXHRUd2lua2xlLmNvbmZpZy5saXN0RGlhbG9nLmFkZFJvdyA9IChkbGd0YWJsZSwgdmFsdWUsIGxhYmVsKSA9PiB7XG5cdFx0Y29uc3QgY29udGVudHRyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndHInKTtcblx0XHQvLyBcInJlbW92ZVwiIGJ1dHRvblxuXHRcdGxldCBjb250ZW50dGQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZCcpO1xuXHRcdGNvbnN0IHJlbW92ZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuXHRcdHJlbW92ZUJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnYnV0dG9uJyk7XG5cdFx0cmVtb3ZlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXG5cdFx0XHQnY2xpY2snLFxuXHRcdFx0KCkgPT4ge1xuXHRcdFx0XHQkKGNvbnRlbnR0cikucmVtb3ZlKCk7XG5cdFx0XHR9LFxuXHRcdFx0ZmFsc2Vcblx0XHQpO1xuXHRcdHJlbW92ZUJ1dHRvbi50ZXh0Q29udGVudCA9ICfnp7vpmaQnO1xuXHRcdGNvbnRlbnR0ZC5hcHBlbmRDaGlsZChyZW1vdmVCdXR0b24pO1xuXHRcdGNvbnRlbnR0ci5hcHBlbmRDaGlsZChjb250ZW50dGQpO1xuXHRcdC8vIHZhbHVlIGlucHV0IGJveFxuXHRcdGNvbnRlbnR0ZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RkJyk7XG5cdFx0bGV0IGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcblx0XHRpbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpO1xuXHRcdGlucHV0LmNsYXNzTmFtZSA9ICd0d2lua2xlLWNvbmZpZy1jdXN0b21saXN0LXZhbHVlJztcblx0XHRpbnB1dC5zdHlsZS53aWR0aCA9ICc5NyUnO1xuXHRcdGlmICh2YWx1ZSkge1xuXHRcdFx0aW5wdXQuc2V0QXR0cmlidXRlKCd2YWx1ZScsIHZhbHVlKTtcblx0XHR9XG5cdFx0Y29udGVudHRkLmFwcGVuZENoaWxkKGlucHV0KTtcblx0XHRjb250ZW50dHIuYXBwZW5kQ2hpbGQoY29udGVudHRkKTtcblx0XHQvLyBsYWJlbCBpbnB1dCBib3hcblx0XHRjb250ZW50dGQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZCcpO1xuXHRcdGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcblx0XHRpbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpO1xuXHRcdGlucHV0LmNsYXNzTmFtZSA9ICd0d2lua2xlLWNvbmZpZy1jdXN0b21saXN0LWxhYmVsJztcblx0XHRpbnB1dC5zdHlsZS53aWR0aCA9ICc5OCUnO1xuXHRcdGlmIChsYWJlbCkge1xuXHRcdFx0aW5wdXQuc2V0QXR0cmlidXRlKCd2YWx1ZScsIGxhYmVsKTtcblx0XHR9XG5cdFx0Y29udGVudHRkLmFwcGVuZENoaWxkKGlucHV0KTtcblx0XHRjb250ZW50dHIuYXBwZW5kQ2hpbGQoY29udGVudHRkKTtcblx0XHRkbGd0YWJsZS5hcHBlbmRDaGlsZChjb250ZW50dHIpO1xuXHR9O1xuXHRUd2lua2xlLmNvbmZpZy5saXN0RGlhbG9nLmRpc3BsYXkgPSAoZSkgPT4ge1xuXHRcdGNvbnN0ICRwcmVmYnV0dG9uID0gJChlLnRhcmdldCk7XG5cdFx0Y29uc3QgY3VydmFsdWUgPSAkcHJlZmJ1dHRvbi5kYXRhKCd2YWx1ZScpO1xuXHRcdGNvbnN0IGN1cnByZWYgPSAkcHJlZmJ1dHRvbi5kYXRhKCdwcmVmJyk7XG5cdFx0Y29uc3QgZGlhbG9nID0gbmV3IE1vcmViaXRzLnNpbXBsZVdpbmRvdyg3MjAsIDQwMCk7XG5cdFx0ZGlhbG9nLnNldFRpdGxlKGN1cnByZWYubGFiZWwpO1xuXHRcdGRpYWxvZy5zZXRTY3JpcHROYW1lKHdpbmRvdy53Z1VMUygnVHdpbmtsZeWPguaVsOiuvue9ricsICdUd2lua2xl5YGP5aW96Kit5a6aJykpO1xuXHRcdGNvbnN0IGRpYWxvZ2NvbnRlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblx0XHRjb25zdCBkbGd0YWJsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RhYmxlJyk7XG5cdFx0ZGxndGFibGUuY2xhc3NOYW1lID0gJ3dpa2l0YWJsZSc7XG5cdFx0ZGxndGFibGUuc3R5bGUubWFyZ2luID0gJzEuNGVtIDFlbSc7XG5cdFx0ZGxndGFibGUuc3R5bGUud2lkdGggPSAnOTclJztcblx0XHRjb25zdCBkbGd0Ym9keSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3Rib2R5Jyk7XG5cdFx0Ly8gaGVhZGVyIHJvd1xuXHRcdGxldCBkbGd0ciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RyJyk7XG5cdFx0Ly8gdG9wLWxlZnQgY2VsbFxuXHRcdGxldCBkbGd0aCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RoJyk7XG5cdFx0ZGxndGguc3R5bGUud2lkdGggPSAnNSUnO1xuXHRcdGRsZ3RyLmFwcGVuZENoaWxkKGRsZ3RoKTtcblx0XHQvLyB2YWx1ZSBjb2x1bW4gaGVhZGVyXG5cdFx0ZGxndGggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0aCcpO1xuXHRcdGRsZ3RoLnN0eWxlLndpZHRoID0gJzM1JSc7XG5cdFx0ZGxndGgudGV4dENvbnRlbnQgPSBjdXJwcmVmLmN1c3RvbUxpc3RWYWx1ZVRpdGxlID8/IHdpbmRvdy53Z1VMUygn5pWw5YC8JywgJ+aVuOWAvCcpO1xuXHRcdGRsZ3RyLmFwcGVuZENoaWxkKGRsZ3RoKTtcblx0XHQvLyBsYWJlbCBjb2x1bW4gaGVhZGVyXG5cdFx0ZGxndGggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0aCcpO1xuXHRcdGRsZ3RoLnN0eWxlLndpZHRoID0gJzYwJSc7XG5cdFx0ZGxndGgudGV4dENvbnRlbnQgPSBjdXJwcmVmLmN1c3RvbUxpc3RMYWJlbFRpdGxlID8/IHdpbmRvdy53Z1VMUygn5qCH562+JywgJ+aomeexpCcpO1xuXHRcdGRsZ3RyLmFwcGVuZENoaWxkKGRsZ3RoKTtcblx0XHRkbGd0Ym9keS5hcHBlbmRDaGlsZChkbGd0cik7XG5cdFx0Ly8gY29udGVudCByb3dzXG5cdFx0bGV0IGdvdFJvdyA9IGZhbHNlO1xuXHRcdGZvciAoY29uc3QgdiBvZiBjdXJ2YWx1ZSkge1xuXHRcdFx0Z290Um93ID0gdHJ1ZTtcblx0XHRcdFR3aW5rbGUuY29uZmlnLmxpc3REaWFsb2cuYWRkUm93KGRsZ3Rib2R5LCB2LnZhbHVlLCB2LmxhYmVsKTtcblx0XHR9XG5cdFx0Ly8gaWYgdGhlcmUgYXJlIG5vIHZhbHVlcyBwcmVzZW50LCBhZGQgYSBibGFuayByb3cgdG8gc3RhcnQgdGhlIHVzZXIgb2ZmXG5cdFx0aWYgKCFnb3RSb3cpIHtcblx0XHRcdFR3aW5rbGUuY29uZmlnLmxpc3REaWFsb2cuYWRkUm93KGRsZ3Rib2R5KTtcblx0XHR9XG5cdFx0Ly8gZmluYWwgXCJhZGRcIiBidXR0b25cblx0XHRjb25zdCBkbGd0Zm9vdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3Rmb290Jyk7XG5cdFx0ZGxndHIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0cicpO1xuXHRcdGNvbnN0IGRsZ3RkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGQnKTtcblx0XHRkbGd0ZC5zZXRBdHRyaWJ1dGUoJ2NvbHNwYW4nLCAnMycpO1xuXHRcdGNvbnN0IGFkZEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuXHRcdGFkZEJ1dHRvbi5zdHlsZS5taW5XaWR0aCA9ICc4ZW0nO1xuXHRcdGFkZEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnYnV0dG9uJyk7XG5cdFx0YWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXG5cdFx0XHQnY2xpY2snLFxuXHRcdFx0KCkgPT4ge1xuXHRcdFx0XHRUd2lua2xlLmNvbmZpZy5saXN0RGlhbG9nLmFkZFJvdyhkbGd0Ym9keSk7XG5cdFx0XHR9LFxuXHRcdFx0ZmFsc2Vcblx0XHQpO1xuXHRcdGFkZEJ1dHRvbi50ZXh0Q29udGVudCA9ICfmt7vliqAnO1xuXHRcdGRsZ3RkLmFwcGVuZENoaWxkKGFkZEJ1dHRvbik7XG5cdFx0ZGxndHIuYXBwZW5kQ2hpbGQoZGxndGQpO1xuXHRcdGRsZ3Rmb290LmFwcGVuZENoaWxkKGRsZ3RyKTtcblx0XHRkbGd0YWJsZS5hcHBlbmRDaGlsZChkbGd0Ym9keSk7XG5cdFx0ZGxndGFibGUuYXBwZW5kQ2hpbGQoZGxndGZvb3QpO1xuXHRcdGRpYWxvZ2NvbnRlbnQuYXBwZW5kQ2hpbGQoZGxndGFibGUpO1xuXHRcdC8vIGJ1dHRvbnBhbmUgYnV0dG9uczogW1NhdmUgY2hhbmdlc10gW1Jlc2V0XSBbQ2FuY2VsXVxuXHRcdGxldCBidXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcblx0XHRidXR0b24uc2V0QXR0cmlidXRlKCd0eXBlJywgJ3N1Ym1pdCcpOyAvLyBzbyBNb3JlYml0cy5zaW1wbGVXaW5kb3cgcHV0cyB0aGUgYnV0dG9uIGluIHRoZSBidXR0b24gcGFuZVxuXHRcdGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFxuXHRcdFx0J2NsaWNrJyxcblx0XHRcdCgpID0+IHtcblx0XHRcdFx0VHdpbmtsZS5jb25maWcubGlzdERpYWxvZy5zYXZlKCRwcmVmYnV0dG9uLCBkbGd0Ym9keSk7XG5cdFx0XHRcdGRpYWxvZy5jbG9zZSgpO1xuXHRcdFx0fSxcblx0XHRcdGZhbHNlXG5cdFx0KTtcblx0XHRidXR0b24udGV4dENvbnRlbnQgPSB3aW5kb3cud2dVTFMoJ+S/neWtmOS/ruaUuScsICflhLLlrZjkv67mlLknKTtcblx0XHRkaWFsb2djb250ZW50LmFwcGVuZENoaWxkKGJ1dHRvbik7XG5cdFx0YnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG5cdFx0YnV0dG9uLnNldEF0dHJpYnV0ZSgndHlwZScsICdzdWJtaXQnKTsgLy8gc28gTW9yZWJpdHMuc2ltcGxlV2luZG93IHB1dHMgdGhlIGJ1dHRvbiBpbiB0aGUgYnV0dG9uIHBhbmVcblx0XHRidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcblx0XHRcdCdjbGljaycsXG5cdFx0XHQoKSA9PiB7XG5cdFx0XHRcdFR3aW5rbGUuY29uZmlnLmxpc3REaWFsb2cucmVzZXQoJHByZWZidXR0b24sIGRsZ3Rib2R5KTtcblx0XHRcdH0sXG5cdFx0XHRmYWxzZVxuXHRcdCk7XG5cdFx0YnV0dG9uLnRleHRDb250ZW50ID0gd2luZG93LndnVUxTKCflpI3kvY0nLCAn5b6p5L2NJyk7XG5cdFx0ZGlhbG9nY29udGVudC5hcHBlbmRDaGlsZChidXR0b24pO1xuXHRcdGJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuXHRcdGJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnc3VibWl0Jyk7IC8vIHNvIE1vcmViaXRzLnNpbXBsZVdpbmRvdyBwdXRzIHRoZSBidXR0b24gaW4gdGhlIGJ1dHRvbiBwYW5lXG5cdFx0YnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXG5cdFx0XHQnY2xpY2snLFxuXHRcdFx0KCkgPT4ge1xuXHRcdFx0XHRkaWFsb2cuY2xvc2UoKTsgLy8gdGhlIGV2ZW50IHBhcmFtZXRlciBvbiB0aGlzIGZ1bmN0aW9uIHNlZW1zIHRvIGJlIGJyb2tlblxuXHRcdFx0fSxcblx0XHRcdGZhbHNlXG5cdFx0KTtcblx0XHRidXR0b24udGV4dENvbnRlbnQgPSAn5Y+W5raIJztcblx0XHRkaWFsb2djb250ZW50LmFwcGVuZENoaWxkKGJ1dHRvbik7XG5cdFx0ZGlhbG9nLnNldENvbnRlbnQoZGlhbG9nY29udGVudCk7XG5cdFx0ZGlhbG9nLmRpc3BsYXkoKTtcblx0fTtcblx0Ly8gUmVzZXRzIHRoZSBkYXRhIHZhbHVlLCByZS1wb3B1bGF0ZXMgYmFzZWQgb24gdGhlIG5ldyAoZGVmYXVsdCkgdmFsdWUsIHRoZW4gc2F2ZXMgdGhlXG5cdC8vIG9sZCBkYXRhIHZhbHVlIGFnYWluIChsZXNzIHN1cnByaXNpbmcgYmVoYXZpb3VyKVxuXHRUd2lua2xlLmNvbmZpZy5saXN0RGlhbG9nLnJlc2V0ID0gKGJ1dHRvbiwgdGJvZHkpID0+IHtcblx0XHQvLyByZXNldCB2YWx1ZSBvbiBidXR0b25cblx0XHRjb25zdCAkYnV0dG9uID0gJChidXR0b24pO1xuXHRcdGNvbnN0IGN1cnByZWYgPSAkYnV0dG9uLmRhdGEoJ3ByZWYnKTtcblx0XHRjb25zdCBvbGR2YWx1ZSA9ICRidXR0b24uZGF0YSgndmFsdWUnKTtcblx0XHRUd2lua2xlLmNvbmZpZy5yZXNldFByZWYoY3VycHJlZik7XG5cdFx0Ly8gcmVzZXQgZm9ybVxuXHRcdGNvbnN0ICR0Ym9keSA9ICQodGJvZHkpO1xuXHRcdCR0Ym9keS5maW5kKCd0cicpLnNsaWNlKDEpLnJlbW92ZSgpOyAvLyBhbGwgcm93cyBleGNlcHQgdGhlIGZpcnN0IChoZWFkZXIpIHJvd1xuXHRcdC8vIGFkZCB0aGUgbmV3IHZhbHVlc1xuXHRcdGNvbnN0IGN1cnZhbHVlID0gJGJ1dHRvbi5kYXRhKCd2YWx1ZScpO1xuXHRcdGZvciAoY29uc3QgdiBvZiBjdXJ2YWx1ZSkge1xuXHRcdFx0VHdpbmtsZS5jb25maWcubGlzdERpYWxvZy5hZGRSb3codGJvZHksIHYudmFsdWUsIHYubGFiZWwpO1xuXHRcdH1cblx0XHQvLyBzYXZlIHRoZSBvbGQgdmFsdWVcblx0XHQkYnV0dG9uLmRhdGEoJ3ZhbHVlJywgb2xkdmFsdWUpO1xuXHR9O1xuXHRUd2lua2xlLmNvbmZpZy5saXN0RGlhbG9nLnNhdmUgPSAoYnV0dG9uLCB0Ym9keSkgPT4ge1xuXHRcdGNvbnN0IHJlc3VsdCA9IFtdO1xuXHRcdGxldCBjdXJyZW50ID0ge307XG5cdFx0JCh0Ym9keSlcblx0XHRcdC5maW5kKCdpbnB1dFt0eXBlPVwidGV4dFwiXScpXG5cdFx0XHQuZWFjaCgoaW5wdXRrZXksIGlucHV0KSA9PiB7XG5cdFx0XHRcdGlmICgkKGlucHV0KS5oYXNDbGFzcygndHdpbmtsZS1jb25maWctY3VzdG9tbGlzdC12YWx1ZScpKSB7XG5cdFx0XHRcdFx0Y3VycmVudCA9IHtcblx0XHRcdFx0XHRcdHZhbHVlOiBpbnB1dC52YWx1ZSxcblx0XHRcdFx0XHR9O1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGN1cnJlbnQubGFiZWwgPSBpbnB1dC52YWx1ZTtcblx0XHRcdFx0XHQvLyBleGNsdWRlIHRvdGFsbHkgZW1wdHkgcm93c1xuXHRcdFx0XHRcdGlmIChjdXJyZW50LnZhbHVlIHx8IGN1cnJlbnQubGFiZWwpIHtcblx0XHRcdFx0XHRcdHJlc3VsdFtyZXN1bHQubGVuZ3RoXSA9IGN1cnJlbnQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHQkKGJ1dHRvbikuZGF0YSgndmFsdWUnLCByZXN1bHQpO1xuXHR9O1xuXHQvLyByZXNldC9yZXN0b3JlIGRlZmF1bHRzXG5cdFR3aW5rbGUuY29uZmlnLnJlc2V0UHJlZkxpbmsgPSAoZSkgPT4ge1xuXHRcdGNvbnN0IHdhbnRlZHByZWYgPSBlLnRhcmdldC5pZC5zbGljZSgyMSk7IC8vIFwidHdpbmtsZS1jb25maWctcmVzZXQtXCIgcHJlZml4IGlzIHN0cmlwcGVkXG5cdFx0Ly8gc2VhcmNoIHRhY3RpY3Ncblx0XHQkKFR3aW5rbGUuY29uZmlnLnNlY3Rpb25zKS5lYWNoKChzZWN0aW9ua2V5LCBzZWN0aW9uKSA9PiB7XG5cdFx0XHRpZiAoc2VjdGlvbi5oaWRkZW4gfHwgKHNlY3Rpb24uYWRtaW5Pbmx5ICYmICFNb3JlYml0cy51c2VySXNTeXNvcCkpIHtcblx0XHRcdFx0cmV0dXJuIHRydWU7IC8vIGNvbnRpbnVlOiBza2lwIGltcG9zc2liaWxpdGllc1xuXHRcdFx0fVxuXG5cdFx0XHRsZXQgZm91bmRpdCA9IGZhbHNlO1xuXHRcdFx0JChzZWN0aW9uLnByZWZlcmVuY2VzKS5lYWNoKChwcmVma2V5LCBwcmVmKSA9PiB7XG5cdFx0XHRcdGlmIChwcmVmLm5hbWUgIT09IHdhbnRlZHByZWYpIHtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTsgLy8gY29udGludWVcblx0XHRcdFx0fVxuXG5cdFx0XHRcdFR3aW5rbGUuY29uZmlnLnJlc2V0UHJlZihwcmVmKTtcblx0XHRcdFx0Zm91bmRpdCA9IHRydWU7XG5cdFx0XHRcdHJldHVybiBmYWxzZTsgLy8gYnJlYWtcblx0XHRcdH0pO1xuXG5cdFx0XHRpZiAoZm91bmRpdCkge1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7IC8vIGJyZWFrXG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gZmFsc2U7IC8vIHN0b3AgbGluayBmcm9tIHNjcm9sbGluZyBwYWdlXG5cdH07XG5cblx0VHdpbmtsZS5jb25maWcucmVzZXRQcmVmID0gKHByZWYpID0+IHtcblx0XHRzd2l0Y2ggKHByZWYudHlwZSkge1xuXHRcdFx0Y2FzZSAnYm9vbGVhbic6XG5cdFx0XHRcdGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke3ByZWYubmFtZX1gKS5jaGVja2VkID0gVHdpbmtsZS5kZWZhdWx0Q29uZmlnW3ByZWYubmFtZV07XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnc3RyaW5nJzpcblx0XHRcdGNhc2UgJ2ludGVnZXInOlxuXHRcdFx0Y2FzZSAnZW51bSc6XG5cdFx0XHRcdGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke3ByZWYubmFtZX1gKS52YWx1ZSA9IFR3aW5rbGUuZGVmYXVsdENvbmZpZ1twcmVmLm5hbWVdO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ3NldCc6XG5cdFx0XHRcdGZvciAoY29uc3QgW2l0ZW1rZXldIG9mIE9iamVjdC5lbnRyaWVzKHByZWYuc2V0VmFsdWVzKSkge1xuXHRcdFx0XHRcdGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjJHtwcmVmLm5hbWV9XyR7aXRlbWtleX1gKSkge1xuXHRcdFx0XHRcdFx0ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgIyR7cHJlZi5uYW1lfV8ke2l0ZW1rZXl9YCkuY2hlY2tlZCA9XG5cdFx0XHRcdFx0XHRcdFR3aW5rbGUuZGVmYXVsdENvbmZpZ1twcmVmLm5hbWVdLmluY2x1ZGVzKGl0ZW1rZXkpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ2N1c3RvbUxpc3QnOlxuXHRcdFx0XHQkKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke3ByZWYubmFtZX1gKSkuZGF0YSgndmFsdWUnLCBUd2lua2xlLmRlZmF1bHRDb25maWdbcHJlZi5uYW1lXSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0dm9pZCBtdy5ub3RpZnkoYHR3aW5rbGVjb25maWc6IHVua25vd24gZGF0YSB0eXBlIGZvciBwcmVmZXJlbmNlICR7cHJlZi5uYW1lfWAsIHtcblx0XHRcdFx0XHR0eXBlOiAnd2FybicsXG5cdFx0XHRcdFx0dGFnOiAndHdpbmtsZWNvbmZpZycsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRicmVhaztcblx0XHR9XG5cdH07XG5cdFR3aW5rbGUuY29uZmlnLnJlc2V0QWxsUHJlZnMgPSAoKSA9PiB7XG5cdFx0Ly8gbm8gY29uZmlybWF0aW9uIG1lc3NhZ2UgLSB0aGUgdXNlciBjYW4ganVzdCByZWZyZXNoL2Nsb3NlIHRoZSBwYWdlIHRvIGFib3J0XG5cdFx0JChUd2lua2xlLmNvbmZpZy5zZWN0aW9ucykuZWFjaCgoc2VjdGlvbmtleSwgc2VjdGlvbikgPT4ge1xuXHRcdFx0aWYgKHNlY3Rpb24uaGlkZGVuIHx8IChzZWN0aW9uLmFkbWluT25seSAmJiAhTW9yZWJpdHMudXNlcklzU3lzb3ApKSB7XG5cdFx0XHRcdHJldHVybiB0cnVlOyAvLyBjb250aW51ZTogc2tpcCBpbXBvc3NpYmlsaXRpZXNcblx0XHRcdH1cblxuXHRcdFx0JChzZWN0aW9uLnByZWZlcmVuY2VzKS5lYWNoKChwcmVma2V5LCBwcmVmKSA9PiB7XG5cdFx0XHRcdGlmICghcHJlZi5hZG1pbk9ubHkgfHwgTW9yZWJpdHMudXNlcklzU3lzb3ApIHtcblx0XHRcdFx0XHRUd2lua2xlLmNvbmZpZy5yZXNldFByZWYocHJlZik7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fSk7XG5cdFx0cmV0dXJuIGZhbHNlOyAvLyBzdG9wIGxpbmsgZnJvbSBzY3JvbGxpbmcgcGFnZVxuXHR9O1xuXG5cdFR3aW5rbGUuY29uZmlnLnNhdmUgPSAoZSkgPT4ge1xuXHRcdE1vcmViaXRzLnN0YXR1cy5pbml0KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0d2lua2xlLWNvbmZpZy1jb250ZW50JykpO1xuXHRcdGNvbnN0IHVzZXJqcyA9IGAke213LmNvbmZpZy5nZXQoJ3dnRm9ybWF0dGVkTmFtZXNwYWNlcycpW213LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlSWRzJykudXNlcl19OiR7bXcuY29uZmlnLmdldChcblx0XHRcdCd3Z1VzZXJOYW1lJ1xuXHRcdCl9L3R3aW5rbGVvcHRpb25zLmpzYDtcblx0XHRjb25zdCBxaXV3ZW5fcGFnZSA9IG5ldyBNb3JlYml0cy53aWtpLnBhZ2UodXNlcmpzLCB3aW5kb3cud2dVTFMoJ+S/neWtmOWPguaVsOiuvue9ruWIsCAnLCAn5YSy5a2Y5YGP5aW96Kit5a6a5YiwICcpICsgdXNlcmpzKTtcblx0XHRxaXV3ZW5fcGFnZS5zZXRDYWxsYmFja1BhcmFtZXRlcnMoZS50YXJnZXQpO1xuXHRcdHFpdXdlbl9wYWdlLmxvYWQoVHdpbmtsZS5jb25maWcud3JpdGVQcmVmcyk7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9O1xuXHRUd2lua2xlLmNvbmZpZy53cml0ZVByZWZzID0gKHBhZ2VvYmopID0+IHtcblx0XHRjb25zdCBmb3JtID0gcGFnZW9iai5nZXRDYWxsYmFja1BhcmFtZXRlcnMoKTtcblx0XHQvLyB0aGlzIGlzIHRoZSBvYmplY3Qgd2hpY2ggZ2V0cyBzZXJpYWxpemVkIGludG8gSlNPTjsgb25seVxuXHRcdC8vIHByZWZlcmVuY2VzIHRoYXQgdGhpcyBzY3JpcHQga25vd3MgYWJvdXQgYXJlIGtlcHRcblx0XHRjb25zdCBuZXdDb25maWcgPSB7XG5cdFx0XHRvcHRpb25zVmVyc2lvbjogMi4xLFxuXHRcdH07XG5cdFx0Ly8gYSBjb21wYXJpc29uIGZ1bmN0aW9uIGlzIG5lZWRlZCBsYXRlciBvblxuXHRcdC8vIGl0IGlzIGp1c3QgZW5vdWdoIGZvciBvdXIgcHVycG9zZXMgKGkuZS4gY29tcGFyaW5nIHN0cmluZ3MsIG51bWJlcnMsIGJvb2xlYW5zLFxuXHRcdC8vIGFycmF5cyBvZiBzdHJpbmdzLCBhbmQgYXJyYXlzIG9mIHsgdmFsdWUsIGxhYmVsIH0pXG5cdFx0Ly8gYW5kIGl0IGlzIG5vdCB2ZXJ5IHJvYnVzdDogZS5nLiBjb21wYXJlKFsyXSwgW1wiMlwiXSkgPT09IHRydWUsIGFuZFxuXHRcdC8vIGNvbXBhcmUoe30sIHt9KSA9PT0gZmFsc2UsIGJ1dCBpdCdzIGdvb2QgZW5vdWdoIGZvciBvdXIgcHVycG9zZXMgaGVyZVxuXHRcdGNvbnN0IGNvbXBhcmUgPSAoYSwgYikgPT4ge1xuXHRcdFx0aWYgKEFycmF5LmlzQXJyYXkoYSkpIHtcblx0XHRcdFx0aWYgKGEubGVuZ3RoICE9PSBiLmxlbmd0aCkge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRhLnNvcnQoKTtcblx0XHRcdFx0Yi5zb3J0KCk7XG5cdFx0XHRcdGZvciAoY29uc3QgW2ksIGVsZW1lbnRdIG9mIGEuZW50cmllcygpKSB7XG5cdFx0XHRcdFx0Ly8gY29tcGFyaXNvbiBvZiB0aGUgdHdvIHByb3BlcnRpZXMgb2YgY3VzdG9tIGxpc3RzXG5cdFx0XHRcdFx0aWYgKHR5cGVvZiBlbGVtZW50ID09PSAnb2JqZWN0JyAmJiAoZWxlbWVudC5sYWJlbCAhPT0gYltpXS5sYWJlbCB8fCBlbGVtZW50LnZhbHVlICE9PSBiW2ldLnZhbHVlKSkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAoZWxlbWVudC50b1N0cmluZygpICE9PSBiW2ldLnRvU3RyaW5nKCkpIHtcblx0XHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gYSA9PT0gYjtcblx0XHR9O1xuXHRcdCQoVHdpbmtsZS5jb25maWcuc2VjdGlvbnMpLmVhY2goKHNlY3Rpb25rZXksIHNlY3Rpb24pID0+IHtcblx0XHRcdGlmIChzZWN0aW9uLmFkbWluT25seSAmJiAhTW9yZWJpdHMudXNlcklzU3lzb3ApIHtcblx0XHRcdFx0cmV0dXJuOyAvLyBpLmUuIFwiY29udGludWVcIiBpbiB0aGlzIGNvbnRleHRcblx0XHRcdH1cblx0XHRcdC8vIHJlYWNoIGVhY2ggb2YgdGhlIHByZWZlcmVuY2VzIGZyb20gdGhlIGZvcm1cblx0XHRcdCQoc2VjdGlvbi5wcmVmZXJlbmNlcykuZWFjaCgocHJlZmtleSwgcHJlZikgPT4ge1xuXHRcdFx0XHRsZXQgdXNlclZhbHVlOyAvLyA9IHVuZGVmaW5lZFxuXHRcdFx0XHQvLyBvbmx5IHJlYWQgZm9ybSB2YWx1ZXMgZm9yIHRob3NlIHByZWZzIHRoYXQgaGF2ZSB0aGVtXG5cdFx0XHRcdGlmICghcHJlZi5hZG1pbk9ubHkgfHwgTW9yZWJpdHMudXNlcklzU3lzb3ApIHtcblx0XHRcdFx0XHRpZiAoIXNlY3Rpb24uaGlkZGVuKSB7XG5cdFx0XHRcdFx0XHRzd2l0Y2ggKHByZWYudHlwZSkge1xuXHRcdFx0XHRcdFx0XHRjYXNlICdib29sZWFuJzpcblx0XHRcdFx0XHRcdFx0XHQvLyByZWFkIGZyb20gdGhlIGNoZWNrYm94XG5cdFx0XHRcdFx0XHRcdFx0dXNlclZhbHVlID0gZm9ybVtwcmVmLm5hbWVdLmNoZWNrZWQ7XG5cdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdGNhc2UgJ3N0cmluZyc6IC8vIHJlYWQgZnJvbSB0aGUgaW5wdXQgYm94IG9yIGNvbWJvIGJveFxuXHRcdFx0XHRcdFx0XHRjYXNlICdlbnVtJzpcblx0XHRcdFx0XHRcdFx0XHR1c2VyVmFsdWUgPSBmb3JtW3ByZWYubmFtZV0udmFsdWU7XG5cdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdGNhc2UgJ2ludGVnZXInOlxuXHRcdFx0XHRcdFx0XHRcdC8vIHJlYWQgZnJvbSB0aGUgaW5wdXQgYm94XG5cdFx0XHRcdFx0XHRcdFx0dXNlclZhbHVlID0gTnVtYmVyLnBhcnNlSW50KGZvcm1bcHJlZi5uYW1lXS52YWx1ZSwgMTApO1xuXHRcdFx0XHRcdFx0XHRcdGlmIChOdW1iZXIuaXNOYU4odXNlclZhbHVlKSkge1xuXHRcdFx0XHRcdFx0XHRcdFx0TW9yZWJpdHMuc3RhdHVzLndhcm4oXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHdpbmRvdy53Z1VMUygn5L+d5a2YJywgJ+WEsuWtmCcpLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRgJHt3aW5kb3cud2dVTFMoJ+aCqOS4uiAnLCAn5oKo54K6ICcpICsgcHJlZi5uYW1lfSDmjIflrprnmoTlgLzvvIgke3ByZWYudmFsdWV9JHt3aW5kb3cud2dVTFMoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0J++8ieS4jeWQiOazle+8jOS8mue7p+e7reS/neWtmOaTjeS9nO+8jOS9huatpOWAvOWwhuS8mui3s+i/h+OAgicsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0J++8ieS4jeWQiOazle+8jOacg+e5vOe6jOWEsuWtmOaTjeS9nO+8jOS9huatpOWAvOWwh+acg+i3s+mBjuOAgidcblx0XHRcdFx0XHRcdFx0XHRcdFx0KX1gXG5cdFx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRcdFx0dXNlclZhbHVlID0gbnVsbDtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdGNhc2UgJ3NldCc6XG5cdFx0XHRcdFx0XHRcdFx0Ly8gcmVhZCBmcm9tIHRoZSBzZXQgb2YgY2hlY2sgYm94ZXNcblx0XHRcdFx0XHRcdFx0XHR1c2VyVmFsdWUgPSBbXTtcblx0XHRcdFx0XHRcdFx0XHRpZiAocHJlZi5zZXREaXNwbGF5T3JkZXIpIHtcblx0XHRcdFx0XHRcdFx0XHRcdC8vIHJlYWQgb25seSB0aG9zZSBrZXlzIHNwZWNpZmllZCBpbiB0aGUgZGlzcGxheSBvcmRlclxuXHRcdFx0XHRcdFx0XHRcdFx0Zm9yIChjb25zdCBpdGVtIG9mIHByZWYuc2V0RGlzcGxheU9yZGVyKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmIChmb3JtW2Ake3ByZWYubmFtZX1fJHtpdGVtfWBdLmNoZWNrZWQpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR1c2VyVmFsdWVbdXNlclZhbHVlLmxlbmd0aF0gPSBpdGVtO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRcdC8vIHJlYWQgYWxsIHRoZSBrZXlzIGluIHRoZSBsaXN0IG9mIHZhbHVlc1xuXHRcdFx0XHRcdFx0XHRcdFx0Zm9yIChjb25zdCBbaXRlbWtleV0gb2YgT2JqZWN0LmVudHJpZXMocHJlZi5zZXRWYWx1ZXMpKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmIChmb3JtW2Ake3ByZWYubmFtZX1fJHtpdGVta2V5fWBdLmNoZWNrZWQpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR1c2VyVmFsdWVbdXNlclZhbHVlLmxlbmd0aF0gPSBpdGVta2V5O1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRjYXNlICdjdXN0b21MaXN0Jzpcblx0XHRcdFx0XHRcdFx0XHQvLyByZWFkIGZyb20gdGhlIGpRdWVyeSBkYXRhIHN0b3JlZCBvbiB0aGUgYnV0dG9uIG9iamVjdFxuXHRcdFx0XHRcdFx0XHRcdHVzZXJWYWx1ZSA9ICQoZm9ybVtwcmVmLm5hbWVdKS5kYXRhKCd2YWx1ZScpO1xuXHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdFx0XHRcdHZvaWQgbXcubm90aWZ5KGB0d2lua2xlY29uZmlnOiDmnKrnn6XmlbDmja7nsbvlnovvvIzlsZ7mgKcgJHtwcmVmLm5hbWV9YCwge1xuXHRcdFx0XHRcdFx0XHRcdFx0dHlwZTogJ3dhcm4nLFxuXHRcdFx0XHRcdFx0XHRcdFx0dGFnOiAndHdpbmtsZWNvbmZpZycsXG5cdFx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSBlbHNlIGlmIChUd2lua2xlLnByZWZzKSB7XG5cdFx0XHRcdFx0XHQvLyBSZXRhaW4gdGhlIGhpZGRlbiBwcmVmZXJlbmNlcyB0aGF0IG1heSBoYXZlIGN1c3RvbWlzZWQgYnkgdGhlIHVzZXIgZnJvbSB0d2lua2xlb3B0aW9ucy5qc1xuXHRcdFx0XHRcdFx0Ly8gdW5kZWZpbmVkIGlmIG5vdCBzZXRcblx0XHRcdFx0XHRcdHVzZXJWYWx1ZSA9IFR3aW5rbGUucHJlZnNbcHJlZi5uYW1lXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gb25seSBzYXZlIHRob3NlIHByZWZlcmVuY2VzIHRoYXQgYXJlICpkaWZmZXJlbnQqIGZyb20gdGhlIGRlZmF1bHRcblx0XHRcdFx0aWYgKHVzZXJWYWx1ZSAhPT0gdW5kZWZpbmVkICYmICFjb21wYXJlKHVzZXJWYWx1ZSwgVHdpbmtsZS5kZWZhdWx0Q29uZmlnW3ByZWYubmFtZV0pKSB7XG5cdFx0XHRcdFx0bmV3Q29uZmlnW3ByZWYubmFtZV0gPSB1c2VyVmFsdWU7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH0pO1xuXHRcdGNvbnN0IG5vd2lraSA9ICdub3dpa2knO1xuXHRcdGxldCB0ZXh0ID0gYC8vIDwke25vd2lraX0+XFxuJHt3aW5kb3cud2dVTFMoXG5cdFx0XHRgLy8gdHdpbmtsZW9wdGlvbnMuanPvvJrnlKjmiLdUd2lua2xl5Y+C5pWw6K6+572u5paH5Lu2XFxuLy9cXG4vLyDms6jvvJrkv67mlLnmgqjnmoTlj4LmlbDorr7nva7mnIDnroDljZXnmoTlip7ms5XmmK/kvb/nlKhcXG4vLyBUd2lua2xl5Y+C5pWw6K6+572u6Z2i5p2/77yM5ZyoW1ske01vcmViaXRzLnBhZ2VOYW1lTm9ybX1dXeOAglxcbi8vXFxuLy8g6L+Z5Liq5paH5Lu25piv6Ieq5Yqo55Sf5oiQ55qE77yM5oKo5omA5YGa55qE5Lu75L2V5L+u5pS577yI6Zmk5LqGXFxuLy8g5Lul5LiA56eN5ZCI5rOV55qESmF2YVNjcmlwdOeahOaWueW8j+adpeS/ruaUuei/meS6m+WxnuaAp+WAvO+8ieS8mlxcbi8vIOWcqOS4i+S4gOasoeaCqOeCueWHu+KAnOS/neWtmOKAneaXtuiiq+imhuebluOAglxcbi8vIOS/ruaUueatpOaWh+S7tuaXtu+8jOivt+iusOW+l+S9v+eUqOWQiOazleeahEphdmFTY3JpcHTjgIJcXG5gLFxuXHRcdFx0YC8vIHR3aW5rbGVvcHRpb25zLmpz77ya5L2/55So6ICFVHdpbmtsZeWPg+aVuOioreWumuaqlOahiFxcbi8vXFxuLy8g6Ki777ya5L+u5pS55oKo55qE5Y+D5pW46Kit5a6a5pyA57Ch5Zau55qE6L6m5rOV5piv5L2/55SoXFxuLy8gVHdpbmtsZeWPg+aVuOioreWumumdouadv++8jOWcqFtbJHtNb3JlYml0cy5wYWdlTmFtZU5vcm19XV3jgIJcXG4vL1xcbi8vIOmAmeWAi+aqlOahiOaYr+iHquWLleeUoueUn+eahO+8jOaCqOaJgOWBmueahOS7u+S9leS/ruaUue+8iOmZpOS6hlxcbi8vIOS7peS4gOeoruWQiOazleeahEphdmFTY3JpcHTnmoTmlrnlvI/kvobkv67mlLnpgJnkupvlsazmgKflgLzvvInmnINcXG4vLyDlnKjkuIvkuIDmrKHmgqjpu57mk4rjgIzlhLLlrZjjgI3mmYLooqvopobok4vjgIJcXG4vLyDkv67mlLnmraTmqpTmoYjmmYLvvIzoq4voqJjlvpfkvb/nlKjlkIjms5XnmoRKYXZhU2NyaXB044CCXFxuYFxuXHRcdCl9YDtcblx0XHR0ZXh0ICs9XG5cdFx0XHQnXFxud2luZG93LlR3aW5rbGUgPSB3aW5kb3cuVHdpbmtsZSB8fCB7fTtcXG53aW5kb3cuVHdpbmtsZS5wcmVmcyA9IHdpbmRvdy5Ud2lua2xlLnByZWZzIHx8IHt9O1xcbndpbmRvdy5Ud2lua2xlLnByZWZzID0gJztcblx0XHR0ZXh0ICs9IEpTT04uc3RyaW5naWZ5KG5ld0NvbmZpZywgbnVsbCwgMik7XG5cdFx0dGV4dCArPSBgO1xcblxcbiR7d2luZG93LndnVUxTKCcvLyB0d2lua2xlb3B0aW9ucy5qc+WIsOatpOS4uuatolxcbicsICcvLyB0d2lua2xlb3B0aW9ucy5qc+WIsOatpOeCuuatolxcbicpfS8vIDwvJHtub3dpa2l9PmA7XG5cdFx0cGFnZW9iai5zZXRQYWdlVGV4dCh0ZXh0KTtcblx0XHRwYWdlb2JqLnNldEVkaXRTdW1tYXJ5KFxuXHRcdFx0d2luZG93LndnVUxTKCfkv53lrZhUd2lua2xl5Y+C5pWw6K6+572u77ya5p2l6IeqW1snLCAn5YSy5a2YVHdpbmtsZeWBj+WlveioreWumu+8muS+huiHqltbJykgK1xuXHRcdFx0XHRNb3JlYml0cy5wYWdlTmFtZU5vcm0gK1xuXHRcdFx0XHR3aW5kb3cud2dVTFMoJ11d55qE6Ieq5Yqo57yW6L6RJywgJ11d55qE6Ieq5YuV57eo6LyvJylcblx0XHQpO1xuXHRcdHBhZ2VvYmouc2V0Q2hhbmdlVGFncyhUd2lua2xlLmNoYW5nZVRhZ3MpO1xuXHRcdHBhZ2VvYmouc2V0Q3JlYXRlT3B0aW9uKCdyZWNyZWF0ZScpO1xuXHRcdHBhZ2VvYmouc2F2ZShUd2lua2xlLmNvbmZpZy5zYXZlU3VjY2Vzcyk7XG5cdH07XG5cdFR3aW5rbGUuY29uZmlnLnNhdmVTdWNjZXNzID0gKHBhZ2VvYmopID0+IHtcblx0XHRwYWdlb2JqLmdldFN0YXR1c0VsZW1lbnQoKS5pbmZvKCfmiJDlip8nKTtcblx0XHRjb25zdCBub3RpY2Vib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblx0XHRub3RpY2Vib3guY2xhc3NOYW1lID0gJ213LW1lc3NhZ2UtYm94IG13LW1lc3NhZ2UtYm94LXN1Y2Nlc3MnO1xuXHRcdG5vdGljZWJveC5zdHlsZS5mb250U2l6ZSA9ICcxMDAlJztcblx0XHRub3RpY2Vib3guc3R5bGUubWFyZ2luVG9wID0gJzJlbSc7XG5cdFx0bm90aWNlYm94LmlubmVySFRNTCA9IGA8cD48Yj4ke3dpbmRvdy53Z1VMUyhcblx0XHRcdCfmgqjnmoRUd2lua2xl5Y+C5pWw6K6+572u5bey6KKr5L+d5a2Y44CCJyxcblx0XHRcdCfmgqjnmoRUd2lua2xl5YGP5aW96Kit5a6a5bey6KKr5YSy5a2Y44CCJ1xuXHRcdCl9PC9iPjwvcD48cD4ke3dpbmRvdy53Z1VMUygn6KaB55yL5Yiw6L+Z5Lqb5pu05pS577yM5oKo5Y+v6IO96ZyA6KaBJywgJ+imgeeci+WIsOmAmeS6m+abtOaUue+8jOaCqOWPr+iDvemcgOimgScpfTxhIGhyZWY9XCIke213LnV0aWwuZ2V0VXJsKFxuXHRcdFx0J1FXOkJZUEFTUydcblx0XHQpfVwiIHRpdGxlPVwiUVc6QllQQVNTXCI+PGI+JHt3aW5kb3cud2dVTFMoJ+e7lei/h+a1j+iniOWZqOe8k+WtmCcsICfnuZ7pgY7ngI/opr3lmajlv6vlj5YnKX08L2I+PC9hPuOAgjwvcD5gO1xuXHRcdE1vcmViaXRzLnN0YXR1cy5yb290LmFwcGVuZENoaWxkKG5vdGljZWJveCk7XG5cdFx0Y29uc3Qgbm90aWNlY2xlYXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdicicpO1xuXHRcdG5vdGljZWNsZWFyLnN0eWxlLmNsZWFyID0gJ2JvdGgnO1xuXHRcdE1vcmViaXRzLnN0YXR1cy5yb290LmFwcGVuZENoaWxkKG5vdGljZWNsZWFyKTtcblx0fTtcblx0VHdpbmtsZS5hZGRJbml0Q2FsbGJhY2soVHdpbmtsZS5jb25maWcuaW5pdCk7XG59KShqUXVlcnkpO1xuXG5leHBvcnQge307XG4iLCAiaW1wb3J0ICcuL1R3aW5rbGUubGVzcyc7XG5cbihhc3luYyBmdW5jdGlvbiB0d2lua2xlTG9hZCgpIHtcblx0YXdhaXQgaW1wb3J0KCcuL21vZHVsZXMvdHdpbmtsZScpO1xuXHRhd2FpdCBpbXBvcnQoJy4vbW9kdWxlcy90d2lua2xlYXJ2Jyk7XG5cdGF3YWl0IGltcG9ydCgnLi9tb2R1bGVzL3R3aW5rbGV3YXJuJyk7XG5cdGF3YWl0IGltcG9ydCgnLi9tb2R1bGVzL3R3aW5rbGVibG9jaycpO1xuXHRhd2FpdCBpbXBvcnQoJy4vbW9kdWxlcy9mcmllbmRseXRhbGtiYWNrJyk7XG5cdGF3YWl0IGltcG9ydCgnLi9tb2R1bGVzL3R3aW5rbGVzcGVlZHknKTtcblx0YXdhaXQgaW1wb3J0KCcuL21vZHVsZXMvdHdpbmtsZWNvcHl2aW8nKTtcblx0YXdhaXQgaW1wb3J0KCcuL21vZHVsZXMvdHdpbmtsZXhmZCcpO1xuXHRhd2FpdCBpbXBvcnQoJy4vbW9kdWxlcy90d2lua2xlaW1hZ2UnKTtcblx0YXdhaXQgaW1wb3J0KCcuL21vZHVsZXMvdHdpbmtsZXByb3RlY3QnKTtcblx0YXdhaXQgaW1wb3J0KCcuL21vZHVsZXMvZnJpZW5kbHl0YWcnKTtcblx0YXdhaXQgaW1wb3J0KCcuL21vZHVsZXMvdHdpbmtsZXN0dWInKTtcblx0YXdhaXQgaW1wb3J0KCcuL21vZHVsZXMvdHdpbmtsZWRpZmYnKTtcblx0YXdhaXQgaW1wb3J0KCcuL21vZHVsZXMvdHdpbmtsZXVubGluaycpO1xuXHRhd2FpdCBpbXBvcnQoJy4vbW9kdWxlcy90d2lua2xlZmx1ZmYnKTtcblx0YXdhaXQgaW1wb3J0KCcuL21vZHVsZXMvdHdpbmtsZWJhdGNoZGVsZXRlJyk7XG5cdGF3YWl0IGltcG9ydCgnLi9tb2R1bGVzL3R3aW5rbGViYXRjaHVuZGVsZXRlJyk7XG5cdGF3YWl0IGltcG9ydCgnLi9tb2R1bGVzL3R3aW5rbGViYXRjaHByb3RlY3QnKTtcblx0YXdhaXQgaW1wb3J0KCcuL21vZHVsZXMvdHdpbmtsZWNsb3NlJyk7XG5cdGF3YWl0IGltcG9ydCgnLi9tb2R1bGVzL3R3aW5rbGVjb25maWcnKTtcbn0pKCk7XG4iXSwKICAibWFwcGluZ3MiOiAiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUFBO0FBQUEsSUFFTUM7QUFGTixJQUFBQyxXQUFBQyxNQUFBO0VBQUEsK0JBQUE7QUFBQTtBQUFBSCx3QkFBd0JJLFFBQUEsaUJBQUE7QUFFbEJILFdBQUEsR0FBY0Qsa0JBQUFLLFdBQVUsMEJBQTBCO0VBQUE7QUFBQSxDQUFBOztBQ0Z4RCxJQUFBQyxrQkFBQSxDQUFBO0FBQUEsSUFBQUMsZUFBQUosTUFBQTtFQUFBLG1DQUFBO0FBQUE7QUFFQUQsYUFBQTtJQUNBO0FBQ0EsS0FBQyxTQUFTTSxRQUFRQyxHQUFBQyxTQUFHO0FBQ3BCLFlBQU1DLFFBQVFGLEVBQUUsTUFBTTtBQUN0QixZQUFNRyxXQUFVLENBQUM7QUFDakIsT0FBQUYsVUFBQUcsUUFBT0MsWUFBUEosUUFBT0ksVUFBWUY7QUFHbkIsVUFBSSxDQUFDRyxTQUFTQyxjQUFjLGVBQWUsS0FBSyxDQUFDRCxTQUFTQyxjQUFjLFdBQVcsR0FBRztBQUNyRkMsZ0JBQVFDLEtBQUsscUNBQXFDO0FBQ2xEO01BQ0Q7QUFNQU4sZUFBUU8sYUFBYTtBQUVyQlAsZUFBUVEsWUFBWTtBQUVwQlIs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QyxpQkFBQSxHQUFBRCxvQkFBQTtBQUNOLFVBQU1nZixRQUFBQyxRQUFBLEVBQUE3d0QsS0FBQSxPQUFBc3lDLG1CQUFBLEdBQUFELHNCQUFBO0FBQ04sVUFBTXVlLFFBQUFDLFFBQUEsRUFBQTd3RCxLQUFBLE9BQUEwMUMsa0JBQUEsR0FBQUQscUJBQUE7QUFDTixVQUFNbWIsUUFBQUMsUUFBQSxFQUFBN3dELEtBQUEsT0FBQWc4Qyx3QkFBQSxHQUFBRCwyQkFBQTtBQUNOLFVBQU02VSxRQUFBQyxRQUFBLEVBQUE3d0QsS0FBQSxPQUFBb2hELDBCQUFBLEdBQUFELDZCQUFBO0FBQ04sVUFBTXlQLFFBQUFDLFFBQUEsRUFBQTd3RCxLQUFBLE9BQUFtaUQseUJBQUEsR0FBQUQsNEJBQUE7QUFDTixVQUFNME8sUUFBQUMsUUFBQSxFQUFBN3dELEtBQUEsT0FBQW9qRCxrQkFBQSxHQUFBRCxxQkFBQTtBQUNOLFVBQU15TixRQUFBQyxRQUFBLEVBQUE3d0QsS0FBQSxPQUFBcW5ELG1CQUFBLEdBQUFELHNCQUFBO0VBQ1AsQ0FBQTtBQUFBLFdBckJnQjBKLGNBQUE7QUFBQSxXQUFBQyxhQUFBQyxNQUFBLE1BQUFDLFNBQUE7RUFBQTtBQUFBLFNBQUFIO0FBQUEsR0FBQSxFQXFCYjsiLAogICJuYW1lcyI6IFsiaW1wb3J0X2V4dF9nYWRnZXQiLCAiYXBpIiwgImluaXRfYXBpIiwgIl9fZXNtIiwgInJlcXVpcmUiLCAiaW5pdE13QXBpIiwgInR3aW5rbGVfZXhwb3J0cyIsICJpbml0X3R3aW5rbGUiLCAidHdpbmtsZSIsICIkIiwgIl93aW5kb3ciLCAiJGJvZHkiLCAiVHdpbmtsZTIiLCAid2luZG93IiwgIlR3aW5rbGUiLCAiTW9yZWJpdHMiLCAidXNlcklzSW5Hcm91cCIsICJjb25zb2xlIiwgIndhcm4iLCAiY2hhbmdlVGFncyIsICJzdW1tYXJ5QWQiLCAiaGF0bm90ZVJlZ2V4IiwgImluaXRDYWxsYmFja3MiLCAiYWRkSW5pdENhbGxiYWNrIiwgImZ1bmMiLCAibmFtZSIsICJsZW5ndGgiLCAiZGVmYXVsdENvbmZpZyIsICJ1c2VyVGFsa1BhZ2VNb2RlIiwgImRpYWxvZ0xhcmdlRm9udCIsICJkaXNhYmxlZE1vZHVsZXMiLCAidXNlcklzU3lzb3AiLCAiZGlzYWJsZWRTeXNvcE1vZHVsZXMiLCAic3BpV2F0Y2hSZXBvcnQiLCAiZGVmYXVsdFRvQmxvY2s2NCIsICJkZWZhdWx0VG9QYXJ0aWFsQmxvY2tzIiwgImJsYW5rVGFsa3BhZ2VPbkluZGVmQmxvY2siLCAid2F0Y2hCbG9ja05vdGljZXMiLCAiY3VzdG9tQmxvY2tSZWFzb25MaXN0IiwgIm9wZW5UYWxrUGFnZSIsICJvcGVuVGFsa1BhZ2VPbkF1dG9SZXZlcnQiLCAicm9sbGJhY2tJblBsYWNlIiwgIm1hcmtSZXZlcnRlZFBhZ2VzQXNNaW5vciIsICJ3YXRjaFJldmVydGVkUGFnZXMiLCAid2F0Y2hSZXZlcnRlZEV4cGlyeSIsICJvZmZlclJlYXNvbk9uTm9ybWFsUmV2ZXJ0IiwgImNvbmZpcm1PbkZsdWZmIiwgInNob3dSb2xsYmFja0xpbmtzIiwgImN1c3RvbVJldmVydFN1bW1hcnkiLCAibm90aWZ5VXNlck9uRGVsaSIsICJkZWxpV2F0Y2hQYWdlIiwgImRlbGlXYXRjaFVzZXIiLCAid2F0Y2hSZXF1ZXN0ZWRQYWdlcyIsICJ3YXRjaFBQVGFnZ2VkUGFnZXMiLCAid2F0Y2hQcm90ZWN0ZWRQYWdlcyIsICJzcGVlZHlTZWxlY3Rpb25TdHlsZSIsICJ3YXRjaFNwZWVkeVBhZ2VzIiwgIndhdGNoU3BlZWR5RXhwaXJ5IiwgIm1hcmtTcGVlZHlQYWdlc0FzUGF0cm9sbGVkIiwgIndhdGNoU3BlZWR5VXNlciIsICJub3RpZnlVc2VyT25TcGVlZHlEZWxldGlvbk5vbWluYXRpb24iLCAid2FyblVzZXJPblNwZWVkeURlbGV0ZSIsICJwcm9tcHRGb3JTcGVlZHlEZWxldGlvblN1bW1hcnkiLCAib3BlblVzZXJUYWxrUGFnZU9uU3BlZWR5RGVsZXRlIiwgImRlbGV0ZVRhbGtQYWdlT25EZWxldGUiLCAiZGVsZXRlUmVkaXJlY3RzT25EZWxldGUiLCAiZGVsZXRlU3lzb3BEZWZhdWx0VG9EZWxldGUiLCAic3BlZWR5V2luZG93SGVpZ2h0IiwgInNwZWVkeVdpbmRvd1dpZHRoIiwgImxvZ1NwZWVkeU5vbWluYXRpb25zIiwgInNwZWVkeUxvZ1BhZ2VOYW1lIiwgIm5vTG9nT25TcGVlZHlOb21pbmF0aW9uIiwgImVubGFyZ2VHN0lucHV0IiwgInVubGlua05hbWVzcGFjZXMiLCAiZGVmYXVsdFdhcm5pbmdHcm91cCIsICJjb21iaW5lZFNpbmdsZXRNZW51cyIsICJ3YXRjaFdhcm5pbmdzIiwgIm9sZFNlbGVjdCIsICJjdXN0b21XYXJuaW5nTGlzdCIsICJhdXRvTWVudUFmdGVyUm9sbGJhY2siLCAibG9nWGZkTm9taW5hdGlvbnMiLCAieGZkTG9nUGFnZU5hbWUiLCAibm9Mb2dPblhmZE5vbWluYXRpb24iLCAieGZkV2F0Y2hEaXNjdXNzaW9uIiwgInhmZFdhdGNoUGFnZSIsICJ4ZmRXYXRjaFVzZXIiLCAibWFya1hmZFBhZ2VzQXNQYXRyb2xsZWQiLCAiRndkQ3NkVG9YZmQiLCAiYWZkRGVmYXVsdENhdGVnb3J5IiwgImFmZEZhbWVEZWZhdWx0UmVhc29uIiwgImFmZFN1YnN0dWJEZWZhdWx0UmVhc29uIiwgIlhmZENsb3NlIiwgImNvcHl2aW9XYXRjaFBhZ2UiLCAiY29weXZpb1dhdGNoVXNlciIsICJtYXJrQ29weXZpb1BhZ2VzQXNQYXRyb2xsZWQiLCAiYXV0b2xldmVsU3RhbGVEYXlzIiwgInJldmVydE1heFJldmlzaW9ucyIsICJiYXRjaE1heCIsICJiYXRjaENodW5rcyIsICJjb25maWdQYWdlIiwgInByb2plY3ROYW1lc3BhY2VOYW1lIiwgIm13IiwgImNvbmZpZyIsICJnZXQiLCAic2FuZGJveFBhZ2UiLCAiZGVsZXRpb25TdW1tYXJ5QWQiLCAicHJvdGVjdGlvblN1bW1hcnlBZCIsICJibG9ja1N1bW1hcnlBZCIsICJncm91cEJ5RGVmYXVsdCIsICJ3YXRjaFRhZ2dlZFBhZ2VzIiwgIndhdGNoTWVyZ2VEaXNjdXNzaW9ucyIsICJtYXJrVGFnZ2VkUGFnZXNBc01pbm9yIiwgIm1hcmtUYWdnZWRQYWdlc0FzUGF0cm9sbGVkIiwgInRhZ0FydGljbGVTb3J0T3JkZXIiLCAiY3VzdG9tVGFnTGlzdCIsICJjdXN0b21GaWxlVGFnTGlzdCIsICJjdXN0b21SZWRpcmVjdFRhZ0xpc3QiLCAid2F0Y2hTdHViYmVkUGFnZXMiLCAibWFya1N0dWJiZWRQYWdlc0FzTWlub3IiLCAibWFya1N0dWJiZWRQYWdlc0FzUGF0cm9sbGVkIiwgInN0dWJBcnRpY2xlU29ydE9yZGVyIiwgImN1c3RvbVN0dWJMaXN0IiwgIm1hcmtUYWxrYmFja0FzTWlub3IiLCAiaW5zZXJ0VGFsa2JhY2tTaWduYXR1cmUiLCAidGFsa2JhY2tIZWFkaW5nIiwgIndnVUxTIiwgIm1haWxIZWFkaW5nIiwgInBvcnRsZXRBcmVhIiwgInBvcnRsZXRJZCIsICJwb3J0bGV0TmFtZSIsICJwb3J0bGV0VHlwZSIsICJwb3J0bGV0TmV4dCIsICJmaW5kIiwgImdldFByZWYiLCAicHJlZnMiLCAiVHdpbmtsZUNvbmZpZyIsICJhZGRQb3J0bGV0IiwgIm5hdmlnYXRpb24iLCAiaWQiLCAidGV4dCIsICJ0eXBlIiwgIm5leHRub2RlaWQiLCAicm9vdCIsICJkb2N1bWVudCIsICJxdWVyeVNlbGVjdG9yIiwgInRlc3QiLCAiY29uY2F0IiwgIml0ZW0iLCAicGFyZW50Tm9kZSIsICJuZXh0bm9kZSIsICJza2luIiwgIm91dGVyTmF2Q2xhc3MiLCAiaW5uZXJEaXZDbGFzcyIsICJ1bENsYXNzTmFtZSIsICJvdXRlck5hdiIsICJoZWFkaW5nIiwgImNyZWF0ZUVsZW1lbnQiLCAic2V0QXR0cmlidXRlIiwgImNsYXNzTmFtZSIsICJpbnNlcnRCZWZvcmUiLCAiYXBwZW5kQ2hpbGQiLCAidWwiLCAiaW5jbHVkZXMiLCAiY2hrYm94IiwgInNwYW4iLCAiY3JlYXRlVGV4dE5vZGUiLCAiYSIsICJocmVmIiwgIm9uIiwgImUiLCAicHJldmVudERlZmF1bHQiLCAiaW5uZXJEaXYiLCAiYWRkUG9ydGxldExpbmsiLCAidGFzayIsICJ0b29sdGlwIiwgImxpbmsiLCAidXRpbCIsICJjc3MiLCAiZXYiLCAiY29sbGFwc2libGVUYWJzIiwgImhhbmRsZVJlc2l6ZSIsICJhY3Rpb24iLCAicHJvcCIsICJydnByb3AiLCAiZm9ybWF0IiwgImZvcm1hdHZlcnNpb24iLCAidGl0bGVzIiwgInJ2bGltaXQiLCAicnZzbG90cyIsICJ0aGVuIiwgInJlc3BvbnNlIiwgInBhZ2VzIiwgIm1pc3NpbmciLCAiX3Jlc3BvbnNlJHF1ZXJ5JHBhZ2VzIiwgImNvbnRlbnQiLCAicmV2aXNpb25zIiwgInNsb3RzIiwgIm1haW4iLCAiZXZhbCIsICJub3RpZnkiLCAidGFnIiwgImZhaWwiLCAiYWx3YXlzIiwgImxvYWQiLCAiYWN0aXZlU3BlY2lhbFBhZ2VMaXN0IiwgInRvcCIsICJzZWxmIiwgInVzZXJBZ2VudCIsICJ3aWtpIiwgInNldEFwaVVzZXJBZ2VudCIsICJfaXRlcmF0b3IiLCAiX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiLCAiX3N0ZXAiLCAicyIsICJuIiwgImRvbmUiLCAibW9kdWxlMiIsICJ2YWx1ZSIsICJlcnIiLCAiZiIsICJhZGRDU1MiLCAiaXNWZWN0b3IiLCAic29ydEJ5TmFtZXNwYWNlIiwgImZpcnN0IiwgInNlY29uZCIsICJucyIsICJ0aXRsZSIsICJnZW5lcmF0ZUJhdGNoUGFnZUxpbmtzIiwgImNoZWNrYm94IiwgIiRjaGVja2JveCIsICJodG1sTm9kZSIsICJ2YWwiLCAiZ2V0VXJsIiwgIm5leHQiLCAicHJlcGVuZCIsICJqUXVlcnkiLCAidHdpbmtsZWFydl9leHBvcnRzIiwgImluaXRfdHdpbmtsZWFydiIsICJ0d2lua2xlYXJ2IiwgImFydiIsICJ1c2VybmFtZSIsICJpc0lQIiwgImlzSVBBZGRyZXNzIiwgImNhbGxiYWNrIiwgInVpZCIsICJXaW5kb3ciLCAic2ltcGxlV2luZG93IiwgInNldFRpdGxlIiwgInNldFNjcmlwdE5hbWUiLCAiYWRkRm9vdGVyTGluayIsICJmb3JtIiwgInF1aWNrRm9ybSIsICJldmFsdWF0ZSIsICJjYXRlZ29yaWVzIiwgImFwcGVuZCIsICJsYWJlbCIsICJldmVudCIsICJjaGFuZ2VDYXRlZ29yeSIsICJkaXNhYmxlZCIsICJzdHlsZSIsICJyZXN1bHQiLCAicmVuZGVyIiwgInNldENvbnRlbnQiLCAiZGlzcGxheSIsICJxdWVyeSIsICJsaXN0IiwgImJrcHJvcCIsICJia2lwIiwgImJrdXNlcnMiLCAiYXBpb2JqIiwgImJsb2NrbGlzdCIsICJnZXRSZXNwb25zZSIsICJibG9ja3MiLCAiYmxvY2siLCAibWVzc2FnZSIsICJwYXJ0aWFsIiwgInJhbmdlc3RhcnQiLCAicmFuZ2VlbmQiLCAicG9zdCIsICJldnQiLCAiY3JlYXRlRXZlbnQiLCAiaW5pdEV2ZW50IiwgImNhdGVnb3J5IiwgImRpc3BhdGNoRXZlbnQiLCAibHRhX2xpc3QiLCAic29ja21hc3Rlcl9jaGFuZ2VkIiwgInNldF9zb2NrbWFzdGVyIiwgInRhcmdldCIsICJzb2NrbWFzdGVyIiwgInZhbHVlXyIsICJyb290XyIsICJvbGRfYXJlYSIsICJnZXRFbGVtZW50cyIsICJ3b3JrX2FyZWEiLCAicHJldmlld2xpbmsiLCAiY3Vyc29yIiwgInRleHRDb250ZW50IiwgInByZXZpZXciLCAiZWxlbWVudCIsICJzdWJsYWJlbCIsICJtaW4iLCAibWF4IiwgInJlcGxhY2VDaGlsZCIsICJhZGRDbGFzcyIsICJzcGlub3RpY2VwcmV2aWV3ZXIiLCAibGFzdCIsICJnZXRQYXJhbVZhbHVlIiwgImJhZGlkIiwgImdvb2RpZCIsICJwcmV2aWV3ZXIiLCAicmVhc29uIiwgImdldFJlcG9ydFdpa2l0ZXh0IiwgImlucHV0IiwgImdldElucHV0RGF0YSIsICJiZWdpblJlbmRlciIsICJjb21tZW50IiwgImNoZWNrVGl0bGUiLCAicmV2aWQiLCAicGFnZV8iLCAiVGl0bGUiLCAibmFtZXNwYWNlIiwgInBhZ2UiLCAibWFwIiwgIm8iLCAiX2l0ZXJhdG9yMiIsICJfc3RlcDIiLCAiZ2V0UHJlZml4ZWRUZXh0IiwgInJlcGxhY2UiLCAidHJpbSIsICJzdHJpbmciLCAiYXBwZW5kUHVuY3R1YXRpb24iLCAidHlwZXMiLCAiYXJ2dHlwZSIsICJ0b0xvd2VyQ2FzZUZpcnN0Q2hhciIsICJoYXNTaGFyZWQiLCAic3BsaWNlIiwgImluZGV4T2YiLCAiY29uZmlybSIsICJqb2luIiwgInNsaWNlIiwgImhpZGVuYW1lIiwgInRvVXBwZXJDYXNlRmlyc3RDaGFyIiwgInNvY2twdXBwZXRzIiwgImFycmF5IiwgInVuaXEiLCAic29jayIsICJpbmRleCIsICJjaGVja3VzZXIiLCAidiIsICJfaW5wdXQkZ29vZGlkIiwgInN1bW1hcnkiLCAic2V0QnV0dG9uc0VuYWJsZWQiLCAic3RhdHVzIiwgImluaXQiLCAiYWN0aW9uQ29tcGxldGVkIiwgInJlZGlyZWN0IiwgIm5vdGljZSIsICJld2lwUGFnZSIsICJzZXRGb2xsb3dSZWRpcmVjdCIsICJnZXRQYWdlVGV4dCIsICIkZXdpcExpbmsiLCAiUmVnRXhwIiwgImVzY2FwZVJlZ0V4cCIsICJnZXRTdGF0dXNFbGVtZW50IiwgImVycm9yIiwgInByaW50VXNlclRleHQiLCAic2V0UGFnZVNlY3Rpb24iLCAic2V0RWRpdFN1bW1hcnkiLCAic2V0Q2hhbmdlVGFncyIsICJzZXRBcHBlbmRUZXh0IiwgInVhYVBhZ2UiLCAiJHVhYUxpbmsiLCAicmVwb3J0cGFnZSIsICJzcGlQYWdlIiwgInNldFdhdGNobGlzdCIsICJhaXZQYWdlIiwgIiRhaXZMaW5rIiwgInR3aW5rbGV3YXJuX2V4cG9ydHMiLCAiaW5pdF90d2lua2xld2FybiIsICJ0d2lua2xld2FybiIsICJyZWxldmFudFVzZXJOYW1lIiwgIiR2YW5kYWxUYWxrTGluayIsICJtYWtlVmFuZGFsVGFsa0xpbmsiLCAicGFnZU5hbWVOb3JtIiwgImFmVGFsa0xpbmsiLCAicGFnZV9wcmVmaXhlZHRpdGxlIiwgInBhZ2VuYW1lIiwgIndyYXBJbm5lciIsICJhdHRyIiwgImV4dHJhUGFyYW0iLCAicmF3dXJsZW5jb2RlIiwgImRpYWxvZyIsICJtYWluX3NlbGVjdCIsICJtYWluX2dyb3VwIiwgImNoYW5nZV9jYXRlZ29yeSIsICJkZWZhdWx0R3JvdXAiLCAiTnVtYmVyIiwgInBhcnNlSW50IiwgInNlbGVjdGVkIiwgImNoYW5nZV9zdWJjYXRlZ29yeSIsICJzaXplIiwgInBsYWNlaG9sZGVyIiwgIm1vcmUiLCAiY2FsbGJhY2tzIiwgInZhbnJldmlkIiwgInJ2c3RhcnRpZCIsICJydmRpciIsICJyZXZlcnRVc2VyIiwgImdldEF0dHJpYnV0ZSIsICJjaGVja1N0YWxlIiwgInZhbnRpbWVzdGFtcF8iLCAicmV2RGF0ZSIsICJkYXRlIiwgImlzVmFsaWQiLCAiYWRkIiwgImlzQmVmb3JlIiwgIkRhdGUiLCAidmFudGltZXN0YW1wIiwgInJldmlkcyIsICJtZXNzYWdlcyIsICJsZXZlbHMiLCAibGV2ZWwxIiwgImxldmVsMiIsICJzaW5nbGVub3RpY2UiLCAic2luZ2xld2FybiIsICJzdXBwcmVzc0FydGljbGVJblN1bW1hcnkiLCAicHJldl9hcnRpY2xlIiwgInByZXZfcmVhc29uIiwgInRhbGtwYWdlT2JqIiwgInN1Yl9ncm91cCIsICJvbGRfc3VidmFsdWUiLCAib2xkX3N1YnZhbHVlX3JlIiwgImhhc0NoaWxkTm9kZXMiLCAicmVtb3ZlQ2hpbGQiLCAiZmlyc3RDaGlsZCIsICJjcmVhdGVFbnRyaWVzIiwgImNvbnRlbnRzIiwgImNvbnRhaW5lciIsICJ3cmFwSW5PcHRncm91cCIsICJsZXZlbCIsICJjbGllbnQiLCAicHJvZmlsZSIsICJwbGF0Zm9ybSIsICJ3cmFwcGVyT3B0Z3JvdXAiLCAiX2kyIiwgIl9PYmplY3QkZW50cmllcyIsICJPYmplY3QiLCAiZW50cmllcyIsICJpdGVtS2V5IiwgIml0ZW1Qcm9wZXJ0aWVzIiwgImtleSIsICJ0ZW1wbGF0ZSIsICJlbGVtIiwgImRhdGEiLCAiZWxlbVJlbmRlcmVkIiwgInVuU29ydGVkU2luZ2xldHMiLCAic29ydGVkU2luZ2xldE1lc3NhZ2VzIiwgIl9pdGVyYXRvcjMiLCAia2V5cyIsICJzb3J0IiwgIl9zdGVwMyIsICJfaTMiLCAiX2FyciIsICJsdmwiLCAiX2l0ZXJhdG9yNCIsICJfc3RlcDQiLCAibGV2ZWxHcm91cCIsICJfaXRlcmF0b3I1IiwgIl9zdGVwNSIsICJvcHRncm91cCIsICJhdXRvbGV2ZWxQcm9jIiwgIndpa2l0ZXh0IiwgImxhdGVzdCIsICJkYXRlUHJvY2Vzc2luZyIsICJwYXJhbXMiLCAiYXJ0aWNsZSIsICJhdXRvbGV2ZWxQYXJzZVdpa2l0ZXh0IiwgIl9pdGVyYXRvcjYiLCAiX3N0ZXA2IiwgInBvc3RDYXRlZ29yeUNsZWFudXAiLCAidXNlcnRhbGtfcGFnZSIsICJwYWdlb2JqIiwgIiRub1RhbGtQYWdlTm9kZSIsICJjbG9zZVByZXZpZXciLCAicmVtb3ZlIiwgInNldEVsZW1lbnRUb29sdGlwVmlzaWJpbGl0eSIsICJyZXNldEVsZW1lbnRMYWJlbCIsICJzZWxlY3QyIiwgIndpZHRoIiwgIm1hdGNoZXIiLCAibWF0Y2hlcnMiLCAib3B0Z3JvdXBGdWxsIiwgInRlbXBsYXRlUmVzdWx0IiwgImhpZ2hsaWdodFNlYXJjaE1hdGNoZXMiLCAibGFuZ3VhZ2UiLCAic2VhcmNoaW5nIiwgInF1ZXJ5SW50ZXJjZXB0b3IiLCAiY2hhbmdlIiwgImF1dG9TdGFydCIsICJ0cmlnZ2VyIiwgIm5vdExpbmtlZEFydGljbGUiLCAibm90QXJ0aWNsZSIsICJvdmVycmlkZUVsZW1lbnRMYWJlbCIsICJnZXRXYXJuaW5nV2lraXRleHQiLCAidGVtcGxhdGVOYW1lIiwgImlzQ3VzdG9tIiwgIm5vU2lnbiIsICJzaG93UHJldmlldyIsICJ0ZW1wbGF0ZW5hbWUiLCAibGlua2VkYXJ0aWNsZSIsICJ0ZW1wbGF0ZXRleHQiLCAibWVzc2FnZURhdGEiLCAiaGlzdG9yeV9yZSIsICJoaXN0b3J5IiwgImN1cnJlbnQiLCAiZXhlYyIsICJjdXJyZW50X2RhdGUiLCAiaXNBZnRlciIsICJzdGF0ZWxlbSIsICIkYXV0b2xldmVsTWVzc2FnZSIsICJpc05hTiIsICJhdXRvVGltZW91dCIsICJnZXRUaW1lIiwgIiRsaW5rIiwgImNsb3NlIiwgInN0YXR1c05vZGUiLCAiaW5zZXJ0QWZ0ZXIiLCAiZ2V0Q2FsbGJhY2tQYXJhbWV0ZXJzIiwgIndhcm5pbmdIaXN0b3J5IiwgIm5vdyIsICJnZXRMb2FkVGltZSIsICJ0ZW1wbGF0ZUFuZExldmVsIiwgImN1c3RvbVByb2Nlc3MiLCAic3BsaXQiLCAicHJlZml4IiwgInN1YiIsICJ3YXJuaW5nVGV4dCIsICJzZWN0aW9uRXhpc3RzIiwgInNlY3Rpb25OdW1iZXIiLCAic2VjdGlvbnMiLCAibWF0Y2giLCAiZGF0ZUhlYWRlclJlZ2V4IiwgIm1vbnRoSGVhZGVyUmVnZXgiLCAicmV2ZXJzZSIsICJzb21lIiwgInNlYyIsICJpZHgiLCAic2V0TmV3U2VjdGlvblRpdGxlIiwgImluZm8iLCAibW9udGhIZWFkZXIiLCAic2V0TmV3U2VjdGlvblRleHQiLCAibmV3U2VjdGlvbiIsICJ1c2VyVGFsa1BhZ2UiLCAiZ2V0RnJhZ21lbnQiLCAiYWxlcnQiLCAiJHNlbGVjdGVkRWwiLCAicWl1d2VuX3BhZ2UiLCAic2V0Q2FsbGJhY2tQYXJhbWV0ZXJzIiwgInR3aW5rbGVibG9ja19leHBvcnRzIiwgImltcG9ydF9leHRfZ2FkZ2V0MiIsICJpbml0X3R3aW5rbGVibG9jayIsICJ0d2lua2xlYmxvY2siLCAiYmxvY2tlZFVzZXJOYW1lIiwgIm1lbnVGb3JtYXR0ZWROYW1lc3BhY2VzIiwgImJsb2NrQWN0aW9uVGV4dCIsICJyZWJsb2NrIiwgInVuYmxvY2siLCAiaXAiLCAiaXNSYW5nZSIsICJ2YWxpZENJRFIiLCAiY3VycmVudEJsb2NrSW5mbyIsICJmaWVsZF9ibG9ja19vcHRpb25zIiwgImZpZWxkX3RlbXBsYXRlX29wdGlvbnMiLCAiYWN0aW9uZmllbGQiLCAiY2hhbmdlX2FjdGlvbiIsICJoaWRkZW4iLCAiY2hlY2tlZCIsICJzaXh0eUZvdXIiLCAiZ2V0NjQiLCAiYmxvY2s2NGZpZWxkIiwgImNoYW5nZV9ibG9jazY0IiwgImZldGNoVXNlckluZm8iLCAiaXNSZWdpc3RlcmVkIiwgIiRmb3JtIiwgInNldEVsZW1lbnRWaXNpYmlsaXR5IiwgInBhcmVudCIsICJ0cmFuc2Zvcm1CbG9ja1ByZXNldHMiLCAiYmxvY2s2NCIsICJhY3Rpb250eXBlIiwgImZldGNoZWREYXRhIiwgInByb2Nlc3NVc2VySW5mbyIsICJmbiIsICJibG9ja2luZm8iLCAidXNlcmluZm8iLCAidXNlcnMiLCAidXNlciIsICJ1c2VyaWQiLCAidXNlcklzQm90IiwgImdyb3VwbWVtYmVyc2hpcHMiLCAiZ3JvdXAiLCAiZGlzYWJsZXRhbGsiLCAiYWxsb3d1c2VydGFsayIsICJoYXJkYmxvY2siLCAiYW5vbm9ubHkiLCAiaGFzQmxvY2tMb2ciLCAibG9nZXZlbnRzIiwgImJsb2NrTG9nIiwgImJsb2NrTG9nSWQiLCAibG9naWQiLCAibGV0eXBlIiwgImxlbGltaXQiLCAibGV0aXRsZSIsICJ1c3VzZXJzIiwgInVzcHJvcCIsICJzYXZlRmllbGRzZXQiLCAiZmllbGRzZXQiLCAiX2l0ZXJhdG9yNyIsICJzZXJpYWxpemVBcnJheSIsICJfc3RlcDciLCAiZWwiLCAiJGJsb2NrNjQiLCAicHJpb3JOYW1lIiwgImlzIiwgIm9yaWdpbmFsSXNSYW5nZSIsICJyZWdlbmVyYXRlRm9ybSIsICJ0aXRsZUJhciIsICJuZXh0U2libGluZyIsICJub2RlVmFsdWUiLCAiZmllbGRfcHJlc2V0IiwgImZpZWxkX3RhZ19vcHRpb25zIiwgImZpZWxkX3VuYmxvY2tfb3B0aW9ucyIsICIkYmxvY2siLCAiYmxvY2tCb3giLCAiJHRlbXBsYXRlIiwgInRlbXBsYXRlQm94IiwgIiR0YWciLCAidGFnQm94IiwgIiRwcm90ZWN0IiwgIiRwYXJ0aWFsIiwgInBhcnRpYWxCb3giLCAiJHVuYmxvY2siLCAidW5ibG9ja0JveCIsICJibG9ja0dyb3VwIiwgImJsb2NrR3JvdXBzUGFydGlhbCIsICJibG9ja0dyb3VwcyIsICJwcmlvciIsICJibG9ja1ByZXNldHNJbmZvIiwgImJnIiwgImlzSW5maW5pdHkiLCAiZXhwaXJ5IiwgImZpbHRlciIsICJjaGFuZ2VfcHJlc2V0IiwgImZpbHRlcmVkX2Jsb2NrX2dyb3VwcyIsICJjaGFuZ2VfZXhwaXJ5IiwgInRlbXBsYXRlX2V4cGlyeSIsICJtdWx0aXBsZSIsICJfaTQiLCAiX09iamVjdCRlbnRyaWVzMiIsICJudW1iZXIiLCAiYmxvY2tvcHRpb25zIiwgIm5vY3JlYXRlIiwgIm5vZW1haWwiLCAiYXV0b2Jsb2NrIiwgIndhdGNodXNlciIsICJ0b2dnbGVfc2VlX2Fsc29zIiwgImNoYW5nZV90ZW1wbGF0ZSIsICJibG9ja19yZWFzb24iLCAiYmxhbmtfZHVyYXRpb24iLCAibm90YWxrIiwgIm5vZW1haWxfdGVtcGxhdGUiLCAibm9jcmVhdGVfdGVtcGxhdGUiLCAiJHByZXZpZXdsaW5rIiwgIm9mZiIsICJzdWJncm91cCIsICJvbGRmaWVsZCIsICJoaWRlIiwgInNob3ciLCAiZXJyb3JMb2FkaW5nIiwgIm1heGltdW1TZWxlY3Rpb25MZW5ndGgiLCAibWluaW11bUlucHV0TGVuZ3RoIiwgImFqYXgiLCAidXJsIiwgIndpa2lTY3JpcHQiLCAiZGF0YVR5cGUiLCAiZGVsYXkiLCAibmV3RnJvbVRleHQiLCAidGVybSIsICJhcGZyb20iLCAiYXBuYW1lc3BhY2UiLCAiYXBsaW1pdCIsICJwcm9jZXNzUmVzdWx0cyIsICJyZXN1bHRzIiwgImFsbHBhZ2VzIiwgInRvVGV4dCIsICJ0ZW1wbGF0ZVNlbGVjdGlvbiIsICJjaG9pY2UiLCAicmVsIiwgIndvcmRCZWdpbm5pbmciLCAic2FtZVVzZXIiLCAic3RhdHVzU3RyIiwgIiRyYW5nZWJsb2NrbG9nbGluayIsICJodG1sIiwgImNhbGVuZGFyIiwgImluZm9TdHIiLCAidXBkYXRlX2Zvcm0iLCAiYmxvY2tsb2dpbmZvIiwgIiRibG9ja2xvZ2xpbmsiLCAibGFzdEJsb2NrQWN0aW9uIiwgImJsb2NrQWN0aW9uIiwgInRpbWVzdGFtcCIsICJmb3JtYXRUaW1lIiwgImR1cmF0aW9uIiwgImZvclJlZ2lzdGVyZWRPbmx5IiwgInBhZ2VQYXJhbSIsICJyZWFzb25QYXJhbSIsICJub25zdGFuZGFyZCIsICJmb3JBbm9uT25seSIsICJzaWciLCAiY2hlY2t1c2VyYmxvY2siLCAiYmlvYmxvY2siLCAidWNibG9jayIsICJucGJsb2NrIiwgIl9pdGVyYXRvcjgiLCAiX3N0ZXA4IiwgIm5ld0tleSIsICJjdXN0b20iLCAiX2k1IiwgIl9PYmplY3QkZW50cmllczMiLCAicHJlc2V0IiwgInNldHRpbmdzIiwgImluZGVmaW5pdGUiLCAibWV0YSIsICJzaG93X3RlbXBsYXRlIiwgInRlbXBsYXRlcyIsICJBcnJheSIsICJwcm90b3R5cGUiLCAiY2FsbCIsICJibG9ja1ByZXNldCIsICJibG9ja1NldHRpbmdzIiwgInJlZ2lzdHJhdGlvblJlc3RyaWN0IiwgInNlZUFsc29zIiwgInNlZUFsc29NZXNzYWdlIiwgInVzZUluaXRpYWxPcHRpb25zIiwgInBhcnNlIiwgInRvR01UU3RyaW5nIiwgImV4cGlyeV9wcmVzZXQiLCAiZWFjaCIsICJfaSIsICJjaGVjayIsICJwcmVwZW5kUmVhc29uIiwgInBhZ2VyZXN0cmljdGlvbnMiLCAiJHBhZ2VTZWxlY3QiLCAiJG5hbWVzcGFjZVNlbGVjdCIsICJyZXN0cmljdGlvbnMiLCAicHIiLCAiX2l0ZXJhdG9yOSIsICJfc3RlcDkiLCAiZXNjYXBlU2VsZWN0b3IiLCAibmV3T3B0aW9uIiwgIk9wdGlvbiIsICJnZW5lcmF0ZUFycmF5IiwgIm5hbWVzcGFjZXMiLCAicHJldl90ZW1wbGF0ZV9leHBpcnkiLCAiYXJlYSIsICJuYW1lc3BhY2VyZXN0cmljdGlvbnMiLCAidGVtcGxhdGVUZXh0IiwgImdldEJsb2NrTm90aWNlV2lraXRleHQiLCAiX3RlbXBsYXRlb3B0aW9ucyIsICJ0b0Jsb2NrIiwgInRvV2FybiIsICJ0b1BhcnRpYWwiLCAidG9UYWciLCAidG9Qcm90ZWN0IiwgInRvVW5ibG9jayIsICJ0ZW1wbGF0ZW9wdGlvbnMiLCAidW5ibG9ja29wdGlvbnMiLCAidG9DbG9zZXZpcCIsICJjbG9zZXZpcCIsICJjaGVja0luY29tcGF0aWJsZSIsICJjb25mbGljdHMiLCAiZXh0cmEiLCAiY291bnQiLCAicmVkdWNlIiwgInN1bSIsICJzcHBVc2VybmFtZSIsICJzdGF0dXNFbGVtZW50IiwgImxvZ0V4cGlyeSIsICJleHBpcnlEYXRlIiwgImdyb3Vwc0NhbkJlUmVtb3ZlZCIsICJncm91cHNUb0JlUmVtb3ZlZCIsICJncm91cHMiLCAidGFncyIsICJ0b2tlbiIsICJ0b2tlbnMiLCAibWJBcGkiLCAiaXNzdWVfdGVtcGxhdGUiLCAidmlwUGFnZSIsICJjbG9zZVJlcXVlc3QiLCAicmlnaHRTdGF0dXNFbGVtZW50IiwgInJldm9rZU9wdGlvbnMiLCAidXNlcnJpZ2h0c3Rva2VuIiwgIm1yQXBpIiwgInVzZXJQYWdlIiwgInRhZ3VzZXJwYWdlIiwgInVuYmxvY2tTdGF0dXNFbGVtZW50IiwgInVuYmxvY2tNYkFwaSIsICJfaXRlcmF0b3IxMCIsICJfc3RlcDEwIiwgInRhZ3RleHQiLCAic3BwVHlwZSIsICJzcHBFdmlkZW5jZSIsICJzcG1DaGVja2VkIiwgInNwbUV2aWRlbmNlIiwgInNldFBhZ2VUZXh0IiwgInNhdmUiLCAicHJvdGVjdHVzZXJwYWdlIiwgImV4aXN0cyIsICJzZXRFZGl0UHJvdGVjdGlvbiIsICJzZXRNb3ZlUHJvdGVjdGlvbiIsICJzZXRDcmVhdGVQcm90ZWN0aW9uIiwgInByb3RlY3QiLCAiZm9ybURhdGEiLCAidXNlcnRhbGtfc3VtbWFyeSIsICJ1c2VyTmFtZSIsICJleHBpcnlUZXh0IiwgInJlcXVlc3RMaXN0IiwgImZvdW5kIiwgInZpcFJlIiwgInBhZ2VOYW1lUmVnZXgiLCAiX2l0ZXJhdG9yMTEiLCAiX3N0ZXAxMSIsICJyZXF1ZXN0IiwgInRyaW1FbmQiLCAibmV3VGV4dCIsICJtYWtlU2VudGVuY2UiLCAicG9wIiwgInAiLCAibmFtZXNwYWNlTmFtZXMiLCAiZGF0ZUhlYWRlclJlZ2V4TGFzdCIsICJkYXRlSGVhZGVyUmVnZXhSZXN1bHQiLCAibGFzdEhlYWRlckluZGV4IiwgImxhc3RJbmRleE9mIiwgImZyaWVuZGx5dGFsa2JhY2tfZXhwb3J0cyIsICJpbml0X2ZyaWVuZGx5dGFsa2JhY2siLCAiZnJpZW5kbHl0YWxrYmFjayIsICJ0YWxrYmFjayIsICJjaGFuZ2VUYXJnZXQiLCAidGJ0YXJnZXQiLCAiZWxxdWVyeSIsICJlbGxpbWl0IiwgInFpdXdlbl9hcGkiLCAib3B0b3V0U3RhdHVzIiwgIm9wdG91dCIsICIkZWwiLCAiZ2V0WE1MIiwgInByZXZfcGFnZSIsICJwcmV2X3NlY3Rpb24iLCAicHJldl9tZXNzYWdlIiwgInZhbHVlcyIsICJzZWN0aW9uIiwgInJlcXVpcmVkIiwgIm5vdGljZWJvYXJkIiwgIl9pNiIsICJfT2JqZWN0JGVudHJpZXM0IiwgIm5vdGljZWJvYXJkcyIsICJuYm5hbWUiLCAiZGVmYXVsdFNlbGVjdGVkIiwgImFmZnAiLCAiZWRpdFN1bW1hcnkiLCAic2JsIiwgInNobCIsICJnZXRDaGVja2VkIiwgIm5hbWVzcGFjZVJlZ2V4IiwgImZ1bGxVc2VyVGFsa1BhZ2VOYW1lIiwgInVzZXJfdGFsayIsICJnZXROb3RpY2VXaWtpdGV4dCIsICJ0YWxrcGFnZSIsICJzZXRDcmVhdGVPcHRpb24iLCAic2V0TWlub3JFZGl0IiwgIm5vdGljZXRleHQiLCAic2FmZVJlcGxhY2UiLCAidHdpbmtsZXNwZWVkeV9leHBvcnRzIiwgImltcG9ydF9leHRfZ2FkZ2V0MyIsICJpbml0X3R3aW5rbGVzcGVlZHkiLCAidHdpbmtsZXNwZWVkeSIsICJzcGVlZHkiLCAiaW5pdERpYWxvZyIsICJldmFsdWF0ZVN5c29wIiwgImV2YWx1YXRlVXNlciIsICJoYXNDU0QiLCAibW9kZSIsICJzeXNvcFNpbmdsZVN1Ym1pdCIsICJzeXNvcFJhZGlvQ2xpY2siLCAic3lzb3BNdWx0aXBsZVN1Ym1pdCIsICJzeXNvcE11bHRpcGxlUmFkaW9DbGljayIsICJ1c2VyTXVsdGlwbGVTdWJtaXQiLCAidXNlck11bHRpcGxlUmFkaW9DbGljayIsICJ1c2VyU2luZ2xlU3VibWl0IiwgInVzZXJTaW5nbGVSYWRpb0NsaWNrIiwgImlzU3lzb3AiLCAiaGFzU3VibWl0QnV0dG9uIiwgImlzTXVsdGlwbGUiLCAiY2FsbGJhY2tmdW5jIiwgImNGb3JtIiwgImNDaGVja2VkIiwgInJlZGlyZWN0cyIsICJkZWxtdWx0aXBsZSIsICJvcGVudXNlcnRhbGsiLCAic2FsdGluZyIsICJtb2RlQ2hhbmdlZCIsICJzdG9wUHJvcGFnYXRpb24iLCAiZGVsZXRlT3B0aW9ucyIsICJ0YWdPcHRpb25zIiwgInByaW9yRGVsZXRpb25Db3VudCIsICJnZXRNb2RlIiwgInRhZ19vbmx5IiwgImlzU3lzb3BNb2RlIiwgImV2YWx1YXRlVHlwZSIsICJyYWRpb09yQ2hlY2tib3giLCAiZ2VuZXJhdGVDc2RMaXN0IiwgImN1c3RvbVJhdGlvbmFsZSIsICJhcnRpY2xlTGlzdCIsICJ1c2VyTGlzdCIsICJ1c2VydGFsa0xpc3QiLCAiZmlsZUxpc3QiLCAiY2F0ZWdvcnlMaXN0IiwgImRyYWZ0TGlzdCIsICJ0YWxrTGlzdCIsICJnZW5lcmFsQ3JpdGVyaWEiLCAiZ2VuZXJhbExpc3QiLCAicmVkaXJlY3RMaXN0IiwgImN1c3RvbU9wdGlvbiIsICJjbGljayIsICJkZWNvZGVVUklDb21wb25lbnQiLCAibGFiZWxzIiwgImVtcHR5IiwgImxlYWN0aW9uIiwgImxlcHJvcCIsICJkZWxDb3VudCIsICJjb250aW51ZSIsICJvcGVuU3ViZ3JvdXBIYW5kbGVyIiwgImNoaWxkcmVuIiwgImZvY3VzIiwgInN1Ym1pdFN1Ymdyb3VwSGFuZGxlciIsICJjcml0RWxlbWVudCIsICJjcml0ZXJpb24iLCAiaGlkZVdoZW5NdWx0aXBsZSIsICJoaWRlU3ViZ3JvdXBXaGVuTXVsdGlwbGUiLCAiaGlkZVdoZW5TaW5nbGUiLCAiaGlkZVN1Ymdyb3VwV2hlblNpbmdsZSIsICJoaWRlV2hlblN5c29wIiwgImhpZGVTdWJncm91cFdoZW5TeXNvcCIsICJoaWRlV2hlblVzZXIiLCAiaGlkZVN1Ymdyb3VwV2hlblVzZXIiLCAiaGlkZVdoZW5SZWRpcmVjdCIsICJzaG93SW5OYW1lc3BhY2VzIiwgImhpZGVJbk5hbWVzcGFjZXMiLCAib3JpZ2luYWxFdmVudCIsICJub3JtYWxpemVkQ3JpdGVyaW9uIiwgIm5vcm1hbGl6ZUhhc2giLCAiZzEiLCAiZzIiLCAiZzMiLCAiZzQiLCAiZzUiLCAiZzYiLCAiZzciLCAiZzgiLCAiZzkiLCAiYTEiLCAiYTIiLCAiYTMiLCAicjEiLCAicjIiLCAiZjEiLCAiZjIiLCAiZjMiLCAiZjQiLCAiZjUiLCAibzEiLCAibzIiLCAibzMiLCAiZ2V0VGVtcGxhdGVDb2RlQW5kUGFyYW1zIiwgImNvZGUiLCAicGFyYW1ldGVycyIsICJpIiwgIm5vcm1hbGl6ZWRzIiwgInV0cGFyYW1zIiwgIl9pdGVyYXRvcjEyIiwgIl9zdGVwMTIiLCAibm9ybSIsICJ0b1VwcGVyQ2FzZSIsICJ0ZW1wbGF0ZVBhcmFtcyIsICJpXyIsICJnZXRVc2VyVGFsa1BhcmFtZXRlcnMiLCAicGFyc2VXaWtpdGV4dCIsICJwc3QiLCAiY29udGVudG1vZGVsIiwgInN0YXR1c0luZGljYXRvciIsICJhcGkyIiwgImFwaU9iaiIsICJjaGlsZE5vZGVzIiwgInN5c29wIiwgInByb21wdCIsICJkZWxldGVQYWdlIiwgImRlbGV0ZVJlYXNvbiIsICJwcm9tcHRGb3JTdW1tYXJ5IiwgInRoaXNwYWdlIiwgImRlbGV0ZU1haW4iLCAid2F0Y2giLCAiZGVsZXRlVGFsayIsICJvcGVuVXNlclRhbGsiLCAibG9va3VwQ3JlYXRpb24iLCAib3BlblVzZXJUYWxrUGFnZSIsICJkZWxldGVUYWxrUGFnZSIsICJub3JtYWxpemVkIiwgImNsYXNzTGlzdCIsICJjb250YWlucyIsICJzZXRUaW1lb3V0IiwgImRlbGV0ZVJlZGlyZWN0cyIsICJyZGxpbWl0IiwgImRlbGV0ZVJlZGlyZWN0c01haW4iLCAiJGJpZ3RleHQiLCAic2V0IiwgInVubGluayIsICJnZXRDcmVhdG9yIiwgInZhbmFydGljbGUiLCAib3BlbiIsICJ4bWxEb2MiLCAiJHNuYXBzaG90IiwgInRvdGFsIiwgIm9uc3VjY2VzcyIsICJhcGlvYmpJbm5lciIsICJ1cGRhdGUiLCAicmVtb3ZlQ2hlY2twb2ludCIsICJhZGRDaGVja3BvaW50IiwgIl9rZXkiLCAidGV4dE5vU2QiLCAiY29weXZpbyIsICJ4ZmQiLCAiYnVpbGREYXRhIiwgInBhdHJvbCIsICJyZXF1ZXN0c2FsdCIsICJlZGl0c3VtbWFyeSIsICJfaXRlcmF0b3IxMyIsICJfc3RlcDEzIiwgIk1hdGgiLCAiYmxhbmsiLCAiaW5zZXJ0QWZ0ZXJUZW1wbGF0ZXMiLCAiZ2V0VGV4dCIsICJ0YWdDb21wbGV0ZSIsICJ1c2VydGFsayIsICJwYWdlT2JqIiwgImluaXRpYWxDb250cmliIiwgInRhbGtQYWdlTmFtZSIsICJ1c2VydGFsa3BhZ2UiLCAibm90aWZ5dGV4dCIsICJsb2dub21pbmF0aW9uIiwgImFkZFRvTG9nIiwgInVzbCIsICJ1c2Vyc3BhY2VMb2dnZXIiLCAiaW5pdGlhbFRleHQiLCAiYXBwZW5kVGV4dCIsICJmcm9tREkiLCAiX2l0ZXJhdG9yMTQiLCAiX3N0ZXAxNCIsICJsb2ciLCAiZ2V0UGFyYW1ldGVycyIsICJfaXRlcmF0b3IxNSIsICJfc3RlcDE1IiwgImN1cnJlbnRQYXJhbXMiLCAicmVkaW1hZ2UiLCAiZGJyYXRpb25hbGUiLCAib3RoZXJwYWdlIiwgImZpbGVuYW1lIiwgInJlZGlydHlwZSIsICJyZXNvbHZlQ3NkVmFsdWVzIiwgIl9lJHRhcmdldCRmb3JtIiwgIl9lJHRhcmdldCRmb3JtMiIsICJ3YXRjaFBhZ2UiLCAiX2l0ZXJhdG9yMTYiLCAiX3N0ZXAxNiIsICJfZSR0YXJnZXQkZm9ybTMiLCAiX2l0ZXJhdG9yMTciLCAiX3N0ZXAxNyIsICJfaTciLCAiX25vcm1hbGl6ZWRzIiwgIm5vdGlmeXVzZXIiLCAiX2l0ZXJhdG9yMTgiLCAiX3N0ZXAxOCIsICJjc2Rsb2ciLCAiX2l0ZXJhdG9yMTkiLCAiX3N0ZXAxOSIsICJ0d2lua2xlY29weXZpb19leHBvcnRzIiwgImluaXRfdHdpbmtsZWNvcHl2aW8iLCAidHdpbmtsZWNvcHl2aW8iLCAiaXNQYWdlUmVkaXJlY3QiLCAidHJ5VGFnZ2luZyIsICJ0YWdnaW5nQXJ0aWNsZSIsICJsb2dwYWdlIiwgImNvcHl2aW9MaXN0IiwgInJldmlzaW9uSWQiLCAic291cmNlIiwgIm9sZGNzZCIsICJzcGVlZHlUYWciLCAiZzRfcGFnZW5hbWUiLCAib3V0cHV0IiwgImdldFVUQ01vbnRoIiwgImdldFVUQ0RhdGUiLCAidHdpbmtsZXhmZF9leHBvcnRzIiwgImluaXRfdHdpbmtsZXhmZCIsICJ0d2lua2xleGZkIiwgImN1cnJlbnRSYXRpb25hbGUiLCAicHJpbnRSYXRpb25hbGUiLCAib2xkcmVhc29udGV4dGJveCIsICJvbGRyZWFzb24iLCAiYXBwZW5kUmVhc29uQm94IiwgInhmZF9jYXQiLCAiYWZkX2NhdGVnb3J5IiwgImNoYW5nZV9hZmRfY2F0ZWdvcnkiLCAiYWZkX2NhdCIsICJsb2NhbFN0b3JhZ2UiLCAiVHdpbmtsZV9hZmRDYXRlZ29yeSIsICJ4ZmRjYXQiLCAibWVyZ2VpbnRvIiwgInBhcmVudEVsZW1lbnQiLCAicmVtb3ZlQXR0cmlidXRlIiwgImZ3ZGNzZHJlYXNvbiIsICJwcmV2aW91c0VsZW1lbnRTaWJsaW5nIiwgImlubmVySFRNTCIsICJ4ZmRyZWFzb24iLCAiYWZkIiwgInRhZ2dpbmdfcGFnZSIsICJkaXNjdXNzaW9uX3BhZ2UiLCAidG9kYXlzTGlzdCIsICJjcmVhdG9yIiwgImZvcm1hdFJlYXNvblRleHQiLCAibm9pbmNsdWRlIiwgInRleHROb05vdE1hbmRhcmluIiwgInRleHROb0FmYyIsICJ0byIsICJjb21tZW50VGV4dCIsICJzYWZlc3Vic3QiLCAiZmFtZSIsICJzdWJzdHViIiwgImJhdGNoIiwgInRhcmdldF9wYWdlIiwgImZmZCIsICJ0YWdnaW5nSW1hZ2UiLCAieGZkQ2F0TmFtZSIsICJ3aWtpVXJsZW5jb2RlIiwgImZvcm1hdFJlYXNvbkZvckxvZyIsICJvbkVycm9yIiwgInNldExvb2t1cE5vblJlZGlyZWN0Q3JlYXRvciIsICJ0d2lua2xlaW1hZ2VfZXhwb3J0cyIsICJpbml0X3R3aW5rbGVpbWFnZSIsICJ0d2lua2xlaW1hZ2UiLCAiaW1hZ2UiLCAiZmllbGQiLCAiX2l0ZXJhdG9yMjAiLCAiX3N0ZXAyMCIsICJ0eXBlXyIsICJjc2Rjcml0IiwgIkVycm9yIiwgInRvTG93ZXJDYXNlIiwgImYxX3NvdXJjZSIsICJmNF90eXBlIiwgInVzZXJOb3RpZmljYXRpb24iLCAibm90ZURhdGEiLCAiaW1hZ2VMaXN0IiwgInR3aW5rbGVwcm90ZWN0X2V4cG9ydHMiLCAiaW5pdF90d2lua2xlcHJvdGVjdCIsICJ0d2lua2xlcHJvdGVjdCIsICJjaGFuZ2VBY3Rpb24iLCAiZmV0Y2hQcm90ZWN0aW9uTGV2ZWwiLCAiaXNUZW1wbGF0ZSIsICJjdXJyZW50UHJvdGVjdGlvbkxldmVscyIsICJwcmV2aW91c1Byb3RlY3Rpb25MZXZlbHMiLCAiaW5kZXhwYWdlaWRzIiwgImlucHJvcCIsICJwcm90ZWN0RGF0YSIsICJwYWdlaWQiLCAicGFnZWlkcyIsICJwcmV2aW91cyIsICJ3YXRjaGVkIiwgIndhdGNobGlzdGV4cGlyeSIsICJfaXRlcmF0b3IyMSIsICJwcm90ZWN0aW9uIiwgIl9zdGVwMjEiLCAiY2FzY2FkZSIsICJwcmV2aW91c1Byb3RlY3Rpb25Mb2ciLCAiX2l0ZXJhdG9yMjIiLCAiZGV0YWlscyIsICJfc3RlcDIyIiwgImhhc1Byb3RlY3RMb2ciLCAic2hvd0xvZ0FuZEN1cnJlbnRQcm90ZWN0SW5mbyIsICJjdXJyZW50bHlQcm90ZWN0ZWQiLCAiaGFzU3RhYmxlTG9nIiwgIiRsaW5rTWFya3VwIiwgImZvcm1hdFByb3RlY3Rpb25EZXNjcmlwdGlvbiIsICJwcm90ZWN0aW9uTm9kZSIsICJzdGF0dXNMZXZlbCIsICJmaWVsZDEiLCAiZmllbGQyIiwgImNoYW5nZVByZXNldCIsICJwcm90ZWN0aW9uVHlwZXNBZG1pbiIsICJwcm90ZWN0aW9uVHlwZXNDcmVhdGUiLCAiZm9ybWV2ZW50cyIsICJlZGl0bW9kaWZ5IiwgImVkaXRsZXZlbCIsICJwcm90ZWN0aW9uTGV2ZWxzIiwgImRvQ3VzdG9tRXhwaXJ5IiwgImNsb3Nlc3QiLCAic2VsZWN0ZWRJbmRleCIsICJwcm90ZWN0aW9uTGVuZ3RocyIsICJtb3ZlbW9kaWZ5IiwgIm1vdmVsZXZlbCIsICJjcmVhdGVsZXZlbCIsICJwcm90ZWN0aW9uVGFncyIsICJ0YWd0eXBlIiwgInByb3RlY3Rpb25UeXBlcyIsICJtYXJnaW5SaWdodCIsICJlZGl0ZXhwaXJ5IiwgImNvbG9yIiwgIm1vdmVleHBpcnkiLCAiY3JlYXRlZXhwaXJ5IiwgInNtYWxsIiwgInNob3dleHBpcnkiLCAib3B0aW9uIiwgInByb3RlY3Rpb25UeXBlc0NyZWF0ZU9ubHkiLCAicHJvdGVjdGlvblByZXNldHNJbmZvIiwgImVkaXQiLCAibW92ZSIsICJ1bnByb3RlY3QiLCAiY3JlYXRlIiwgImFjdGlvbnR5cGVzIiwgIl9pdGVyYXRvcjIzIiwgIl9zdGVwMjMiLCAiYWN0aW9uX3R5cGVfdmFsdWUiLCAicmVhc29uRmllbGQiLCAicHJvdGVjdFJlYXNvbiIsICJfaXRlbSR0ZW1wbGF0ZSIsICJ0YWdwYXJhbXMiLCAiY2xvc2VwYXJhbXMiLCAic3RhdHVzSW5pdGVkIiwgImFsbERvbmUiLCAidGFnZ2luZ1BhZ2VJbml0aWFsIiwgInJwcFBhZ2UiLCAicHJvdGVjdEl0IiwgImZvbGxvd1JlZGlyZWN0IiwgInR5cGVuYW1lIiwgInR5cGVyZWFzb24iLCAicnBwcGFyYW1zIiwgInJwcE5hbWUiLCAiZmlsZVJlcXVlc3QiLCAicGFnZU5hbWUiLCAicHJvdGVjdGVkUGFnZSIsICJ0YWdnaW5nUGFnZSIsICJnZXRUYWdnZWRQYWdlIiwgIm9sZHRhZ19yZSIsICJyZV9yZXN1bHQiLCAibmV3VmVyc2lvbiIsICJzdXBwcmVzc1Byb3RlY3RXYXJuaW5nIiwgInJwcFJlIiwgInJwcExpbmsiLCAiZ2V0UGFnZU5hbWUiLCAibmV3dGFnIiwgIlN0cmluZyIsICJyYXciLCAiX3RlbXBsYXRlT2JqZWN0IiwgIl90YWdnZWRUZW1wbGF0ZUxpdGVyYWwiLCAid29yZHMiLCAicmVnIiwgIm9yaWdpbmFsVGV4dExlbmd0aCIsICJsaW5rbm9kZSIsICJ3YXRjaFByZWYiLCAib3B0aW9ucyIsICJ3YXRjaF9xdWVyeSIsICJsaW5rbm9kZTIiLCAic2VjdGlvblRleHQiLCAiX2l0ZXJhdG9yMjQiLCAiX3N0ZXAyNCIsICJfaTgiLCAiX09iamVjdCRlbnRyaWVzNSIsICJmcmllbmRseXRhZ19leHBvcnRzIiwgImluaXRfZnJpZW5kbHl0YWciLCAiZnJpZW5kbHl0YWciLCAibW9kZUVuIiwgImNhblJlbW92ZSIsICJjaGVja2VkVGFncyIsICIkYWxsQ2hlY2tib3hEaXZzIiwgImxhYmVsX2VsZW1lbnQiLCAiJGFsbEhlYWRlcnMiLCAic2VhcmNoU3RyaW5nIiwgInNlYXJjaFJlZ2V4IiwgIl9pbmRleCIsICJsYWJlbF90ZXh0IiwgInNlYXJjaEhpdCIsICJyYW5nZSIsICJjcmVhdGVSYW5nZSIsICJ0ZXh0bm9kZSIsICJzZWxlY3ROb2RlQ29udGVudHMiLCAic2V0U3RhcnQiLCAic2V0RW5kIiwgInVuZGVybGluZV9zcGFuIiwgInN1cnJvdW5kQ29udGVudHMiLCAiZmxhdE9iamVjdCIsICJfaXRlcmF0b3IyNSIsICJ0YWdMaXN0IiwgIl9zdGVwMjUiLCAiX2l0ZXJhdG9yMjYiLCAiX3N0ZXAyNiIsICJfaXRlcmF0b3IyNyIsICJfc3RlcDI3IiwgImRlc2NyaXB0aW9uIiwgImV4Y2x1ZGVNSSIsICJ1cGRhdGVTb3J0T3JkZXIiLCAiZGl2RWxlbWVudCIsICJfaXRlcmF0b3IyOCIsICJfc3RlcDI4IiwgImJ1aWxkRmlsZW5hbWUiLCAiX2l0ZXJhdG9yMjkiLCAiX3N0ZXAyOSIsICJfaXRlcmF0b3IzMCIsICJfc3RlcDMwIiwgInF1ZXJ5U2VsZWN0b3JBbGwiLCAicXVpY2tmaWx0ZXIiLCAiYXV0b2NvbXBsZXRlIiwgImFkZEV2ZW50TGlzdGVuZXIiLCAiYWxyZWFkeVByZXNlbnRUYWdzIiwgInRhZ05hbWUiLCAiYm94VGFnIiwgImZvbnRTaXplIiwgIm51bUFkZGVkIiwgIm51bVJlbW92ZWQiLCAiYWZ0ZXIiLCAic29ydG9yZGVyIiwgIl9pdGVyYXRvcjMxIiwgIl9zdGVwMzEiLCAiZ2VuZXJhdGVMaW5rcyIsICJtYWtlQ2hlY2tib3giLCAib3RoZXJUYWdOYW1lIiwgIm1ha2VDaGVja2JveGVzRm9yQWxyZWFkeVByZXNlbnRUYWdzIiwgInN1YmRpdiIsICJjaGVja2JveGVzIiwgInVuQ2hlY2tlZFRhZ3MiLCAiZ2V0VW5jaGVja2VkIiwgIl9pdGVyYXRvcjMyIiwgIl9zdGVwMzIiLCAiZG9DYXRlZ29yeUNoZWNrYm94ZXMiLCAiX2l0ZXJhdG9yMzMiLCAiX3N0ZXAzMyIsICJfaXRlcmF0b3IzNCIsICJfc3RlcDM0IiwgIl9pdGVyYXRvcjM1IiwgIl9zdGVwMzUiLCAiX1R3aW5rbGUkdGFnJGFydGljbGUiLCAiYWxwaGFiZXRpY2FsTGlzdCIsICJfaXRlcmF0b3IzNiIsICJfc3RlcDM2IiwgIiR3b3JrYXJlYSIsICJyZW5kZXJlZCIsICJfaXRlcmF0b3IzNyIsICJfc3RlcDM3IiwgIl9pdGVyYXRvcjM4IiwgIl9zdGVwMzgiLCAiZmlyc3RQYXJ0IiwgInNlY29uZFBhcnQiLCAidGFnbmFtZSIsICJwYWdlVGV4dCIsICJwb3N0UmVtb3ZhbCIsICJ0YWdzVG9SZW1vdmUiLCAibWFrZVRlbXBsYXRlTGluayIsICJzdW1tYXJ5VGV4dCIsICJhZGRlZFRhZ3MiLCAicmVtb3ZlZFRhZ3MiLCAibWVyZ2VSZWFzb24iLCAiZGlzY3Vzc0FydGljbGUiLCAibm9uRGlzY3Vzc0FydGljbGUiLCAibWVyZ2VUYWdPdGhlciIsICJtZXJnZVRhZyIsICJuZXdQYXJhbXMiLCAidGFnc1RvUmVtYWluIiwgIm1lcmdlVGFyZ2V0IiwgInRhbGtEaXNjdXNzaW9uVGl0bGUiLCAidGFsa0Rpc2N1c3Npb25UaXRsZUxpbmtlZCIsICJtb3ZlUmVhc29uIiwgIm1vdmVUYWxrcGFnZVRleHQiLCAibW92ZVRhcmdldCIsICJtb3ZlVGFsa3BhZ2UiLCAicmVtb3ZlVGFncyIsICJnZXRSZWRpcmVjdHNGb3IiLCAiX2l0ZXJhdG9yMzkiLCAiX3N0ZXAzOSIsICJ0YWdfcmUiLCAibGhuYW1lc3BhY2UiLCAibGhzaG93IiwgImxobGltaXQiLCAicmVzcG9uc2VYTUwiLCAiX2lkeCIsICJyZW1vdmVkIiwgInRhZ1JlIiwgInRhZ1RleHQiLCAiZ3JvdXBhYmxlVGFncyIsICJncm91cGFibGVFeGlzdGluZ1RhZ3MiLCAiYWRkVGFnIiwgImN1cnJlbnRUYWciLCAiZXhwZXJ0IiwgImV4cGVydDIiLCAiZXhwZXJ0MyIsICJtaXNzaW5nSW5mb3JtYXRpb24iLCAibm90YWJpbGl0eSIsICJ0YXJnZXQxIiwgInRhcmdldDIiLCAidGFyZ2V0MyIsICJjbGVhbnVwUmVhc29uIiwgImFkZFVuZ3JvdXBlZFRhZ3MiLCAiX2k5IiwgIl90YWdzIiwgInRlbXBsYXRlc0FmdGVyIiwgIl9pdGVyYXRvcjQwIiwgIl9zdGVwNDAiLCAibm90YWJpbGl0eUxpc3QiLCAiX2l0ZXJhdG9yNDEiLCAiX3N0ZXA0MSIsICJtaVRlc3QiLCAiX2l0ZXJhdG9yNDIiLCAiX3N0ZXA0MiIsICJtaVJlZ2V4IiwgImFkZE5ld1RhZ3NUb01JIiwgIl9pdGVyYXRvcjQzIiwgIl9zdGVwNDMiLCAiX2l0ZXJhdG9yNDQiLCAiX3N0ZXA0NCIsICJ0YWdJbmRleCIsICJhbHRMYW5nRnJvbSIsICJyZXFBcnRpY2xlTGFuZyIsICJyZXFBcnRpY2xlVGl0bGUiLCAiX2kxMCIsICJfdGFnczIiLCAib2xkVGFncyIsICJwYWdlVGFncyIsICJvbGRQYWdlVGFncyIsICJfaXRlcmF0b3I0NSIsICJfc3RlcDQ1IiwgInBhZ2VUYWciLCAicGFnZVJlIiwgImZpbGUiLCAiX2l0ZXJhdG9yNDYiLCAiX3N0ZXA0NiIsICJub3djb21tb25zTmFtZSIsICJrZWVwbG9jYWxOYW1lIiwgImtlZXBsb2NhbFJlYXNvbiIsICJyZW5hbWVtZWRpYU5ld25hbWUiLCAicmVuYW1lbWVkaWFSZWFzb24iLCAiRG9Ob3RNb3ZlVG9Db21tb25zX3JlYXNvbiIsICJjaGVja1BhcmFtZXRlciIsICJwYXJhbWV0ZXIiLCAiZXhpc3RpbmdUYWdzIiwgInR3aW5rbGVzdHViX2V4cG9ydHMiLCAiaW1wb3J0X2V4dF9nYWRnZXQ0IiwgImluaXRfdHdpbmtsZXN0dWIiLCAidHdpbmtsZXN0dWIiLCAic3R1YiIsICJfVHdpbmtsZSRzdHViIiwgIl9Ud2lua2xlJHN0dWIkY2hlY2tlZCIsICJjdXN0b21jaGVja2JveGVzIiwgIl9pdGVyYXRvcjQ3IiwgIl9zdGVwNDciLCAiX2l0ZXJhdG9yNDgiLCAiX3N0ZXA0OCIsICJfaTExIiwgIl9PYmplY3QkZW50cmllczYiLCAidGFnQ2F0ZWdvcmllcyIsICJ0aXRsZU5hbWUiLCAidGFnQ2F0ZWdvcmllc0hlYWRlciIsICJpc0FycmF5IiwgIl9pMTIiLCAiX09iamVjdCRlbnRyaWVzNyIsICJzdWJ0aXRsZSIsICJzdWJjb250ZW50IiwgIl9pMTMiLCAiX09iamVjdCRlbnRyaWVzOCIsICJfaXRlcmF0b3I0OSIsICJfc3RlcDQ5IiwgImdlbmVyYWwiLCAiZ2VvIiwgIm90aGVycyIsICJiaW8iLCAic2NpZW5jZSIsICJzcG9ydCIsICJ0ZWNoIiwgImFydCIsICJ0b3RhbFRhZ3MiLCAiX2kxNCIsICJfdGFnczMiLCAicGF0cm9sUGFnZSIsICJ0d2lua2xlZGlmZl9leHBvcnRzIiwgImluaXRfdHdpbmtsZWRpZmYiLCAidHdpbmtsZWRpZmYiLCAiZGlmZiIsICJvbGRpZCIsICJtZSIsICJub2RlIiwgInJ2dXNlciIsICJsb2NhdGlvbiIsICJ0d2lua2xldW5saW5rX2V4cG9ydHMiLCAiaW5pdF90d2lua2xldW5saW5rIiwgInR3aW5rbGV1bmxpbmsiLCAicHJlc2V0UmVhc29uIiwgImZpbGVTcGFjZSIsICJsaW5rVGV4dEJlZm9yZSIsICJsaW5rVGV4dEFmdGVyIiwgImxpbmtQbGFpbkJlZm9yZSIsICJsaW5rVGVtcGxhdGVCZWZvcmUiLCAibGlua1BsYWluQWZ0ZXIiLCAiX2kxNSIsICJfYXJyMiIsICJmb250RmFtaWx5IiwgImZvbnRTdHlsZSIsICJibHRpdGxlIiwgImJsbGltaXQiLCAiYmxuYW1lc3BhY2UiLCAicmF3Y29udGludWUiLCAiaXV0aXRsZSIsICJpdWxpbWl0IiwgIml1bmFtZXNwYWNlIiwgImJsZmlsdGVycmVkaXIiLCAiYmFja2xpbmtzIiwgInBhZGRpbmciLCAiaW1hZ2V1c2FnZSIsICJ1bmxpbmtlciIsICJiYXRjaE9wZXJhdGlvbiIsICJzZXRPcHRpb24iLCAic2V0UGFnZUxpc3QiLCAicnVuIiwgInNldEJvdEVkaXQiLCAiZG9CYWNrbGlua3MiLCAiZG9JbWFnZXVzYWdlIiwgInVubGlua0JhY2tsaW5rcyIsICJoYXZlY29udGVudCIsICJfaXRlcmF0b3I1MCIsICJfc3RlcDUwIiwgImNvbnZlcnROdW1iZXIiLCAic2hpZnRDbGlja1N1cHBvcnQiLCAiX2l0ZXJhdG9yNTEiLCAiX3N0ZXA1MSIsICJfaXRlcmF0b3I1MiIsICJfc3RlcDUyIiwgIl9pdGVyYXRvcjUzIiwgIl9zdGVwNTMiLCAib2xkdGV4dCIsICJ3YXJuaW5nU3RyaW5nIiwgImNvbW1lbnRPdXRJbWFnZSIsICJyZW1vdmVMaW5rIiwgInJlbW92ZVRlbXBsYXRlIiwgIndvcmtlckZhaWx1cmUiLCAid29ya2VyU3VjY2VzcyIsICJ0d2lua2xlZmx1ZmZfZXhwb3J0cyIsICJpbml0X3R3aW5rbGVmbHVmZiIsICJ0d2lua2xlZmx1ZmYiLCAiZmx1ZmYiLCAiaG9vayIsICJhZGRMaW5rcyIsICJza2lwVGFsayIsICJjb250cmlidXRpb25zIiwgInJlY2VudGNoYW5nZXMiLCAidHJ1c3RlZEJvdHMiLCAiaGlkZGVuTmFtZSIsICJsaW5rQnVpbGRlciIsICJzcGFuVGFnIiwgImJ1aWxkTGluayIsICJyb2xsYmFja0xpbmtzIiwgInZhbmRhbCIsICJpbmxpbmUiLCAicmV2IiwgInJldk5vZGUiLCAibm9ybU5vZGUiLCAidmFuZE5vZGUiLCAibm9ybUxpbmsiLCAidmFuZExpbmsiLCAicmV2ZXJ0IiwgImRpc2FibGVMaW5rcyIsICJzZXBhcmF0b3IiLCAicmVzdG9yZVRoaXNSZXZpc2lvbkxpbmsiLCAicmV2aXNpb25SZWYiLCAicmV2ZXJ0VG9SZXZpc2lvbk5vZGUiLCAiZm9udFdlaWdodCIsICJyZXZlcnRUb1JldmlzaW9uTGluayIsICJyZXZlcnRUb1JldmlzaW9uIiwgIiRsaXN0IiwgImRhdGFzZXQiLCAibXdSZXZpZCIsICJub3QiLCAidGFyZ2V0UGFnZSIsICJoaXN0TGlzdCIsICJ0b0FycmF5IiwgInNoaWZ0IiwgIl9pdGVyYXRvcjU0IiwgIl9zdGVwNTQiLCAiX2l0ZXJhdG9yNTUiLCAiX3N0ZXA1NSIsICJ3YXJuRnJvbVRhbGsiLCAieHRpdGxlIiwgInRhbGtMaW5rIiwgImV4dHJhUGFyYW1zIiwgIm9sZFRpdGxlIiwgInJldmVydHN1bW1hcnkiLCAiXyIsICJuZXdUaXRsZSIsICJudGl0bGUiLCAiaXNJUHY2QWRkcmVzcyIsICJzYW5pdGl6ZUlQdjYiLCAibm90aWZ5U3RhdHVzIiwgImF1dG9IaWRlIiwgInVzZXJIaWRkZW4iLCAiaW50ZXN0YWN0aW9ucyIsICJjdXJ0aW1lc3RhbXAiLCAib2xkcmV2IiwgInRvUmV2aXNpb24iLCAibGFzdHJldmlkIiwgInRvdWNoZWQiLCAibG9hZHRpbWVzdGFtcCIsICJjc3JmdG9rZW4iLCAicmV2ZXJ0VG9SZXZJRCIsICJyZXZlcnRUb1VzZXIiLCAicmV2ZXJ0VG9Vc2VySGlkZGVuIiwgIm9wdGlvbmFsX3N1bW1hcnkiLCAiZm9ybWF0U3VtbWFyeSIsICJ1bmRvIiwgInVuZG9hZnRlciIsICJiYXNldGltZXN0YW1wIiwgInN0YXJ0dGltZXN0YW1wIiwgIm1pbm9yIiwgImJvdCIsICJ3YXRjaE9yRXhwaXJ5IiwgIndhdGNobGlzdCIsICJjb21wbGV0ZSIsICJyZXZzIiwgImxhc3R1c2VyIiwgInVzZXJOb3JtIiwgImNvbnQiLCAiZ29vZF9yZXZpc2lvbiIsICJ1c2VySGFzQWxyZWFkeUNvbmZpcm1lZEFjdGlvbiIsICJnb29kdXNlciIsICJnb29kdXNlckhpZGRlbiIsICJleHRyYV9zdW1tYXJ5IiwgIm5vdGlmeVVzZXIiLCAieG1sIiwgIiRlZGl0IiwgIndpbmRvd1F1ZXJ5IiwgInZhbmFydGljbGVyZXZpZCIsICJ2YW5hcnRpY2xlZ29vZHJldmlkIiwgImJ1aWx0SW5TdHJpbmciLCAiY3VzdG9tU3RyaW5nIiwgInJlc3VsdExlbiIsICJ1bmVzY2FwZSIsICJlbmNvZGVVUklDb21wb25lbnQiLCAiY29udHJpYnNMaW5rIiwgImNvbnRyaWJzTGVuIiwgInR3aW5rbGViYXRjaGRlbGV0ZV9leHBvcnRzIiwgImluaXRfdHdpbmtsZWJhdGNoZGVsZXRlIiwgInR3aW5rbGViYXRjaGRlbGV0ZSIsICJiYXRjaGRlbGV0ZSIsICJ1bmxpbmtDYWNoZSIsICJzdWJwYWdlc0xvYWRlZCIsICJ0b2dnbGVTdWJwYWdlcyIsICJkZWxldGVyZWFzb25saXN0IiwgImNoYW5nZV9jb21tb25fcmVhc29uIiwgImdlbmVyYXRvciIsICJnY210aXRsZSIsICJnY21saW1pdCIsICJnYXBsaW1pdCIsICJnYXBuYW1lc3BhY2UiLCAiZ2FwcHJlZml4IiwgInBhdGhTcGxpdCIsICJwYXRobmFtZSIsICJ0aXRsZVNwbGl0IiwgImdxcHBhZ2UiLCAiZ3FwbGltaXQiLCAiZ3BsbGltaXQiLCAic3RhdHVzZGl2IiwgIiRwYWdlcyIsICIkcGFnZSIsICJpc1JlZGlyIiwgIiRlZGl0cHJvdCIsICJpc1Byb3RlY3RlZCIsICJtZXRhZGF0YSIsICJmb3JtXyIsICJfaXRlcmF0b3I1NiIsICJfc3RlcDU2IiwgImdlbmVyYXRlQXJyb3dMaW5rcyIsICJuZXh0RWxlbWVudFNpYmxpbmciLCAiZ2VuZXJhdGVOZXdQYWdlTGlzdCIsICJlbGVtZW50cyIsICJOb2RlTGlzdCIsICJfaXRlcmF0b3I1NyIsICJfc3RlcDU3IiwgIkhUTUxJbnB1dEVsZW1lbnQiLCAibmV3UGFnZUxpc3QiLCAiZGVsZXRlX3N1YnBhZ2VfcmVkaXJlY3RzIiwgImRlbGV0ZV9yZWRpcmVjdHMiLCAiZGVsZXRlX3N1YnBhZ2VfdGFsa3MiLCAiZGVsZXRlX3RhbGsiLCAidW5saW5rX3N1YnBhZ2VzIiwgInVubGlua19wYWdlIiwgIl9pdGVyYXRvcjU4IiwgIl9zdGVwNTgiLCAic3ViZ3JvdXBfIiwgInJlcGxhY2VXaXRoIiwgIl9pdGVyYXRvcjU5IiwgIl9zdGVwNTkiLCAiX2l0ZXJhdG9yNjAiLCAiX3N0ZXA2MCIsICJsb2FkaW5nVGV4dCIsICJzdWJwYWdlTGlzdGVyIiwgInBhZ2VUaXRsZSIsICJwYWdlTmFtZUZ1bGwiLCAic3VicGFnZUxpc3QiLCAicGFnZU5hbWVfIiwgIl9pdGVyYXRvcjYxIiwgIl9zdGVwNjEiLCAiX2l0ZXJhdG9yNjIiLCAiX3N0ZXA2MiIsICJfaXRlcmF0b3I2MyIsICJfc3RlcDYzIiwgIl9pdGVyYXRvcjY0IiwgIl9zdGVwNjQiLCAibnVtUHJvdGVjdGVkIiwgInN1YnBhZ2VzIiwgImRlbGV0ZV9wYWdlIiwgImRlbGV0ZV9zdWJwYWdlcyIsICJ1bmxpbmtfZmlsZSIsICJwYWdlRGVsZXRlciIsICJkb0V4dHJhcyIsICJzdWJwYWdlRGVsZXRlciIsICJ0aGluZ1dpdGhQYXJhbWV0ZXJzIiwgInVubGlua0JhY2tsaW5rc01haW4iLCAidW5saW5rSW1hZ2VJbnN0YW5jZXNNYWluIiwgInRhbGtQYWdlIiwgInJlZGlyZWN0RGVsZXRlciIsICJvbGRfdGV4dCIsICJzZXRNYXhDb25mbGljdFJldHJpZXMiLCAidW5saW5rSW1hZ2VJbnN0YW5jZXMiLCAidHdpbmtsZWJhdGNodW5kZWxldGVfZXhwb3J0cyIsICJpbml0X3R3aW5rbGViYXRjaHVuZGVsZXRlIiwgInR3aW5rbGViYXRjaHVuZGVsZXRlIiwgImJhdGNodW5kZWxldGUiLCAicHJvamVjdCIsICJ1bmRlbF90YWxrIiwgInBhZ2VVbmRlbGV0ZXIiLCAic2V0TWF4UmV0cmllcyIsICJ1bmRlbGV0ZVBhZ2UiLCAidGFsa3BhZ2VuYW1lIiwgImdldFRhbGtQYWdlIiwgImRydnByb3AiLCAiZHJ2bGltaXQiLCAidW5kZWxldGVUYWxrIiwgImRlbHJldnMiLCAidHdpbmtsZWJhdGNocHJvdGVjdF9leHBvcnRzIiwgImluaXRfdHdpbmtsZWJhdGNocHJvdGVjdCIsICJ0d2lua2xlYmF0Y2hwcm90ZWN0IiwgImJhdGNocHJvdGVjdCIsICJwcm90TGV2ZWwiLCAiX2l0ZXJhdG9yNjUiLCAiX3N0ZXA2NSIsICJlZGl0UHJvdCIsICJmaW5kTGFzdCIsICJpbWFnZWluZm8iLCAiX2l0ZXJhdG9yNjYiLCAiX3N0ZXA2NiIsICJsaW5rcyIsICJjdXJyZW50UHJvdGVjdENvdW50ZXIiLCAiY3VycmVudHByb3RlY3RvciIsICJ0YWtlbkFjdGlvbiIsICJjcmVhdGVtb2RpZnkiLCAidHdpbmtsZWNsb3NlX2V4cG9ydHMiLCAiaW5pdF90d2lua2xlY2xvc2UiLCAidHdpbmtsZWNsb3NlIiwgInNlbGVjdG9yIiwgImRlbE5vZGUiLCAiZGVsTGluayIsICJfaXRlcmF0b3I2NyIsICJfc3RlcDY3IiwgImhlYWRsaW5laHJlZiIsICJtIiwgInBhZ2Vub3RleGlzdCIsICJoYXNDbGFzcyIsICJ0bXBOb2RlIiwgImNsb25lTm9kZSIsICJjb2RlcyIsICJpciIsICJyZXAiLCAibmUiLCAibnEiLCAiayIsICJhZG1pbm9ubHkiLCAic2siLCAidGsiLCAicnIiLCAiZGFuIiwgImQiLCAiaWMiLCAic2QiLCAibHNzZCIsICJzdmciLCAiZHJlcCIsICJjIiwgInIiLCAiY3IiLCAibWVyZ2UiLCAibWVyZ2VhcHByb3ZlZCIsICJuYyIsICJub29wIiwgImNoYW5nZV9jb2RlIiwgImNoYW5nZV9vcGVyYXRpb24iLCAicmVzdWx0RGF0YSIsICJfaTE2IiwgIl9PYmplY3QkZW50cmllczkiLCAiX2l0ZXJhdG9yNjgiLCAiX3N0ZXA2OCIsICJzZHJlYXNvbiIsICJyZW1hcmsiLCAicGFyZW50U2VjdGlvbiIsICJ0YWxrZW5kIiwgImRlbCIsICJrZWVwIiwgInBhZ2V0aXRsZSIsICJnZXROYW1lc3BhY2VJZCIsICJ0YWxrcGFnZXRpdGxlIiwgImdldE1haW5UZXh0IiwgInRvU3RyaW5nIiwgInZmZGtlcHQiLCAic2V0UHJlcGVuZFRleHQiLCAibmV3dGV4dCIsICJrZWVwQ29tcGxldGUiLCAic2F2ZVRhbGsiLCAic2JlZ2luIiwgInNlbmQiLCAiYmFyIiwgImRpc2FibGVMaW5rIiwgInR3aW5rbGVjb25maWdfZXhwb3J0cyIsICJpbml0X3R3aW5rbGVjb25maWciLCAidHdpbmtsZWNvbmZpZyIsICJ3YXRjaGxpc3RFbnVtcyIsICJ5ZXMiLCAibm8iLCAiZGVmYXVsdCIsICJjb21tb25TZXRzIiwgImNzZENyaXRlcmlhIiwgImRiIiwgImNzZENyaXRlcmlhRGlzcGxheU9yZGVyIiwgImNzZENyaXRlcmlhTm90aWZpY2F0aW9uIiwgImNzZENyaXRlcmlhTm90aWZpY2F0aW9uRGlzcGxheU9yZGVyIiwgImNzZEFuZERJQ3JpdGVyaWEiLCAiY3NkQW5kRElDcml0ZXJpYURpc3BsYXlPcmRlciIsICJ4ZmRDcml0ZXJpYSIsICJkZWxldGUiLCAiZndkY3NkIiwgInhmZENyaXRlcmlhRGlzcGxheU9yZGVyIiwgIm5hbWVzcGFjZXNOb1NwZWNpYWwiLCAibW9kdWxlIiwgInByZWZlcmVuY2VzIiwgImVudW1WYWx1ZXMiLCAidGFiIiwgImhlbHB0aXAiLCAic2V0VmFsdWVzIiwgImFkbWluT25seSIsICJjdXN0b21MaXN0VmFsdWVUaXRsZSIsICJjdXN0b21MaXN0TGFiZWxUaXRsZSIsICJ2YW5kIiwgInRvcmV2IiwgIm1pbmUiLCAicmVjZW50Y2hhbmdlc2xpbmtlZCIsICJidXR0b25DbGljayIsICJyYWRpb0NsaWNrIiwgInNldERpc3BsYXlPcmRlciIsICJjYXQiLCAiYWxwaGEiLCAic2FtZSIsICJub25hZG1pbm9ubHkiLCAiYWxsIiwgImNvbnRlbnRkaXYiLCAidG9jdGFibGUiLCAibWFyZ2luTGVmdCIsICJ0b2N0aXRsZSIsICJ0b2NoMiIsICJ0b2N0b2dnbGUiLCAidG9jdG9nZ2xlbGluayIsICJ0b2N1bCIsICIkdG9jdWwiLCAidG9nZ2xlIiwgImNvbnRlbnRmb3JtIiwgInNlY3Rpb25rZXkiLCAidG9jbGkiLCAidG9jYSIsICJyb3ciLCAiY2VsbCIsICJib3JkZXJCb3R0b20iLCAibWFyZ2luVG9wIiwgInJvd2NvdW50IiwgInByZWZrZXkiLCAicHJlZiIsICJtYXJnaW5Cb3R0b20iLCAiYmFja2dyb3VuZENvbG9yIiwgImdvdFByZWYiLCAidGV4dEFsaWduIiwgInBhZGRpbmdSaWdodCIsICJvcHRpb25FeGlzdHMiLCAiX2kxNyIsICJfT2JqZWN0JGVudHJpZXMxMCIsICJlbnVtdmFsdWUiLCAiZW51bWRpc3BsYXkiLCAiY2hlY2tkaXYiLCAicGFkZGluZ0xlZnQiLCAid29ya2VyIiwgIml0ZW1rZXkiLCAiaXRlbXZhbHVlIiwgImNoZWNrbGFiZWwiLCAiX2l0ZXJhdG9yNjkiLCAiX3N0ZXA2OSIsICJfaTE4IiwgIl9PYmplY3QkZW50cmllczExIiwgImN1c3RvbUxpc3RCdXR0b24iLCAibGlzdERpYWxvZyIsICJyZXNldGxpbmsiLCAicmVzZXRQcmVmTGluayIsICJjc3NGbG9hdCIsICJtYXJnaW4iLCAiZm9vdGVyYm94IiwgInN1Ym1pdEJ1dHRvbiIsICJmb290ZXJzcGFuIiwgImZvb3RlcmEiLCAicmVzZXRBbGxQcmVmcyIsICJoYXNoIiwgImxvYyIsICJib3giLCAic2NyaXB0UGFnZU5hbWUiLCAiYWRkUm93IiwgImRsZ3RhYmxlIiwgImNvbnRlbnR0ciIsICJjb250ZW50dGQiLCAicmVtb3ZlQnV0dG9uIiwgIl9jdXJwcmVmJGN1c3RvbUxpc3RWYSIsICJfY3VycHJlZiRjdXN0b21MaXN0TGEiLCAiJHByZWZidXR0b24iLCAiY3VydmFsdWUiLCAiY3VycHJlZiIsICJkaWFsb2djb250ZW50IiwgImRsZ3Rib2R5IiwgImRsZ3RyIiwgImRsZ3RoIiwgImdvdFJvdyIsICJfaXRlcmF0b3I3MCIsICJfc3RlcDcwIiwgImRsZ3Rmb290IiwgImRsZ3RkIiwgImFkZEJ1dHRvbiIsICJtaW5XaWR0aCIsICJidXR0b24iLCAicmVzZXQiLCAidGJvZHkiLCAiJGJ1dHRvbiIsICJvbGR2YWx1ZSIsICJyZXNldFByZWYiLCAiJHRib2R5IiwgIl9pdGVyYXRvcjcxIiwgIl9zdGVwNzEiLCAiaW5wdXRrZXkiLCAid2FudGVkcHJlZiIsICJmb3VuZGl0IiwgIl9pMTkiLCAiX09iamVjdCRlbnRyaWVzMTIiLCAidXNlcmpzIiwgIndyaXRlUHJlZnMiLCAibmV3Q29uZmlnIiwgIm9wdGlvbnNWZXJzaW9uIiwgImNvbXBhcmUiLCAiYiIsICJfaXRlcmF0b3I3MiIsICJfc3RlcDcyIiwgInVzZXJWYWx1ZSIsICJfaXRlcmF0b3I3MyIsICJfc3RlcDczIiwgIl9pMjAiLCAiX09iamVjdCRlbnRyaWVzMTMiLCAibm93aWtpIiwgIkpTT04iLCAic3RyaW5naWZ5IiwgInNhdmVTdWNjZXNzIiwgIm5vdGljZWJveCIsICJub3RpY2VjbGVhciIsICJjbGVhciIsICJQcm9taXNlIiwgInJlc29sdmUiLCAidHdpbmtsZUxvYWQiLCAiX3R3aW5rbGVMb2FkIiwgImFwcGx5IiwgImFyZ3VtZW50cyJdCn0K
